Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ALERT
    AMPERSAND
    BARRA
    BEGIN
    BEGIN_M
    BOOLEAN
    CIRCUMFLEX
    COLON
    COMBCOMP
    COMMENT
    DOBLEQUOTE
    DOUBLEAMPERSAND
    DOUBLELESSTHAN
    DOUBLEPIPE
    ELSEIF
    END_M
    EXCLAMATION
    FALSE
    GETS
    NIL
    NOT
    OR
    QUESTIONMARKPERIOD
    SEMICOLON
    SINGLEQUOTE
    TRUE
    TWOGREATERTHAN
    UNTIL
    WAVE

Grammar

Rule 0     S' -> inicio
Rule 1     inicio -> cuerpo
Rule 2     inicio -> funcion
Rule 3     funcion -> DEF LOCALVAR LPARENTHESES argumentos RPARENTHESES cuerpo END
Rule 4     funcion -> DEF LOCALVAR LPARENTHESES argumentos RPARENTHESES cuerpo retornar END
Rule 5     argumentos -> variosargumentos
Rule 6     argumentos -> MULTIPLY LOCALVAR
Rule 7     argumentos -> TWOSTARS LOCALVAR
Rule 8     argumentos -> LOCALVAR EQUAL LCURLYBRACKET RCURLYBRACKET
Rule 9     argumentos -> LOCALVAR TWOPOINTS datos
Rule 10    variosargumentos -> LOCALVAR
Rule 11    variosargumentos -> LOCALVAR EQUAL datos
Rule 12    variosargumentos -> LOCALVAR masargumentos
Rule 13    variosargumentos -> LOCALVAR EQUAL datos masargumentos
Rule 14    masargumentos -> COMMA variosargumentos
Rule 15    retornar -> RETURN LOCALVAR
Rule 16    retornar -> RETURN datos
Rule 17    cuerpo -> declaracion cuerpo
Rule 18    cuerpo -> asignacion cuerpo
Rule 19    cuerpo -> loop cuerpo
Rule 20    cuerpo -> estructurasDatos cuerpo
Rule 21    cuerpo -> if cuerpo
Rule 22    cuerpo -> unless cuerpo
Rule 23    cuerpo -> impresion cuerpo
Rule 24    cuerpo -> operacionSet cuerpo
Rule 25    cuerpo -> operacionarray cuerpo
Rule 26    cuerpo -> operacionHash cuerpo
Rule 27    cuerpo -> <empty>
Rule 28    loop -> FOR LOCALVAR IN rango cuerpo END
Rule 29    declaracion -> tiposvariables EQUAL datos
Rule 30    declaracion -> tiposvariables EQUAL estructurasDatos
Rule 31    declaracion -> tiposvariables EQUAL expresion
Rule 32    declaracion -> tiposvariables EQUAL declaracion
Rule 33    asignacion -> LOCALVAR PLUSASSIGN datosAsignacion
Rule 34    asignacion -> LOCALVAR MINASSIGN datosAsignacion
Rule 35    asignacion -> LOCALVAR DIVASSIGN datosAsignacion
Rule 36    asignacion -> LOCALVAR TIMESASSIGN datosAsignacion
Rule 37    asignacion -> LOCALVAR MODASSIGN datosAsignacion
Rule 38    asignacion -> LOCALVAR EXPASSIGN datosAsignacion
Rule 39    datosAsignacion -> number
Rule 40    datosAsignacion -> LOCALVAR
Rule 41    tiposvariables -> VAR
Rule 42    tiposvariables -> LOCALVAR
Rule 43    tiposvariables -> CONSTANT
Rule 44    datos -> INTEGER
Rule 45    datos -> FLOAT
Rule 46    datos -> STRING
Rule 47    estructurasDatos -> hash
Rule 48    estructurasDatos -> array
Rule 49    estructurasDatos -> set
Rule 50    hash -> LCURLYBRACKET elementoHash RCURLYBRACKET
Rule 51    elementoHash -> datos EQUAL GREATERTHAN datos maselementos
Rule 52    elementoHash -> <empty>
Rule 53    maselementos -> <empty>
Rule 54    maselementos -> COMMA elementoHash maselementos
Rule 55    operacionHash -> hash LBRACKET datos RBRACKET
Rule 56    operacionHash -> hash LBRACKET datos RBRACKET EQUAL datos
Rule 57    operacionHash -> hash DOT INCLUDE QUESTIONMARK LPARENTHESES datos RPARENTHESES
Rule 58    operacionHash -> hash DOT DELETE LPARENTHESES datos RPARENTHESES
Rule 59    operacionHash -> hash DOT KEYS
Rule 60    rango -> INTEGER RANGEINCLUSIVE INTEGER
Rule 61    rango -> INTEGER RANGEXCLUSIVE INTEGER
Rule 62    impresion -> PUTS datos
Rule 63    impresion -> PUTS LOCALVAR
Rule 64    impresion -> PRINT datos
Rule 65    impresion -> PRINT LOCALVAR
Rule 66    number -> INTEGER
Rule 67    number -> FLOAT
Rule 68    expresion -> operacion
Rule 69    expresion -> LPARENTHESES operacion RPARENTHESES
Rule 70    expresion -> LPARENTHESES operacion RPARENTHESES masoperaciones
Rule 71    operacion -> number operador number
Rule 72    operacion -> operacion masoperaciones
Rule 73    masoperaciones -> operador expresion masoperaciones
Rule 74    masoperaciones -> operador number
Rule 75    masoperaciones -> operador expresion
Rule 76    operador -> PLUS
Rule 77    operador -> MINUS
Rule 78    operador -> MULTIPLY
Rule 79    operador -> DIVIDE
Rule 80    operador -> PERCENTAGE
Rule 81    array -> tiposvariables EQUAL LBRACKET datosarray RBRACKET
Rule 82    array -> tiposvariables EQUAL LBRACKET RBRACKET
Rule 83    if -> IF datosvarios operadores datosvarios cuerpo END
Rule 84    if -> IF datosvarios operadores datosvarios cuerpo else
Rule 85    else -> ELSE cuerpo END
Rule 86    operadores -> DOUBLEEQUAL
Rule 87    operadores -> TRIPLEEQUAL
Rule 88    operadores -> GREATERTHAN
Rule 89    operadores -> NOTEQUAL
Rule 90    operadores -> LESSTHAN
Rule 91    operadores -> GREQUAL
Rule 92    operadores -> LEQUAL
Rule 93    datosvarios -> datos
Rule 94    datosvarios -> tiposvariables
Rule 95    datosarray -> datosvarios
Rule 96    datosarray -> datosarray COMMA datosvarios
Rule 97    operacionarray -> LOCALVAR LBRACKET INTEGER RBRACKET
Rule 98    operacionarray -> LOCALVAR DOT TAKE LPARENTHESES INTEGER RPARENTHESES
Rule 99    operacionarray -> LOCALVAR DOT DROP LPARENTHESES INTEGER RPARENTHESES
Rule 100   unless -> UNLESS condiciones cuerpo ELSE cuerpo END
Rule 101   condiciones -> tiposvariables operadores tiposvariables
Rule 102   condiciones -> datos operadores datos
Rule 103   condiciones -> tiposvariables operadores datos
Rule 104   condiciones -> datos operadores tiposvariables
Rule 105   set -> SET LBRACKET elementoSet RBRACKET
Rule 106   elementoSet -> <empty>
Rule 107   elementoSet -> datos
Rule 108   elementoSet -> datos otroElemento
Rule 109   otroElemento -> <empty>
Rule 110   otroElemento -> COMMA elementoSet otroElemento
Rule 111   operacionSet -> set DOT ADD LPARENTHESES datos RPARENTHESES
Rule 112   operacionSet -> set DOT ADD LPARENTHESES tiposvariables RPARENTHESES
Rule 113   operacionSet -> set DOT CLEAR
Rule 114   operacionSet -> set DOT DELETE LPARENTHESES datos RPARENTHESES
Rule 115   operacionSet -> set DOT DELETE LPARENTHESES tiposvariables RPARENTHESES

Terminals, with rules where they appear

ADD                  : 111 112
ALERT                : 
AMPERSAND            : 
BARRA                : 
BEGIN                : 
BEGIN_M              : 
BOOLEAN              : 
CIRCUMFLEX           : 
CLEAR                : 113
COLON                : 
COMBCOMP             : 
COMMA                : 14 54 96 110
COMMENT              : 
CONSTANT             : 43
DEF                  : 3 4
DELETE               : 58 114 115
DIVASSIGN            : 35
DIVIDE               : 79
DOBLEQUOTE           : 
DOT                  : 57 58 59 98 99 111 112 113 114 115
DOUBLEAMPERSAND      : 
DOUBLEEQUAL          : 86
DOUBLELESSTHAN       : 
DOUBLEPIPE           : 
DROP                 : 99
ELSE                 : 85 100
ELSEIF               : 
END                  : 3 4 28 83 85 100
END_M                : 
EQUAL                : 8 11 13 29 30 31 32 51 56 81 82
EXCLAMATION          : 
EXPASSIGN            : 38
FALSE                : 
FLOAT                : 45 67
FOR                  : 28
GETS                 : 
GREATERTHAN          : 51 88
GREQUAL              : 91
IF                   : 83 84
IN                   : 28
INCLUDE              : 57
INTEGER              : 44 60 60 61 61 66 97 98 99
KEYS                 : 59
LBRACKET             : 55 56 81 82 97 105
LCURLYBRACKET        : 8 50
LEQUAL               : 92
LESSTHAN             : 90
LOCALVAR             : 3 4 6 7 8 9 10 11 12 13 15 28 33 34 35 36 37 38 40 42 63 65 97 98 99
LPARENTHESES         : 3 4 57 58 69 70 98 99 111 112 114 115
MINASSIGN            : 34
MINUS                : 77
MODASSIGN            : 37
MULTIPLY             : 6 78
NIL                  : 
NOT                  : 
NOTEQUAL             : 89
OR                   : 
PERCENTAGE           : 80
PLUS                 : 76
PLUSASSIGN           : 33
PRINT                : 64 65
PUTS                 : 62 63
QUESTIONMARK         : 57
QUESTIONMARKPERIOD   : 
RANGEINCLUSIVE       : 60
RANGEXCLUSIVE        : 61
RBRACKET             : 55 56 81 82 97 105
RCURLYBRACKET        : 8 50
RETURN               : 15 16
RPARENTHESES         : 3 4 57 58 69 70 98 99 111 112 114 115
SEMICOLON            : 
SET                  : 105
SINGLEQUOTE          : 
STRING               : 46
TAKE                 : 98
TIMESASSIGN          : 36
TRIPLEEQUAL          : 87
TRUE                 : 
TWOGREATERTHAN       : 
TWOPOINTS            : 9
TWOSTARS             : 7
UNLESS               : 100
UNTIL                : 
VAR                  : 41
WAVE                 : 
error                : 

Nonterminals, with rules where they appear

argumentos           : 3 4
array                : 48
asignacion           : 18
condiciones          : 100
cuerpo               : 1 3 4 17 18 19 20 21 22 23 24 25 26 28 83 84 85 100 100
datos                : 9 11 13 16 29 51 51 55 56 56 57 58 62 64 93 102 102 103 104 107 108 111 114
datosAsignacion      : 33 34 35 36 37 38
datosarray           : 81 96
datosvarios          : 83 83 84 84 95 96
declaracion          : 17 32
elementoHash         : 50 54
elementoSet          : 105 110
else                 : 84
estructurasDatos     : 20 30
expresion            : 31 73 75
funcion              : 2
hash                 : 47 55 56 57 58 59
if                   : 21
impresion            : 23
inicio               : 0
loop                 : 19
masargumentos        : 12 13
maselementos         : 51 54
masoperaciones       : 70 72 73
number               : 39 71 71 74
operacion            : 68 69 70 72
operacionHash        : 26
operacionSet         : 24
operacionarray       : 25
operador             : 71 73 74 75
operadores           : 83 84 101 102 103 104
otroElemento         : 108 110
rango                : 28
retornar             : 4
set                  : 49 111 112 113 114 115
tiposvariables       : 29 30 31 32 81 82 94 101 101 103 104 112 115
unless               : 22
variosargumentos     : 5 14

Parsing method: LALR

state 0

    (0) S' -> . inicio
    (1) inicio -> . cuerpo
    (2) inicio -> . funcion
    (17) cuerpo -> . declaracion cuerpo
    (18) cuerpo -> . asignacion cuerpo
    (19) cuerpo -> . loop cuerpo
    (20) cuerpo -> . estructurasDatos cuerpo
    (21) cuerpo -> . if cuerpo
    (22) cuerpo -> . unless cuerpo
    (23) cuerpo -> . impresion cuerpo
    (24) cuerpo -> . operacionSet cuerpo
    (25) cuerpo -> . operacionarray cuerpo
    (26) cuerpo -> . operacionHash cuerpo
    (27) cuerpo -> .
    (3) funcion -> . DEF LOCALVAR LPARENTHESES argumentos RPARENTHESES cuerpo END
    (4) funcion -> . DEF LOCALVAR LPARENTHESES argumentos RPARENTHESES cuerpo retornar END
    (29) declaracion -> . tiposvariables EQUAL datos
    (30) declaracion -> . tiposvariables EQUAL estructurasDatos
    (31) declaracion -> . tiposvariables EQUAL expresion
    (32) declaracion -> . tiposvariables EQUAL declaracion
    (33) asignacion -> . LOCALVAR PLUSASSIGN datosAsignacion
    (34) asignacion -> . LOCALVAR MINASSIGN datosAsignacion
    (35) asignacion -> . LOCALVAR DIVASSIGN datosAsignacion
    (36) asignacion -> . LOCALVAR TIMESASSIGN datosAsignacion
    (37) asignacion -> . LOCALVAR MODASSIGN datosAsignacion
    (38) asignacion -> . LOCALVAR EXPASSIGN datosAsignacion
    (28) loop -> . FOR LOCALVAR IN rango cuerpo END
    (47) estructurasDatos -> . hash
    (48) estructurasDatos -> . array
    (49) estructurasDatos -> . set
    (83) if -> . IF datosvarios operadores datosvarios cuerpo END
    (84) if -> . IF datosvarios operadores datosvarios cuerpo else
    (100) unless -> . UNLESS condiciones cuerpo ELSE cuerpo END
    (62) impresion -> . PUTS datos
    (63) impresion -> . PUTS LOCALVAR
    (64) impresion -> . PRINT datos
    (65) impresion -> . PRINT LOCALVAR
    (111) operacionSet -> . set DOT ADD LPARENTHESES datos RPARENTHESES
    (112) operacionSet -> . set DOT ADD LPARENTHESES tiposvariables RPARENTHESES
    (113) operacionSet -> . set DOT CLEAR
    (114) operacionSet -> . set DOT DELETE LPARENTHESES datos RPARENTHESES
    (115) operacionSet -> . set DOT DELETE LPARENTHESES tiposvariables RPARENTHESES
    (97) operacionarray -> . LOCALVAR LBRACKET INTEGER RBRACKET
    (98) operacionarray -> . LOCALVAR DOT TAKE LPARENTHESES INTEGER RPARENTHESES
    (99) operacionarray -> . LOCALVAR DOT DROP LPARENTHESES INTEGER RPARENTHESES
    (55) operacionHash -> . hash LBRACKET datos RBRACKET
    (56) operacionHash -> . hash LBRACKET datos RBRACKET EQUAL datos
    (57) operacionHash -> . hash DOT INCLUDE QUESTIONMARK LPARENTHESES datos RPARENTHESES
    (58) operacionHash -> . hash DOT DELETE LPARENTHESES datos RPARENTHESES
    (59) operacionHash -> . hash DOT KEYS
    (41) tiposvariables -> . VAR
    (42) tiposvariables -> . LOCALVAR
    (43) tiposvariables -> . CONSTANT
    (50) hash -> . LCURLYBRACKET elementoHash RCURLYBRACKET
    (81) array -> . tiposvariables EQUAL LBRACKET datosarray RBRACKET
    (82) array -> . tiposvariables EQUAL LBRACKET RBRACKET
    (105) set -> . SET LBRACKET elementoSet RBRACKET

    $end            reduce using rule 27 (cuerpo -> .)
    DEF             shift and go to state 14
    LOCALVAR        shift and go to state 15
    FOR             shift and go to state 17
    IF              shift and go to state 21
    UNLESS          shift and go to state 22
    PUTS            shift and go to state 23
    PRINT           shift and go to state 24
    VAR             shift and go to state 25
    CONSTANT        shift and go to state 26
    LCURLYBRACKET   shift and go to state 27
    SET             shift and go to state 28

    inicio                         shift and go to state 1
    cuerpo                         shift and go to state 2
    funcion                        shift and go to state 3
    declaracion                    shift and go to state 4
    asignacion                     shift and go to state 5
    loop                           shift and go to state 6
    estructurasDatos               shift and go to state 7
    if                             shift and go to state 8
    unless                         shift and go to state 9
    impresion                      shift and go to state 10
    operacionSet                   shift and go to state 11
    operacionarray                 shift and go to state 12
    operacionHash                  shift and go to state 13
    tiposvariables                 shift and go to state 16
    hash                           shift and go to state 18
    array                          shift and go to state 19
    set                            shift and go to state 20

state 1

    (0) S' -> inicio .



state 2

    (1) inicio -> cuerpo .

    $end            reduce using rule 1 (inicio -> cuerpo .)


state 3

    (2) inicio -> funcion .

    $end            reduce using rule 2 (inicio -> funcion .)


state 4

    (17) cuerpo -> declaracion . cuerpo
    (17) cuerpo -> . declaracion cuerpo
    (18) cuerpo -> . asignacion cuerpo
    (19) cuerpo -> . loop cuerpo
    (20) cuerpo -> . estructurasDatos cuerpo
    (21) cuerpo -> . if cuerpo
    (22) cuerpo -> . unless cuerpo
    (23) cuerpo -> . impresion cuerpo
    (24) cuerpo -> . operacionSet cuerpo
    (25) cuerpo -> . operacionarray cuerpo
    (26) cuerpo -> . operacionHash cuerpo
    (27) cuerpo -> .
    (29) declaracion -> . tiposvariables EQUAL datos
    (30) declaracion -> . tiposvariables EQUAL estructurasDatos
    (31) declaracion -> . tiposvariables EQUAL expresion
    (32) declaracion -> . tiposvariables EQUAL declaracion
    (33) asignacion -> . LOCALVAR PLUSASSIGN datosAsignacion
    (34) asignacion -> . LOCALVAR MINASSIGN datosAsignacion
    (35) asignacion -> . LOCALVAR DIVASSIGN datosAsignacion
    (36) asignacion -> . LOCALVAR TIMESASSIGN datosAsignacion
    (37) asignacion -> . LOCALVAR MODASSIGN datosAsignacion
    (38) asignacion -> . LOCALVAR EXPASSIGN datosAsignacion
    (28) loop -> . FOR LOCALVAR IN rango cuerpo END
    (47) estructurasDatos -> . hash
    (48) estructurasDatos -> . array
    (49) estructurasDatos -> . set
    (83) if -> . IF datosvarios operadores datosvarios cuerpo END
    (84) if -> . IF datosvarios operadores datosvarios cuerpo else
    (100) unless -> . UNLESS condiciones cuerpo ELSE cuerpo END
    (62) impresion -> . PUTS datos
    (63) impresion -> . PUTS LOCALVAR
    (64) impresion -> . PRINT datos
    (65) impresion -> . PRINT LOCALVAR
    (111) operacionSet -> . set DOT ADD LPARENTHESES datos RPARENTHESES
    (112) operacionSet -> . set DOT ADD LPARENTHESES tiposvariables RPARENTHESES
    (113) operacionSet -> . set DOT CLEAR
    (114) operacionSet -> . set DOT DELETE LPARENTHESES datos RPARENTHESES
    (115) operacionSet -> . set DOT DELETE LPARENTHESES tiposvariables RPARENTHESES
    (97) operacionarray -> . LOCALVAR LBRACKET INTEGER RBRACKET
    (98) operacionarray -> . LOCALVAR DOT TAKE LPARENTHESES INTEGER RPARENTHESES
    (99) operacionarray -> . LOCALVAR DOT DROP LPARENTHESES INTEGER RPARENTHESES
    (55) operacionHash -> . hash LBRACKET datos RBRACKET
    (56) operacionHash -> . hash LBRACKET datos RBRACKET EQUAL datos
    (57) operacionHash -> . hash DOT INCLUDE QUESTIONMARK LPARENTHESES datos RPARENTHESES
    (58) operacionHash -> . hash DOT DELETE LPARENTHESES datos RPARENTHESES
    (59) operacionHash -> . hash DOT KEYS
    (41) tiposvariables -> . VAR
    (42) tiposvariables -> . LOCALVAR
    (43) tiposvariables -> . CONSTANT
    (50) hash -> . LCURLYBRACKET elementoHash RCURLYBRACKET
    (81) array -> . tiposvariables EQUAL LBRACKET datosarray RBRACKET
    (82) array -> . tiposvariables EQUAL LBRACKET RBRACKET
    (105) set -> . SET LBRACKET elementoSet RBRACKET

    $end            reduce using rule 27 (cuerpo -> .)
    ELSE            reduce using rule 27 (cuerpo -> .)
    END             reduce using rule 27 (cuerpo -> .)
    RETURN          reduce using rule 27 (cuerpo -> .)
    LOCALVAR        shift and go to state 15
    FOR             shift and go to state 17
    IF              shift and go to state 21
    UNLESS          shift and go to state 22
    PUTS            shift and go to state 23
    PRINT           shift and go to state 24
    VAR             shift and go to state 25
    CONSTANT        shift and go to state 26
    LCURLYBRACKET   shift and go to state 27
    SET             shift and go to state 28

    declaracion                    shift and go to state 4
    cuerpo                         shift and go to state 29
    asignacion                     shift and go to state 5
    loop                           shift and go to state 6
    estructurasDatos               shift and go to state 7
    if                             shift and go to state 8
    unless                         shift and go to state 9
    impresion                      shift and go to state 10
    operacionSet                   shift and go to state 11
    operacionarray                 shift and go to state 12
    operacionHash                  shift and go to state 13
    tiposvariables                 shift and go to state 16
    hash                           shift and go to state 18
    array                          shift and go to state 19
    set                            shift and go to state 20

state 5

    (18) cuerpo -> asignacion . cuerpo
    (17) cuerpo -> . declaracion cuerpo
    (18) cuerpo -> . asignacion cuerpo
    (19) cuerpo -> . loop cuerpo
    (20) cuerpo -> . estructurasDatos cuerpo
    (21) cuerpo -> . if cuerpo
    (22) cuerpo -> . unless cuerpo
    (23) cuerpo -> . impresion cuerpo
    (24) cuerpo -> . operacionSet cuerpo
    (25) cuerpo -> . operacionarray cuerpo
    (26) cuerpo -> . operacionHash cuerpo
    (27) cuerpo -> .
    (29) declaracion -> . tiposvariables EQUAL datos
    (30) declaracion -> . tiposvariables EQUAL estructurasDatos
    (31) declaracion -> . tiposvariables EQUAL expresion
    (32) declaracion -> . tiposvariables EQUAL declaracion
    (33) asignacion -> . LOCALVAR PLUSASSIGN datosAsignacion
    (34) asignacion -> . LOCALVAR MINASSIGN datosAsignacion
    (35) asignacion -> . LOCALVAR DIVASSIGN datosAsignacion
    (36) asignacion -> . LOCALVAR TIMESASSIGN datosAsignacion
    (37) asignacion -> . LOCALVAR MODASSIGN datosAsignacion
    (38) asignacion -> . LOCALVAR EXPASSIGN datosAsignacion
    (28) loop -> . FOR LOCALVAR IN rango cuerpo END
    (47) estructurasDatos -> . hash
    (48) estructurasDatos -> . array
    (49) estructurasDatos -> . set
    (83) if -> . IF datosvarios operadores datosvarios cuerpo END
    (84) if -> . IF datosvarios operadores datosvarios cuerpo else
    (100) unless -> . UNLESS condiciones cuerpo ELSE cuerpo END
    (62) impresion -> . PUTS datos
    (63) impresion -> . PUTS LOCALVAR
    (64) impresion -> . PRINT datos
    (65) impresion -> . PRINT LOCALVAR
    (111) operacionSet -> . set DOT ADD LPARENTHESES datos RPARENTHESES
    (112) operacionSet -> . set DOT ADD LPARENTHESES tiposvariables RPARENTHESES
    (113) operacionSet -> . set DOT CLEAR
    (114) operacionSet -> . set DOT DELETE LPARENTHESES datos RPARENTHESES
    (115) operacionSet -> . set DOT DELETE LPARENTHESES tiposvariables RPARENTHESES
    (97) operacionarray -> . LOCALVAR LBRACKET INTEGER RBRACKET
    (98) operacionarray -> . LOCALVAR DOT TAKE LPARENTHESES INTEGER RPARENTHESES
    (99) operacionarray -> . LOCALVAR DOT DROP LPARENTHESES INTEGER RPARENTHESES
    (55) operacionHash -> . hash LBRACKET datos RBRACKET
    (56) operacionHash -> . hash LBRACKET datos RBRACKET EQUAL datos
    (57) operacionHash -> . hash DOT INCLUDE QUESTIONMARK LPARENTHESES datos RPARENTHESES
    (58) operacionHash -> . hash DOT DELETE LPARENTHESES datos RPARENTHESES
    (59) operacionHash -> . hash DOT KEYS
    (41) tiposvariables -> . VAR
    (42) tiposvariables -> . LOCALVAR
    (43) tiposvariables -> . CONSTANT
    (50) hash -> . LCURLYBRACKET elementoHash RCURLYBRACKET
    (81) array -> . tiposvariables EQUAL LBRACKET datosarray RBRACKET
    (82) array -> . tiposvariables EQUAL LBRACKET RBRACKET
    (105) set -> . SET LBRACKET elementoSet RBRACKET

    $end            reduce using rule 27 (cuerpo -> .)
    ELSE            reduce using rule 27 (cuerpo -> .)
    END             reduce using rule 27 (cuerpo -> .)
    RETURN          reduce using rule 27 (cuerpo -> .)
    LOCALVAR        shift and go to state 15
    FOR             shift and go to state 17
    IF              shift and go to state 21
    UNLESS          shift and go to state 22
    PUTS            shift and go to state 23
    PRINT           shift and go to state 24
    VAR             shift and go to state 25
    CONSTANT        shift and go to state 26
    LCURLYBRACKET   shift and go to state 27
    SET             shift and go to state 28

    asignacion                     shift and go to state 5
    cuerpo                         shift and go to state 30
    declaracion                    shift and go to state 4
    loop                           shift and go to state 6
    estructurasDatos               shift and go to state 7
    if                             shift and go to state 8
    unless                         shift and go to state 9
    impresion                      shift and go to state 10
    operacionSet                   shift and go to state 11
    operacionarray                 shift and go to state 12
    operacionHash                  shift and go to state 13
    tiposvariables                 shift and go to state 16
    hash                           shift and go to state 18
    array                          shift and go to state 19
    set                            shift and go to state 20

state 6

    (19) cuerpo -> loop . cuerpo
    (17) cuerpo -> . declaracion cuerpo
    (18) cuerpo -> . asignacion cuerpo
    (19) cuerpo -> . loop cuerpo
    (20) cuerpo -> . estructurasDatos cuerpo
    (21) cuerpo -> . if cuerpo
    (22) cuerpo -> . unless cuerpo
    (23) cuerpo -> . impresion cuerpo
    (24) cuerpo -> . operacionSet cuerpo
    (25) cuerpo -> . operacionarray cuerpo
    (26) cuerpo -> . operacionHash cuerpo
    (27) cuerpo -> .
    (29) declaracion -> . tiposvariables EQUAL datos
    (30) declaracion -> . tiposvariables EQUAL estructurasDatos
    (31) declaracion -> . tiposvariables EQUAL expresion
    (32) declaracion -> . tiposvariables EQUAL declaracion
    (33) asignacion -> . LOCALVAR PLUSASSIGN datosAsignacion
    (34) asignacion -> . LOCALVAR MINASSIGN datosAsignacion
    (35) asignacion -> . LOCALVAR DIVASSIGN datosAsignacion
    (36) asignacion -> . LOCALVAR TIMESASSIGN datosAsignacion
    (37) asignacion -> . LOCALVAR MODASSIGN datosAsignacion
    (38) asignacion -> . LOCALVAR EXPASSIGN datosAsignacion
    (28) loop -> . FOR LOCALVAR IN rango cuerpo END
    (47) estructurasDatos -> . hash
    (48) estructurasDatos -> . array
    (49) estructurasDatos -> . set
    (83) if -> . IF datosvarios operadores datosvarios cuerpo END
    (84) if -> . IF datosvarios operadores datosvarios cuerpo else
    (100) unless -> . UNLESS condiciones cuerpo ELSE cuerpo END
    (62) impresion -> . PUTS datos
    (63) impresion -> . PUTS LOCALVAR
    (64) impresion -> . PRINT datos
    (65) impresion -> . PRINT LOCALVAR
    (111) operacionSet -> . set DOT ADD LPARENTHESES datos RPARENTHESES
    (112) operacionSet -> . set DOT ADD LPARENTHESES tiposvariables RPARENTHESES
    (113) operacionSet -> . set DOT CLEAR
    (114) operacionSet -> . set DOT DELETE LPARENTHESES datos RPARENTHESES
    (115) operacionSet -> . set DOT DELETE LPARENTHESES tiposvariables RPARENTHESES
    (97) operacionarray -> . LOCALVAR LBRACKET INTEGER RBRACKET
    (98) operacionarray -> . LOCALVAR DOT TAKE LPARENTHESES INTEGER RPARENTHESES
    (99) operacionarray -> . LOCALVAR DOT DROP LPARENTHESES INTEGER RPARENTHESES
    (55) operacionHash -> . hash LBRACKET datos RBRACKET
    (56) operacionHash -> . hash LBRACKET datos RBRACKET EQUAL datos
    (57) operacionHash -> . hash DOT INCLUDE QUESTIONMARK LPARENTHESES datos RPARENTHESES
    (58) operacionHash -> . hash DOT DELETE LPARENTHESES datos RPARENTHESES
    (59) operacionHash -> . hash DOT KEYS
    (41) tiposvariables -> . VAR
    (42) tiposvariables -> . LOCALVAR
    (43) tiposvariables -> . CONSTANT
    (50) hash -> . LCURLYBRACKET elementoHash RCURLYBRACKET
    (81) array -> . tiposvariables EQUAL LBRACKET datosarray RBRACKET
    (82) array -> . tiposvariables EQUAL LBRACKET RBRACKET
    (105) set -> . SET LBRACKET elementoSet RBRACKET

    $end            reduce using rule 27 (cuerpo -> .)
    ELSE            reduce using rule 27 (cuerpo -> .)
    END             reduce using rule 27 (cuerpo -> .)
    RETURN          reduce using rule 27 (cuerpo -> .)
    LOCALVAR        shift and go to state 15
    FOR             shift and go to state 17
    IF              shift and go to state 21
    UNLESS          shift and go to state 22
    PUTS            shift and go to state 23
    PRINT           shift and go to state 24
    VAR             shift and go to state 25
    CONSTANT        shift and go to state 26
    LCURLYBRACKET   shift and go to state 27
    SET             shift and go to state 28

    loop                           shift and go to state 6
    cuerpo                         shift and go to state 31
    declaracion                    shift and go to state 4
    asignacion                     shift and go to state 5
    estructurasDatos               shift and go to state 7
    if                             shift and go to state 8
    unless                         shift and go to state 9
    impresion                      shift and go to state 10
    operacionSet                   shift and go to state 11
    operacionarray                 shift and go to state 12
    operacionHash                  shift and go to state 13
    tiposvariables                 shift and go to state 16
    hash                           shift and go to state 18
    array                          shift and go to state 19
    set                            shift and go to state 20

state 7

    (20) cuerpo -> estructurasDatos . cuerpo
    (17) cuerpo -> . declaracion cuerpo
    (18) cuerpo -> . asignacion cuerpo
    (19) cuerpo -> . loop cuerpo
    (20) cuerpo -> . estructurasDatos cuerpo
    (21) cuerpo -> . if cuerpo
    (22) cuerpo -> . unless cuerpo
    (23) cuerpo -> . impresion cuerpo
    (24) cuerpo -> . operacionSet cuerpo
    (25) cuerpo -> . operacionarray cuerpo
    (26) cuerpo -> . operacionHash cuerpo
    (27) cuerpo -> .
    (29) declaracion -> . tiposvariables EQUAL datos
    (30) declaracion -> . tiposvariables EQUAL estructurasDatos
    (31) declaracion -> . tiposvariables EQUAL expresion
    (32) declaracion -> . tiposvariables EQUAL declaracion
    (33) asignacion -> . LOCALVAR PLUSASSIGN datosAsignacion
    (34) asignacion -> . LOCALVAR MINASSIGN datosAsignacion
    (35) asignacion -> . LOCALVAR DIVASSIGN datosAsignacion
    (36) asignacion -> . LOCALVAR TIMESASSIGN datosAsignacion
    (37) asignacion -> . LOCALVAR MODASSIGN datosAsignacion
    (38) asignacion -> . LOCALVAR EXPASSIGN datosAsignacion
    (28) loop -> . FOR LOCALVAR IN rango cuerpo END
    (47) estructurasDatos -> . hash
    (48) estructurasDatos -> . array
    (49) estructurasDatos -> . set
    (83) if -> . IF datosvarios operadores datosvarios cuerpo END
    (84) if -> . IF datosvarios operadores datosvarios cuerpo else
    (100) unless -> . UNLESS condiciones cuerpo ELSE cuerpo END
    (62) impresion -> . PUTS datos
    (63) impresion -> . PUTS LOCALVAR
    (64) impresion -> . PRINT datos
    (65) impresion -> . PRINT LOCALVAR
    (111) operacionSet -> . set DOT ADD LPARENTHESES datos RPARENTHESES
    (112) operacionSet -> . set DOT ADD LPARENTHESES tiposvariables RPARENTHESES
    (113) operacionSet -> . set DOT CLEAR
    (114) operacionSet -> . set DOT DELETE LPARENTHESES datos RPARENTHESES
    (115) operacionSet -> . set DOT DELETE LPARENTHESES tiposvariables RPARENTHESES
    (97) operacionarray -> . LOCALVAR LBRACKET INTEGER RBRACKET
    (98) operacionarray -> . LOCALVAR DOT TAKE LPARENTHESES INTEGER RPARENTHESES
    (99) operacionarray -> . LOCALVAR DOT DROP LPARENTHESES INTEGER RPARENTHESES
    (55) operacionHash -> . hash LBRACKET datos RBRACKET
    (56) operacionHash -> . hash LBRACKET datos RBRACKET EQUAL datos
    (57) operacionHash -> . hash DOT INCLUDE QUESTIONMARK LPARENTHESES datos RPARENTHESES
    (58) operacionHash -> . hash DOT DELETE LPARENTHESES datos RPARENTHESES
    (59) operacionHash -> . hash DOT KEYS
    (41) tiposvariables -> . VAR
    (42) tiposvariables -> . LOCALVAR
    (43) tiposvariables -> . CONSTANT
    (50) hash -> . LCURLYBRACKET elementoHash RCURLYBRACKET
    (81) array -> . tiposvariables EQUAL LBRACKET datosarray RBRACKET
    (82) array -> . tiposvariables EQUAL LBRACKET RBRACKET
    (105) set -> . SET LBRACKET elementoSet RBRACKET

    $end            reduce using rule 27 (cuerpo -> .)
    ELSE            reduce using rule 27 (cuerpo -> .)
    END             reduce using rule 27 (cuerpo -> .)
    RETURN          reduce using rule 27 (cuerpo -> .)
    LOCALVAR        shift and go to state 15
    FOR             shift and go to state 17
    IF              shift and go to state 21
    UNLESS          shift and go to state 22
    PUTS            shift and go to state 23
    PRINT           shift and go to state 24
    VAR             shift and go to state 25
    CONSTANT        shift and go to state 26
    LCURLYBRACKET   shift and go to state 27
    SET             shift and go to state 28

    estructurasDatos               shift and go to state 7
    cuerpo                         shift and go to state 32
    declaracion                    shift and go to state 4
    asignacion                     shift and go to state 5
    loop                           shift and go to state 6
    if                             shift and go to state 8
    unless                         shift and go to state 9
    impresion                      shift and go to state 10
    operacionSet                   shift and go to state 11
    operacionarray                 shift and go to state 12
    operacionHash                  shift and go to state 13
    tiposvariables                 shift and go to state 16
    hash                           shift and go to state 18
    array                          shift and go to state 19
    set                            shift and go to state 20

state 8

    (21) cuerpo -> if . cuerpo
    (17) cuerpo -> . declaracion cuerpo
    (18) cuerpo -> . asignacion cuerpo
    (19) cuerpo -> . loop cuerpo
    (20) cuerpo -> . estructurasDatos cuerpo
    (21) cuerpo -> . if cuerpo
    (22) cuerpo -> . unless cuerpo
    (23) cuerpo -> . impresion cuerpo
    (24) cuerpo -> . operacionSet cuerpo
    (25) cuerpo -> . operacionarray cuerpo
    (26) cuerpo -> . operacionHash cuerpo
    (27) cuerpo -> .
    (29) declaracion -> . tiposvariables EQUAL datos
    (30) declaracion -> . tiposvariables EQUAL estructurasDatos
    (31) declaracion -> . tiposvariables EQUAL expresion
    (32) declaracion -> . tiposvariables EQUAL declaracion
    (33) asignacion -> . LOCALVAR PLUSASSIGN datosAsignacion
    (34) asignacion -> . LOCALVAR MINASSIGN datosAsignacion
    (35) asignacion -> . LOCALVAR DIVASSIGN datosAsignacion
    (36) asignacion -> . LOCALVAR TIMESASSIGN datosAsignacion
    (37) asignacion -> . LOCALVAR MODASSIGN datosAsignacion
    (38) asignacion -> . LOCALVAR EXPASSIGN datosAsignacion
    (28) loop -> . FOR LOCALVAR IN rango cuerpo END
    (47) estructurasDatos -> . hash
    (48) estructurasDatos -> . array
    (49) estructurasDatos -> . set
    (83) if -> . IF datosvarios operadores datosvarios cuerpo END
    (84) if -> . IF datosvarios operadores datosvarios cuerpo else
    (100) unless -> . UNLESS condiciones cuerpo ELSE cuerpo END
    (62) impresion -> . PUTS datos
    (63) impresion -> . PUTS LOCALVAR
    (64) impresion -> . PRINT datos
    (65) impresion -> . PRINT LOCALVAR
    (111) operacionSet -> . set DOT ADD LPARENTHESES datos RPARENTHESES
    (112) operacionSet -> . set DOT ADD LPARENTHESES tiposvariables RPARENTHESES
    (113) operacionSet -> . set DOT CLEAR
    (114) operacionSet -> . set DOT DELETE LPARENTHESES datos RPARENTHESES
    (115) operacionSet -> . set DOT DELETE LPARENTHESES tiposvariables RPARENTHESES
    (97) operacionarray -> . LOCALVAR LBRACKET INTEGER RBRACKET
    (98) operacionarray -> . LOCALVAR DOT TAKE LPARENTHESES INTEGER RPARENTHESES
    (99) operacionarray -> . LOCALVAR DOT DROP LPARENTHESES INTEGER RPARENTHESES
    (55) operacionHash -> . hash LBRACKET datos RBRACKET
    (56) operacionHash -> . hash LBRACKET datos RBRACKET EQUAL datos
    (57) operacionHash -> . hash DOT INCLUDE QUESTIONMARK LPARENTHESES datos RPARENTHESES
    (58) operacionHash -> . hash DOT DELETE LPARENTHESES datos RPARENTHESES
    (59) operacionHash -> . hash DOT KEYS
    (41) tiposvariables -> . VAR
    (42) tiposvariables -> . LOCALVAR
    (43) tiposvariables -> . CONSTANT
    (50) hash -> . LCURLYBRACKET elementoHash RCURLYBRACKET
    (81) array -> . tiposvariables EQUAL LBRACKET datosarray RBRACKET
    (82) array -> . tiposvariables EQUAL LBRACKET RBRACKET
    (105) set -> . SET LBRACKET elementoSet RBRACKET

    $end            reduce using rule 27 (cuerpo -> .)
    ELSE            reduce using rule 27 (cuerpo -> .)
    END             reduce using rule 27 (cuerpo -> .)
    RETURN          reduce using rule 27 (cuerpo -> .)
    LOCALVAR        shift and go to state 15
    FOR             shift and go to state 17
    IF              shift and go to state 21
    UNLESS          shift and go to state 22
    PUTS            shift and go to state 23
    PRINT           shift and go to state 24
    VAR             shift and go to state 25
    CONSTANT        shift and go to state 26
    LCURLYBRACKET   shift and go to state 27
    SET             shift and go to state 28

    if                             shift and go to state 8
    cuerpo                         shift and go to state 33
    declaracion                    shift and go to state 4
    asignacion                     shift and go to state 5
    loop                           shift and go to state 6
    estructurasDatos               shift and go to state 7
    unless                         shift and go to state 9
    impresion                      shift and go to state 10
    operacionSet                   shift and go to state 11
    operacionarray                 shift and go to state 12
    operacionHash                  shift and go to state 13
    tiposvariables                 shift and go to state 16
    hash                           shift and go to state 18
    array                          shift and go to state 19
    set                            shift and go to state 20

state 9

    (22) cuerpo -> unless . cuerpo
    (17) cuerpo -> . declaracion cuerpo
    (18) cuerpo -> . asignacion cuerpo
    (19) cuerpo -> . loop cuerpo
    (20) cuerpo -> . estructurasDatos cuerpo
    (21) cuerpo -> . if cuerpo
    (22) cuerpo -> . unless cuerpo
    (23) cuerpo -> . impresion cuerpo
    (24) cuerpo -> . operacionSet cuerpo
    (25) cuerpo -> . operacionarray cuerpo
    (26) cuerpo -> . operacionHash cuerpo
    (27) cuerpo -> .
    (29) declaracion -> . tiposvariables EQUAL datos
    (30) declaracion -> . tiposvariables EQUAL estructurasDatos
    (31) declaracion -> . tiposvariables EQUAL expresion
    (32) declaracion -> . tiposvariables EQUAL declaracion
    (33) asignacion -> . LOCALVAR PLUSASSIGN datosAsignacion
    (34) asignacion -> . LOCALVAR MINASSIGN datosAsignacion
    (35) asignacion -> . LOCALVAR DIVASSIGN datosAsignacion
    (36) asignacion -> . LOCALVAR TIMESASSIGN datosAsignacion
    (37) asignacion -> . LOCALVAR MODASSIGN datosAsignacion
    (38) asignacion -> . LOCALVAR EXPASSIGN datosAsignacion
    (28) loop -> . FOR LOCALVAR IN rango cuerpo END
    (47) estructurasDatos -> . hash
    (48) estructurasDatos -> . array
    (49) estructurasDatos -> . set
    (83) if -> . IF datosvarios operadores datosvarios cuerpo END
    (84) if -> . IF datosvarios operadores datosvarios cuerpo else
    (100) unless -> . UNLESS condiciones cuerpo ELSE cuerpo END
    (62) impresion -> . PUTS datos
    (63) impresion -> . PUTS LOCALVAR
    (64) impresion -> . PRINT datos
    (65) impresion -> . PRINT LOCALVAR
    (111) operacionSet -> . set DOT ADD LPARENTHESES datos RPARENTHESES
    (112) operacionSet -> . set DOT ADD LPARENTHESES tiposvariables RPARENTHESES
    (113) operacionSet -> . set DOT CLEAR
    (114) operacionSet -> . set DOT DELETE LPARENTHESES datos RPARENTHESES
    (115) operacionSet -> . set DOT DELETE LPARENTHESES tiposvariables RPARENTHESES
    (97) operacionarray -> . LOCALVAR LBRACKET INTEGER RBRACKET
    (98) operacionarray -> . LOCALVAR DOT TAKE LPARENTHESES INTEGER RPARENTHESES
    (99) operacionarray -> . LOCALVAR DOT DROP LPARENTHESES INTEGER RPARENTHESES
    (55) operacionHash -> . hash LBRACKET datos RBRACKET
    (56) operacionHash -> . hash LBRACKET datos RBRACKET EQUAL datos
    (57) operacionHash -> . hash DOT INCLUDE QUESTIONMARK LPARENTHESES datos RPARENTHESES
    (58) operacionHash -> . hash DOT DELETE LPARENTHESES datos RPARENTHESES
    (59) operacionHash -> . hash DOT KEYS
    (41) tiposvariables -> . VAR
    (42) tiposvariables -> . LOCALVAR
    (43) tiposvariables -> . CONSTANT
    (50) hash -> . LCURLYBRACKET elementoHash RCURLYBRACKET
    (81) array -> . tiposvariables EQUAL LBRACKET datosarray RBRACKET
    (82) array -> . tiposvariables EQUAL LBRACKET RBRACKET
    (105) set -> . SET LBRACKET elementoSet RBRACKET

    $end            reduce using rule 27 (cuerpo -> .)
    ELSE            reduce using rule 27 (cuerpo -> .)
    END             reduce using rule 27 (cuerpo -> .)
    RETURN          reduce using rule 27 (cuerpo -> .)
    LOCALVAR        shift and go to state 15
    FOR             shift and go to state 17
    IF              shift and go to state 21
    UNLESS          shift and go to state 22
    PUTS            shift and go to state 23
    PRINT           shift and go to state 24
    VAR             shift and go to state 25
    CONSTANT        shift and go to state 26
    LCURLYBRACKET   shift and go to state 27
    SET             shift and go to state 28

    unless                         shift and go to state 9
    cuerpo                         shift and go to state 34
    declaracion                    shift and go to state 4
    asignacion                     shift and go to state 5
    loop                           shift and go to state 6
    estructurasDatos               shift and go to state 7
    if                             shift and go to state 8
    impresion                      shift and go to state 10
    operacionSet                   shift and go to state 11
    operacionarray                 shift and go to state 12
    operacionHash                  shift and go to state 13
    tiposvariables                 shift and go to state 16
    hash                           shift and go to state 18
    array                          shift and go to state 19
    set                            shift and go to state 20

state 10

    (23) cuerpo -> impresion . cuerpo
    (17) cuerpo -> . declaracion cuerpo
    (18) cuerpo -> . asignacion cuerpo
    (19) cuerpo -> . loop cuerpo
    (20) cuerpo -> . estructurasDatos cuerpo
    (21) cuerpo -> . if cuerpo
    (22) cuerpo -> . unless cuerpo
    (23) cuerpo -> . impresion cuerpo
    (24) cuerpo -> . operacionSet cuerpo
    (25) cuerpo -> . operacionarray cuerpo
    (26) cuerpo -> . operacionHash cuerpo
    (27) cuerpo -> .
    (29) declaracion -> . tiposvariables EQUAL datos
    (30) declaracion -> . tiposvariables EQUAL estructurasDatos
    (31) declaracion -> . tiposvariables EQUAL expresion
    (32) declaracion -> . tiposvariables EQUAL declaracion
    (33) asignacion -> . LOCALVAR PLUSASSIGN datosAsignacion
    (34) asignacion -> . LOCALVAR MINASSIGN datosAsignacion
    (35) asignacion -> . LOCALVAR DIVASSIGN datosAsignacion
    (36) asignacion -> . LOCALVAR TIMESASSIGN datosAsignacion
    (37) asignacion -> . LOCALVAR MODASSIGN datosAsignacion
    (38) asignacion -> . LOCALVAR EXPASSIGN datosAsignacion
    (28) loop -> . FOR LOCALVAR IN rango cuerpo END
    (47) estructurasDatos -> . hash
    (48) estructurasDatos -> . array
    (49) estructurasDatos -> . set
    (83) if -> . IF datosvarios operadores datosvarios cuerpo END
    (84) if -> . IF datosvarios operadores datosvarios cuerpo else
    (100) unless -> . UNLESS condiciones cuerpo ELSE cuerpo END
    (62) impresion -> . PUTS datos
    (63) impresion -> . PUTS LOCALVAR
    (64) impresion -> . PRINT datos
    (65) impresion -> . PRINT LOCALVAR
    (111) operacionSet -> . set DOT ADD LPARENTHESES datos RPARENTHESES
    (112) operacionSet -> . set DOT ADD LPARENTHESES tiposvariables RPARENTHESES
    (113) operacionSet -> . set DOT CLEAR
    (114) operacionSet -> . set DOT DELETE LPARENTHESES datos RPARENTHESES
    (115) operacionSet -> . set DOT DELETE LPARENTHESES tiposvariables RPARENTHESES
    (97) operacionarray -> . LOCALVAR LBRACKET INTEGER RBRACKET
    (98) operacionarray -> . LOCALVAR DOT TAKE LPARENTHESES INTEGER RPARENTHESES
    (99) operacionarray -> . LOCALVAR DOT DROP LPARENTHESES INTEGER RPARENTHESES
    (55) operacionHash -> . hash LBRACKET datos RBRACKET
    (56) operacionHash -> . hash LBRACKET datos RBRACKET EQUAL datos
    (57) operacionHash -> . hash DOT INCLUDE QUESTIONMARK LPARENTHESES datos RPARENTHESES
    (58) operacionHash -> . hash DOT DELETE LPARENTHESES datos RPARENTHESES
    (59) operacionHash -> . hash DOT KEYS
    (41) tiposvariables -> . VAR
    (42) tiposvariables -> . LOCALVAR
    (43) tiposvariables -> . CONSTANT
    (50) hash -> . LCURLYBRACKET elementoHash RCURLYBRACKET
    (81) array -> . tiposvariables EQUAL LBRACKET datosarray RBRACKET
    (82) array -> . tiposvariables EQUAL LBRACKET RBRACKET
    (105) set -> . SET LBRACKET elementoSet RBRACKET

    $end            reduce using rule 27 (cuerpo -> .)
    ELSE            reduce using rule 27 (cuerpo -> .)
    END             reduce using rule 27 (cuerpo -> .)
    RETURN          reduce using rule 27 (cuerpo -> .)
    LOCALVAR        shift and go to state 15
    FOR             shift and go to state 17
    IF              shift and go to state 21
    UNLESS          shift and go to state 22
    PUTS            shift and go to state 23
    PRINT           shift and go to state 24
    VAR             shift and go to state 25
    CONSTANT        shift and go to state 26
    LCURLYBRACKET   shift and go to state 27
    SET             shift and go to state 28

    impresion                      shift and go to state 10
    cuerpo                         shift and go to state 35
    declaracion                    shift and go to state 4
    asignacion                     shift and go to state 5
    loop                           shift and go to state 6
    estructurasDatos               shift and go to state 7
    if                             shift and go to state 8
    unless                         shift and go to state 9
    operacionSet                   shift and go to state 11
    operacionarray                 shift and go to state 12
    operacionHash                  shift and go to state 13
    tiposvariables                 shift and go to state 16
    hash                           shift and go to state 18
    array                          shift and go to state 19
    set                            shift and go to state 20

state 11

    (24) cuerpo -> operacionSet . cuerpo
    (17) cuerpo -> . declaracion cuerpo
    (18) cuerpo -> . asignacion cuerpo
    (19) cuerpo -> . loop cuerpo
    (20) cuerpo -> . estructurasDatos cuerpo
    (21) cuerpo -> . if cuerpo
    (22) cuerpo -> . unless cuerpo
    (23) cuerpo -> . impresion cuerpo
    (24) cuerpo -> . operacionSet cuerpo
    (25) cuerpo -> . operacionarray cuerpo
    (26) cuerpo -> . operacionHash cuerpo
    (27) cuerpo -> .
    (29) declaracion -> . tiposvariables EQUAL datos
    (30) declaracion -> . tiposvariables EQUAL estructurasDatos
    (31) declaracion -> . tiposvariables EQUAL expresion
    (32) declaracion -> . tiposvariables EQUAL declaracion
    (33) asignacion -> . LOCALVAR PLUSASSIGN datosAsignacion
    (34) asignacion -> . LOCALVAR MINASSIGN datosAsignacion
    (35) asignacion -> . LOCALVAR DIVASSIGN datosAsignacion
    (36) asignacion -> . LOCALVAR TIMESASSIGN datosAsignacion
    (37) asignacion -> . LOCALVAR MODASSIGN datosAsignacion
    (38) asignacion -> . LOCALVAR EXPASSIGN datosAsignacion
    (28) loop -> . FOR LOCALVAR IN rango cuerpo END
    (47) estructurasDatos -> . hash
    (48) estructurasDatos -> . array
    (49) estructurasDatos -> . set
    (83) if -> . IF datosvarios operadores datosvarios cuerpo END
    (84) if -> . IF datosvarios operadores datosvarios cuerpo else
    (100) unless -> . UNLESS condiciones cuerpo ELSE cuerpo END
    (62) impresion -> . PUTS datos
    (63) impresion -> . PUTS LOCALVAR
    (64) impresion -> . PRINT datos
    (65) impresion -> . PRINT LOCALVAR
    (111) operacionSet -> . set DOT ADD LPARENTHESES datos RPARENTHESES
    (112) operacionSet -> . set DOT ADD LPARENTHESES tiposvariables RPARENTHESES
    (113) operacionSet -> . set DOT CLEAR
    (114) operacionSet -> . set DOT DELETE LPARENTHESES datos RPARENTHESES
    (115) operacionSet -> . set DOT DELETE LPARENTHESES tiposvariables RPARENTHESES
    (97) operacionarray -> . LOCALVAR LBRACKET INTEGER RBRACKET
    (98) operacionarray -> . LOCALVAR DOT TAKE LPARENTHESES INTEGER RPARENTHESES
    (99) operacionarray -> . LOCALVAR DOT DROP LPARENTHESES INTEGER RPARENTHESES
    (55) operacionHash -> . hash LBRACKET datos RBRACKET
    (56) operacionHash -> . hash LBRACKET datos RBRACKET EQUAL datos
    (57) operacionHash -> . hash DOT INCLUDE QUESTIONMARK LPARENTHESES datos RPARENTHESES
    (58) operacionHash -> . hash DOT DELETE LPARENTHESES datos RPARENTHESES
    (59) operacionHash -> . hash DOT KEYS
    (41) tiposvariables -> . VAR
    (42) tiposvariables -> . LOCALVAR
    (43) tiposvariables -> . CONSTANT
    (50) hash -> . LCURLYBRACKET elementoHash RCURLYBRACKET
    (81) array -> . tiposvariables EQUAL LBRACKET datosarray RBRACKET
    (82) array -> . tiposvariables EQUAL LBRACKET RBRACKET
    (105) set -> . SET LBRACKET elementoSet RBRACKET

    $end            reduce using rule 27 (cuerpo -> .)
    ELSE            reduce using rule 27 (cuerpo -> .)
    END             reduce using rule 27 (cuerpo -> .)
    RETURN          reduce using rule 27 (cuerpo -> .)
    LOCALVAR        shift and go to state 15
    FOR             shift and go to state 17
    IF              shift and go to state 21
    UNLESS          shift and go to state 22
    PUTS            shift and go to state 23
    PRINT           shift and go to state 24
    VAR             shift and go to state 25
    CONSTANT        shift and go to state 26
    LCURLYBRACKET   shift and go to state 27
    SET             shift and go to state 28

    operacionSet                   shift and go to state 11
    cuerpo                         shift and go to state 36
    declaracion                    shift and go to state 4
    asignacion                     shift and go to state 5
    loop                           shift and go to state 6
    estructurasDatos               shift and go to state 7
    if                             shift and go to state 8
    unless                         shift and go to state 9
    impresion                      shift and go to state 10
    operacionarray                 shift and go to state 12
    operacionHash                  shift and go to state 13
    tiposvariables                 shift and go to state 16
    hash                           shift and go to state 18
    array                          shift and go to state 19
    set                            shift and go to state 20

state 12

    (25) cuerpo -> operacionarray . cuerpo
    (17) cuerpo -> . declaracion cuerpo
    (18) cuerpo -> . asignacion cuerpo
    (19) cuerpo -> . loop cuerpo
    (20) cuerpo -> . estructurasDatos cuerpo
    (21) cuerpo -> . if cuerpo
    (22) cuerpo -> . unless cuerpo
    (23) cuerpo -> . impresion cuerpo
    (24) cuerpo -> . operacionSet cuerpo
    (25) cuerpo -> . operacionarray cuerpo
    (26) cuerpo -> . operacionHash cuerpo
    (27) cuerpo -> .
    (29) declaracion -> . tiposvariables EQUAL datos
    (30) declaracion -> . tiposvariables EQUAL estructurasDatos
    (31) declaracion -> . tiposvariables EQUAL expresion
    (32) declaracion -> . tiposvariables EQUAL declaracion
    (33) asignacion -> . LOCALVAR PLUSASSIGN datosAsignacion
    (34) asignacion -> . LOCALVAR MINASSIGN datosAsignacion
    (35) asignacion -> . LOCALVAR DIVASSIGN datosAsignacion
    (36) asignacion -> . LOCALVAR TIMESASSIGN datosAsignacion
    (37) asignacion -> . LOCALVAR MODASSIGN datosAsignacion
    (38) asignacion -> . LOCALVAR EXPASSIGN datosAsignacion
    (28) loop -> . FOR LOCALVAR IN rango cuerpo END
    (47) estructurasDatos -> . hash
    (48) estructurasDatos -> . array
    (49) estructurasDatos -> . set
    (83) if -> . IF datosvarios operadores datosvarios cuerpo END
    (84) if -> . IF datosvarios operadores datosvarios cuerpo else
    (100) unless -> . UNLESS condiciones cuerpo ELSE cuerpo END
    (62) impresion -> . PUTS datos
    (63) impresion -> . PUTS LOCALVAR
    (64) impresion -> . PRINT datos
    (65) impresion -> . PRINT LOCALVAR
    (111) operacionSet -> . set DOT ADD LPARENTHESES datos RPARENTHESES
    (112) operacionSet -> . set DOT ADD LPARENTHESES tiposvariables RPARENTHESES
    (113) operacionSet -> . set DOT CLEAR
    (114) operacionSet -> . set DOT DELETE LPARENTHESES datos RPARENTHESES
    (115) operacionSet -> . set DOT DELETE LPARENTHESES tiposvariables RPARENTHESES
    (97) operacionarray -> . LOCALVAR LBRACKET INTEGER RBRACKET
    (98) operacionarray -> . LOCALVAR DOT TAKE LPARENTHESES INTEGER RPARENTHESES
    (99) operacionarray -> . LOCALVAR DOT DROP LPARENTHESES INTEGER RPARENTHESES
    (55) operacionHash -> . hash LBRACKET datos RBRACKET
    (56) operacionHash -> . hash LBRACKET datos RBRACKET EQUAL datos
    (57) operacionHash -> . hash DOT INCLUDE QUESTIONMARK LPARENTHESES datos RPARENTHESES
    (58) operacionHash -> . hash DOT DELETE LPARENTHESES datos RPARENTHESES
    (59) operacionHash -> . hash DOT KEYS
    (41) tiposvariables -> . VAR
    (42) tiposvariables -> . LOCALVAR
    (43) tiposvariables -> . CONSTANT
    (50) hash -> . LCURLYBRACKET elementoHash RCURLYBRACKET
    (81) array -> . tiposvariables EQUAL LBRACKET datosarray RBRACKET
    (82) array -> . tiposvariables EQUAL LBRACKET RBRACKET
    (105) set -> . SET LBRACKET elementoSet RBRACKET

    $end            reduce using rule 27 (cuerpo -> .)
    ELSE            reduce using rule 27 (cuerpo -> .)
    END             reduce using rule 27 (cuerpo -> .)
    RETURN          reduce using rule 27 (cuerpo -> .)
    LOCALVAR        shift and go to state 15
    FOR             shift and go to state 17
    IF              shift and go to state 21
    UNLESS          shift and go to state 22
    PUTS            shift and go to state 23
    PRINT           shift and go to state 24
    VAR             shift and go to state 25
    CONSTANT        shift and go to state 26
    LCURLYBRACKET   shift and go to state 27
    SET             shift and go to state 28

    operacionarray                 shift and go to state 12
    cuerpo                         shift and go to state 37
    declaracion                    shift and go to state 4
    asignacion                     shift and go to state 5
    loop                           shift and go to state 6
    estructurasDatos               shift and go to state 7
    if                             shift and go to state 8
    unless                         shift and go to state 9
    impresion                      shift and go to state 10
    operacionSet                   shift and go to state 11
    operacionHash                  shift and go to state 13
    tiposvariables                 shift and go to state 16
    hash                           shift and go to state 18
    array                          shift and go to state 19
    set                            shift and go to state 20

state 13

    (26) cuerpo -> operacionHash . cuerpo
    (17) cuerpo -> . declaracion cuerpo
    (18) cuerpo -> . asignacion cuerpo
    (19) cuerpo -> . loop cuerpo
    (20) cuerpo -> . estructurasDatos cuerpo
    (21) cuerpo -> . if cuerpo
    (22) cuerpo -> . unless cuerpo
    (23) cuerpo -> . impresion cuerpo
    (24) cuerpo -> . operacionSet cuerpo
    (25) cuerpo -> . operacionarray cuerpo
    (26) cuerpo -> . operacionHash cuerpo
    (27) cuerpo -> .
    (29) declaracion -> . tiposvariables EQUAL datos
    (30) declaracion -> . tiposvariables EQUAL estructurasDatos
    (31) declaracion -> . tiposvariables EQUAL expresion
    (32) declaracion -> . tiposvariables EQUAL declaracion
    (33) asignacion -> . LOCALVAR PLUSASSIGN datosAsignacion
    (34) asignacion -> . LOCALVAR MINASSIGN datosAsignacion
    (35) asignacion -> . LOCALVAR DIVASSIGN datosAsignacion
    (36) asignacion -> . LOCALVAR TIMESASSIGN datosAsignacion
    (37) asignacion -> . LOCALVAR MODASSIGN datosAsignacion
    (38) asignacion -> . LOCALVAR EXPASSIGN datosAsignacion
    (28) loop -> . FOR LOCALVAR IN rango cuerpo END
    (47) estructurasDatos -> . hash
    (48) estructurasDatos -> . array
    (49) estructurasDatos -> . set
    (83) if -> . IF datosvarios operadores datosvarios cuerpo END
    (84) if -> . IF datosvarios operadores datosvarios cuerpo else
    (100) unless -> . UNLESS condiciones cuerpo ELSE cuerpo END
    (62) impresion -> . PUTS datos
    (63) impresion -> . PUTS LOCALVAR
    (64) impresion -> . PRINT datos
    (65) impresion -> . PRINT LOCALVAR
    (111) operacionSet -> . set DOT ADD LPARENTHESES datos RPARENTHESES
    (112) operacionSet -> . set DOT ADD LPARENTHESES tiposvariables RPARENTHESES
    (113) operacionSet -> . set DOT CLEAR
    (114) operacionSet -> . set DOT DELETE LPARENTHESES datos RPARENTHESES
    (115) operacionSet -> . set DOT DELETE LPARENTHESES tiposvariables RPARENTHESES
    (97) operacionarray -> . LOCALVAR LBRACKET INTEGER RBRACKET
    (98) operacionarray -> . LOCALVAR DOT TAKE LPARENTHESES INTEGER RPARENTHESES
    (99) operacionarray -> . LOCALVAR DOT DROP LPARENTHESES INTEGER RPARENTHESES
    (55) operacionHash -> . hash LBRACKET datos RBRACKET
    (56) operacionHash -> . hash LBRACKET datos RBRACKET EQUAL datos
    (57) operacionHash -> . hash DOT INCLUDE QUESTIONMARK LPARENTHESES datos RPARENTHESES
    (58) operacionHash -> . hash DOT DELETE LPARENTHESES datos RPARENTHESES
    (59) operacionHash -> . hash DOT KEYS
    (41) tiposvariables -> . VAR
    (42) tiposvariables -> . LOCALVAR
    (43) tiposvariables -> . CONSTANT
    (50) hash -> . LCURLYBRACKET elementoHash RCURLYBRACKET
    (81) array -> . tiposvariables EQUAL LBRACKET datosarray RBRACKET
    (82) array -> . tiposvariables EQUAL LBRACKET RBRACKET
    (105) set -> . SET LBRACKET elementoSet RBRACKET

    $end            reduce using rule 27 (cuerpo -> .)
    ELSE            reduce using rule 27 (cuerpo -> .)
    END             reduce using rule 27 (cuerpo -> .)
    RETURN          reduce using rule 27 (cuerpo -> .)
    LOCALVAR        shift and go to state 15
    FOR             shift and go to state 17
    IF              shift and go to state 21
    UNLESS          shift and go to state 22
    PUTS            shift and go to state 23
    PRINT           shift and go to state 24
    VAR             shift and go to state 25
    CONSTANT        shift and go to state 26
    LCURLYBRACKET   shift and go to state 27
    SET             shift and go to state 28

    operacionHash                  shift and go to state 13
    cuerpo                         shift and go to state 38
    declaracion                    shift and go to state 4
    asignacion                     shift and go to state 5
    loop                           shift and go to state 6
    estructurasDatos               shift and go to state 7
    if                             shift and go to state 8
    unless                         shift and go to state 9
    impresion                      shift and go to state 10
    operacionSet                   shift and go to state 11
    operacionarray                 shift and go to state 12
    tiposvariables                 shift and go to state 16
    hash                           shift and go to state 18
    array                          shift and go to state 19
    set                            shift and go to state 20

state 14

    (3) funcion -> DEF . LOCALVAR LPARENTHESES argumentos RPARENTHESES cuerpo END
    (4) funcion -> DEF . LOCALVAR LPARENTHESES argumentos RPARENTHESES cuerpo retornar END

    LOCALVAR        shift and go to state 39


state 15

    (33) asignacion -> LOCALVAR . PLUSASSIGN datosAsignacion
    (34) asignacion -> LOCALVAR . MINASSIGN datosAsignacion
    (35) asignacion -> LOCALVAR . DIVASSIGN datosAsignacion
    (36) asignacion -> LOCALVAR . TIMESASSIGN datosAsignacion
    (37) asignacion -> LOCALVAR . MODASSIGN datosAsignacion
    (38) asignacion -> LOCALVAR . EXPASSIGN datosAsignacion
    (97) operacionarray -> LOCALVAR . LBRACKET INTEGER RBRACKET
    (98) operacionarray -> LOCALVAR . DOT TAKE LPARENTHESES INTEGER RPARENTHESES
    (99) operacionarray -> LOCALVAR . DOT DROP LPARENTHESES INTEGER RPARENTHESES
    (42) tiposvariables -> LOCALVAR .

    PLUSASSIGN      shift and go to state 40
    MINASSIGN       shift and go to state 41
    DIVASSIGN       shift and go to state 42
    TIMESASSIGN     shift and go to state 43
    MODASSIGN       shift and go to state 44
    EXPASSIGN       shift and go to state 45
    LBRACKET        shift and go to state 46
    DOT             shift and go to state 47
    EQUAL           reduce using rule 42 (tiposvariables -> LOCALVAR .)


state 16

    (29) declaracion -> tiposvariables . EQUAL datos
    (30) declaracion -> tiposvariables . EQUAL estructurasDatos
    (31) declaracion -> tiposvariables . EQUAL expresion
    (32) declaracion -> tiposvariables . EQUAL declaracion
    (81) array -> tiposvariables . EQUAL LBRACKET datosarray RBRACKET
    (82) array -> tiposvariables . EQUAL LBRACKET RBRACKET

    EQUAL           shift and go to state 48


state 17

    (28) loop -> FOR . LOCALVAR IN rango cuerpo END

    LOCALVAR        shift and go to state 49


state 18

    (47) estructurasDatos -> hash .
    (55) operacionHash -> hash . LBRACKET datos RBRACKET
    (56) operacionHash -> hash . LBRACKET datos RBRACKET EQUAL datos
    (57) operacionHash -> hash . DOT INCLUDE QUESTIONMARK LPARENTHESES datos RPARENTHESES
    (58) operacionHash -> hash . DOT DELETE LPARENTHESES datos RPARENTHESES
    (59) operacionHash -> hash . DOT KEYS

    LOCALVAR        reduce using rule 47 (estructurasDatos -> hash .)
    FOR             reduce using rule 47 (estructurasDatos -> hash .)
    IF              reduce using rule 47 (estructurasDatos -> hash .)
    UNLESS          reduce using rule 47 (estructurasDatos -> hash .)
    PUTS            reduce using rule 47 (estructurasDatos -> hash .)
    PRINT           reduce using rule 47 (estructurasDatos -> hash .)
    VAR             reduce using rule 47 (estructurasDatos -> hash .)
    CONSTANT        reduce using rule 47 (estructurasDatos -> hash .)
    LCURLYBRACKET   reduce using rule 47 (estructurasDatos -> hash .)
    SET             reduce using rule 47 (estructurasDatos -> hash .)
    $end            reduce using rule 47 (estructurasDatos -> hash .)
    ELSE            reduce using rule 47 (estructurasDatos -> hash .)
    END             reduce using rule 47 (estructurasDatos -> hash .)
    RETURN          reduce using rule 47 (estructurasDatos -> hash .)
    LBRACKET        shift and go to state 50
    DOT             shift and go to state 51


state 19

    (48) estructurasDatos -> array .

    LOCALVAR        reduce using rule 48 (estructurasDatos -> array .)
    FOR             reduce using rule 48 (estructurasDatos -> array .)
    IF              reduce using rule 48 (estructurasDatos -> array .)
    UNLESS          reduce using rule 48 (estructurasDatos -> array .)
    PUTS            reduce using rule 48 (estructurasDatos -> array .)
    PRINT           reduce using rule 48 (estructurasDatos -> array .)
    VAR             reduce using rule 48 (estructurasDatos -> array .)
    CONSTANT        reduce using rule 48 (estructurasDatos -> array .)
    LCURLYBRACKET   reduce using rule 48 (estructurasDatos -> array .)
    SET             reduce using rule 48 (estructurasDatos -> array .)
    $end            reduce using rule 48 (estructurasDatos -> array .)
    ELSE            reduce using rule 48 (estructurasDatos -> array .)
    END             reduce using rule 48 (estructurasDatos -> array .)
    RETURN          reduce using rule 48 (estructurasDatos -> array .)


state 20

    (49) estructurasDatos -> set .
    (111) operacionSet -> set . DOT ADD LPARENTHESES datos RPARENTHESES
    (112) operacionSet -> set . DOT ADD LPARENTHESES tiposvariables RPARENTHESES
    (113) operacionSet -> set . DOT CLEAR
    (114) operacionSet -> set . DOT DELETE LPARENTHESES datos RPARENTHESES
    (115) operacionSet -> set . DOT DELETE LPARENTHESES tiposvariables RPARENTHESES

    LOCALVAR        reduce using rule 49 (estructurasDatos -> set .)
    FOR             reduce using rule 49 (estructurasDatos -> set .)
    IF              reduce using rule 49 (estructurasDatos -> set .)
    UNLESS          reduce using rule 49 (estructurasDatos -> set .)
    PUTS            reduce using rule 49 (estructurasDatos -> set .)
    PRINT           reduce using rule 49 (estructurasDatos -> set .)
    VAR             reduce using rule 49 (estructurasDatos -> set .)
    CONSTANT        reduce using rule 49 (estructurasDatos -> set .)
    LCURLYBRACKET   reduce using rule 49 (estructurasDatos -> set .)
    SET             reduce using rule 49 (estructurasDatos -> set .)
    $end            reduce using rule 49 (estructurasDatos -> set .)
    ELSE            reduce using rule 49 (estructurasDatos -> set .)
    END             reduce using rule 49 (estructurasDatos -> set .)
    RETURN          reduce using rule 49 (estructurasDatos -> set .)
    DOT             shift and go to state 52


state 21

    (83) if -> IF . datosvarios operadores datosvarios cuerpo END
    (84) if -> IF . datosvarios operadores datosvarios cuerpo else
    (93) datosvarios -> . datos
    (94) datosvarios -> . tiposvariables
    (44) datos -> . INTEGER
    (45) datos -> . FLOAT
    (46) datos -> . STRING
    (41) tiposvariables -> . VAR
    (42) tiposvariables -> . LOCALVAR
    (43) tiposvariables -> . CONSTANT

    INTEGER         shift and go to state 56
    FLOAT           shift and go to state 57
    STRING          shift and go to state 58
    VAR             shift and go to state 25
    LOCALVAR        shift and go to state 59
    CONSTANT        shift and go to state 26

    datosvarios                    shift and go to state 53
    datos                          shift and go to state 54
    tiposvariables                 shift and go to state 55

state 22

    (100) unless -> UNLESS . condiciones cuerpo ELSE cuerpo END
    (101) condiciones -> . tiposvariables operadores tiposvariables
    (102) condiciones -> . datos operadores datos
    (103) condiciones -> . tiposvariables operadores datos
    (104) condiciones -> . datos operadores tiposvariables
    (41) tiposvariables -> . VAR
    (42) tiposvariables -> . LOCALVAR
    (43) tiposvariables -> . CONSTANT
    (44) datos -> . INTEGER
    (45) datos -> . FLOAT
    (46) datos -> . STRING

    VAR             shift and go to state 25
    LOCALVAR        shift and go to state 59
    CONSTANT        shift and go to state 26
    INTEGER         shift and go to state 56
    FLOAT           shift and go to state 57
    STRING          shift and go to state 58

    condiciones                    shift and go to state 60
    tiposvariables                 shift and go to state 61
    datos                          shift and go to state 62

state 23

    (62) impresion -> PUTS . datos
    (63) impresion -> PUTS . LOCALVAR
    (44) datos -> . INTEGER
    (45) datos -> . FLOAT
    (46) datos -> . STRING

    LOCALVAR        shift and go to state 64
    INTEGER         shift and go to state 56
    FLOAT           shift and go to state 57
    STRING          shift and go to state 58

    datos                          shift and go to state 63

state 24

    (64) impresion -> PRINT . datos
    (65) impresion -> PRINT . LOCALVAR
    (44) datos -> . INTEGER
    (45) datos -> . FLOAT
    (46) datos -> . STRING

    LOCALVAR        shift and go to state 66
    INTEGER         shift and go to state 56
    FLOAT           shift and go to state 57
    STRING          shift and go to state 58

    datos                          shift and go to state 65

state 25

    (41) tiposvariables -> VAR .

    EQUAL           reduce using rule 41 (tiposvariables -> VAR .)
    DOUBLEEQUAL     reduce using rule 41 (tiposvariables -> VAR .)
    TRIPLEEQUAL     reduce using rule 41 (tiposvariables -> VAR .)
    GREATERTHAN     reduce using rule 41 (tiposvariables -> VAR .)
    NOTEQUAL        reduce using rule 41 (tiposvariables -> VAR .)
    LESSTHAN        reduce using rule 41 (tiposvariables -> VAR .)
    GREQUAL         reduce using rule 41 (tiposvariables -> VAR .)
    LEQUAL          reduce using rule 41 (tiposvariables -> VAR .)
    RBRACKET        reduce using rule 41 (tiposvariables -> VAR .)
    COMMA           reduce using rule 41 (tiposvariables -> VAR .)
    LOCALVAR        reduce using rule 41 (tiposvariables -> VAR .)
    FOR             reduce using rule 41 (tiposvariables -> VAR .)
    IF              reduce using rule 41 (tiposvariables -> VAR .)
    UNLESS          reduce using rule 41 (tiposvariables -> VAR .)
    PUTS            reduce using rule 41 (tiposvariables -> VAR .)
    PRINT           reduce using rule 41 (tiposvariables -> VAR .)
    VAR             reduce using rule 41 (tiposvariables -> VAR .)
    CONSTANT        reduce using rule 41 (tiposvariables -> VAR .)
    LCURLYBRACKET   reduce using rule 41 (tiposvariables -> VAR .)
    SET             reduce using rule 41 (tiposvariables -> VAR .)
    END             reduce using rule 41 (tiposvariables -> VAR .)
    ELSE            reduce using rule 41 (tiposvariables -> VAR .)
    RPARENTHESES    reduce using rule 41 (tiposvariables -> VAR .)


state 26

    (43) tiposvariables -> CONSTANT .

    EQUAL           reduce using rule 43 (tiposvariables -> CONSTANT .)
    DOUBLEEQUAL     reduce using rule 43 (tiposvariables -> CONSTANT .)
    TRIPLEEQUAL     reduce using rule 43 (tiposvariables -> CONSTANT .)
    GREATERTHAN     reduce using rule 43 (tiposvariables -> CONSTANT .)
    NOTEQUAL        reduce using rule 43 (tiposvariables -> CONSTANT .)
    LESSTHAN        reduce using rule 43 (tiposvariables -> CONSTANT .)
    GREQUAL         reduce using rule 43 (tiposvariables -> CONSTANT .)
    LEQUAL          reduce using rule 43 (tiposvariables -> CONSTANT .)
    RBRACKET        reduce using rule 43 (tiposvariables -> CONSTANT .)
    COMMA           reduce using rule 43 (tiposvariables -> CONSTANT .)
    LOCALVAR        reduce using rule 43 (tiposvariables -> CONSTANT .)
    FOR             reduce using rule 43 (tiposvariables -> CONSTANT .)
    IF              reduce using rule 43 (tiposvariables -> CONSTANT .)
    UNLESS          reduce using rule 43 (tiposvariables -> CONSTANT .)
    PUTS            reduce using rule 43 (tiposvariables -> CONSTANT .)
    PRINT           reduce using rule 43 (tiposvariables -> CONSTANT .)
    VAR             reduce using rule 43 (tiposvariables -> CONSTANT .)
    CONSTANT        reduce using rule 43 (tiposvariables -> CONSTANT .)
    LCURLYBRACKET   reduce using rule 43 (tiposvariables -> CONSTANT .)
    SET             reduce using rule 43 (tiposvariables -> CONSTANT .)
    END             reduce using rule 43 (tiposvariables -> CONSTANT .)
    ELSE            reduce using rule 43 (tiposvariables -> CONSTANT .)
    RPARENTHESES    reduce using rule 43 (tiposvariables -> CONSTANT .)


state 27

    (50) hash -> LCURLYBRACKET . elementoHash RCURLYBRACKET
    (51) elementoHash -> . datos EQUAL GREATERTHAN datos maselementos
    (52) elementoHash -> .
    (44) datos -> . INTEGER
    (45) datos -> . FLOAT
    (46) datos -> . STRING

    RCURLYBRACKET   reduce using rule 52 (elementoHash -> .)
    INTEGER         shift and go to state 56
    FLOAT           shift and go to state 57
    STRING          shift and go to state 58

    elementoHash                   shift and go to state 67
    datos                          shift and go to state 68

state 28

    (105) set -> SET . LBRACKET elementoSet RBRACKET

    LBRACKET        shift and go to state 69


state 29

    (17) cuerpo -> declaracion cuerpo .

    $end            reduce using rule 17 (cuerpo -> declaracion cuerpo .)
    ELSE            reduce using rule 17 (cuerpo -> declaracion cuerpo .)
    END             reduce using rule 17 (cuerpo -> declaracion cuerpo .)
    RETURN          reduce using rule 17 (cuerpo -> declaracion cuerpo .)


state 30

    (18) cuerpo -> asignacion cuerpo .

    $end            reduce using rule 18 (cuerpo -> asignacion cuerpo .)
    ELSE            reduce using rule 18 (cuerpo -> asignacion cuerpo .)
    END             reduce using rule 18 (cuerpo -> asignacion cuerpo .)
    RETURN          reduce using rule 18 (cuerpo -> asignacion cuerpo .)


state 31

    (19) cuerpo -> loop cuerpo .

    $end            reduce using rule 19 (cuerpo -> loop cuerpo .)
    ELSE            reduce using rule 19 (cuerpo -> loop cuerpo .)
    END             reduce using rule 19 (cuerpo -> loop cuerpo .)
    RETURN          reduce using rule 19 (cuerpo -> loop cuerpo .)


state 32

    (20) cuerpo -> estructurasDatos cuerpo .

    $end            reduce using rule 20 (cuerpo -> estructurasDatos cuerpo .)
    ELSE            reduce using rule 20 (cuerpo -> estructurasDatos cuerpo .)
    END             reduce using rule 20 (cuerpo -> estructurasDatos cuerpo .)
    RETURN          reduce using rule 20 (cuerpo -> estructurasDatos cuerpo .)


state 33

    (21) cuerpo -> if cuerpo .

    $end            reduce using rule 21 (cuerpo -> if cuerpo .)
    ELSE            reduce using rule 21 (cuerpo -> if cuerpo .)
    END             reduce using rule 21 (cuerpo -> if cuerpo .)
    RETURN          reduce using rule 21 (cuerpo -> if cuerpo .)


state 34

    (22) cuerpo -> unless cuerpo .

    $end            reduce using rule 22 (cuerpo -> unless cuerpo .)
    ELSE            reduce using rule 22 (cuerpo -> unless cuerpo .)
    END             reduce using rule 22 (cuerpo -> unless cuerpo .)
    RETURN          reduce using rule 22 (cuerpo -> unless cuerpo .)


state 35

    (23) cuerpo -> impresion cuerpo .

    $end            reduce using rule 23 (cuerpo -> impresion cuerpo .)
    ELSE            reduce using rule 23 (cuerpo -> impresion cuerpo .)
    END             reduce using rule 23 (cuerpo -> impresion cuerpo .)
    RETURN          reduce using rule 23 (cuerpo -> impresion cuerpo .)


state 36

    (24) cuerpo -> operacionSet cuerpo .

    $end            reduce using rule 24 (cuerpo -> operacionSet cuerpo .)
    ELSE            reduce using rule 24 (cuerpo -> operacionSet cuerpo .)
    END             reduce using rule 24 (cuerpo -> operacionSet cuerpo .)
    RETURN          reduce using rule 24 (cuerpo -> operacionSet cuerpo .)


state 37

    (25) cuerpo -> operacionarray cuerpo .

    $end            reduce using rule 25 (cuerpo -> operacionarray cuerpo .)
    ELSE            reduce using rule 25 (cuerpo -> operacionarray cuerpo .)
    END             reduce using rule 25 (cuerpo -> operacionarray cuerpo .)
    RETURN          reduce using rule 25 (cuerpo -> operacionarray cuerpo .)


state 38

    (26) cuerpo -> operacionHash cuerpo .

    $end            reduce using rule 26 (cuerpo -> operacionHash cuerpo .)
    ELSE            reduce using rule 26 (cuerpo -> operacionHash cuerpo .)
    END             reduce using rule 26 (cuerpo -> operacionHash cuerpo .)
    RETURN          reduce using rule 26 (cuerpo -> operacionHash cuerpo .)


state 39

    (3) funcion -> DEF LOCALVAR . LPARENTHESES argumentos RPARENTHESES cuerpo END
    (4) funcion -> DEF LOCALVAR . LPARENTHESES argumentos RPARENTHESES cuerpo retornar END

    LPARENTHESES    shift and go to state 70


state 40

    (33) asignacion -> LOCALVAR PLUSASSIGN . datosAsignacion
    (39) datosAsignacion -> . number
    (40) datosAsignacion -> . LOCALVAR
    (66) number -> . INTEGER
    (67) number -> . FLOAT

    LOCALVAR        shift and go to state 71
    INTEGER         shift and go to state 74
    FLOAT           shift and go to state 75

    datosAsignacion                shift and go to state 72
    number                         shift and go to state 73

state 41

    (34) asignacion -> LOCALVAR MINASSIGN . datosAsignacion
    (39) datosAsignacion -> . number
    (40) datosAsignacion -> . LOCALVAR
    (66) number -> . INTEGER
    (67) number -> . FLOAT

    LOCALVAR        shift and go to state 71
    INTEGER         shift and go to state 74
    FLOAT           shift and go to state 75

    datosAsignacion                shift and go to state 76
    number                         shift and go to state 73

state 42

    (35) asignacion -> LOCALVAR DIVASSIGN . datosAsignacion
    (39) datosAsignacion -> . number
    (40) datosAsignacion -> . LOCALVAR
    (66) number -> . INTEGER
    (67) number -> . FLOAT

    LOCALVAR        shift and go to state 71
    INTEGER         shift and go to state 74
    FLOAT           shift and go to state 75

    datosAsignacion                shift and go to state 77
    number                         shift and go to state 73

state 43

    (36) asignacion -> LOCALVAR TIMESASSIGN . datosAsignacion
    (39) datosAsignacion -> . number
    (40) datosAsignacion -> . LOCALVAR
    (66) number -> . INTEGER
    (67) number -> . FLOAT

    LOCALVAR        shift and go to state 71
    INTEGER         shift and go to state 74
    FLOAT           shift and go to state 75

    datosAsignacion                shift and go to state 78
    number                         shift and go to state 73

state 44

    (37) asignacion -> LOCALVAR MODASSIGN . datosAsignacion
    (39) datosAsignacion -> . number
    (40) datosAsignacion -> . LOCALVAR
    (66) number -> . INTEGER
    (67) number -> . FLOAT

    LOCALVAR        shift and go to state 71
    INTEGER         shift and go to state 74
    FLOAT           shift and go to state 75

    datosAsignacion                shift and go to state 79
    number                         shift and go to state 73

state 45

    (38) asignacion -> LOCALVAR EXPASSIGN . datosAsignacion
    (39) datosAsignacion -> . number
    (40) datosAsignacion -> . LOCALVAR
    (66) number -> . INTEGER
    (67) number -> . FLOAT

    LOCALVAR        shift and go to state 71
    INTEGER         shift and go to state 74
    FLOAT           shift and go to state 75

    datosAsignacion                shift and go to state 80
    number                         shift and go to state 73

state 46

    (97) operacionarray -> LOCALVAR LBRACKET . INTEGER RBRACKET

    INTEGER         shift and go to state 81


state 47

    (98) operacionarray -> LOCALVAR DOT . TAKE LPARENTHESES INTEGER RPARENTHESES
    (99) operacionarray -> LOCALVAR DOT . DROP LPARENTHESES INTEGER RPARENTHESES

    TAKE            shift and go to state 82
    DROP            shift and go to state 83


state 48

    (29) declaracion -> tiposvariables EQUAL . datos
    (30) declaracion -> tiposvariables EQUAL . estructurasDatos
    (31) declaracion -> tiposvariables EQUAL . expresion
    (32) declaracion -> tiposvariables EQUAL . declaracion
    (81) array -> tiposvariables EQUAL . LBRACKET datosarray RBRACKET
    (82) array -> tiposvariables EQUAL . LBRACKET RBRACKET
    (44) datos -> . INTEGER
    (45) datos -> . FLOAT
    (46) datos -> . STRING
    (47) estructurasDatos -> . hash
    (48) estructurasDatos -> . array
    (49) estructurasDatos -> . set
    (68) expresion -> . operacion
    (69) expresion -> . LPARENTHESES operacion RPARENTHESES
    (70) expresion -> . LPARENTHESES operacion RPARENTHESES masoperaciones
    (29) declaracion -> . tiposvariables EQUAL datos
    (30) declaracion -> . tiposvariables EQUAL estructurasDatos
    (31) declaracion -> . tiposvariables EQUAL expresion
    (32) declaracion -> . tiposvariables EQUAL declaracion
    (50) hash -> . LCURLYBRACKET elementoHash RCURLYBRACKET
    (81) array -> . tiposvariables EQUAL LBRACKET datosarray RBRACKET
    (82) array -> . tiposvariables EQUAL LBRACKET RBRACKET
    (105) set -> . SET LBRACKET elementoSet RBRACKET
    (71) operacion -> . number operador number
    (72) operacion -> . operacion masoperaciones
    (41) tiposvariables -> . VAR
    (42) tiposvariables -> . LOCALVAR
    (43) tiposvariables -> . CONSTANT
    (66) number -> . INTEGER
    (67) number -> . FLOAT

    LBRACKET        shift and go to state 88
    INTEGER         shift and go to state 89
    FLOAT           shift and go to state 90
    STRING          shift and go to state 58
    LPARENTHESES    shift and go to state 94
    LCURLYBRACKET   shift and go to state 27
    SET             shift and go to state 28
    VAR             shift and go to state 25
    LOCALVAR        shift and go to state 59
    CONSTANT        shift and go to state 26

    tiposvariables                 shift and go to state 16
    datos                          shift and go to state 84
    estructurasDatos               shift and go to state 85
    expresion                      shift and go to state 86
    declaracion                    shift and go to state 87
    hash                           shift and go to state 91
    array                          shift and go to state 19
    set                            shift and go to state 92
    operacion                      shift and go to state 93
    number                         shift and go to state 95

state 49

    (28) loop -> FOR LOCALVAR . IN rango cuerpo END

    IN              shift and go to state 96


state 50

    (55) operacionHash -> hash LBRACKET . datos RBRACKET
    (56) operacionHash -> hash LBRACKET . datos RBRACKET EQUAL datos
    (44) datos -> . INTEGER
    (45) datos -> . FLOAT
    (46) datos -> . STRING

    INTEGER         shift and go to state 56
    FLOAT           shift and go to state 57
    STRING          shift and go to state 58

    datos                          shift and go to state 97

state 51

    (57) operacionHash -> hash DOT . INCLUDE QUESTIONMARK LPARENTHESES datos RPARENTHESES
    (58) operacionHash -> hash DOT . DELETE LPARENTHESES datos RPARENTHESES
    (59) operacionHash -> hash DOT . KEYS

    INCLUDE         shift and go to state 98
    DELETE          shift and go to state 99
    KEYS            shift and go to state 100


state 52

    (111) operacionSet -> set DOT . ADD LPARENTHESES datos RPARENTHESES
    (112) operacionSet -> set DOT . ADD LPARENTHESES tiposvariables RPARENTHESES
    (113) operacionSet -> set DOT . CLEAR
    (114) operacionSet -> set DOT . DELETE LPARENTHESES datos RPARENTHESES
    (115) operacionSet -> set DOT . DELETE LPARENTHESES tiposvariables RPARENTHESES

    ADD             shift and go to state 101
    CLEAR           shift and go to state 102
    DELETE          shift and go to state 103


state 53

    (83) if -> IF datosvarios . operadores datosvarios cuerpo END
    (84) if -> IF datosvarios . operadores datosvarios cuerpo else
    (86) operadores -> . DOUBLEEQUAL
    (87) operadores -> . TRIPLEEQUAL
    (88) operadores -> . GREATERTHAN
    (89) operadores -> . NOTEQUAL
    (90) operadores -> . LESSTHAN
    (91) operadores -> . GREQUAL
    (92) operadores -> . LEQUAL

    DOUBLEEQUAL     shift and go to state 105
    TRIPLEEQUAL     shift and go to state 106
    GREATERTHAN     shift and go to state 107
    NOTEQUAL        shift and go to state 108
    LESSTHAN        shift and go to state 109
    GREQUAL         shift and go to state 110
    LEQUAL          shift and go to state 111

    operadores                     shift and go to state 104

state 54

    (93) datosvarios -> datos .

    DOUBLEEQUAL     reduce using rule 93 (datosvarios -> datos .)
    TRIPLEEQUAL     reduce using rule 93 (datosvarios -> datos .)
    GREATERTHAN     reduce using rule 93 (datosvarios -> datos .)
    NOTEQUAL        reduce using rule 93 (datosvarios -> datos .)
    LESSTHAN        reduce using rule 93 (datosvarios -> datos .)
    GREQUAL         reduce using rule 93 (datosvarios -> datos .)
    LEQUAL          reduce using rule 93 (datosvarios -> datos .)
    RBRACKET        reduce using rule 93 (datosvarios -> datos .)
    COMMA           reduce using rule 93 (datosvarios -> datos .)
    LOCALVAR        reduce using rule 93 (datosvarios -> datos .)
    FOR             reduce using rule 93 (datosvarios -> datos .)
    IF              reduce using rule 93 (datosvarios -> datos .)
    UNLESS          reduce using rule 93 (datosvarios -> datos .)
    PUTS            reduce using rule 93 (datosvarios -> datos .)
    PRINT           reduce using rule 93 (datosvarios -> datos .)
    VAR             reduce using rule 93 (datosvarios -> datos .)
    CONSTANT        reduce using rule 93 (datosvarios -> datos .)
    LCURLYBRACKET   reduce using rule 93 (datosvarios -> datos .)
    SET             reduce using rule 93 (datosvarios -> datos .)
    END             reduce using rule 93 (datosvarios -> datos .)
    ELSE            reduce using rule 93 (datosvarios -> datos .)


state 55

    (94) datosvarios -> tiposvariables .

    DOUBLEEQUAL     reduce using rule 94 (datosvarios -> tiposvariables .)
    TRIPLEEQUAL     reduce using rule 94 (datosvarios -> tiposvariables .)
    GREATERTHAN     reduce using rule 94 (datosvarios -> tiposvariables .)
    NOTEQUAL        reduce using rule 94 (datosvarios -> tiposvariables .)
    LESSTHAN        reduce using rule 94 (datosvarios -> tiposvariables .)
    GREQUAL         reduce using rule 94 (datosvarios -> tiposvariables .)
    LEQUAL          reduce using rule 94 (datosvarios -> tiposvariables .)
    RBRACKET        reduce using rule 94 (datosvarios -> tiposvariables .)
    COMMA           reduce using rule 94 (datosvarios -> tiposvariables .)
    LOCALVAR        reduce using rule 94 (datosvarios -> tiposvariables .)
    FOR             reduce using rule 94 (datosvarios -> tiposvariables .)
    IF              reduce using rule 94 (datosvarios -> tiposvariables .)
    UNLESS          reduce using rule 94 (datosvarios -> tiposvariables .)
    PUTS            reduce using rule 94 (datosvarios -> tiposvariables .)
    PRINT           reduce using rule 94 (datosvarios -> tiposvariables .)
    VAR             reduce using rule 94 (datosvarios -> tiposvariables .)
    CONSTANT        reduce using rule 94 (datosvarios -> tiposvariables .)
    LCURLYBRACKET   reduce using rule 94 (datosvarios -> tiposvariables .)
    SET             reduce using rule 94 (datosvarios -> tiposvariables .)
    END             reduce using rule 94 (datosvarios -> tiposvariables .)
    ELSE            reduce using rule 94 (datosvarios -> tiposvariables .)


state 56

    (44) datos -> INTEGER .

    DOUBLEEQUAL     reduce using rule 44 (datos -> INTEGER .)
    TRIPLEEQUAL     reduce using rule 44 (datos -> INTEGER .)
    GREATERTHAN     reduce using rule 44 (datos -> INTEGER .)
    NOTEQUAL        reduce using rule 44 (datos -> INTEGER .)
    LESSTHAN        reduce using rule 44 (datos -> INTEGER .)
    GREQUAL         reduce using rule 44 (datos -> INTEGER .)
    LEQUAL          reduce using rule 44 (datos -> INTEGER .)
    LOCALVAR        reduce using rule 44 (datos -> INTEGER .)
    FOR             reduce using rule 44 (datos -> INTEGER .)
    IF              reduce using rule 44 (datos -> INTEGER .)
    UNLESS          reduce using rule 44 (datos -> INTEGER .)
    PUTS            reduce using rule 44 (datos -> INTEGER .)
    PRINT           reduce using rule 44 (datos -> INTEGER .)
    VAR             reduce using rule 44 (datos -> INTEGER .)
    CONSTANT        reduce using rule 44 (datos -> INTEGER .)
    LCURLYBRACKET   reduce using rule 44 (datos -> INTEGER .)
    SET             reduce using rule 44 (datos -> INTEGER .)
    $end            reduce using rule 44 (datos -> INTEGER .)
    ELSE            reduce using rule 44 (datos -> INTEGER .)
    END             reduce using rule 44 (datos -> INTEGER .)
    RETURN          reduce using rule 44 (datos -> INTEGER .)
    EQUAL           reduce using rule 44 (datos -> INTEGER .)
    RBRACKET        reduce using rule 44 (datos -> INTEGER .)
    COMMA           reduce using rule 44 (datos -> INTEGER .)
    RPARENTHESES    reduce using rule 44 (datos -> INTEGER .)
    RCURLYBRACKET   reduce using rule 44 (datos -> INTEGER .)


state 57

    (45) datos -> FLOAT .

    DOUBLEEQUAL     reduce using rule 45 (datos -> FLOAT .)
    TRIPLEEQUAL     reduce using rule 45 (datos -> FLOAT .)
    GREATERTHAN     reduce using rule 45 (datos -> FLOAT .)
    NOTEQUAL        reduce using rule 45 (datos -> FLOAT .)
    LESSTHAN        reduce using rule 45 (datos -> FLOAT .)
    GREQUAL         reduce using rule 45 (datos -> FLOAT .)
    LEQUAL          reduce using rule 45 (datos -> FLOAT .)
    LOCALVAR        reduce using rule 45 (datos -> FLOAT .)
    FOR             reduce using rule 45 (datos -> FLOAT .)
    IF              reduce using rule 45 (datos -> FLOAT .)
    UNLESS          reduce using rule 45 (datos -> FLOAT .)
    PUTS            reduce using rule 45 (datos -> FLOAT .)
    PRINT           reduce using rule 45 (datos -> FLOAT .)
    VAR             reduce using rule 45 (datos -> FLOAT .)
    CONSTANT        reduce using rule 45 (datos -> FLOAT .)
    LCURLYBRACKET   reduce using rule 45 (datos -> FLOAT .)
    SET             reduce using rule 45 (datos -> FLOAT .)
    $end            reduce using rule 45 (datos -> FLOAT .)
    ELSE            reduce using rule 45 (datos -> FLOAT .)
    END             reduce using rule 45 (datos -> FLOAT .)
    RETURN          reduce using rule 45 (datos -> FLOAT .)
    EQUAL           reduce using rule 45 (datos -> FLOAT .)
    RBRACKET        reduce using rule 45 (datos -> FLOAT .)
    COMMA           reduce using rule 45 (datos -> FLOAT .)
    RPARENTHESES    reduce using rule 45 (datos -> FLOAT .)
    RCURLYBRACKET   reduce using rule 45 (datos -> FLOAT .)


state 58

    (46) datos -> STRING .

    DOUBLEEQUAL     reduce using rule 46 (datos -> STRING .)
    TRIPLEEQUAL     reduce using rule 46 (datos -> STRING .)
    GREATERTHAN     reduce using rule 46 (datos -> STRING .)
    NOTEQUAL        reduce using rule 46 (datos -> STRING .)
    LESSTHAN        reduce using rule 46 (datos -> STRING .)
    GREQUAL         reduce using rule 46 (datos -> STRING .)
    LEQUAL          reduce using rule 46 (datos -> STRING .)
    LOCALVAR        reduce using rule 46 (datos -> STRING .)
    FOR             reduce using rule 46 (datos -> STRING .)
    IF              reduce using rule 46 (datos -> STRING .)
    UNLESS          reduce using rule 46 (datos -> STRING .)
    PUTS            reduce using rule 46 (datos -> STRING .)
    PRINT           reduce using rule 46 (datos -> STRING .)
    VAR             reduce using rule 46 (datos -> STRING .)
    CONSTANT        reduce using rule 46 (datos -> STRING .)
    LCURLYBRACKET   reduce using rule 46 (datos -> STRING .)
    SET             reduce using rule 46 (datos -> STRING .)
    $end            reduce using rule 46 (datos -> STRING .)
    ELSE            reduce using rule 46 (datos -> STRING .)
    END             reduce using rule 46 (datos -> STRING .)
    RETURN          reduce using rule 46 (datos -> STRING .)
    EQUAL           reduce using rule 46 (datos -> STRING .)
    RBRACKET        reduce using rule 46 (datos -> STRING .)
    COMMA           reduce using rule 46 (datos -> STRING .)
    RPARENTHESES    reduce using rule 46 (datos -> STRING .)
    RCURLYBRACKET   reduce using rule 46 (datos -> STRING .)


state 59

    (42) tiposvariables -> LOCALVAR .

    DOUBLEEQUAL     reduce using rule 42 (tiposvariables -> LOCALVAR .)
    TRIPLEEQUAL     reduce using rule 42 (tiposvariables -> LOCALVAR .)
    GREATERTHAN     reduce using rule 42 (tiposvariables -> LOCALVAR .)
    NOTEQUAL        reduce using rule 42 (tiposvariables -> LOCALVAR .)
    LESSTHAN        reduce using rule 42 (tiposvariables -> LOCALVAR .)
    GREQUAL         reduce using rule 42 (tiposvariables -> LOCALVAR .)
    LEQUAL          reduce using rule 42 (tiposvariables -> LOCALVAR .)
    EQUAL           reduce using rule 42 (tiposvariables -> LOCALVAR .)
    RBRACKET        reduce using rule 42 (tiposvariables -> LOCALVAR .)
    COMMA           reduce using rule 42 (tiposvariables -> LOCALVAR .)
    LOCALVAR        reduce using rule 42 (tiposvariables -> LOCALVAR .)
    FOR             reduce using rule 42 (tiposvariables -> LOCALVAR .)
    IF              reduce using rule 42 (tiposvariables -> LOCALVAR .)
    UNLESS          reduce using rule 42 (tiposvariables -> LOCALVAR .)
    PUTS            reduce using rule 42 (tiposvariables -> LOCALVAR .)
    PRINT           reduce using rule 42 (tiposvariables -> LOCALVAR .)
    VAR             reduce using rule 42 (tiposvariables -> LOCALVAR .)
    CONSTANT        reduce using rule 42 (tiposvariables -> LOCALVAR .)
    LCURLYBRACKET   reduce using rule 42 (tiposvariables -> LOCALVAR .)
    SET             reduce using rule 42 (tiposvariables -> LOCALVAR .)
    END             reduce using rule 42 (tiposvariables -> LOCALVAR .)
    ELSE            reduce using rule 42 (tiposvariables -> LOCALVAR .)
    RPARENTHESES    reduce using rule 42 (tiposvariables -> LOCALVAR .)


state 60

    (100) unless -> UNLESS condiciones . cuerpo ELSE cuerpo END
    (17) cuerpo -> . declaracion cuerpo
    (18) cuerpo -> . asignacion cuerpo
    (19) cuerpo -> . loop cuerpo
    (20) cuerpo -> . estructurasDatos cuerpo
    (21) cuerpo -> . if cuerpo
    (22) cuerpo -> . unless cuerpo
    (23) cuerpo -> . impresion cuerpo
    (24) cuerpo -> . operacionSet cuerpo
    (25) cuerpo -> . operacionarray cuerpo
    (26) cuerpo -> . operacionHash cuerpo
    (27) cuerpo -> .
    (29) declaracion -> . tiposvariables EQUAL datos
    (30) declaracion -> . tiposvariables EQUAL estructurasDatos
    (31) declaracion -> . tiposvariables EQUAL expresion
    (32) declaracion -> . tiposvariables EQUAL declaracion
    (33) asignacion -> . LOCALVAR PLUSASSIGN datosAsignacion
    (34) asignacion -> . LOCALVAR MINASSIGN datosAsignacion
    (35) asignacion -> . LOCALVAR DIVASSIGN datosAsignacion
    (36) asignacion -> . LOCALVAR TIMESASSIGN datosAsignacion
    (37) asignacion -> . LOCALVAR MODASSIGN datosAsignacion
    (38) asignacion -> . LOCALVAR EXPASSIGN datosAsignacion
    (28) loop -> . FOR LOCALVAR IN rango cuerpo END
    (47) estructurasDatos -> . hash
    (48) estructurasDatos -> . array
    (49) estructurasDatos -> . set
    (83) if -> . IF datosvarios operadores datosvarios cuerpo END
    (84) if -> . IF datosvarios operadores datosvarios cuerpo else
    (100) unless -> . UNLESS condiciones cuerpo ELSE cuerpo END
    (62) impresion -> . PUTS datos
    (63) impresion -> . PUTS LOCALVAR
    (64) impresion -> . PRINT datos
    (65) impresion -> . PRINT LOCALVAR
    (111) operacionSet -> . set DOT ADD LPARENTHESES datos RPARENTHESES
    (112) operacionSet -> . set DOT ADD LPARENTHESES tiposvariables RPARENTHESES
    (113) operacionSet -> . set DOT CLEAR
    (114) operacionSet -> . set DOT DELETE LPARENTHESES datos RPARENTHESES
    (115) operacionSet -> . set DOT DELETE LPARENTHESES tiposvariables RPARENTHESES
    (97) operacionarray -> . LOCALVAR LBRACKET INTEGER RBRACKET
    (98) operacionarray -> . LOCALVAR DOT TAKE LPARENTHESES INTEGER RPARENTHESES
    (99) operacionarray -> . LOCALVAR DOT DROP LPARENTHESES INTEGER RPARENTHESES
    (55) operacionHash -> . hash LBRACKET datos RBRACKET
    (56) operacionHash -> . hash LBRACKET datos RBRACKET EQUAL datos
    (57) operacionHash -> . hash DOT INCLUDE QUESTIONMARK LPARENTHESES datos RPARENTHESES
    (58) operacionHash -> . hash DOT DELETE LPARENTHESES datos RPARENTHESES
    (59) operacionHash -> . hash DOT KEYS
    (41) tiposvariables -> . VAR
    (42) tiposvariables -> . LOCALVAR
    (43) tiposvariables -> . CONSTANT
    (50) hash -> . LCURLYBRACKET elementoHash RCURLYBRACKET
    (81) array -> . tiposvariables EQUAL LBRACKET datosarray RBRACKET
    (82) array -> . tiposvariables EQUAL LBRACKET RBRACKET
    (105) set -> . SET LBRACKET elementoSet RBRACKET

    ELSE            reduce using rule 27 (cuerpo -> .)
    LOCALVAR        shift and go to state 15
    FOR             shift and go to state 17
    IF              shift and go to state 21
    UNLESS          shift and go to state 22
    PUTS            shift and go to state 23
    PRINT           shift and go to state 24
    VAR             shift and go to state 25
    CONSTANT        shift and go to state 26
    LCURLYBRACKET   shift and go to state 27
    SET             shift and go to state 28

    cuerpo                         shift and go to state 112
    declaracion                    shift and go to state 4
    asignacion                     shift and go to state 5
    loop                           shift and go to state 6
    estructurasDatos               shift and go to state 7
    if                             shift and go to state 8
    unless                         shift and go to state 9
    impresion                      shift and go to state 10
    operacionSet                   shift and go to state 11
    operacionarray                 shift and go to state 12
    operacionHash                  shift and go to state 13
    tiposvariables                 shift and go to state 16
    hash                           shift and go to state 18
    array                          shift and go to state 19
    set                            shift and go to state 20

state 61

    (101) condiciones -> tiposvariables . operadores tiposvariables
    (103) condiciones -> tiposvariables . operadores datos
    (86) operadores -> . DOUBLEEQUAL
    (87) operadores -> . TRIPLEEQUAL
    (88) operadores -> . GREATERTHAN
    (89) operadores -> . NOTEQUAL
    (90) operadores -> . LESSTHAN
    (91) operadores -> . GREQUAL
    (92) operadores -> . LEQUAL

    DOUBLEEQUAL     shift and go to state 105
    TRIPLEEQUAL     shift and go to state 106
    GREATERTHAN     shift and go to state 107
    NOTEQUAL        shift and go to state 108
    LESSTHAN        shift and go to state 109
    GREQUAL         shift and go to state 110
    LEQUAL          shift and go to state 111

    operadores                     shift and go to state 113

state 62

    (102) condiciones -> datos . operadores datos
    (104) condiciones -> datos . operadores tiposvariables
    (86) operadores -> . DOUBLEEQUAL
    (87) operadores -> . TRIPLEEQUAL
    (88) operadores -> . GREATERTHAN
    (89) operadores -> . NOTEQUAL
    (90) operadores -> . LESSTHAN
    (91) operadores -> . GREQUAL
    (92) operadores -> . LEQUAL

    DOUBLEEQUAL     shift and go to state 105
    TRIPLEEQUAL     shift and go to state 106
    GREATERTHAN     shift and go to state 107
    NOTEQUAL        shift and go to state 108
    LESSTHAN        shift and go to state 109
    GREQUAL         shift and go to state 110
    LEQUAL          shift and go to state 111

    operadores                     shift and go to state 114

state 63

    (62) impresion -> PUTS datos .

    LOCALVAR        reduce using rule 62 (impresion -> PUTS datos .)
    FOR             reduce using rule 62 (impresion -> PUTS datos .)
    IF              reduce using rule 62 (impresion -> PUTS datos .)
    UNLESS          reduce using rule 62 (impresion -> PUTS datos .)
    PUTS            reduce using rule 62 (impresion -> PUTS datos .)
    PRINT           reduce using rule 62 (impresion -> PUTS datos .)
    VAR             reduce using rule 62 (impresion -> PUTS datos .)
    CONSTANT        reduce using rule 62 (impresion -> PUTS datos .)
    LCURLYBRACKET   reduce using rule 62 (impresion -> PUTS datos .)
    SET             reduce using rule 62 (impresion -> PUTS datos .)
    $end            reduce using rule 62 (impresion -> PUTS datos .)
    ELSE            reduce using rule 62 (impresion -> PUTS datos .)
    END             reduce using rule 62 (impresion -> PUTS datos .)
    RETURN          reduce using rule 62 (impresion -> PUTS datos .)


state 64

    (63) impresion -> PUTS LOCALVAR .

    LOCALVAR        reduce using rule 63 (impresion -> PUTS LOCALVAR .)
    FOR             reduce using rule 63 (impresion -> PUTS LOCALVAR .)
    IF              reduce using rule 63 (impresion -> PUTS LOCALVAR .)
    UNLESS          reduce using rule 63 (impresion -> PUTS LOCALVAR .)
    PUTS            reduce using rule 63 (impresion -> PUTS LOCALVAR .)
    PRINT           reduce using rule 63 (impresion -> PUTS LOCALVAR .)
    VAR             reduce using rule 63 (impresion -> PUTS LOCALVAR .)
    CONSTANT        reduce using rule 63 (impresion -> PUTS LOCALVAR .)
    LCURLYBRACKET   reduce using rule 63 (impresion -> PUTS LOCALVAR .)
    SET             reduce using rule 63 (impresion -> PUTS LOCALVAR .)
    $end            reduce using rule 63 (impresion -> PUTS LOCALVAR .)
    ELSE            reduce using rule 63 (impresion -> PUTS LOCALVAR .)
    END             reduce using rule 63 (impresion -> PUTS LOCALVAR .)
    RETURN          reduce using rule 63 (impresion -> PUTS LOCALVAR .)


state 65

    (64) impresion -> PRINT datos .

    LOCALVAR        reduce using rule 64 (impresion -> PRINT datos .)
    FOR             reduce using rule 64 (impresion -> PRINT datos .)
    IF              reduce using rule 64 (impresion -> PRINT datos .)
    UNLESS          reduce using rule 64 (impresion -> PRINT datos .)
    PUTS            reduce using rule 64 (impresion -> PRINT datos .)
    PRINT           reduce using rule 64 (impresion -> PRINT datos .)
    VAR             reduce using rule 64 (impresion -> PRINT datos .)
    CONSTANT        reduce using rule 64 (impresion -> PRINT datos .)
    LCURLYBRACKET   reduce using rule 64 (impresion -> PRINT datos .)
    SET             reduce using rule 64 (impresion -> PRINT datos .)
    $end            reduce using rule 64 (impresion -> PRINT datos .)
    ELSE            reduce using rule 64 (impresion -> PRINT datos .)
    END             reduce using rule 64 (impresion -> PRINT datos .)
    RETURN          reduce using rule 64 (impresion -> PRINT datos .)


state 66

    (65) impresion -> PRINT LOCALVAR .

    LOCALVAR        reduce using rule 65 (impresion -> PRINT LOCALVAR .)
    FOR             reduce using rule 65 (impresion -> PRINT LOCALVAR .)
    IF              reduce using rule 65 (impresion -> PRINT LOCALVAR .)
    UNLESS          reduce using rule 65 (impresion -> PRINT LOCALVAR .)
    PUTS            reduce using rule 65 (impresion -> PRINT LOCALVAR .)
    PRINT           reduce using rule 65 (impresion -> PRINT LOCALVAR .)
    VAR             reduce using rule 65 (impresion -> PRINT LOCALVAR .)
    CONSTANT        reduce using rule 65 (impresion -> PRINT LOCALVAR .)
    LCURLYBRACKET   reduce using rule 65 (impresion -> PRINT LOCALVAR .)
    SET             reduce using rule 65 (impresion -> PRINT LOCALVAR .)
    $end            reduce using rule 65 (impresion -> PRINT LOCALVAR .)
    ELSE            reduce using rule 65 (impresion -> PRINT LOCALVAR .)
    END             reduce using rule 65 (impresion -> PRINT LOCALVAR .)
    RETURN          reduce using rule 65 (impresion -> PRINT LOCALVAR .)


state 67

    (50) hash -> LCURLYBRACKET elementoHash . RCURLYBRACKET

    RCURLYBRACKET   shift and go to state 115


state 68

    (51) elementoHash -> datos . EQUAL GREATERTHAN datos maselementos

    EQUAL           shift and go to state 116


state 69

    (105) set -> SET LBRACKET . elementoSet RBRACKET
    (106) elementoSet -> .
    (107) elementoSet -> . datos
    (108) elementoSet -> . datos otroElemento
    (44) datos -> . INTEGER
    (45) datos -> . FLOAT
    (46) datos -> . STRING

    RBRACKET        reduce using rule 106 (elementoSet -> .)
    INTEGER         shift and go to state 56
    FLOAT           shift and go to state 57
    STRING          shift and go to state 58

    elementoSet                    shift and go to state 117
    datos                          shift and go to state 118

state 70

    (3) funcion -> DEF LOCALVAR LPARENTHESES . argumentos RPARENTHESES cuerpo END
    (4) funcion -> DEF LOCALVAR LPARENTHESES . argumentos RPARENTHESES cuerpo retornar END
    (5) argumentos -> . variosargumentos
    (6) argumentos -> . MULTIPLY LOCALVAR
    (7) argumentos -> . TWOSTARS LOCALVAR
    (8) argumentos -> . LOCALVAR EQUAL LCURLYBRACKET RCURLYBRACKET
    (9) argumentos -> . LOCALVAR TWOPOINTS datos
    (10) variosargumentos -> . LOCALVAR
    (11) variosargumentos -> . LOCALVAR EQUAL datos
    (12) variosargumentos -> . LOCALVAR masargumentos
    (13) variosargumentos -> . LOCALVAR EQUAL datos masargumentos

    MULTIPLY        shift and go to state 122
    TWOSTARS        shift and go to state 123
    LOCALVAR        shift and go to state 119

    argumentos                     shift and go to state 120
    variosargumentos               shift and go to state 121

state 71

    (40) datosAsignacion -> LOCALVAR .

    LOCALVAR        reduce using rule 40 (datosAsignacion -> LOCALVAR .)
    FOR             reduce using rule 40 (datosAsignacion -> LOCALVAR .)
    IF              reduce using rule 40 (datosAsignacion -> LOCALVAR .)
    UNLESS          reduce using rule 40 (datosAsignacion -> LOCALVAR .)
    PUTS            reduce using rule 40 (datosAsignacion -> LOCALVAR .)
    PRINT           reduce using rule 40 (datosAsignacion -> LOCALVAR .)
    VAR             reduce using rule 40 (datosAsignacion -> LOCALVAR .)
    CONSTANT        reduce using rule 40 (datosAsignacion -> LOCALVAR .)
    LCURLYBRACKET   reduce using rule 40 (datosAsignacion -> LOCALVAR .)
    SET             reduce using rule 40 (datosAsignacion -> LOCALVAR .)
    $end            reduce using rule 40 (datosAsignacion -> LOCALVAR .)
    ELSE            reduce using rule 40 (datosAsignacion -> LOCALVAR .)
    END             reduce using rule 40 (datosAsignacion -> LOCALVAR .)
    RETURN          reduce using rule 40 (datosAsignacion -> LOCALVAR .)


state 72

    (33) asignacion -> LOCALVAR PLUSASSIGN datosAsignacion .

    LOCALVAR        reduce using rule 33 (asignacion -> LOCALVAR PLUSASSIGN datosAsignacion .)
    FOR             reduce using rule 33 (asignacion -> LOCALVAR PLUSASSIGN datosAsignacion .)
    IF              reduce using rule 33 (asignacion -> LOCALVAR PLUSASSIGN datosAsignacion .)
    UNLESS          reduce using rule 33 (asignacion -> LOCALVAR PLUSASSIGN datosAsignacion .)
    PUTS            reduce using rule 33 (asignacion -> LOCALVAR PLUSASSIGN datosAsignacion .)
    PRINT           reduce using rule 33 (asignacion -> LOCALVAR PLUSASSIGN datosAsignacion .)
    VAR             reduce using rule 33 (asignacion -> LOCALVAR PLUSASSIGN datosAsignacion .)
    CONSTANT        reduce using rule 33 (asignacion -> LOCALVAR PLUSASSIGN datosAsignacion .)
    LCURLYBRACKET   reduce using rule 33 (asignacion -> LOCALVAR PLUSASSIGN datosAsignacion .)
    SET             reduce using rule 33 (asignacion -> LOCALVAR PLUSASSIGN datosAsignacion .)
    $end            reduce using rule 33 (asignacion -> LOCALVAR PLUSASSIGN datosAsignacion .)
    ELSE            reduce using rule 33 (asignacion -> LOCALVAR PLUSASSIGN datosAsignacion .)
    END             reduce using rule 33 (asignacion -> LOCALVAR PLUSASSIGN datosAsignacion .)
    RETURN          reduce using rule 33 (asignacion -> LOCALVAR PLUSASSIGN datosAsignacion .)


state 73

    (39) datosAsignacion -> number .

    LOCALVAR        reduce using rule 39 (datosAsignacion -> number .)
    FOR             reduce using rule 39 (datosAsignacion -> number .)
    IF              reduce using rule 39 (datosAsignacion -> number .)
    UNLESS          reduce using rule 39 (datosAsignacion -> number .)
    PUTS            reduce using rule 39 (datosAsignacion -> number .)
    PRINT           reduce using rule 39 (datosAsignacion -> number .)
    VAR             reduce using rule 39 (datosAsignacion -> number .)
    CONSTANT        reduce using rule 39 (datosAsignacion -> number .)
    LCURLYBRACKET   reduce using rule 39 (datosAsignacion -> number .)
    SET             reduce using rule 39 (datosAsignacion -> number .)
    $end            reduce using rule 39 (datosAsignacion -> number .)
    ELSE            reduce using rule 39 (datosAsignacion -> number .)
    END             reduce using rule 39 (datosAsignacion -> number .)
    RETURN          reduce using rule 39 (datosAsignacion -> number .)


state 74

    (66) number -> INTEGER .

    LOCALVAR        reduce using rule 66 (number -> INTEGER .)
    FOR             reduce using rule 66 (number -> INTEGER .)
    IF              reduce using rule 66 (number -> INTEGER .)
    UNLESS          reduce using rule 66 (number -> INTEGER .)
    PUTS            reduce using rule 66 (number -> INTEGER .)
    PRINT           reduce using rule 66 (number -> INTEGER .)
    VAR             reduce using rule 66 (number -> INTEGER .)
    CONSTANT        reduce using rule 66 (number -> INTEGER .)
    LCURLYBRACKET   reduce using rule 66 (number -> INTEGER .)
    SET             reduce using rule 66 (number -> INTEGER .)
    $end            reduce using rule 66 (number -> INTEGER .)
    ELSE            reduce using rule 66 (number -> INTEGER .)
    END             reduce using rule 66 (number -> INTEGER .)
    RETURN          reduce using rule 66 (number -> INTEGER .)
    PLUS            reduce using rule 66 (number -> INTEGER .)
    MINUS           reduce using rule 66 (number -> INTEGER .)
    MULTIPLY        reduce using rule 66 (number -> INTEGER .)
    DIVIDE          reduce using rule 66 (number -> INTEGER .)
    PERCENTAGE      reduce using rule 66 (number -> INTEGER .)
    RPARENTHESES    reduce using rule 66 (number -> INTEGER .)


state 75

    (67) number -> FLOAT .

    LOCALVAR        reduce using rule 67 (number -> FLOAT .)
    FOR             reduce using rule 67 (number -> FLOAT .)
    IF              reduce using rule 67 (number -> FLOAT .)
    UNLESS          reduce using rule 67 (number -> FLOAT .)
    PUTS            reduce using rule 67 (number -> FLOAT .)
    PRINT           reduce using rule 67 (number -> FLOAT .)
    VAR             reduce using rule 67 (number -> FLOAT .)
    CONSTANT        reduce using rule 67 (number -> FLOAT .)
    LCURLYBRACKET   reduce using rule 67 (number -> FLOAT .)
    SET             reduce using rule 67 (number -> FLOAT .)
    $end            reduce using rule 67 (number -> FLOAT .)
    ELSE            reduce using rule 67 (number -> FLOAT .)
    END             reduce using rule 67 (number -> FLOAT .)
    RETURN          reduce using rule 67 (number -> FLOAT .)
    PLUS            reduce using rule 67 (number -> FLOAT .)
    MINUS           reduce using rule 67 (number -> FLOAT .)
    MULTIPLY        reduce using rule 67 (number -> FLOAT .)
    DIVIDE          reduce using rule 67 (number -> FLOAT .)
    PERCENTAGE      reduce using rule 67 (number -> FLOAT .)
    RPARENTHESES    reduce using rule 67 (number -> FLOAT .)


state 76

    (34) asignacion -> LOCALVAR MINASSIGN datosAsignacion .

    LOCALVAR        reduce using rule 34 (asignacion -> LOCALVAR MINASSIGN datosAsignacion .)
    FOR             reduce using rule 34 (asignacion -> LOCALVAR MINASSIGN datosAsignacion .)
    IF              reduce using rule 34 (asignacion -> LOCALVAR MINASSIGN datosAsignacion .)
    UNLESS          reduce using rule 34 (asignacion -> LOCALVAR MINASSIGN datosAsignacion .)
    PUTS            reduce using rule 34 (asignacion -> LOCALVAR MINASSIGN datosAsignacion .)
    PRINT           reduce using rule 34 (asignacion -> LOCALVAR MINASSIGN datosAsignacion .)
    VAR             reduce using rule 34 (asignacion -> LOCALVAR MINASSIGN datosAsignacion .)
    CONSTANT        reduce using rule 34 (asignacion -> LOCALVAR MINASSIGN datosAsignacion .)
    LCURLYBRACKET   reduce using rule 34 (asignacion -> LOCALVAR MINASSIGN datosAsignacion .)
    SET             reduce using rule 34 (asignacion -> LOCALVAR MINASSIGN datosAsignacion .)
    $end            reduce using rule 34 (asignacion -> LOCALVAR MINASSIGN datosAsignacion .)
    ELSE            reduce using rule 34 (asignacion -> LOCALVAR MINASSIGN datosAsignacion .)
    END             reduce using rule 34 (asignacion -> LOCALVAR MINASSIGN datosAsignacion .)
    RETURN          reduce using rule 34 (asignacion -> LOCALVAR MINASSIGN datosAsignacion .)


state 77

    (35) asignacion -> LOCALVAR DIVASSIGN datosAsignacion .

    LOCALVAR        reduce using rule 35 (asignacion -> LOCALVAR DIVASSIGN datosAsignacion .)
    FOR             reduce using rule 35 (asignacion -> LOCALVAR DIVASSIGN datosAsignacion .)
    IF              reduce using rule 35 (asignacion -> LOCALVAR DIVASSIGN datosAsignacion .)
    UNLESS          reduce using rule 35 (asignacion -> LOCALVAR DIVASSIGN datosAsignacion .)
    PUTS            reduce using rule 35 (asignacion -> LOCALVAR DIVASSIGN datosAsignacion .)
    PRINT           reduce using rule 35 (asignacion -> LOCALVAR DIVASSIGN datosAsignacion .)
    VAR             reduce using rule 35 (asignacion -> LOCALVAR DIVASSIGN datosAsignacion .)
    CONSTANT        reduce using rule 35 (asignacion -> LOCALVAR DIVASSIGN datosAsignacion .)
    LCURLYBRACKET   reduce using rule 35 (asignacion -> LOCALVAR DIVASSIGN datosAsignacion .)
    SET             reduce using rule 35 (asignacion -> LOCALVAR DIVASSIGN datosAsignacion .)
    $end            reduce using rule 35 (asignacion -> LOCALVAR DIVASSIGN datosAsignacion .)
    ELSE            reduce using rule 35 (asignacion -> LOCALVAR DIVASSIGN datosAsignacion .)
    END             reduce using rule 35 (asignacion -> LOCALVAR DIVASSIGN datosAsignacion .)
    RETURN          reduce using rule 35 (asignacion -> LOCALVAR DIVASSIGN datosAsignacion .)


state 78

    (36) asignacion -> LOCALVAR TIMESASSIGN datosAsignacion .

    LOCALVAR        reduce using rule 36 (asignacion -> LOCALVAR TIMESASSIGN datosAsignacion .)
    FOR             reduce using rule 36 (asignacion -> LOCALVAR TIMESASSIGN datosAsignacion .)
    IF              reduce using rule 36 (asignacion -> LOCALVAR TIMESASSIGN datosAsignacion .)
    UNLESS          reduce using rule 36 (asignacion -> LOCALVAR TIMESASSIGN datosAsignacion .)
    PUTS            reduce using rule 36 (asignacion -> LOCALVAR TIMESASSIGN datosAsignacion .)
    PRINT           reduce using rule 36 (asignacion -> LOCALVAR TIMESASSIGN datosAsignacion .)
    VAR             reduce using rule 36 (asignacion -> LOCALVAR TIMESASSIGN datosAsignacion .)
    CONSTANT        reduce using rule 36 (asignacion -> LOCALVAR TIMESASSIGN datosAsignacion .)
    LCURLYBRACKET   reduce using rule 36 (asignacion -> LOCALVAR TIMESASSIGN datosAsignacion .)
    SET             reduce using rule 36 (asignacion -> LOCALVAR TIMESASSIGN datosAsignacion .)
    $end            reduce using rule 36 (asignacion -> LOCALVAR TIMESASSIGN datosAsignacion .)
    ELSE            reduce using rule 36 (asignacion -> LOCALVAR TIMESASSIGN datosAsignacion .)
    END             reduce using rule 36 (asignacion -> LOCALVAR TIMESASSIGN datosAsignacion .)
    RETURN          reduce using rule 36 (asignacion -> LOCALVAR TIMESASSIGN datosAsignacion .)


state 79

    (37) asignacion -> LOCALVAR MODASSIGN datosAsignacion .

    LOCALVAR        reduce using rule 37 (asignacion -> LOCALVAR MODASSIGN datosAsignacion .)
    FOR             reduce using rule 37 (asignacion -> LOCALVAR MODASSIGN datosAsignacion .)
    IF              reduce using rule 37 (asignacion -> LOCALVAR MODASSIGN datosAsignacion .)
    UNLESS          reduce using rule 37 (asignacion -> LOCALVAR MODASSIGN datosAsignacion .)
    PUTS            reduce using rule 37 (asignacion -> LOCALVAR MODASSIGN datosAsignacion .)
    PRINT           reduce using rule 37 (asignacion -> LOCALVAR MODASSIGN datosAsignacion .)
    VAR             reduce using rule 37 (asignacion -> LOCALVAR MODASSIGN datosAsignacion .)
    CONSTANT        reduce using rule 37 (asignacion -> LOCALVAR MODASSIGN datosAsignacion .)
    LCURLYBRACKET   reduce using rule 37 (asignacion -> LOCALVAR MODASSIGN datosAsignacion .)
    SET             reduce using rule 37 (asignacion -> LOCALVAR MODASSIGN datosAsignacion .)
    $end            reduce using rule 37 (asignacion -> LOCALVAR MODASSIGN datosAsignacion .)
    ELSE            reduce using rule 37 (asignacion -> LOCALVAR MODASSIGN datosAsignacion .)
    END             reduce using rule 37 (asignacion -> LOCALVAR MODASSIGN datosAsignacion .)
    RETURN          reduce using rule 37 (asignacion -> LOCALVAR MODASSIGN datosAsignacion .)


state 80

    (38) asignacion -> LOCALVAR EXPASSIGN datosAsignacion .

    LOCALVAR        reduce using rule 38 (asignacion -> LOCALVAR EXPASSIGN datosAsignacion .)
    FOR             reduce using rule 38 (asignacion -> LOCALVAR EXPASSIGN datosAsignacion .)
    IF              reduce using rule 38 (asignacion -> LOCALVAR EXPASSIGN datosAsignacion .)
    UNLESS          reduce using rule 38 (asignacion -> LOCALVAR EXPASSIGN datosAsignacion .)
    PUTS            reduce using rule 38 (asignacion -> LOCALVAR EXPASSIGN datosAsignacion .)
    PRINT           reduce using rule 38 (asignacion -> LOCALVAR EXPASSIGN datosAsignacion .)
    VAR             reduce using rule 38 (asignacion -> LOCALVAR EXPASSIGN datosAsignacion .)
    CONSTANT        reduce using rule 38 (asignacion -> LOCALVAR EXPASSIGN datosAsignacion .)
    LCURLYBRACKET   reduce using rule 38 (asignacion -> LOCALVAR EXPASSIGN datosAsignacion .)
    SET             reduce using rule 38 (asignacion -> LOCALVAR EXPASSIGN datosAsignacion .)
    $end            reduce using rule 38 (asignacion -> LOCALVAR EXPASSIGN datosAsignacion .)
    ELSE            reduce using rule 38 (asignacion -> LOCALVAR EXPASSIGN datosAsignacion .)
    END             reduce using rule 38 (asignacion -> LOCALVAR EXPASSIGN datosAsignacion .)
    RETURN          reduce using rule 38 (asignacion -> LOCALVAR EXPASSIGN datosAsignacion .)


state 81

    (97) operacionarray -> LOCALVAR LBRACKET INTEGER . RBRACKET

    RBRACKET        shift and go to state 124


state 82

    (98) operacionarray -> LOCALVAR DOT TAKE . LPARENTHESES INTEGER RPARENTHESES

    LPARENTHESES    shift and go to state 125


state 83

    (99) operacionarray -> LOCALVAR DOT DROP . LPARENTHESES INTEGER RPARENTHESES

    LPARENTHESES    shift and go to state 126


state 84

    (29) declaracion -> tiposvariables EQUAL datos .

    LOCALVAR        reduce using rule 29 (declaracion -> tiposvariables EQUAL datos .)
    FOR             reduce using rule 29 (declaracion -> tiposvariables EQUAL datos .)
    IF              reduce using rule 29 (declaracion -> tiposvariables EQUAL datos .)
    UNLESS          reduce using rule 29 (declaracion -> tiposvariables EQUAL datos .)
    PUTS            reduce using rule 29 (declaracion -> tiposvariables EQUAL datos .)
    PRINT           reduce using rule 29 (declaracion -> tiposvariables EQUAL datos .)
    VAR             reduce using rule 29 (declaracion -> tiposvariables EQUAL datos .)
    CONSTANT        reduce using rule 29 (declaracion -> tiposvariables EQUAL datos .)
    LCURLYBRACKET   reduce using rule 29 (declaracion -> tiposvariables EQUAL datos .)
    SET             reduce using rule 29 (declaracion -> tiposvariables EQUAL datos .)
    $end            reduce using rule 29 (declaracion -> tiposvariables EQUAL datos .)
    ELSE            reduce using rule 29 (declaracion -> tiposvariables EQUAL datos .)
    END             reduce using rule 29 (declaracion -> tiposvariables EQUAL datos .)
    RETURN          reduce using rule 29 (declaracion -> tiposvariables EQUAL datos .)


state 85

    (30) declaracion -> tiposvariables EQUAL estructurasDatos .

    LOCALVAR        reduce using rule 30 (declaracion -> tiposvariables EQUAL estructurasDatos .)
    FOR             reduce using rule 30 (declaracion -> tiposvariables EQUAL estructurasDatos .)
    IF              reduce using rule 30 (declaracion -> tiposvariables EQUAL estructurasDatos .)
    UNLESS          reduce using rule 30 (declaracion -> tiposvariables EQUAL estructurasDatos .)
    PUTS            reduce using rule 30 (declaracion -> tiposvariables EQUAL estructurasDatos .)
    PRINT           reduce using rule 30 (declaracion -> tiposvariables EQUAL estructurasDatos .)
    VAR             reduce using rule 30 (declaracion -> tiposvariables EQUAL estructurasDatos .)
    CONSTANT        reduce using rule 30 (declaracion -> tiposvariables EQUAL estructurasDatos .)
    LCURLYBRACKET   reduce using rule 30 (declaracion -> tiposvariables EQUAL estructurasDatos .)
    SET             reduce using rule 30 (declaracion -> tiposvariables EQUAL estructurasDatos .)
    $end            reduce using rule 30 (declaracion -> tiposvariables EQUAL estructurasDatos .)
    ELSE            reduce using rule 30 (declaracion -> tiposvariables EQUAL estructurasDatos .)
    END             reduce using rule 30 (declaracion -> tiposvariables EQUAL estructurasDatos .)
    RETURN          reduce using rule 30 (declaracion -> tiposvariables EQUAL estructurasDatos .)


state 86

    (31) declaracion -> tiposvariables EQUAL expresion .

    LOCALVAR        reduce using rule 31 (declaracion -> tiposvariables EQUAL expresion .)
    FOR             reduce using rule 31 (declaracion -> tiposvariables EQUAL expresion .)
    IF              reduce using rule 31 (declaracion -> tiposvariables EQUAL expresion .)
    UNLESS          reduce using rule 31 (declaracion -> tiposvariables EQUAL expresion .)
    PUTS            reduce using rule 31 (declaracion -> tiposvariables EQUAL expresion .)
    PRINT           reduce using rule 31 (declaracion -> tiposvariables EQUAL expresion .)
    VAR             reduce using rule 31 (declaracion -> tiposvariables EQUAL expresion .)
    CONSTANT        reduce using rule 31 (declaracion -> tiposvariables EQUAL expresion .)
    LCURLYBRACKET   reduce using rule 31 (declaracion -> tiposvariables EQUAL expresion .)
    SET             reduce using rule 31 (declaracion -> tiposvariables EQUAL expresion .)
    $end            reduce using rule 31 (declaracion -> tiposvariables EQUAL expresion .)
    ELSE            reduce using rule 31 (declaracion -> tiposvariables EQUAL expresion .)
    END             reduce using rule 31 (declaracion -> tiposvariables EQUAL expresion .)
    RETURN          reduce using rule 31 (declaracion -> tiposvariables EQUAL expresion .)


state 87

    (32) declaracion -> tiposvariables EQUAL declaracion .

    LOCALVAR        reduce using rule 32 (declaracion -> tiposvariables EQUAL declaracion .)
    FOR             reduce using rule 32 (declaracion -> tiposvariables EQUAL declaracion .)
    IF              reduce using rule 32 (declaracion -> tiposvariables EQUAL declaracion .)
    UNLESS          reduce using rule 32 (declaracion -> tiposvariables EQUAL declaracion .)
    PUTS            reduce using rule 32 (declaracion -> tiposvariables EQUAL declaracion .)
    PRINT           reduce using rule 32 (declaracion -> tiposvariables EQUAL declaracion .)
    VAR             reduce using rule 32 (declaracion -> tiposvariables EQUAL declaracion .)
    CONSTANT        reduce using rule 32 (declaracion -> tiposvariables EQUAL declaracion .)
    LCURLYBRACKET   reduce using rule 32 (declaracion -> tiposvariables EQUAL declaracion .)
    SET             reduce using rule 32 (declaracion -> tiposvariables EQUAL declaracion .)
    $end            reduce using rule 32 (declaracion -> tiposvariables EQUAL declaracion .)
    ELSE            reduce using rule 32 (declaracion -> tiposvariables EQUAL declaracion .)
    END             reduce using rule 32 (declaracion -> tiposvariables EQUAL declaracion .)
    RETURN          reduce using rule 32 (declaracion -> tiposvariables EQUAL declaracion .)


state 88

    (81) array -> tiposvariables EQUAL LBRACKET . datosarray RBRACKET
    (82) array -> tiposvariables EQUAL LBRACKET . RBRACKET
    (95) datosarray -> . datosvarios
    (96) datosarray -> . datosarray COMMA datosvarios
    (93) datosvarios -> . datos
    (94) datosvarios -> . tiposvariables
    (44) datos -> . INTEGER
    (45) datos -> . FLOAT
    (46) datos -> . STRING
    (41) tiposvariables -> . VAR
    (42) tiposvariables -> . LOCALVAR
    (43) tiposvariables -> . CONSTANT

    RBRACKET        shift and go to state 128
    INTEGER         shift and go to state 56
    FLOAT           shift and go to state 57
    STRING          shift and go to state 58
    VAR             shift and go to state 25
    LOCALVAR        shift and go to state 59
    CONSTANT        shift and go to state 26

    tiposvariables                 shift and go to state 55
    datosarray                     shift and go to state 127
    datosvarios                    shift and go to state 129
    datos                          shift and go to state 54

state 89

    (44) datos -> INTEGER .
    (66) number -> INTEGER .

    LOCALVAR        reduce using rule 44 (datos -> INTEGER .)
    FOR             reduce using rule 44 (datos -> INTEGER .)
    IF              reduce using rule 44 (datos -> INTEGER .)
    UNLESS          reduce using rule 44 (datos -> INTEGER .)
    PUTS            reduce using rule 44 (datos -> INTEGER .)
    PRINT           reduce using rule 44 (datos -> INTEGER .)
    VAR             reduce using rule 44 (datos -> INTEGER .)
    CONSTANT        reduce using rule 44 (datos -> INTEGER .)
    LCURLYBRACKET   reduce using rule 44 (datos -> INTEGER .)
    SET             reduce using rule 44 (datos -> INTEGER .)
    $end            reduce using rule 44 (datos -> INTEGER .)
    ELSE            reduce using rule 44 (datos -> INTEGER .)
    END             reduce using rule 44 (datos -> INTEGER .)
    RETURN          reduce using rule 44 (datos -> INTEGER .)
    PLUS            reduce using rule 66 (number -> INTEGER .)
    MINUS           reduce using rule 66 (number -> INTEGER .)
    MULTIPLY        reduce using rule 66 (number -> INTEGER .)
    DIVIDE          reduce using rule 66 (number -> INTEGER .)
    PERCENTAGE      reduce using rule 66 (number -> INTEGER .)


state 90

    (45) datos -> FLOAT .
    (67) number -> FLOAT .

    LOCALVAR        reduce using rule 45 (datos -> FLOAT .)
    FOR             reduce using rule 45 (datos -> FLOAT .)
    IF              reduce using rule 45 (datos -> FLOAT .)
    UNLESS          reduce using rule 45 (datos -> FLOAT .)
    PUTS            reduce using rule 45 (datos -> FLOAT .)
    PRINT           reduce using rule 45 (datos -> FLOAT .)
    VAR             reduce using rule 45 (datos -> FLOAT .)
    CONSTANT        reduce using rule 45 (datos -> FLOAT .)
    LCURLYBRACKET   reduce using rule 45 (datos -> FLOAT .)
    SET             reduce using rule 45 (datos -> FLOAT .)
    $end            reduce using rule 45 (datos -> FLOAT .)
    ELSE            reduce using rule 45 (datos -> FLOAT .)
    END             reduce using rule 45 (datos -> FLOAT .)
    RETURN          reduce using rule 45 (datos -> FLOAT .)
    PLUS            reduce using rule 67 (number -> FLOAT .)
    MINUS           reduce using rule 67 (number -> FLOAT .)
    MULTIPLY        reduce using rule 67 (number -> FLOAT .)
    DIVIDE          reduce using rule 67 (number -> FLOAT .)
    PERCENTAGE      reduce using rule 67 (number -> FLOAT .)


state 91

    (47) estructurasDatos -> hash .

    LOCALVAR        reduce using rule 47 (estructurasDatos -> hash .)
    FOR             reduce using rule 47 (estructurasDatos -> hash .)
    IF              reduce using rule 47 (estructurasDatos -> hash .)
    UNLESS          reduce using rule 47 (estructurasDatos -> hash .)
    PUTS            reduce using rule 47 (estructurasDatos -> hash .)
    PRINT           reduce using rule 47 (estructurasDatos -> hash .)
    VAR             reduce using rule 47 (estructurasDatos -> hash .)
    CONSTANT        reduce using rule 47 (estructurasDatos -> hash .)
    LCURLYBRACKET   reduce using rule 47 (estructurasDatos -> hash .)
    SET             reduce using rule 47 (estructurasDatos -> hash .)
    $end            reduce using rule 47 (estructurasDatos -> hash .)
    ELSE            reduce using rule 47 (estructurasDatos -> hash .)
    END             reduce using rule 47 (estructurasDatos -> hash .)
    RETURN          reduce using rule 47 (estructurasDatos -> hash .)


state 92

    (49) estructurasDatos -> set .

    LOCALVAR        reduce using rule 49 (estructurasDatos -> set .)
    FOR             reduce using rule 49 (estructurasDatos -> set .)
    IF              reduce using rule 49 (estructurasDatos -> set .)
    UNLESS          reduce using rule 49 (estructurasDatos -> set .)
    PUTS            reduce using rule 49 (estructurasDatos -> set .)
    PRINT           reduce using rule 49 (estructurasDatos -> set .)
    VAR             reduce using rule 49 (estructurasDatos -> set .)
    CONSTANT        reduce using rule 49 (estructurasDatos -> set .)
    LCURLYBRACKET   reduce using rule 49 (estructurasDatos -> set .)
    SET             reduce using rule 49 (estructurasDatos -> set .)
    $end            reduce using rule 49 (estructurasDatos -> set .)
    ELSE            reduce using rule 49 (estructurasDatos -> set .)
    END             reduce using rule 49 (estructurasDatos -> set .)
    RETURN          reduce using rule 49 (estructurasDatos -> set .)


state 93

    (68) expresion -> operacion .
    (72) operacion -> operacion . masoperaciones
    (73) masoperaciones -> . operador expresion masoperaciones
    (74) masoperaciones -> . operador number
    (75) masoperaciones -> . operador expresion
    (76) operador -> . PLUS
    (77) operador -> . MINUS
    (78) operador -> . MULTIPLY
    (79) operador -> . DIVIDE
    (80) operador -> . PERCENTAGE

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for PERCENTAGE resolved as shift
    LOCALVAR        reduce using rule 68 (expresion -> operacion .)
    FOR             reduce using rule 68 (expresion -> operacion .)
    IF              reduce using rule 68 (expresion -> operacion .)
    UNLESS          reduce using rule 68 (expresion -> operacion .)
    PUTS            reduce using rule 68 (expresion -> operacion .)
    PRINT           reduce using rule 68 (expresion -> operacion .)
    VAR             reduce using rule 68 (expresion -> operacion .)
    CONSTANT        reduce using rule 68 (expresion -> operacion .)
    LCURLYBRACKET   reduce using rule 68 (expresion -> operacion .)
    SET             reduce using rule 68 (expresion -> operacion .)
    $end            reduce using rule 68 (expresion -> operacion .)
    ELSE            reduce using rule 68 (expresion -> operacion .)
    END             reduce using rule 68 (expresion -> operacion .)
    RETURN          reduce using rule 68 (expresion -> operacion .)
    RPARENTHESES    reduce using rule 68 (expresion -> operacion .)
    PLUS            shift and go to state 132
    MINUS           shift and go to state 133
    MULTIPLY        shift and go to state 134
    DIVIDE          shift and go to state 135
    PERCENTAGE      shift and go to state 136

  ! PLUS            [ reduce using rule 68 (expresion -> operacion .) ]
  ! MINUS           [ reduce using rule 68 (expresion -> operacion .) ]
  ! MULTIPLY        [ reduce using rule 68 (expresion -> operacion .) ]
  ! DIVIDE          [ reduce using rule 68 (expresion -> operacion .) ]
  ! PERCENTAGE      [ reduce using rule 68 (expresion -> operacion .) ]

    masoperaciones                 shift and go to state 130
    operador                       shift and go to state 131

state 94

    (69) expresion -> LPARENTHESES . operacion RPARENTHESES
    (70) expresion -> LPARENTHESES . operacion RPARENTHESES masoperaciones
    (71) operacion -> . number operador number
    (72) operacion -> . operacion masoperaciones
    (66) number -> . INTEGER
    (67) number -> . FLOAT

    INTEGER         shift and go to state 74
    FLOAT           shift and go to state 75

    operacion                      shift and go to state 137
    number                         shift and go to state 95

state 95

    (71) operacion -> number . operador number
    (76) operador -> . PLUS
    (77) operador -> . MINUS
    (78) operador -> . MULTIPLY
    (79) operador -> . DIVIDE
    (80) operador -> . PERCENTAGE

    PLUS            shift and go to state 132
    MINUS           shift and go to state 133
    MULTIPLY        shift and go to state 134
    DIVIDE          shift and go to state 135
    PERCENTAGE      shift and go to state 136

    operador                       shift and go to state 138

state 96

    (28) loop -> FOR LOCALVAR IN . rango cuerpo END
    (60) rango -> . INTEGER RANGEINCLUSIVE INTEGER
    (61) rango -> . INTEGER RANGEXCLUSIVE INTEGER

    INTEGER         shift and go to state 140

    rango                          shift and go to state 139

state 97

    (55) operacionHash -> hash LBRACKET datos . RBRACKET
    (56) operacionHash -> hash LBRACKET datos . RBRACKET EQUAL datos

    RBRACKET        shift and go to state 141


state 98

    (57) operacionHash -> hash DOT INCLUDE . QUESTIONMARK LPARENTHESES datos RPARENTHESES

    QUESTIONMARK    shift and go to state 142


state 99

    (58) operacionHash -> hash DOT DELETE . LPARENTHESES datos RPARENTHESES

    LPARENTHESES    shift and go to state 143


state 100

    (59) operacionHash -> hash DOT KEYS .

    LOCALVAR        reduce using rule 59 (operacionHash -> hash DOT KEYS .)
    FOR             reduce using rule 59 (operacionHash -> hash DOT KEYS .)
    IF              reduce using rule 59 (operacionHash -> hash DOT KEYS .)
    UNLESS          reduce using rule 59 (operacionHash -> hash DOT KEYS .)
    PUTS            reduce using rule 59 (operacionHash -> hash DOT KEYS .)
    PRINT           reduce using rule 59 (operacionHash -> hash DOT KEYS .)
    VAR             reduce using rule 59 (operacionHash -> hash DOT KEYS .)
    CONSTANT        reduce using rule 59 (operacionHash -> hash DOT KEYS .)
    LCURLYBRACKET   reduce using rule 59 (operacionHash -> hash DOT KEYS .)
    SET             reduce using rule 59 (operacionHash -> hash DOT KEYS .)
    $end            reduce using rule 59 (operacionHash -> hash DOT KEYS .)
    ELSE            reduce using rule 59 (operacionHash -> hash DOT KEYS .)
    END             reduce using rule 59 (operacionHash -> hash DOT KEYS .)
    RETURN          reduce using rule 59 (operacionHash -> hash DOT KEYS .)


state 101

    (111) operacionSet -> set DOT ADD . LPARENTHESES datos RPARENTHESES
    (112) operacionSet -> set DOT ADD . LPARENTHESES tiposvariables RPARENTHESES

    LPARENTHESES    shift and go to state 144


state 102

    (113) operacionSet -> set DOT CLEAR .

    LOCALVAR        reduce using rule 113 (operacionSet -> set DOT CLEAR .)
    FOR             reduce using rule 113 (operacionSet -> set DOT CLEAR .)
    IF              reduce using rule 113 (operacionSet -> set DOT CLEAR .)
    UNLESS          reduce using rule 113 (operacionSet -> set DOT CLEAR .)
    PUTS            reduce using rule 113 (operacionSet -> set DOT CLEAR .)
    PRINT           reduce using rule 113 (operacionSet -> set DOT CLEAR .)
    VAR             reduce using rule 113 (operacionSet -> set DOT CLEAR .)
    CONSTANT        reduce using rule 113 (operacionSet -> set DOT CLEAR .)
    LCURLYBRACKET   reduce using rule 113 (operacionSet -> set DOT CLEAR .)
    SET             reduce using rule 113 (operacionSet -> set DOT CLEAR .)
    $end            reduce using rule 113 (operacionSet -> set DOT CLEAR .)
    ELSE            reduce using rule 113 (operacionSet -> set DOT CLEAR .)
    END             reduce using rule 113 (operacionSet -> set DOT CLEAR .)
    RETURN          reduce using rule 113 (operacionSet -> set DOT CLEAR .)


state 103

    (114) operacionSet -> set DOT DELETE . LPARENTHESES datos RPARENTHESES
    (115) operacionSet -> set DOT DELETE . LPARENTHESES tiposvariables RPARENTHESES

    LPARENTHESES    shift and go to state 145


state 104

    (83) if -> IF datosvarios operadores . datosvarios cuerpo END
    (84) if -> IF datosvarios operadores . datosvarios cuerpo else
    (93) datosvarios -> . datos
    (94) datosvarios -> . tiposvariables
    (44) datos -> . INTEGER
    (45) datos -> . FLOAT
    (46) datos -> . STRING
    (41) tiposvariables -> . VAR
    (42) tiposvariables -> . LOCALVAR
    (43) tiposvariables -> . CONSTANT

    INTEGER         shift and go to state 56
    FLOAT           shift and go to state 57
    STRING          shift and go to state 58
    VAR             shift and go to state 25
    LOCALVAR        shift and go to state 59
    CONSTANT        shift and go to state 26

    datosvarios                    shift and go to state 146
    datos                          shift and go to state 54
    tiposvariables                 shift and go to state 55

state 105

    (86) operadores -> DOUBLEEQUAL .

    INTEGER         reduce using rule 86 (operadores -> DOUBLEEQUAL .)
    FLOAT           reduce using rule 86 (operadores -> DOUBLEEQUAL .)
    STRING          reduce using rule 86 (operadores -> DOUBLEEQUAL .)
    VAR             reduce using rule 86 (operadores -> DOUBLEEQUAL .)
    LOCALVAR        reduce using rule 86 (operadores -> DOUBLEEQUAL .)
    CONSTANT        reduce using rule 86 (operadores -> DOUBLEEQUAL .)


state 106

    (87) operadores -> TRIPLEEQUAL .

    INTEGER         reduce using rule 87 (operadores -> TRIPLEEQUAL .)
    FLOAT           reduce using rule 87 (operadores -> TRIPLEEQUAL .)
    STRING          reduce using rule 87 (operadores -> TRIPLEEQUAL .)
    VAR             reduce using rule 87 (operadores -> TRIPLEEQUAL .)
    LOCALVAR        reduce using rule 87 (operadores -> TRIPLEEQUAL .)
    CONSTANT        reduce using rule 87 (operadores -> TRIPLEEQUAL .)


state 107

    (88) operadores -> GREATERTHAN .

    INTEGER         reduce using rule 88 (operadores -> GREATERTHAN .)
    FLOAT           reduce using rule 88 (operadores -> GREATERTHAN .)
    STRING          reduce using rule 88 (operadores -> GREATERTHAN .)
    VAR             reduce using rule 88 (operadores -> GREATERTHAN .)
    LOCALVAR        reduce using rule 88 (operadores -> GREATERTHAN .)
    CONSTANT        reduce using rule 88 (operadores -> GREATERTHAN .)


state 108

    (89) operadores -> NOTEQUAL .

    INTEGER         reduce using rule 89 (operadores -> NOTEQUAL .)
    FLOAT           reduce using rule 89 (operadores -> NOTEQUAL .)
    STRING          reduce using rule 89 (operadores -> NOTEQUAL .)
    VAR             reduce using rule 89 (operadores -> NOTEQUAL .)
    LOCALVAR        reduce using rule 89 (operadores -> NOTEQUAL .)
    CONSTANT        reduce using rule 89 (operadores -> NOTEQUAL .)


state 109

    (90) operadores -> LESSTHAN .

    INTEGER         reduce using rule 90 (operadores -> LESSTHAN .)
    FLOAT           reduce using rule 90 (operadores -> LESSTHAN .)
    STRING          reduce using rule 90 (operadores -> LESSTHAN .)
    VAR             reduce using rule 90 (operadores -> LESSTHAN .)
    LOCALVAR        reduce using rule 90 (operadores -> LESSTHAN .)
    CONSTANT        reduce using rule 90 (operadores -> LESSTHAN .)


state 110

    (91) operadores -> GREQUAL .

    INTEGER         reduce using rule 91 (operadores -> GREQUAL .)
    FLOAT           reduce using rule 91 (operadores -> GREQUAL .)
    STRING          reduce using rule 91 (operadores -> GREQUAL .)
    VAR             reduce using rule 91 (operadores -> GREQUAL .)
    LOCALVAR        reduce using rule 91 (operadores -> GREQUAL .)
    CONSTANT        reduce using rule 91 (operadores -> GREQUAL .)


state 111

    (92) operadores -> LEQUAL .

    INTEGER         reduce using rule 92 (operadores -> LEQUAL .)
    FLOAT           reduce using rule 92 (operadores -> LEQUAL .)
    STRING          reduce using rule 92 (operadores -> LEQUAL .)
    VAR             reduce using rule 92 (operadores -> LEQUAL .)
    LOCALVAR        reduce using rule 92 (operadores -> LEQUAL .)
    CONSTANT        reduce using rule 92 (operadores -> LEQUAL .)


state 112

    (100) unless -> UNLESS condiciones cuerpo . ELSE cuerpo END

    ELSE            shift and go to state 147


state 113

    (101) condiciones -> tiposvariables operadores . tiposvariables
    (103) condiciones -> tiposvariables operadores . datos
    (41) tiposvariables -> . VAR
    (42) tiposvariables -> . LOCALVAR
    (43) tiposvariables -> . CONSTANT
    (44) datos -> . INTEGER
    (45) datos -> . FLOAT
    (46) datos -> . STRING

    VAR             shift and go to state 25
    LOCALVAR        shift and go to state 59
    CONSTANT        shift and go to state 26
    INTEGER         shift and go to state 56
    FLOAT           shift and go to state 57
    STRING          shift and go to state 58

    tiposvariables                 shift and go to state 148
    datos                          shift and go to state 149

state 114

    (102) condiciones -> datos operadores . datos
    (104) condiciones -> datos operadores . tiposvariables
    (44) datos -> . INTEGER
    (45) datos -> . FLOAT
    (46) datos -> . STRING
    (41) tiposvariables -> . VAR
    (42) tiposvariables -> . LOCALVAR
    (43) tiposvariables -> . CONSTANT

    INTEGER         shift and go to state 56
    FLOAT           shift and go to state 57
    STRING          shift and go to state 58
    VAR             shift and go to state 25
    LOCALVAR        shift and go to state 59
    CONSTANT        shift and go to state 26

    datos                          shift and go to state 150
    tiposvariables                 shift and go to state 151

state 115

    (50) hash -> LCURLYBRACKET elementoHash RCURLYBRACKET .

    LBRACKET        reduce using rule 50 (hash -> LCURLYBRACKET elementoHash RCURLYBRACKET .)
    DOT             reduce using rule 50 (hash -> LCURLYBRACKET elementoHash RCURLYBRACKET .)
    LOCALVAR        reduce using rule 50 (hash -> LCURLYBRACKET elementoHash RCURLYBRACKET .)
    FOR             reduce using rule 50 (hash -> LCURLYBRACKET elementoHash RCURLYBRACKET .)
    IF              reduce using rule 50 (hash -> LCURLYBRACKET elementoHash RCURLYBRACKET .)
    UNLESS          reduce using rule 50 (hash -> LCURLYBRACKET elementoHash RCURLYBRACKET .)
    PUTS            reduce using rule 50 (hash -> LCURLYBRACKET elementoHash RCURLYBRACKET .)
    PRINT           reduce using rule 50 (hash -> LCURLYBRACKET elementoHash RCURLYBRACKET .)
    VAR             reduce using rule 50 (hash -> LCURLYBRACKET elementoHash RCURLYBRACKET .)
    CONSTANT        reduce using rule 50 (hash -> LCURLYBRACKET elementoHash RCURLYBRACKET .)
    LCURLYBRACKET   reduce using rule 50 (hash -> LCURLYBRACKET elementoHash RCURLYBRACKET .)
    SET             reduce using rule 50 (hash -> LCURLYBRACKET elementoHash RCURLYBRACKET .)
    $end            reduce using rule 50 (hash -> LCURLYBRACKET elementoHash RCURLYBRACKET .)
    ELSE            reduce using rule 50 (hash -> LCURLYBRACKET elementoHash RCURLYBRACKET .)
    END             reduce using rule 50 (hash -> LCURLYBRACKET elementoHash RCURLYBRACKET .)
    RETURN          reduce using rule 50 (hash -> LCURLYBRACKET elementoHash RCURLYBRACKET .)


state 116

    (51) elementoHash -> datos EQUAL . GREATERTHAN datos maselementos

    GREATERTHAN     shift and go to state 152


state 117

    (105) set -> SET LBRACKET elementoSet . RBRACKET

    RBRACKET        shift and go to state 153


state 118

    (107) elementoSet -> datos .
    (108) elementoSet -> datos . otroElemento
    (109) otroElemento -> .
    (110) otroElemento -> . COMMA elementoSet otroElemento

  ! reduce/reduce conflict for RBRACKET resolved using rule 107 (elementoSet -> datos .)
  ! reduce/reduce conflict for COMMA resolved using rule 107 (elementoSet -> datos .)
  ! shift/reduce conflict for COMMA resolved as shift
    RBRACKET        reduce using rule 107 (elementoSet -> datos .)
    COMMA           shift and go to state 155

  ! COMMA           [ reduce using rule 107 (elementoSet -> datos .) ]
  ! RBRACKET        [ reduce using rule 109 (otroElemento -> .) ]
  ! COMMA           [ reduce using rule 109 (otroElemento -> .) ]

    otroElemento                   shift and go to state 154

state 119

    (8) argumentos -> LOCALVAR . EQUAL LCURLYBRACKET RCURLYBRACKET
    (9) argumentos -> LOCALVAR . TWOPOINTS datos
    (10) variosargumentos -> LOCALVAR .
    (11) variosargumentos -> LOCALVAR . EQUAL datos
    (12) variosargumentos -> LOCALVAR . masargumentos
    (13) variosargumentos -> LOCALVAR . EQUAL datos masargumentos
    (14) masargumentos -> . COMMA variosargumentos

    EQUAL           shift and go to state 156
    TWOPOINTS       shift and go to state 157
    RPARENTHESES    reduce using rule 10 (variosargumentos -> LOCALVAR .)
    COMMA           shift and go to state 159

    masargumentos                  shift and go to state 158

state 120

    (3) funcion -> DEF LOCALVAR LPARENTHESES argumentos . RPARENTHESES cuerpo END
    (4) funcion -> DEF LOCALVAR LPARENTHESES argumentos . RPARENTHESES cuerpo retornar END

    RPARENTHESES    shift and go to state 160


state 121

    (5) argumentos -> variosargumentos .

    RPARENTHESES    reduce using rule 5 (argumentos -> variosargumentos .)


state 122

    (6) argumentos -> MULTIPLY . LOCALVAR

    LOCALVAR        shift and go to state 161


state 123

    (7) argumentos -> TWOSTARS . LOCALVAR

    LOCALVAR        shift and go to state 162


state 124

    (97) operacionarray -> LOCALVAR LBRACKET INTEGER RBRACKET .

    LOCALVAR        reduce using rule 97 (operacionarray -> LOCALVAR LBRACKET INTEGER RBRACKET .)
    FOR             reduce using rule 97 (operacionarray -> LOCALVAR LBRACKET INTEGER RBRACKET .)
    IF              reduce using rule 97 (operacionarray -> LOCALVAR LBRACKET INTEGER RBRACKET .)
    UNLESS          reduce using rule 97 (operacionarray -> LOCALVAR LBRACKET INTEGER RBRACKET .)
    PUTS            reduce using rule 97 (operacionarray -> LOCALVAR LBRACKET INTEGER RBRACKET .)
    PRINT           reduce using rule 97 (operacionarray -> LOCALVAR LBRACKET INTEGER RBRACKET .)
    VAR             reduce using rule 97 (operacionarray -> LOCALVAR LBRACKET INTEGER RBRACKET .)
    CONSTANT        reduce using rule 97 (operacionarray -> LOCALVAR LBRACKET INTEGER RBRACKET .)
    LCURLYBRACKET   reduce using rule 97 (operacionarray -> LOCALVAR LBRACKET INTEGER RBRACKET .)
    SET             reduce using rule 97 (operacionarray -> LOCALVAR LBRACKET INTEGER RBRACKET .)
    $end            reduce using rule 97 (operacionarray -> LOCALVAR LBRACKET INTEGER RBRACKET .)
    ELSE            reduce using rule 97 (operacionarray -> LOCALVAR LBRACKET INTEGER RBRACKET .)
    END             reduce using rule 97 (operacionarray -> LOCALVAR LBRACKET INTEGER RBRACKET .)
    RETURN          reduce using rule 97 (operacionarray -> LOCALVAR LBRACKET INTEGER RBRACKET .)


state 125

    (98) operacionarray -> LOCALVAR DOT TAKE LPARENTHESES . INTEGER RPARENTHESES

    INTEGER         shift and go to state 163


state 126

    (99) operacionarray -> LOCALVAR DOT DROP LPARENTHESES . INTEGER RPARENTHESES

    INTEGER         shift and go to state 164


state 127

    (81) array -> tiposvariables EQUAL LBRACKET datosarray . RBRACKET
    (96) datosarray -> datosarray . COMMA datosvarios

    RBRACKET        shift and go to state 165
    COMMA           shift and go to state 166


state 128

    (82) array -> tiposvariables EQUAL LBRACKET RBRACKET .

    LOCALVAR        reduce using rule 82 (array -> tiposvariables EQUAL LBRACKET RBRACKET .)
    FOR             reduce using rule 82 (array -> tiposvariables EQUAL LBRACKET RBRACKET .)
    IF              reduce using rule 82 (array -> tiposvariables EQUAL LBRACKET RBRACKET .)
    UNLESS          reduce using rule 82 (array -> tiposvariables EQUAL LBRACKET RBRACKET .)
    PUTS            reduce using rule 82 (array -> tiposvariables EQUAL LBRACKET RBRACKET .)
    PRINT           reduce using rule 82 (array -> tiposvariables EQUAL LBRACKET RBRACKET .)
    VAR             reduce using rule 82 (array -> tiposvariables EQUAL LBRACKET RBRACKET .)
    CONSTANT        reduce using rule 82 (array -> tiposvariables EQUAL LBRACKET RBRACKET .)
    LCURLYBRACKET   reduce using rule 82 (array -> tiposvariables EQUAL LBRACKET RBRACKET .)
    SET             reduce using rule 82 (array -> tiposvariables EQUAL LBRACKET RBRACKET .)
    $end            reduce using rule 82 (array -> tiposvariables EQUAL LBRACKET RBRACKET .)
    ELSE            reduce using rule 82 (array -> tiposvariables EQUAL LBRACKET RBRACKET .)
    END             reduce using rule 82 (array -> tiposvariables EQUAL LBRACKET RBRACKET .)
    RETURN          reduce using rule 82 (array -> tiposvariables EQUAL LBRACKET RBRACKET .)


state 129

    (95) datosarray -> datosvarios .

    RBRACKET        reduce using rule 95 (datosarray -> datosvarios .)
    COMMA           reduce using rule 95 (datosarray -> datosvarios .)


state 130

    (72) operacion -> operacion masoperaciones .

    PLUS            reduce using rule 72 (operacion -> operacion masoperaciones .)
    MINUS           reduce using rule 72 (operacion -> operacion masoperaciones .)
    MULTIPLY        reduce using rule 72 (operacion -> operacion masoperaciones .)
    DIVIDE          reduce using rule 72 (operacion -> operacion masoperaciones .)
    PERCENTAGE      reduce using rule 72 (operacion -> operacion masoperaciones .)
    LOCALVAR        reduce using rule 72 (operacion -> operacion masoperaciones .)
    FOR             reduce using rule 72 (operacion -> operacion masoperaciones .)
    IF              reduce using rule 72 (operacion -> operacion masoperaciones .)
    UNLESS          reduce using rule 72 (operacion -> operacion masoperaciones .)
    PUTS            reduce using rule 72 (operacion -> operacion masoperaciones .)
    PRINT           reduce using rule 72 (operacion -> operacion masoperaciones .)
    VAR             reduce using rule 72 (operacion -> operacion masoperaciones .)
    CONSTANT        reduce using rule 72 (operacion -> operacion masoperaciones .)
    LCURLYBRACKET   reduce using rule 72 (operacion -> operacion masoperaciones .)
    SET             reduce using rule 72 (operacion -> operacion masoperaciones .)
    $end            reduce using rule 72 (operacion -> operacion masoperaciones .)
    ELSE            reduce using rule 72 (operacion -> operacion masoperaciones .)
    END             reduce using rule 72 (operacion -> operacion masoperaciones .)
    RETURN          reduce using rule 72 (operacion -> operacion masoperaciones .)
    RPARENTHESES    reduce using rule 72 (operacion -> operacion masoperaciones .)


state 131

    (73) masoperaciones -> operador . expresion masoperaciones
    (74) masoperaciones -> operador . number
    (75) masoperaciones -> operador . expresion
    (68) expresion -> . operacion
    (69) expresion -> . LPARENTHESES operacion RPARENTHESES
    (70) expresion -> . LPARENTHESES operacion RPARENTHESES masoperaciones
    (66) number -> . INTEGER
    (67) number -> . FLOAT
    (71) operacion -> . number operador number
    (72) operacion -> . operacion masoperaciones

    LPARENTHESES    shift and go to state 94
    INTEGER         shift and go to state 74
    FLOAT           shift and go to state 75

    expresion                      shift and go to state 167
    number                         shift and go to state 168
    operacion                      shift and go to state 93

state 132

    (76) operador -> PLUS .

    LPARENTHESES    reduce using rule 76 (operador -> PLUS .)
    INTEGER         reduce using rule 76 (operador -> PLUS .)
    FLOAT           reduce using rule 76 (operador -> PLUS .)


state 133

    (77) operador -> MINUS .

    LPARENTHESES    reduce using rule 77 (operador -> MINUS .)
    INTEGER         reduce using rule 77 (operador -> MINUS .)
    FLOAT           reduce using rule 77 (operador -> MINUS .)


state 134

    (78) operador -> MULTIPLY .

    LPARENTHESES    reduce using rule 78 (operador -> MULTIPLY .)
    INTEGER         reduce using rule 78 (operador -> MULTIPLY .)
    FLOAT           reduce using rule 78 (operador -> MULTIPLY .)


state 135

    (79) operador -> DIVIDE .

    LPARENTHESES    reduce using rule 79 (operador -> DIVIDE .)
    INTEGER         reduce using rule 79 (operador -> DIVIDE .)
    FLOAT           reduce using rule 79 (operador -> DIVIDE .)


state 136

    (80) operador -> PERCENTAGE .

    LPARENTHESES    reduce using rule 80 (operador -> PERCENTAGE .)
    INTEGER         reduce using rule 80 (operador -> PERCENTAGE .)
    FLOAT           reduce using rule 80 (operador -> PERCENTAGE .)


state 137

    (69) expresion -> LPARENTHESES operacion . RPARENTHESES
    (70) expresion -> LPARENTHESES operacion . RPARENTHESES masoperaciones
    (72) operacion -> operacion . masoperaciones
    (73) masoperaciones -> . operador expresion masoperaciones
    (74) masoperaciones -> . operador number
    (75) masoperaciones -> . operador expresion
    (76) operador -> . PLUS
    (77) operador -> . MINUS
    (78) operador -> . MULTIPLY
    (79) operador -> . DIVIDE
    (80) operador -> . PERCENTAGE

    RPARENTHESES    shift and go to state 169
    PLUS            shift and go to state 132
    MINUS           shift and go to state 133
    MULTIPLY        shift and go to state 134
    DIVIDE          shift and go to state 135
    PERCENTAGE      shift and go to state 136

    masoperaciones                 shift and go to state 130
    operador                       shift and go to state 131

state 138

    (71) operacion -> number operador . number
    (66) number -> . INTEGER
    (67) number -> . FLOAT

    INTEGER         shift and go to state 74
    FLOAT           shift and go to state 75

    number                         shift and go to state 170

state 139

    (28) loop -> FOR LOCALVAR IN rango . cuerpo END
    (17) cuerpo -> . declaracion cuerpo
    (18) cuerpo -> . asignacion cuerpo
    (19) cuerpo -> . loop cuerpo
    (20) cuerpo -> . estructurasDatos cuerpo
    (21) cuerpo -> . if cuerpo
    (22) cuerpo -> . unless cuerpo
    (23) cuerpo -> . impresion cuerpo
    (24) cuerpo -> . operacionSet cuerpo
    (25) cuerpo -> . operacionarray cuerpo
    (26) cuerpo -> . operacionHash cuerpo
    (27) cuerpo -> .
    (29) declaracion -> . tiposvariables EQUAL datos
    (30) declaracion -> . tiposvariables EQUAL estructurasDatos
    (31) declaracion -> . tiposvariables EQUAL expresion
    (32) declaracion -> . tiposvariables EQUAL declaracion
    (33) asignacion -> . LOCALVAR PLUSASSIGN datosAsignacion
    (34) asignacion -> . LOCALVAR MINASSIGN datosAsignacion
    (35) asignacion -> . LOCALVAR DIVASSIGN datosAsignacion
    (36) asignacion -> . LOCALVAR TIMESASSIGN datosAsignacion
    (37) asignacion -> . LOCALVAR MODASSIGN datosAsignacion
    (38) asignacion -> . LOCALVAR EXPASSIGN datosAsignacion
    (28) loop -> . FOR LOCALVAR IN rango cuerpo END
    (47) estructurasDatos -> . hash
    (48) estructurasDatos -> . array
    (49) estructurasDatos -> . set
    (83) if -> . IF datosvarios operadores datosvarios cuerpo END
    (84) if -> . IF datosvarios operadores datosvarios cuerpo else
    (100) unless -> . UNLESS condiciones cuerpo ELSE cuerpo END
    (62) impresion -> . PUTS datos
    (63) impresion -> . PUTS LOCALVAR
    (64) impresion -> . PRINT datos
    (65) impresion -> . PRINT LOCALVAR
    (111) operacionSet -> . set DOT ADD LPARENTHESES datos RPARENTHESES
    (112) operacionSet -> . set DOT ADD LPARENTHESES tiposvariables RPARENTHESES
    (113) operacionSet -> . set DOT CLEAR
    (114) operacionSet -> . set DOT DELETE LPARENTHESES datos RPARENTHESES
    (115) operacionSet -> . set DOT DELETE LPARENTHESES tiposvariables RPARENTHESES
    (97) operacionarray -> . LOCALVAR LBRACKET INTEGER RBRACKET
    (98) operacionarray -> . LOCALVAR DOT TAKE LPARENTHESES INTEGER RPARENTHESES
    (99) operacionarray -> . LOCALVAR DOT DROP LPARENTHESES INTEGER RPARENTHESES
    (55) operacionHash -> . hash LBRACKET datos RBRACKET
    (56) operacionHash -> . hash LBRACKET datos RBRACKET EQUAL datos
    (57) operacionHash -> . hash DOT INCLUDE QUESTIONMARK LPARENTHESES datos RPARENTHESES
    (58) operacionHash -> . hash DOT DELETE LPARENTHESES datos RPARENTHESES
    (59) operacionHash -> . hash DOT KEYS
    (41) tiposvariables -> . VAR
    (42) tiposvariables -> . LOCALVAR
    (43) tiposvariables -> . CONSTANT
    (50) hash -> . LCURLYBRACKET elementoHash RCURLYBRACKET
    (81) array -> . tiposvariables EQUAL LBRACKET datosarray RBRACKET
    (82) array -> . tiposvariables EQUAL LBRACKET RBRACKET
    (105) set -> . SET LBRACKET elementoSet RBRACKET

    END             reduce using rule 27 (cuerpo -> .)
    LOCALVAR        shift and go to state 15
    FOR             shift and go to state 17
    IF              shift and go to state 21
    UNLESS          shift and go to state 22
    PUTS            shift and go to state 23
    PRINT           shift and go to state 24
    VAR             shift and go to state 25
    CONSTANT        shift and go to state 26
    LCURLYBRACKET   shift and go to state 27
    SET             shift and go to state 28

    cuerpo                         shift and go to state 171
    declaracion                    shift and go to state 4
    asignacion                     shift and go to state 5
    loop                           shift and go to state 6
    estructurasDatos               shift and go to state 7
    if                             shift and go to state 8
    unless                         shift and go to state 9
    impresion                      shift and go to state 10
    operacionSet                   shift and go to state 11
    operacionarray                 shift and go to state 12
    operacionHash                  shift and go to state 13
    tiposvariables                 shift and go to state 16
    hash                           shift and go to state 18
    array                          shift and go to state 19
    set                            shift and go to state 20

state 140

    (60) rango -> INTEGER . RANGEINCLUSIVE INTEGER
    (61) rango -> INTEGER . RANGEXCLUSIVE INTEGER

    RANGEINCLUSIVE  shift and go to state 172
    RANGEXCLUSIVE   shift and go to state 173


state 141

    (55) operacionHash -> hash LBRACKET datos RBRACKET .
    (56) operacionHash -> hash LBRACKET datos RBRACKET . EQUAL datos

    LOCALVAR        reduce using rule 55 (operacionHash -> hash LBRACKET datos RBRACKET .)
    FOR             reduce using rule 55 (operacionHash -> hash LBRACKET datos RBRACKET .)
    IF              reduce using rule 55 (operacionHash -> hash LBRACKET datos RBRACKET .)
    UNLESS          reduce using rule 55 (operacionHash -> hash LBRACKET datos RBRACKET .)
    PUTS            reduce using rule 55 (operacionHash -> hash LBRACKET datos RBRACKET .)
    PRINT           reduce using rule 55 (operacionHash -> hash LBRACKET datos RBRACKET .)
    VAR             reduce using rule 55 (operacionHash -> hash LBRACKET datos RBRACKET .)
    CONSTANT        reduce using rule 55 (operacionHash -> hash LBRACKET datos RBRACKET .)
    LCURLYBRACKET   reduce using rule 55 (operacionHash -> hash LBRACKET datos RBRACKET .)
    SET             reduce using rule 55 (operacionHash -> hash LBRACKET datos RBRACKET .)
    $end            reduce using rule 55 (operacionHash -> hash LBRACKET datos RBRACKET .)
    ELSE            reduce using rule 55 (operacionHash -> hash LBRACKET datos RBRACKET .)
    END             reduce using rule 55 (operacionHash -> hash LBRACKET datos RBRACKET .)
    RETURN          reduce using rule 55 (operacionHash -> hash LBRACKET datos RBRACKET .)
    EQUAL           shift and go to state 174


state 142

    (57) operacionHash -> hash DOT INCLUDE QUESTIONMARK . LPARENTHESES datos RPARENTHESES

    LPARENTHESES    shift and go to state 175


state 143

    (58) operacionHash -> hash DOT DELETE LPARENTHESES . datos RPARENTHESES
    (44) datos -> . INTEGER
    (45) datos -> . FLOAT
    (46) datos -> . STRING

    INTEGER         shift and go to state 56
    FLOAT           shift and go to state 57
    STRING          shift and go to state 58

    datos                          shift and go to state 176

state 144

    (111) operacionSet -> set DOT ADD LPARENTHESES . datos RPARENTHESES
    (112) operacionSet -> set DOT ADD LPARENTHESES . tiposvariables RPARENTHESES
    (44) datos -> . INTEGER
    (45) datos -> . FLOAT
    (46) datos -> . STRING
    (41) tiposvariables -> . VAR
    (42) tiposvariables -> . LOCALVAR
    (43) tiposvariables -> . CONSTANT

    INTEGER         shift and go to state 56
    FLOAT           shift and go to state 57
    STRING          shift and go to state 58
    VAR             shift and go to state 25
    LOCALVAR        shift and go to state 59
    CONSTANT        shift and go to state 26

    datos                          shift and go to state 177
    tiposvariables                 shift and go to state 178

state 145

    (114) operacionSet -> set DOT DELETE LPARENTHESES . datos RPARENTHESES
    (115) operacionSet -> set DOT DELETE LPARENTHESES . tiposvariables RPARENTHESES
    (44) datos -> . INTEGER
    (45) datos -> . FLOAT
    (46) datos -> . STRING
    (41) tiposvariables -> . VAR
    (42) tiposvariables -> . LOCALVAR
    (43) tiposvariables -> . CONSTANT

    INTEGER         shift and go to state 56
    FLOAT           shift and go to state 57
    STRING          shift and go to state 58
    VAR             shift and go to state 25
    LOCALVAR        shift and go to state 59
    CONSTANT        shift and go to state 26

    datos                          shift and go to state 179
    tiposvariables                 shift and go to state 180

state 146

    (83) if -> IF datosvarios operadores datosvarios . cuerpo END
    (84) if -> IF datosvarios operadores datosvarios . cuerpo else
    (17) cuerpo -> . declaracion cuerpo
    (18) cuerpo -> . asignacion cuerpo
    (19) cuerpo -> . loop cuerpo
    (20) cuerpo -> . estructurasDatos cuerpo
    (21) cuerpo -> . if cuerpo
    (22) cuerpo -> . unless cuerpo
    (23) cuerpo -> . impresion cuerpo
    (24) cuerpo -> . operacionSet cuerpo
    (25) cuerpo -> . operacionarray cuerpo
    (26) cuerpo -> . operacionHash cuerpo
    (27) cuerpo -> .
    (29) declaracion -> . tiposvariables EQUAL datos
    (30) declaracion -> . tiposvariables EQUAL estructurasDatos
    (31) declaracion -> . tiposvariables EQUAL expresion
    (32) declaracion -> . tiposvariables EQUAL declaracion
    (33) asignacion -> . LOCALVAR PLUSASSIGN datosAsignacion
    (34) asignacion -> . LOCALVAR MINASSIGN datosAsignacion
    (35) asignacion -> . LOCALVAR DIVASSIGN datosAsignacion
    (36) asignacion -> . LOCALVAR TIMESASSIGN datosAsignacion
    (37) asignacion -> . LOCALVAR MODASSIGN datosAsignacion
    (38) asignacion -> . LOCALVAR EXPASSIGN datosAsignacion
    (28) loop -> . FOR LOCALVAR IN rango cuerpo END
    (47) estructurasDatos -> . hash
    (48) estructurasDatos -> . array
    (49) estructurasDatos -> . set
    (83) if -> . IF datosvarios operadores datosvarios cuerpo END
    (84) if -> . IF datosvarios operadores datosvarios cuerpo else
    (100) unless -> . UNLESS condiciones cuerpo ELSE cuerpo END
    (62) impresion -> . PUTS datos
    (63) impresion -> . PUTS LOCALVAR
    (64) impresion -> . PRINT datos
    (65) impresion -> . PRINT LOCALVAR
    (111) operacionSet -> . set DOT ADD LPARENTHESES datos RPARENTHESES
    (112) operacionSet -> . set DOT ADD LPARENTHESES tiposvariables RPARENTHESES
    (113) operacionSet -> . set DOT CLEAR
    (114) operacionSet -> . set DOT DELETE LPARENTHESES datos RPARENTHESES
    (115) operacionSet -> . set DOT DELETE LPARENTHESES tiposvariables RPARENTHESES
    (97) operacionarray -> . LOCALVAR LBRACKET INTEGER RBRACKET
    (98) operacionarray -> . LOCALVAR DOT TAKE LPARENTHESES INTEGER RPARENTHESES
    (99) operacionarray -> . LOCALVAR DOT DROP LPARENTHESES INTEGER RPARENTHESES
    (55) operacionHash -> . hash LBRACKET datos RBRACKET
    (56) operacionHash -> . hash LBRACKET datos RBRACKET EQUAL datos
    (57) operacionHash -> . hash DOT INCLUDE QUESTIONMARK LPARENTHESES datos RPARENTHESES
    (58) operacionHash -> . hash DOT DELETE LPARENTHESES datos RPARENTHESES
    (59) operacionHash -> . hash DOT KEYS
    (41) tiposvariables -> . VAR
    (42) tiposvariables -> . LOCALVAR
    (43) tiposvariables -> . CONSTANT
    (50) hash -> . LCURLYBRACKET elementoHash RCURLYBRACKET
    (81) array -> . tiposvariables EQUAL LBRACKET datosarray RBRACKET
    (82) array -> . tiposvariables EQUAL LBRACKET RBRACKET
    (105) set -> . SET LBRACKET elementoSet RBRACKET

    END             reduce using rule 27 (cuerpo -> .)
    ELSE            reduce using rule 27 (cuerpo -> .)
    LOCALVAR        shift and go to state 15
    FOR             shift and go to state 17
    IF              shift and go to state 21
    UNLESS          shift and go to state 22
    PUTS            shift and go to state 23
    PRINT           shift and go to state 24
    VAR             shift and go to state 25
    CONSTANT        shift and go to state 26
    LCURLYBRACKET   shift and go to state 27
    SET             shift and go to state 28

    cuerpo                         shift and go to state 181
    declaracion                    shift and go to state 4
    asignacion                     shift and go to state 5
    loop                           shift and go to state 6
    estructurasDatos               shift and go to state 7
    if                             shift and go to state 8
    unless                         shift and go to state 9
    impresion                      shift and go to state 10
    operacionSet                   shift and go to state 11
    operacionarray                 shift and go to state 12
    operacionHash                  shift and go to state 13
    tiposvariables                 shift and go to state 16
    hash                           shift and go to state 18
    array                          shift and go to state 19
    set                            shift and go to state 20

state 147

    (100) unless -> UNLESS condiciones cuerpo ELSE . cuerpo END
    (17) cuerpo -> . declaracion cuerpo
    (18) cuerpo -> . asignacion cuerpo
    (19) cuerpo -> . loop cuerpo
    (20) cuerpo -> . estructurasDatos cuerpo
    (21) cuerpo -> . if cuerpo
    (22) cuerpo -> . unless cuerpo
    (23) cuerpo -> . impresion cuerpo
    (24) cuerpo -> . operacionSet cuerpo
    (25) cuerpo -> . operacionarray cuerpo
    (26) cuerpo -> . operacionHash cuerpo
    (27) cuerpo -> .
    (29) declaracion -> . tiposvariables EQUAL datos
    (30) declaracion -> . tiposvariables EQUAL estructurasDatos
    (31) declaracion -> . tiposvariables EQUAL expresion
    (32) declaracion -> . tiposvariables EQUAL declaracion
    (33) asignacion -> . LOCALVAR PLUSASSIGN datosAsignacion
    (34) asignacion -> . LOCALVAR MINASSIGN datosAsignacion
    (35) asignacion -> . LOCALVAR DIVASSIGN datosAsignacion
    (36) asignacion -> . LOCALVAR TIMESASSIGN datosAsignacion
    (37) asignacion -> . LOCALVAR MODASSIGN datosAsignacion
    (38) asignacion -> . LOCALVAR EXPASSIGN datosAsignacion
    (28) loop -> . FOR LOCALVAR IN rango cuerpo END
    (47) estructurasDatos -> . hash
    (48) estructurasDatos -> . array
    (49) estructurasDatos -> . set
    (83) if -> . IF datosvarios operadores datosvarios cuerpo END
    (84) if -> . IF datosvarios operadores datosvarios cuerpo else
    (100) unless -> . UNLESS condiciones cuerpo ELSE cuerpo END
    (62) impresion -> . PUTS datos
    (63) impresion -> . PUTS LOCALVAR
    (64) impresion -> . PRINT datos
    (65) impresion -> . PRINT LOCALVAR
    (111) operacionSet -> . set DOT ADD LPARENTHESES datos RPARENTHESES
    (112) operacionSet -> . set DOT ADD LPARENTHESES tiposvariables RPARENTHESES
    (113) operacionSet -> . set DOT CLEAR
    (114) operacionSet -> . set DOT DELETE LPARENTHESES datos RPARENTHESES
    (115) operacionSet -> . set DOT DELETE LPARENTHESES tiposvariables RPARENTHESES
    (97) operacionarray -> . LOCALVAR LBRACKET INTEGER RBRACKET
    (98) operacionarray -> . LOCALVAR DOT TAKE LPARENTHESES INTEGER RPARENTHESES
    (99) operacionarray -> . LOCALVAR DOT DROP LPARENTHESES INTEGER RPARENTHESES
    (55) operacionHash -> . hash LBRACKET datos RBRACKET
    (56) operacionHash -> . hash LBRACKET datos RBRACKET EQUAL datos
    (57) operacionHash -> . hash DOT INCLUDE QUESTIONMARK LPARENTHESES datos RPARENTHESES
    (58) operacionHash -> . hash DOT DELETE LPARENTHESES datos RPARENTHESES
    (59) operacionHash -> . hash DOT KEYS
    (41) tiposvariables -> . VAR
    (42) tiposvariables -> . LOCALVAR
    (43) tiposvariables -> . CONSTANT
    (50) hash -> . LCURLYBRACKET elementoHash RCURLYBRACKET
    (81) array -> . tiposvariables EQUAL LBRACKET datosarray RBRACKET
    (82) array -> . tiposvariables EQUAL LBRACKET RBRACKET
    (105) set -> . SET LBRACKET elementoSet RBRACKET

    END             reduce using rule 27 (cuerpo -> .)
    LOCALVAR        shift and go to state 15
    FOR             shift and go to state 17
    IF              shift and go to state 21
    UNLESS          shift and go to state 22
    PUTS            shift and go to state 23
    PRINT           shift and go to state 24
    VAR             shift and go to state 25
    CONSTANT        shift and go to state 26
    LCURLYBRACKET   shift and go to state 27
    SET             shift and go to state 28

    cuerpo                         shift and go to state 182
    declaracion                    shift and go to state 4
    asignacion                     shift and go to state 5
    loop                           shift and go to state 6
    estructurasDatos               shift and go to state 7
    if                             shift and go to state 8
    unless                         shift and go to state 9
    impresion                      shift and go to state 10
    operacionSet                   shift and go to state 11
    operacionarray                 shift and go to state 12
    operacionHash                  shift and go to state 13
    tiposvariables                 shift and go to state 16
    hash                           shift and go to state 18
    array                          shift and go to state 19
    set                            shift and go to state 20

state 148

    (101) condiciones -> tiposvariables operadores tiposvariables .

    LOCALVAR        reduce using rule 101 (condiciones -> tiposvariables operadores tiposvariables .)
    FOR             reduce using rule 101 (condiciones -> tiposvariables operadores tiposvariables .)
    IF              reduce using rule 101 (condiciones -> tiposvariables operadores tiposvariables .)
    UNLESS          reduce using rule 101 (condiciones -> tiposvariables operadores tiposvariables .)
    PUTS            reduce using rule 101 (condiciones -> tiposvariables operadores tiposvariables .)
    PRINT           reduce using rule 101 (condiciones -> tiposvariables operadores tiposvariables .)
    VAR             reduce using rule 101 (condiciones -> tiposvariables operadores tiposvariables .)
    CONSTANT        reduce using rule 101 (condiciones -> tiposvariables operadores tiposvariables .)
    LCURLYBRACKET   reduce using rule 101 (condiciones -> tiposvariables operadores tiposvariables .)
    SET             reduce using rule 101 (condiciones -> tiposvariables operadores tiposvariables .)
    ELSE            reduce using rule 101 (condiciones -> tiposvariables operadores tiposvariables .)


state 149

    (103) condiciones -> tiposvariables operadores datos .

    LOCALVAR        reduce using rule 103 (condiciones -> tiposvariables operadores datos .)
    FOR             reduce using rule 103 (condiciones -> tiposvariables operadores datos .)
    IF              reduce using rule 103 (condiciones -> tiposvariables operadores datos .)
    UNLESS          reduce using rule 103 (condiciones -> tiposvariables operadores datos .)
    PUTS            reduce using rule 103 (condiciones -> tiposvariables operadores datos .)
    PRINT           reduce using rule 103 (condiciones -> tiposvariables operadores datos .)
    VAR             reduce using rule 103 (condiciones -> tiposvariables operadores datos .)
    CONSTANT        reduce using rule 103 (condiciones -> tiposvariables operadores datos .)
    LCURLYBRACKET   reduce using rule 103 (condiciones -> tiposvariables operadores datos .)
    SET             reduce using rule 103 (condiciones -> tiposvariables operadores datos .)
    ELSE            reduce using rule 103 (condiciones -> tiposvariables operadores datos .)


state 150

    (102) condiciones -> datos operadores datos .

    LOCALVAR        reduce using rule 102 (condiciones -> datos operadores datos .)
    FOR             reduce using rule 102 (condiciones -> datos operadores datos .)
    IF              reduce using rule 102 (condiciones -> datos operadores datos .)
    UNLESS          reduce using rule 102 (condiciones -> datos operadores datos .)
    PUTS            reduce using rule 102 (condiciones -> datos operadores datos .)
    PRINT           reduce using rule 102 (condiciones -> datos operadores datos .)
    VAR             reduce using rule 102 (condiciones -> datos operadores datos .)
    CONSTANT        reduce using rule 102 (condiciones -> datos operadores datos .)
    LCURLYBRACKET   reduce using rule 102 (condiciones -> datos operadores datos .)
    SET             reduce using rule 102 (condiciones -> datos operadores datos .)
    ELSE            reduce using rule 102 (condiciones -> datos operadores datos .)


state 151

    (104) condiciones -> datos operadores tiposvariables .

    LOCALVAR        reduce using rule 104 (condiciones -> datos operadores tiposvariables .)
    FOR             reduce using rule 104 (condiciones -> datos operadores tiposvariables .)
    IF              reduce using rule 104 (condiciones -> datos operadores tiposvariables .)
    UNLESS          reduce using rule 104 (condiciones -> datos operadores tiposvariables .)
    PUTS            reduce using rule 104 (condiciones -> datos operadores tiposvariables .)
    PRINT           reduce using rule 104 (condiciones -> datos operadores tiposvariables .)
    VAR             reduce using rule 104 (condiciones -> datos operadores tiposvariables .)
    CONSTANT        reduce using rule 104 (condiciones -> datos operadores tiposvariables .)
    LCURLYBRACKET   reduce using rule 104 (condiciones -> datos operadores tiposvariables .)
    SET             reduce using rule 104 (condiciones -> datos operadores tiposvariables .)
    ELSE            reduce using rule 104 (condiciones -> datos operadores tiposvariables .)


state 152

    (51) elementoHash -> datos EQUAL GREATERTHAN . datos maselementos
    (44) datos -> . INTEGER
    (45) datos -> . FLOAT
    (46) datos -> . STRING

    INTEGER         shift and go to state 56
    FLOAT           shift and go to state 57
    STRING          shift and go to state 58

    datos                          shift and go to state 183

state 153

    (105) set -> SET LBRACKET elementoSet RBRACKET .

    DOT             reduce using rule 105 (set -> SET LBRACKET elementoSet RBRACKET .)
    LOCALVAR        reduce using rule 105 (set -> SET LBRACKET elementoSet RBRACKET .)
    FOR             reduce using rule 105 (set -> SET LBRACKET elementoSet RBRACKET .)
    IF              reduce using rule 105 (set -> SET LBRACKET elementoSet RBRACKET .)
    UNLESS          reduce using rule 105 (set -> SET LBRACKET elementoSet RBRACKET .)
    PUTS            reduce using rule 105 (set -> SET LBRACKET elementoSet RBRACKET .)
    PRINT           reduce using rule 105 (set -> SET LBRACKET elementoSet RBRACKET .)
    VAR             reduce using rule 105 (set -> SET LBRACKET elementoSet RBRACKET .)
    CONSTANT        reduce using rule 105 (set -> SET LBRACKET elementoSet RBRACKET .)
    LCURLYBRACKET   reduce using rule 105 (set -> SET LBRACKET elementoSet RBRACKET .)
    SET             reduce using rule 105 (set -> SET LBRACKET elementoSet RBRACKET .)
    $end            reduce using rule 105 (set -> SET LBRACKET elementoSet RBRACKET .)
    ELSE            reduce using rule 105 (set -> SET LBRACKET elementoSet RBRACKET .)
    END             reduce using rule 105 (set -> SET LBRACKET elementoSet RBRACKET .)
    RETURN          reduce using rule 105 (set -> SET LBRACKET elementoSet RBRACKET .)


state 154

    (108) elementoSet -> datos otroElemento .

    RBRACKET        reduce using rule 108 (elementoSet -> datos otroElemento .)
    COMMA           reduce using rule 108 (elementoSet -> datos otroElemento .)


state 155

    (110) otroElemento -> COMMA . elementoSet otroElemento
    (106) elementoSet -> .
    (107) elementoSet -> . datos
    (108) elementoSet -> . datos otroElemento
    (44) datos -> . INTEGER
    (45) datos -> . FLOAT
    (46) datos -> . STRING

    RBRACKET        reduce using rule 106 (elementoSet -> .)
    COMMA           reduce using rule 106 (elementoSet -> .)
    INTEGER         shift and go to state 56
    FLOAT           shift and go to state 57
    STRING          shift and go to state 58

    elementoSet                    shift and go to state 184
    datos                          shift and go to state 118

state 156

    (8) argumentos -> LOCALVAR EQUAL . LCURLYBRACKET RCURLYBRACKET
    (11) variosargumentos -> LOCALVAR EQUAL . datos
    (13) variosargumentos -> LOCALVAR EQUAL . datos masargumentos
    (44) datos -> . INTEGER
    (45) datos -> . FLOAT
    (46) datos -> . STRING

    LCURLYBRACKET   shift and go to state 185
    INTEGER         shift and go to state 56
    FLOAT           shift and go to state 57
    STRING          shift and go to state 58

    datos                          shift and go to state 186

state 157

    (9) argumentos -> LOCALVAR TWOPOINTS . datos
    (44) datos -> . INTEGER
    (45) datos -> . FLOAT
    (46) datos -> . STRING

    INTEGER         shift and go to state 56
    FLOAT           shift and go to state 57
    STRING          shift and go to state 58

    datos                          shift and go to state 187

state 158

    (12) variosargumentos -> LOCALVAR masargumentos .

    RPARENTHESES    reduce using rule 12 (variosargumentos -> LOCALVAR masargumentos .)


state 159

    (14) masargumentos -> COMMA . variosargumentos
    (10) variosargumentos -> . LOCALVAR
    (11) variosargumentos -> . LOCALVAR EQUAL datos
    (12) variosargumentos -> . LOCALVAR masargumentos
    (13) variosargumentos -> . LOCALVAR EQUAL datos masargumentos

    LOCALVAR        shift and go to state 189

    variosargumentos               shift and go to state 188

state 160

    (3) funcion -> DEF LOCALVAR LPARENTHESES argumentos RPARENTHESES . cuerpo END
    (4) funcion -> DEF LOCALVAR LPARENTHESES argumentos RPARENTHESES . cuerpo retornar END
    (17) cuerpo -> . declaracion cuerpo
    (18) cuerpo -> . asignacion cuerpo
    (19) cuerpo -> . loop cuerpo
    (20) cuerpo -> . estructurasDatos cuerpo
    (21) cuerpo -> . if cuerpo
    (22) cuerpo -> . unless cuerpo
    (23) cuerpo -> . impresion cuerpo
    (24) cuerpo -> . operacionSet cuerpo
    (25) cuerpo -> . operacionarray cuerpo
    (26) cuerpo -> . operacionHash cuerpo
    (27) cuerpo -> .
    (29) declaracion -> . tiposvariables EQUAL datos
    (30) declaracion -> . tiposvariables EQUAL estructurasDatos
    (31) declaracion -> . tiposvariables EQUAL expresion
    (32) declaracion -> . tiposvariables EQUAL declaracion
    (33) asignacion -> . LOCALVAR PLUSASSIGN datosAsignacion
    (34) asignacion -> . LOCALVAR MINASSIGN datosAsignacion
    (35) asignacion -> . LOCALVAR DIVASSIGN datosAsignacion
    (36) asignacion -> . LOCALVAR TIMESASSIGN datosAsignacion
    (37) asignacion -> . LOCALVAR MODASSIGN datosAsignacion
    (38) asignacion -> . LOCALVAR EXPASSIGN datosAsignacion
    (28) loop -> . FOR LOCALVAR IN rango cuerpo END
    (47) estructurasDatos -> . hash
    (48) estructurasDatos -> . array
    (49) estructurasDatos -> . set
    (83) if -> . IF datosvarios operadores datosvarios cuerpo END
    (84) if -> . IF datosvarios operadores datosvarios cuerpo else
    (100) unless -> . UNLESS condiciones cuerpo ELSE cuerpo END
    (62) impresion -> . PUTS datos
    (63) impresion -> . PUTS LOCALVAR
    (64) impresion -> . PRINT datos
    (65) impresion -> . PRINT LOCALVAR
    (111) operacionSet -> . set DOT ADD LPARENTHESES datos RPARENTHESES
    (112) operacionSet -> . set DOT ADD LPARENTHESES tiposvariables RPARENTHESES
    (113) operacionSet -> . set DOT CLEAR
    (114) operacionSet -> . set DOT DELETE LPARENTHESES datos RPARENTHESES
    (115) operacionSet -> . set DOT DELETE LPARENTHESES tiposvariables RPARENTHESES
    (97) operacionarray -> . LOCALVAR LBRACKET INTEGER RBRACKET
    (98) operacionarray -> . LOCALVAR DOT TAKE LPARENTHESES INTEGER RPARENTHESES
    (99) operacionarray -> . LOCALVAR DOT DROP LPARENTHESES INTEGER RPARENTHESES
    (55) operacionHash -> . hash LBRACKET datos RBRACKET
    (56) operacionHash -> . hash LBRACKET datos RBRACKET EQUAL datos
    (57) operacionHash -> . hash DOT INCLUDE QUESTIONMARK LPARENTHESES datos RPARENTHESES
    (58) operacionHash -> . hash DOT DELETE LPARENTHESES datos RPARENTHESES
    (59) operacionHash -> . hash DOT KEYS
    (41) tiposvariables -> . VAR
    (42) tiposvariables -> . LOCALVAR
    (43) tiposvariables -> . CONSTANT
    (50) hash -> . LCURLYBRACKET elementoHash RCURLYBRACKET
    (81) array -> . tiposvariables EQUAL LBRACKET datosarray RBRACKET
    (82) array -> . tiposvariables EQUAL LBRACKET RBRACKET
    (105) set -> . SET LBRACKET elementoSet RBRACKET

    END             reduce using rule 27 (cuerpo -> .)
    RETURN          reduce using rule 27 (cuerpo -> .)
    LOCALVAR        shift and go to state 15
    FOR             shift and go to state 17
    IF              shift and go to state 21
    UNLESS          shift and go to state 22
    PUTS            shift and go to state 23
    PRINT           shift and go to state 24
    VAR             shift and go to state 25
    CONSTANT        shift and go to state 26
    LCURLYBRACKET   shift and go to state 27
    SET             shift and go to state 28

    cuerpo                         shift and go to state 190
    declaracion                    shift and go to state 4
    asignacion                     shift and go to state 5
    loop                           shift and go to state 6
    estructurasDatos               shift and go to state 7
    if                             shift and go to state 8
    unless                         shift and go to state 9
    impresion                      shift and go to state 10
    operacionSet                   shift and go to state 11
    operacionarray                 shift and go to state 12
    operacionHash                  shift and go to state 13
    tiposvariables                 shift and go to state 16
    hash                           shift and go to state 18
    array                          shift and go to state 19
    set                            shift and go to state 20

state 161

    (6) argumentos -> MULTIPLY LOCALVAR .

    RPARENTHESES    reduce using rule 6 (argumentos -> MULTIPLY LOCALVAR .)


state 162

    (7) argumentos -> TWOSTARS LOCALVAR .

    RPARENTHESES    reduce using rule 7 (argumentos -> TWOSTARS LOCALVAR .)


state 163

    (98) operacionarray -> LOCALVAR DOT TAKE LPARENTHESES INTEGER . RPARENTHESES

    RPARENTHESES    shift and go to state 191


state 164

    (99) operacionarray -> LOCALVAR DOT DROP LPARENTHESES INTEGER . RPARENTHESES

    RPARENTHESES    shift and go to state 192


state 165

    (81) array -> tiposvariables EQUAL LBRACKET datosarray RBRACKET .

    LOCALVAR        reduce using rule 81 (array -> tiposvariables EQUAL LBRACKET datosarray RBRACKET .)
    FOR             reduce using rule 81 (array -> tiposvariables EQUAL LBRACKET datosarray RBRACKET .)
    IF              reduce using rule 81 (array -> tiposvariables EQUAL LBRACKET datosarray RBRACKET .)
    UNLESS          reduce using rule 81 (array -> tiposvariables EQUAL LBRACKET datosarray RBRACKET .)
    PUTS            reduce using rule 81 (array -> tiposvariables EQUAL LBRACKET datosarray RBRACKET .)
    PRINT           reduce using rule 81 (array -> tiposvariables EQUAL LBRACKET datosarray RBRACKET .)
    VAR             reduce using rule 81 (array -> tiposvariables EQUAL LBRACKET datosarray RBRACKET .)
    CONSTANT        reduce using rule 81 (array -> tiposvariables EQUAL LBRACKET datosarray RBRACKET .)
    LCURLYBRACKET   reduce using rule 81 (array -> tiposvariables EQUAL LBRACKET datosarray RBRACKET .)
    SET             reduce using rule 81 (array -> tiposvariables EQUAL LBRACKET datosarray RBRACKET .)
    $end            reduce using rule 81 (array -> tiposvariables EQUAL LBRACKET datosarray RBRACKET .)
    ELSE            reduce using rule 81 (array -> tiposvariables EQUAL LBRACKET datosarray RBRACKET .)
    END             reduce using rule 81 (array -> tiposvariables EQUAL LBRACKET datosarray RBRACKET .)
    RETURN          reduce using rule 81 (array -> tiposvariables EQUAL LBRACKET datosarray RBRACKET .)


state 166

    (96) datosarray -> datosarray COMMA . datosvarios
    (93) datosvarios -> . datos
    (94) datosvarios -> . tiposvariables
    (44) datos -> . INTEGER
    (45) datos -> . FLOAT
    (46) datos -> . STRING
    (41) tiposvariables -> . VAR
    (42) tiposvariables -> . LOCALVAR
    (43) tiposvariables -> . CONSTANT

    INTEGER         shift and go to state 56
    FLOAT           shift and go to state 57
    STRING          shift and go to state 58
    VAR             shift and go to state 25
    LOCALVAR        shift and go to state 59
    CONSTANT        shift and go to state 26

    datosvarios                    shift and go to state 193
    datos                          shift and go to state 54
    tiposvariables                 shift and go to state 55

state 167

    (73) masoperaciones -> operador expresion . masoperaciones
    (75) masoperaciones -> operador expresion .
    (73) masoperaciones -> . operador expresion masoperaciones
    (74) masoperaciones -> . operador number
    (75) masoperaciones -> . operador expresion
    (76) operador -> . PLUS
    (77) operador -> . MINUS
    (78) operador -> . MULTIPLY
    (79) operador -> . DIVIDE
    (80) operador -> . PERCENTAGE

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for PERCENTAGE resolved as shift
    LOCALVAR        reduce using rule 75 (masoperaciones -> operador expresion .)
    FOR             reduce using rule 75 (masoperaciones -> operador expresion .)
    IF              reduce using rule 75 (masoperaciones -> operador expresion .)
    UNLESS          reduce using rule 75 (masoperaciones -> operador expresion .)
    PUTS            reduce using rule 75 (masoperaciones -> operador expresion .)
    PRINT           reduce using rule 75 (masoperaciones -> operador expresion .)
    VAR             reduce using rule 75 (masoperaciones -> operador expresion .)
    CONSTANT        reduce using rule 75 (masoperaciones -> operador expresion .)
    LCURLYBRACKET   reduce using rule 75 (masoperaciones -> operador expresion .)
    SET             reduce using rule 75 (masoperaciones -> operador expresion .)
    $end            reduce using rule 75 (masoperaciones -> operador expresion .)
    ELSE            reduce using rule 75 (masoperaciones -> operador expresion .)
    END             reduce using rule 75 (masoperaciones -> operador expresion .)
    RETURN          reduce using rule 75 (masoperaciones -> operador expresion .)
    RPARENTHESES    reduce using rule 75 (masoperaciones -> operador expresion .)
    PLUS            shift and go to state 132
    MINUS           shift and go to state 133
    MULTIPLY        shift and go to state 134
    DIVIDE          shift and go to state 135
    PERCENTAGE      shift and go to state 136

  ! PLUS            [ reduce using rule 75 (masoperaciones -> operador expresion .) ]
  ! MINUS           [ reduce using rule 75 (masoperaciones -> operador expresion .) ]
  ! MULTIPLY        [ reduce using rule 75 (masoperaciones -> operador expresion .) ]
  ! DIVIDE          [ reduce using rule 75 (masoperaciones -> operador expresion .) ]
  ! PERCENTAGE      [ reduce using rule 75 (masoperaciones -> operador expresion .) ]

    operador                       shift and go to state 131
    masoperaciones                 shift and go to state 194

state 168

    (74) masoperaciones -> operador number .
    (71) operacion -> number . operador number
    (76) operador -> . PLUS
    (77) operador -> . MINUS
    (78) operador -> . MULTIPLY
    (79) operador -> . DIVIDE
    (80) operador -> . PERCENTAGE

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for PERCENTAGE resolved as shift
    LOCALVAR        reduce using rule 74 (masoperaciones -> operador number .)
    FOR             reduce using rule 74 (masoperaciones -> operador number .)
    IF              reduce using rule 74 (masoperaciones -> operador number .)
    UNLESS          reduce using rule 74 (masoperaciones -> operador number .)
    PUTS            reduce using rule 74 (masoperaciones -> operador number .)
    PRINT           reduce using rule 74 (masoperaciones -> operador number .)
    VAR             reduce using rule 74 (masoperaciones -> operador number .)
    CONSTANT        reduce using rule 74 (masoperaciones -> operador number .)
    LCURLYBRACKET   reduce using rule 74 (masoperaciones -> operador number .)
    SET             reduce using rule 74 (masoperaciones -> operador number .)
    $end            reduce using rule 74 (masoperaciones -> operador number .)
    ELSE            reduce using rule 74 (masoperaciones -> operador number .)
    END             reduce using rule 74 (masoperaciones -> operador number .)
    RETURN          reduce using rule 74 (masoperaciones -> operador number .)
    RPARENTHESES    reduce using rule 74 (masoperaciones -> operador number .)
    PLUS            shift and go to state 132
    MINUS           shift and go to state 133
    MULTIPLY        shift and go to state 134
    DIVIDE          shift and go to state 135
    PERCENTAGE      shift and go to state 136

  ! PLUS            [ reduce using rule 74 (masoperaciones -> operador number .) ]
  ! MINUS           [ reduce using rule 74 (masoperaciones -> operador number .) ]
  ! MULTIPLY        [ reduce using rule 74 (masoperaciones -> operador number .) ]
  ! DIVIDE          [ reduce using rule 74 (masoperaciones -> operador number .) ]
  ! PERCENTAGE      [ reduce using rule 74 (masoperaciones -> operador number .) ]

    operador                       shift and go to state 138

state 169

    (69) expresion -> LPARENTHESES operacion RPARENTHESES .
    (70) expresion -> LPARENTHESES operacion RPARENTHESES . masoperaciones
    (73) masoperaciones -> . operador expresion masoperaciones
    (74) masoperaciones -> . operador number
    (75) masoperaciones -> . operador expresion
    (76) operador -> . PLUS
    (77) operador -> . MINUS
    (78) operador -> . MULTIPLY
    (79) operador -> . DIVIDE
    (80) operador -> . PERCENTAGE

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for PERCENTAGE resolved as shift
    LOCALVAR        reduce using rule 69 (expresion -> LPARENTHESES operacion RPARENTHESES .)
    FOR             reduce using rule 69 (expresion -> LPARENTHESES operacion RPARENTHESES .)
    IF              reduce using rule 69 (expresion -> LPARENTHESES operacion RPARENTHESES .)
    UNLESS          reduce using rule 69 (expresion -> LPARENTHESES operacion RPARENTHESES .)
    PUTS            reduce using rule 69 (expresion -> LPARENTHESES operacion RPARENTHESES .)
    PRINT           reduce using rule 69 (expresion -> LPARENTHESES operacion RPARENTHESES .)
    VAR             reduce using rule 69 (expresion -> LPARENTHESES operacion RPARENTHESES .)
    CONSTANT        reduce using rule 69 (expresion -> LPARENTHESES operacion RPARENTHESES .)
    LCURLYBRACKET   reduce using rule 69 (expresion -> LPARENTHESES operacion RPARENTHESES .)
    SET             reduce using rule 69 (expresion -> LPARENTHESES operacion RPARENTHESES .)
    $end            reduce using rule 69 (expresion -> LPARENTHESES operacion RPARENTHESES .)
    ELSE            reduce using rule 69 (expresion -> LPARENTHESES operacion RPARENTHESES .)
    END             reduce using rule 69 (expresion -> LPARENTHESES operacion RPARENTHESES .)
    RETURN          reduce using rule 69 (expresion -> LPARENTHESES operacion RPARENTHESES .)
    RPARENTHESES    reduce using rule 69 (expresion -> LPARENTHESES operacion RPARENTHESES .)
    PLUS            shift and go to state 132
    MINUS           shift and go to state 133
    MULTIPLY        shift and go to state 134
    DIVIDE          shift and go to state 135
    PERCENTAGE      shift and go to state 136

  ! PLUS            [ reduce using rule 69 (expresion -> LPARENTHESES operacion RPARENTHESES .) ]
  ! MINUS           [ reduce using rule 69 (expresion -> LPARENTHESES operacion RPARENTHESES .) ]
  ! MULTIPLY        [ reduce using rule 69 (expresion -> LPARENTHESES operacion RPARENTHESES .) ]
  ! DIVIDE          [ reduce using rule 69 (expresion -> LPARENTHESES operacion RPARENTHESES .) ]
  ! PERCENTAGE      [ reduce using rule 69 (expresion -> LPARENTHESES operacion RPARENTHESES .) ]

    masoperaciones                 shift and go to state 195
    operador                       shift and go to state 131

state 170

    (71) operacion -> number operador number .

    PLUS            reduce using rule 71 (operacion -> number operador number .)
    MINUS           reduce using rule 71 (operacion -> number operador number .)
    MULTIPLY        reduce using rule 71 (operacion -> number operador number .)
    DIVIDE          reduce using rule 71 (operacion -> number operador number .)
    PERCENTAGE      reduce using rule 71 (operacion -> number operador number .)
    LOCALVAR        reduce using rule 71 (operacion -> number operador number .)
    FOR             reduce using rule 71 (operacion -> number operador number .)
    IF              reduce using rule 71 (operacion -> number operador number .)
    UNLESS          reduce using rule 71 (operacion -> number operador number .)
    PUTS            reduce using rule 71 (operacion -> number operador number .)
    PRINT           reduce using rule 71 (operacion -> number operador number .)
    VAR             reduce using rule 71 (operacion -> number operador number .)
    CONSTANT        reduce using rule 71 (operacion -> number operador number .)
    LCURLYBRACKET   reduce using rule 71 (operacion -> number operador number .)
    SET             reduce using rule 71 (operacion -> number operador number .)
    $end            reduce using rule 71 (operacion -> number operador number .)
    ELSE            reduce using rule 71 (operacion -> number operador number .)
    END             reduce using rule 71 (operacion -> number operador number .)
    RETURN          reduce using rule 71 (operacion -> number operador number .)
    RPARENTHESES    reduce using rule 71 (operacion -> number operador number .)


state 171

    (28) loop -> FOR LOCALVAR IN rango cuerpo . END

    END             shift and go to state 196


state 172

    (60) rango -> INTEGER RANGEINCLUSIVE . INTEGER

    INTEGER         shift and go to state 197


state 173

    (61) rango -> INTEGER RANGEXCLUSIVE . INTEGER

    INTEGER         shift and go to state 198


state 174

    (56) operacionHash -> hash LBRACKET datos RBRACKET EQUAL . datos
    (44) datos -> . INTEGER
    (45) datos -> . FLOAT
    (46) datos -> . STRING

    INTEGER         shift and go to state 56
    FLOAT           shift and go to state 57
    STRING          shift and go to state 58

    datos                          shift and go to state 199

state 175

    (57) operacionHash -> hash DOT INCLUDE QUESTIONMARK LPARENTHESES . datos RPARENTHESES
    (44) datos -> . INTEGER
    (45) datos -> . FLOAT
    (46) datos -> . STRING

    INTEGER         shift and go to state 56
    FLOAT           shift and go to state 57
    STRING          shift and go to state 58

    datos                          shift and go to state 200

state 176

    (58) operacionHash -> hash DOT DELETE LPARENTHESES datos . RPARENTHESES

    RPARENTHESES    shift and go to state 201


state 177

    (111) operacionSet -> set DOT ADD LPARENTHESES datos . RPARENTHESES

    RPARENTHESES    shift and go to state 202


state 178

    (112) operacionSet -> set DOT ADD LPARENTHESES tiposvariables . RPARENTHESES

    RPARENTHESES    shift and go to state 203


state 179

    (114) operacionSet -> set DOT DELETE LPARENTHESES datos . RPARENTHESES

    RPARENTHESES    shift and go to state 204


state 180

    (115) operacionSet -> set DOT DELETE LPARENTHESES tiposvariables . RPARENTHESES

    RPARENTHESES    shift and go to state 205


state 181

    (83) if -> IF datosvarios operadores datosvarios cuerpo . END
    (84) if -> IF datosvarios operadores datosvarios cuerpo . else
    (85) else -> . ELSE cuerpo END

    END             shift and go to state 206
    ELSE            shift and go to state 208

    else                           shift and go to state 207

state 182

    (100) unless -> UNLESS condiciones cuerpo ELSE cuerpo . END

    END             shift and go to state 209


state 183

    (51) elementoHash -> datos EQUAL GREATERTHAN datos . maselementos
    (53) maselementos -> .
    (54) maselementos -> . COMMA elementoHash maselementos

  ! shift/reduce conflict for COMMA resolved as shift
    RCURLYBRACKET   reduce using rule 53 (maselementos -> .)
    COMMA           shift and go to state 211

  ! COMMA           [ reduce using rule 53 (maselementos -> .) ]

    maselementos                   shift and go to state 210

state 184

    (110) otroElemento -> COMMA elementoSet . otroElemento
    (109) otroElemento -> .
    (110) otroElemento -> . COMMA elementoSet otroElemento

  ! shift/reduce conflict for COMMA resolved as shift
    RBRACKET        reduce using rule 109 (otroElemento -> .)
    COMMA           shift and go to state 155

  ! COMMA           [ reduce using rule 109 (otroElemento -> .) ]

    otroElemento                   shift and go to state 212

state 185

    (8) argumentos -> LOCALVAR EQUAL LCURLYBRACKET . RCURLYBRACKET

    RCURLYBRACKET   shift and go to state 213


state 186

    (11) variosargumentos -> LOCALVAR EQUAL datos .
    (13) variosargumentos -> LOCALVAR EQUAL datos . masargumentos
    (14) masargumentos -> . COMMA variosargumentos

    RPARENTHESES    reduce using rule 11 (variosargumentos -> LOCALVAR EQUAL datos .)
    COMMA           shift and go to state 159

    masargumentos                  shift and go to state 214

state 187

    (9) argumentos -> LOCALVAR TWOPOINTS datos .

    RPARENTHESES    reduce using rule 9 (argumentos -> LOCALVAR TWOPOINTS datos .)


state 188

    (14) masargumentos -> COMMA variosargumentos .

    RPARENTHESES    reduce using rule 14 (masargumentos -> COMMA variosargumentos .)


state 189

    (10) variosargumentos -> LOCALVAR .
    (11) variosargumentos -> LOCALVAR . EQUAL datos
    (12) variosargumentos -> LOCALVAR . masargumentos
    (13) variosargumentos -> LOCALVAR . EQUAL datos masargumentos
    (14) masargumentos -> . COMMA variosargumentos

    RPARENTHESES    reduce using rule 10 (variosargumentos -> LOCALVAR .)
    EQUAL           shift and go to state 215
    COMMA           shift and go to state 159

    masargumentos                  shift and go to state 158

state 190

    (3) funcion -> DEF LOCALVAR LPARENTHESES argumentos RPARENTHESES cuerpo . END
    (4) funcion -> DEF LOCALVAR LPARENTHESES argumentos RPARENTHESES cuerpo . retornar END
    (15) retornar -> . RETURN LOCALVAR
    (16) retornar -> . RETURN datos

    END             shift and go to state 216
    RETURN          shift and go to state 218

    retornar                       shift and go to state 217

state 191

    (98) operacionarray -> LOCALVAR DOT TAKE LPARENTHESES INTEGER RPARENTHESES .

    LOCALVAR        reduce using rule 98 (operacionarray -> LOCALVAR DOT TAKE LPARENTHESES INTEGER RPARENTHESES .)
    FOR             reduce using rule 98 (operacionarray -> LOCALVAR DOT TAKE LPARENTHESES INTEGER RPARENTHESES .)
    IF              reduce using rule 98 (operacionarray -> LOCALVAR DOT TAKE LPARENTHESES INTEGER RPARENTHESES .)
    UNLESS          reduce using rule 98 (operacionarray -> LOCALVAR DOT TAKE LPARENTHESES INTEGER RPARENTHESES .)
    PUTS            reduce using rule 98 (operacionarray -> LOCALVAR DOT TAKE LPARENTHESES INTEGER RPARENTHESES .)
    PRINT           reduce using rule 98 (operacionarray -> LOCALVAR DOT TAKE LPARENTHESES INTEGER RPARENTHESES .)
    VAR             reduce using rule 98 (operacionarray -> LOCALVAR DOT TAKE LPARENTHESES INTEGER RPARENTHESES .)
    CONSTANT        reduce using rule 98 (operacionarray -> LOCALVAR DOT TAKE LPARENTHESES INTEGER RPARENTHESES .)
    LCURLYBRACKET   reduce using rule 98 (operacionarray -> LOCALVAR DOT TAKE LPARENTHESES INTEGER RPARENTHESES .)
    SET             reduce using rule 98 (operacionarray -> LOCALVAR DOT TAKE LPARENTHESES INTEGER RPARENTHESES .)
    $end            reduce using rule 98 (operacionarray -> LOCALVAR DOT TAKE LPARENTHESES INTEGER RPARENTHESES .)
    ELSE            reduce using rule 98 (operacionarray -> LOCALVAR DOT TAKE LPARENTHESES INTEGER RPARENTHESES .)
    END             reduce using rule 98 (operacionarray -> LOCALVAR DOT TAKE LPARENTHESES INTEGER RPARENTHESES .)
    RETURN          reduce using rule 98 (operacionarray -> LOCALVAR DOT TAKE LPARENTHESES INTEGER RPARENTHESES .)


state 192

    (99) operacionarray -> LOCALVAR DOT DROP LPARENTHESES INTEGER RPARENTHESES .

    LOCALVAR        reduce using rule 99 (operacionarray -> LOCALVAR DOT DROP LPARENTHESES INTEGER RPARENTHESES .)
    FOR             reduce using rule 99 (operacionarray -> LOCALVAR DOT DROP LPARENTHESES INTEGER RPARENTHESES .)
    IF              reduce using rule 99 (operacionarray -> LOCALVAR DOT DROP LPARENTHESES INTEGER RPARENTHESES .)
    UNLESS          reduce using rule 99 (operacionarray -> LOCALVAR DOT DROP LPARENTHESES INTEGER RPARENTHESES .)
    PUTS            reduce using rule 99 (operacionarray -> LOCALVAR DOT DROP LPARENTHESES INTEGER RPARENTHESES .)
    PRINT           reduce using rule 99 (operacionarray -> LOCALVAR DOT DROP LPARENTHESES INTEGER RPARENTHESES .)
    VAR             reduce using rule 99 (operacionarray -> LOCALVAR DOT DROP LPARENTHESES INTEGER RPARENTHESES .)
    CONSTANT        reduce using rule 99 (operacionarray -> LOCALVAR DOT DROP LPARENTHESES INTEGER RPARENTHESES .)
    LCURLYBRACKET   reduce using rule 99 (operacionarray -> LOCALVAR DOT DROP LPARENTHESES INTEGER RPARENTHESES .)
    SET             reduce using rule 99 (operacionarray -> LOCALVAR DOT DROP LPARENTHESES INTEGER RPARENTHESES .)
    $end            reduce using rule 99 (operacionarray -> LOCALVAR DOT DROP LPARENTHESES INTEGER RPARENTHESES .)
    ELSE            reduce using rule 99 (operacionarray -> LOCALVAR DOT DROP LPARENTHESES INTEGER RPARENTHESES .)
    END             reduce using rule 99 (operacionarray -> LOCALVAR DOT DROP LPARENTHESES INTEGER RPARENTHESES .)
    RETURN          reduce using rule 99 (operacionarray -> LOCALVAR DOT DROP LPARENTHESES INTEGER RPARENTHESES .)


state 193

    (96) datosarray -> datosarray COMMA datosvarios .

    RBRACKET        reduce using rule 96 (datosarray -> datosarray COMMA datosvarios .)
    COMMA           reduce using rule 96 (datosarray -> datosarray COMMA datosvarios .)


state 194

    (73) masoperaciones -> operador expresion masoperaciones .

    PLUS            reduce using rule 73 (masoperaciones -> operador expresion masoperaciones .)
    MINUS           reduce using rule 73 (masoperaciones -> operador expresion masoperaciones .)
    MULTIPLY        reduce using rule 73 (masoperaciones -> operador expresion masoperaciones .)
    DIVIDE          reduce using rule 73 (masoperaciones -> operador expresion masoperaciones .)
    PERCENTAGE      reduce using rule 73 (masoperaciones -> operador expresion masoperaciones .)
    LOCALVAR        reduce using rule 73 (masoperaciones -> operador expresion masoperaciones .)
    FOR             reduce using rule 73 (masoperaciones -> operador expresion masoperaciones .)
    IF              reduce using rule 73 (masoperaciones -> operador expresion masoperaciones .)
    UNLESS          reduce using rule 73 (masoperaciones -> operador expresion masoperaciones .)
    PUTS            reduce using rule 73 (masoperaciones -> operador expresion masoperaciones .)
    PRINT           reduce using rule 73 (masoperaciones -> operador expresion masoperaciones .)
    VAR             reduce using rule 73 (masoperaciones -> operador expresion masoperaciones .)
    CONSTANT        reduce using rule 73 (masoperaciones -> operador expresion masoperaciones .)
    LCURLYBRACKET   reduce using rule 73 (masoperaciones -> operador expresion masoperaciones .)
    SET             reduce using rule 73 (masoperaciones -> operador expresion masoperaciones .)
    $end            reduce using rule 73 (masoperaciones -> operador expresion masoperaciones .)
    ELSE            reduce using rule 73 (masoperaciones -> operador expresion masoperaciones .)
    END             reduce using rule 73 (masoperaciones -> operador expresion masoperaciones .)
    RETURN          reduce using rule 73 (masoperaciones -> operador expresion masoperaciones .)
    RPARENTHESES    reduce using rule 73 (masoperaciones -> operador expresion masoperaciones .)


state 195

    (70) expresion -> LPARENTHESES operacion RPARENTHESES masoperaciones .

    LOCALVAR        reduce using rule 70 (expresion -> LPARENTHESES operacion RPARENTHESES masoperaciones .)
    FOR             reduce using rule 70 (expresion -> LPARENTHESES operacion RPARENTHESES masoperaciones .)
    IF              reduce using rule 70 (expresion -> LPARENTHESES operacion RPARENTHESES masoperaciones .)
    UNLESS          reduce using rule 70 (expresion -> LPARENTHESES operacion RPARENTHESES masoperaciones .)
    PUTS            reduce using rule 70 (expresion -> LPARENTHESES operacion RPARENTHESES masoperaciones .)
    PRINT           reduce using rule 70 (expresion -> LPARENTHESES operacion RPARENTHESES masoperaciones .)
    VAR             reduce using rule 70 (expresion -> LPARENTHESES operacion RPARENTHESES masoperaciones .)
    CONSTANT        reduce using rule 70 (expresion -> LPARENTHESES operacion RPARENTHESES masoperaciones .)
    LCURLYBRACKET   reduce using rule 70 (expresion -> LPARENTHESES operacion RPARENTHESES masoperaciones .)
    SET             reduce using rule 70 (expresion -> LPARENTHESES operacion RPARENTHESES masoperaciones .)
    $end            reduce using rule 70 (expresion -> LPARENTHESES operacion RPARENTHESES masoperaciones .)
    ELSE            reduce using rule 70 (expresion -> LPARENTHESES operacion RPARENTHESES masoperaciones .)
    END             reduce using rule 70 (expresion -> LPARENTHESES operacion RPARENTHESES masoperaciones .)
    RETURN          reduce using rule 70 (expresion -> LPARENTHESES operacion RPARENTHESES masoperaciones .)
    PLUS            reduce using rule 70 (expresion -> LPARENTHESES operacion RPARENTHESES masoperaciones .)
    MINUS           reduce using rule 70 (expresion -> LPARENTHESES operacion RPARENTHESES masoperaciones .)
    MULTIPLY        reduce using rule 70 (expresion -> LPARENTHESES operacion RPARENTHESES masoperaciones .)
    DIVIDE          reduce using rule 70 (expresion -> LPARENTHESES operacion RPARENTHESES masoperaciones .)
    PERCENTAGE      reduce using rule 70 (expresion -> LPARENTHESES operacion RPARENTHESES masoperaciones .)
    RPARENTHESES    reduce using rule 70 (expresion -> LPARENTHESES operacion RPARENTHESES masoperaciones .)


state 196

    (28) loop -> FOR LOCALVAR IN rango cuerpo END .

    LOCALVAR        reduce using rule 28 (loop -> FOR LOCALVAR IN rango cuerpo END .)
    FOR             reduce using rule 28 (loop -> FOR LOCALVAR IN rango cuerpo END .)
    IF              reduce using rule 28 (loop -> FOR LOCALVAR IN rango cuerpo END .)
    UNLESS          reduce using rule 28 (loop -> FOR LOCALVAR IN rango cuerpo END .)
    PUTS            reduce using rule 28 (loop -> FOR LOCALVAR IN rango cuerpo END .)
    PRINT           reduce using rule 28 (loop -> FOR LOCALVAR IN rango cuerpo END .)
    VAR             reduce using rule 28 (loop -> FOR LOCALVAR IN rango cuerpo END .)
    CONSTANT        reduce using rule 28 (loop -> FOR LOCALVAR IN rango cuerpo END .)
    LCURLYBRACKET   reduce using rule 28 (loop -> FOR LOCALVAR IN rango cuerpo END .)
    SET             reduce using rule 28 (loop -> FOR LOCALVAR IN rango cuerpo END .)
    $end            reduce using rule 28 (loop -> FOR LOCALVAR IN rango cuerpo END .)
    ELSE            reduce using rule 28 (loop -> FOR LOCALVAR IN rango cuerpo END .)
    END             reduce using rule 28 (loop -> FOR LOCALVAR IN rango cuerpo END .)
    RETURN          reduce using rule 28 (loop -> FOR LOCALVAR IN rango cuerpo END .)


state 197

    (60) rango -> INTEGER RANGEINCLUSIVE INTEGER .

    LOCALVAR        reduce using rule 60 (rango -> INTEGER RANGEINCLUSIVE INTEGER .)
    FOR             reduce using rule 60 (rango -> INTEGER RANGEINCLUSIVE INTEGER .)
    IF              reduce using rule 60 (rango -> INTEGER RANGEINCLUSIVE INTEGER .)
    UNLESS          reduce using rule 60 (rango -> INTEGER RANGEINCLUSIVE INTEGER .)
    PUTS            reduce using rule 60 (rango -> INTEGER RANGEINCLUSIVE INTEGER .)
    PRINT           reduce using rule 60 (rango -> INTEGER RANGEINCLUSIVE INTEGER .)
    VAR             reduce using rule 60 (rango -> INTEGER RANGEINCLUSIVE INTEGER .)
    CONSTANT        reduce using rule 60 (rango -> INTEGER RANGEINCLUSIVE INTEGER .)
    LCURLYBRACKET   reduce using rule 60 (rango -> INTEGER RANGEINCLUSIVE INTEGER .)
    SET             reduce using rule 60 (rango -> INTEGER RANGEINCLUSIVE INTEGER .)
    END             reduce using rule 60 (rango -> INTEGER RANGEINCLUSIVE INTEGER .)


state 198

    (61) rango -> INTEGER RANGEXCLUSIVE INTEGER .

    LOCALVAR        reduce using rule 61 (rango -> INTEGER RANGEXCLUSIVE INTEGER .)
    FOR             reduce using rule 61 (rango -> INTEGER RANGEXCLUSIVE INTEGER .)
    IF              reduce using rule 61 (rango -> INTEGER RANGEXCLUSIVE INTEGER .)
    UNLESS          reduce using rule 61 (rango -> INTEGER RANGEXCLUSIVE INTEGER .)
    PUTS            reduce using rule 61 (rango -> INTEGER RANGEXCLUSIVE INTEGER .)
    PRINT           reduce using rule 61 (rango -> INTEGER RANGEXCLUSIVE INTEGER .)
    VAR             reduce using rule 61 (rango -> INTEGER RANGEXCLUSIVE INTEGER .)
    CONSTANT        reduce using rule 61 (rango -> INTEGER RANGEXCLUSIVE INTEGER .)
    LCURLYBRACKET   reduce using rule 61 (rango -> INTEGER RANGEXCLUSIVE INTEGER .)
    SET             reduce using rule 61 (rango -> INTEGER RANGEXCLUSIVE INTEGER .)
    END             reduce using rule 61 (rango -> INTEGER RANGEXCLUSIVE INTEGER .)


state 199

    (56) operacionHash -> hash LBRACKET datos RBRACKET EQUAL datos .

    LOCALVAR        reduce using rule 56 (operacionHash -> hash LBRACKET datos RBRACKET EQUAL datos .)
    FOR             reduce using rule 56 (operacionHash -> hash LBRACKET datos RBRACKET EQUAL datos .)
    IF              reduce using rule 56 (operacionHash -> hash LBRACKET datos RBRACKET EQUAL datos .)
    UNLESS          reduce using rule 56 (operacionHash -> hash LBRACKET datos RBRACKET EQUAL datos .)
    PUTS            reduce using rule 56 (operacionHash -> hash LBRACKET datos RBRACKET EQUAL datos .)
    PRINT           reduce using rule 56 (operacionHash -> hash LBRACKET datos RBRACKET EQUAL datos .)
    VAR             reduce using rule 56 (operacionHash -> hash LBRACKET datos RBRACKET EQUAL datos .)
    CONSTANT        reduce using rule 56 (operacionHash -> hash LBRACKET datos RBRACKET EQUAL datos .)
    LCURLYBRACKET   reduce using rule 56 (operacionHash -> hash LBRACKET datos RBRACKET EQUAL datos .)
    SET             reduce using rule 56 (operacionHash -> hash LBRACKET datos RBRACKET EQUAL datos .)
    $end            reduce using rule 56 (operacionHash -> hash LBRACKET datos RBRACKET EQUAL datos .)
    ELSE            reduce using rule 56 (operacionHash -> hash LBRACKET datos RBRACKET EQUAL datos .)
    END             reduce using rule 56 (operacionHash -> hash LBRACKET datos RBRACKET EQUAL datos .)
    RETURN          reduce using rule 56 (operacionHash -> hash LBRACKET datos RBRACKET EQUAL datos .)


state 200

    (57) operacionHash -> hash DOT INCLUDE QUESTIONMARK LPARENTHESES datos . RPARENTHESES

    RPARENTHESES    shift and go to state 219


state 201

    (58) operacionHash -> hash DOT DELETE LPARENTHESES datos RPARENTHESES .

    LOCALVAR        reduce using rule 58 (operacionHash -> hash DOT DELETE LPARENTHESES datos RPARENTHESES .)
    FOR             reduce using rule 58 (operacionHash -> hash DOT DELETE LPARENTHESES datos RPARENTHESES .)
    IF              reduce using rule 58 (operacionHash -> hash DOT DELETE LPARENTHESES datos RPARENTHESES .)
    UNLESS          reduce using rule 58 (operacionHash -> hash DOT DELETE LPARENTHESES datos RPARENTHESES .)
    PUTS            reduce using rule 58 (operacionHash -> hash DOT DELETE LPARENTHESES datos RPARENTHESES .)
    PRINT           reduce using rule 58 (operacionHash -> hash DOT DELETE LPARENTHESES datos RPARENTHESES .)
    VAR             reduce using rule 58 (operacionHash -> hash DOT DELETE LPARENTHESES datos RPARENTHESES .)
    CONSTANT        reduce using rule 58 (operacionHash -> hash DOT DELETE LPARENTHESES datos RPARENTHESES .)
    LCURLYBRACKET   reduce using rule 58 (operacionHash -> hash DOT DELETE LPARENTHESES datos RPARENTHESES .)
    SET             reduce using rule 58 (operacionHash -> hash DOT DELETE LPARENTHESES datos RPARENTHESES .)
    $end            reduce using rule 58 (operacionHash -> hash DOT DELETE LPARENTHESES datos RPARENTHESES .)
    ELSE            reduce using rule 58 (operacionHash -> hash DOT DELETE LPARENTHESES datos RPARENTHESES .)
    END             reduce using rule 58 (operacionHash -> hash DOT DELETE LPARENTHESES datos RPARENTHESES .)
    RETURN          reduce using rule 58 (operacionHash -> hash DOT DELETE LPARENTHESES datos RPARENTHESES .)


state 202

    (111) operacionSet -> set DOT ADD LPARENTHESES datos RPARENTHESES .

    LOCALVAR        reduce using rule 111 (operacionSet -> set DOT ADD LPARENTHESES datos RPARENTHESES .)
    FOR             reduce using rule 111 (operacionSet -> set DOT ADD LPARENTHESES datos RPARENTHESES .)
    IF              reduce using rule 111 (operacionSet -> set DOT ADD LPARENTHESES datos RPARENTHESES .)
    UNLESS          reduce using rule 111 (operacionSet -> set DOT ADD LPARENTHESES datos RPARENTHESES .)
    PUTS            reduce using rule 111 (operacionSet -> set DOT ADD LPARENTHESES datos RPARENTHESES .)
    PRINT           reduce using rule 111 (operacionSet -> set DOT ADD LPARENTHESES datos RPARENTHESES .)
    VAR             reduce using rule 111 (operacionSet -> set DOT ADD LPARENTHESES datos RPARENTHESES .)
    CONSTANT        reduce using rule 111 (operacionSet -> set DOT ADD LPARENTHESES datos RPARENTHESES .)
    LCURLYBRACKET   reduce using rule 111 (operacionSet -> set DOT ADD LPARENTHESES datos RPARENTHESES .)
    SET             reduce using rule 111 (operacionSet -> set DOT ADD LPARENTHESES datos RPARENTHESES .)
    $end            reduce using rule 111 (operacionSet -> set DOT ADD LPARENTHESES datos RPARENTHESES .)
    ELSE            reduce using rule 111 (operacionSet -> set DOT ADD LPARENTHESES datos RPARENTHESES .)
    END             reduce using rule 111 (operacionSet -> set DOT ADD LPARENTHESES datos RPARENTHESES .)
    RETURN          reduce using rule 111 (operacionSet -> set DOT ADD LPARENTHESES datos RPARENTHESES .)


state 203

    (112) operacionSet -> set DOT ADD LPARENTHESES tiposvariables RPARENTHESES .

    LOCALVAR        reduce using rule 112 (operacionSet -> set DOT ADD LPARENTHESES tiposvariables RPARENTHESES .)
    FOR             reduce using rule 112 (operacionSet -> set DOT ADD LPARENTHESES tiposvariables RPARENTHESES .)
    IF              reduce using rule 112 (operacionSet -> set DOT ADD LPARENTHESES tiposvariables RPARENTHESES .)
    UNLESS          reduce using rule 112 (operacionSet -> set DOT ADD LPARENTHESES tiposvariables RPARENTHESES .)
    PUTS            reduce using rule 112 (operacionSet -> set DOT ADD LPARENTHESES tiposvariables RPARENTHESES .)
    PRINT           reduce using rule 112 (operacionSet -> set DOT ADD LPARENTHESES tiposvariables RPARENTHESES .)
    VAR             reduce using rule 112 (operacionSet -> set DOT ADD LPARENTHESES tiposvariables RPARENTHESES .)
    CONSTANT        reduce using rule 112 (operacionSet -> set DOT ADD LPARENTHESES tiposvariables RPARENTHESES .)
    LCURLYBRACKET   reduce using rule 112 (operacionSet -> set DOT ADD LPARENTHESES tiposvariables RPARENTHESES .)
    SET             reduce using rule 112 (operacionSet -> set DOT ADD LPARENTHESES tiposvariables RPARENTHESES .)
    $end            reduce using rule 112 (operacionSet -> set DOT ADD LPARENTHESES tiposvariables RPARENTHESES .)
    ELSE            reduce using rule 112 (operacionSet -> set DOT ADD LPARENTHESES tiposvariables RPARENTHESES .)
    END             reduce using rule 112 (operacionSet -> set DOT ADD LPARENTHESES tiposvariables RPARENTHESES .)
    RETURN          reduce using rule 112 (operacionSet -> set DOT ADD LPARENTHESES tiposvariables RPARENTHESES .)


state 204

    (114) operacionSet -> set DOT DELETE LPARENTHESES datos RPARENTHESES .

    LOCALVAR        reduce using rule 114 (operacionSet -> set DOT DELETE LPARENTHESES datos RPARENTHESES .)
    FOR             reduce using rule 114 (operacionSet -> set DOT DELETE LPARENTHESES datos RPARENTHESES .)
    IF              reduce using rule 114 (operacionSet -> set DOT DELETE LPARENTHESES datos RPARENTHESES .)
    UNLESS          reduce using rule 114 (operacionSet -> set DOT DELETE LPARENTHESES datos RPARENTHESES .)
    PUTS            reduce using rule 114 (operacionSet -> set DOT DELETE LPARENTHESES datos RPARENTHESES .)
    PRINT           reduce using rule 114 (operacionSet -> set DOT DELETE LPARENTHESES datos RPARENTHESES .)
    VAR             reduce using rule 114 (operacionSet -> set DOT DELETE LPARENTHESES datos RPARENTHESES .)
    CONSTANT        reduce using rule 114 (operacionSet -> set DOT DELETE LPARENTHESES datos RPARENTHESES .)
    LCURLYBRACKET   reduce using rule 114 (operacionSet -> set DOT DELETE LPARENTHESES datos RPARENTHESES .)
    SET             reduce using rule 114 (operacionSet -> set DOT DELETE LPARENTHESES datos RPARENTHESES .)
    $end            reduce using rule 114 (operacionSet -> set DOT DELETE LPARENTHESES datos RPARENTHESES .)
    ELSE            reduce using rule 114 (operacionSet -> set DOT DELETE LPARENTHESES datos RPARENTHESES .)
    END             reduce using rule 114 (operacionSet -> set DOT DELETE LPARENTHESES datos RPARENTHESES .)
    RETURN          reduce using rule 114 (operacionSet -> set DOT DELETE LPARENTHESES datos RPARENTHESES .)


state 205

    (115) operacionSet -> set DOT DELETE LPARENTHESES tiposvariables RPARENTHESES .

    LOCALVAR        reduce using rule 115 (operacionSet -> set DOT DELETE LPARENTHESES tiposvariables RPARENTHESES .)
    FOR             reduce using rule 115 (operacionSet -> set DOT DELETE LPARENTHESES tiposvariables RPARENTHESES .)
    IF              reduce using rule 115 (operacionSet -> set DOT DELETE LPARENTHESES tiposvariables RPARENTHESES .)
    UNLESS          reduce using rule 115 (operacionSet -> set DOT DELETE LPARENTHESES tiposvariables RPARENTHESES .)
    PUTS            reduce using rule 115 (operacionSet -> set DOT DELETE LPARENTHESES tiposvariables RPARENTHESES .)
    PRINT           reduce using rule 115 (operacionSet -> set DOT DELETE LPARENTHESES tiposvariables RPARENTHESES .)
    VAR             reduce using rule 115 (operacionSet -> set DOT DELETE LPARENTHESES tiposvariables RPARENTHESES .)
    CONSTANT        reduce using rule 115 (operacionSet -> set DOT DELETE LPARENTHESES tiposvariables RPARENTHESES .)
    LCURLYBRACKET   reduce using rule 115 (operacionSet -> set DOT DELETE LPARENTHESES tiposvariables RPARENTHESES .)
    SET             reduce using rule 115 (operacionSet -> set DOT DELETE LPARENTHESES tiposvariables RPARENTHESES .)
    $end            reduce using rule 115 (operacionSet -> set DOT DELETE LPARENTHESES tiposvariables RPARENTHESES .)
    ELSE            reduce using rule 115 (operacionSet -> set DOT DELETE LPARENTHESES tiposvariables RPARENTHESES .)
    END             reduce using rule 115 (operacionSet -> set DOT DELETE LPARENTHESES tiposvariables RPARENTHESES .)
    RETURN          reduce using rule 115 (operacionSet -> set DOT DELETE LPARENTHESES tiposvariables RPARENTHESES .)


state 206

    (83) if -> IF datosvarios operadores datosvarios cuerpo END .

    LOCALVAR        reduce using rule 83 (if -> IF datosvarios operadores datosvarios cuerpo END .)
    FOR             reduce using rule 83 (if -> IF datosvarios operadores datosvarios cuerpo END .)
    IF              reduce using rule 83 (if -> IF datosvarios operadores datosvarios cuerpo END .)
    UNLESS          reduce using rule 83 (if -> IF datosvarios operadores datosvarios cuerpo END .)
    PUTS            reduce using rule 83 (if -> IF datosvarios operadores datosvarios cuerpo END .)
    PRINT           reduce using rule 83 (if -> IF datosvarios operadores datosvarios cuerpo END .)
    VAR             reduce using rule 83 (if -> IF datosvarios operadores datosvarios cuerpo END .)
    CONSTANT        reduce using rule 83 (if -> IF datosvarios operadores datosvarios cuerpo END .)
    LCURLYBRACKET   reduce using rule 83 (if -> IF datosvarios operadores datosvarios cuerpo END .)
    SET             reduce using rule 83 (if -> IF datosvarios operadores datosvarios cuerpo END .)
    $end            reduce using rule 83 (if -> IF datosvarios operadores datosvarios cuerpo END .)
    ELSE            reduce using rule 83 (if -> IF datosvarios operadores datosvarios cuerpo END .)
    END             reduce using rule 83 (if -> IF datosvarios operadores datosvarios cuerpo END .)
    RETURN          reduce using rule 83 (if -> IF datosvarios operadores datosvarios cuerpo END .)


state 207

    (84) if -> IF datosvarios operadores datosvarios cuerpo else .

    LOCALVAR        reduce using rule 84 (if -> IF datosvarios operadores datosvarios cuerpo else .)
    FOR             reduce using rule 84 (if -> IF datosvarios operadores datosvarios cuerpo else .)
    IF              reduce using rule 84 (if -> IF datosvarios operadores datosvarios cuerpo else .)
    UNLESS          reduce using rule 84 (if -> IF datosvarios operadores datosvarios cuerpo else .)
    PUTS            reduce using rule 84 (if -> IF datosvarios operadores datosvarios cuerpo else .)
    PRINT           reduce using rule 84 (if -> IF datosvarios operadores datosvarios cuerpo else .)
    VAR             reduce using rule 84 (if -> IF datosvarios operadores datosvarios cuerpo else .)
    CONSTANT        reduce using rule 84 (if -> IF datosvarios operadores datosvarios cuerpo else .)
    LCURLYBRACKET   reduce using rule 84 (if -> IF datosvarios operadores datosvarios cuerpo else .)
    SET             reduce using rule 84 (if -> IF datosvarios operadores datosvarios cuerpo else .)
    $end            reduce using rule 84 (if -> IF datosvarios operadores datosvarios cuerpo else .)
    ELSE            reduce using rule 84 (if -> IF datosvarios operadores datosvarios cuerpo else .)
    END             reduce using rule 84 (if -> IF datosvarios operadores datosvarios cuerpo else .)
    RETURN          reduce using rule 84 (if -> IF datosvarios operadores datosvarios cuerpo else .)


state 208

    (85) else -> ELSE . cuerpo END
    (17) cuerpo -> . declaracion cuerpo
    (18) cuerpo -> . asignacion cuerpo
    (19) cuerpo -> . loop cuerpo
    (20) cuerpo -> . estructurasDatos cuerpo
    (21) cuerpo -> . if cuerpo
    (22) cuerpo -> . unless cuerpo
    (23) cuerpo -> . impresion cuerpo
    (24) cuerpo -> . operacionSet cuerpo
    (25) cuerpo -> . operacionarray cuerpo
    (26) cuerpo -> . operacionHash cuerpo
    (27) cuerpo -> .
    (29) declaracion -> . tiposvariables EQUAL datos
    (30) declaracion -> . tiposvariables EQUAL estructurasDatos
    (31) declaracion -> . tiposvariables EQUAL expresion
    (32) declaracion -> . tiposvariables EQUAL declaracion
    (33) asignacion -> . LOCALVAR PLUSASSIGN datosAsignacion
    (34) asignacion -> . LOCALVAR MINASSIGN datosAsignacion
    (35) asignacion -> . LOCALVAR DIVASSIGN datosAsignacion
    (36) asignacion -> . LOCALVAR TIMESASSIGN datosAsignacion
    (37) asignacion -> . LOCALVAR MODASSIGN datosAsignacion
    (38) asignacion -> . LOCALVAR EXPASSIGN datosAsignacion
    (28) loop -> . FOR LOCALVAR IN rango cuerpo END
    (47) estructurasDatos -> . hash
    (48) estructurasDatos -> . array
    (49) estructurasDatos -> . set
    (83) if -> . IF datosvarios operadores datosvarios cuerpo END
    (84) if -> . IF datosvarios operadores datosvarios cuerpo else
    (100) unless -> . UNLESS condiciones cuerpo ELSE cuerpo END
    (62) impresion -> . PUTS datos
    (63) impresion -> . PUTS LOCALVAR
    (64) impresion -> . PRINT datos
    (65) impresion -> . PRINT LOCALVAR
    (111) operacionSet -> . set DOT ADD LPARENTHESES datos RPARENTHESES
    (112) operacionSet -> . set DOT ADD LPARENTHESES tiposvariables RPARENTHESES
    (113) operacionSet -> . set DOT CLEAR
    (114) operacionSet -> . set DOT DELETE LPARENTHESES datos RPARENTHESES
    (115) operacionSet -> . set DOT DELETE LPARENTHESES tiposvariables RPARENTHESES
    (97) operacionarray -> . LOCALVAR LBRACKET INTEGER RBRACKET
    (98) operacionarray -> . LOCALVAR DOT TAKE LPARENTHESES INTEGER RPARENTHESES
    (99) operacionarray -> . LOCALVAR DOT DROP LPARENTHESES INTEGER RPARENTHESES
    (55) operacionHash -> . hash LBRACKET datos RBRACKET
    (56) operacionHash -> . hash LBRACKET datos RBRACKET EQUAL datos
    (57) operacionHash -> . hash DOT INCLUDE QUESTIONMARK LPARENTHESES datos RPARENTHESES
    (58) operacionHash -> . hash DOT DELETE LPARENTHESES datos RPARENTHESES
    (59) operacionHash -> . hash DOT KEYS
    (41) tiposvariables -> . VAR
    (42) tiposvariables -> . LOCALVAR
    (43) tiposvariables -> . CONSTANT
    (50) hash -> . LCURLYBRACKET elementoHash RCURLYBRACKET
    (81) array -> . tiposvariables EQUAL LBRACKET datosarray RBRACKET
    (82) array -> . tiposvariables EQUAL LBRACKET RBRACKET
    (105) set -> . SET LBRACKET elementoSet RBRACKET

    END             reduce using rule 27 (cuerpo -> .)
    LOCALVAR        shift and go to state 15
    FOR             shift and go to state 17
    IF              shift and go to state 21
    UNLESS          shift and go to state 22
    PUTS            shift and go to state 23
    PRINT           shift and go to state 24
    VAR             shift and go to state 25
    CONSTANT        shift and go to state 26
    LCURLYBRACKET   shift and go to state 27
    SET             shift and go to state 28

    cuerpo                         shift and go to state 220
    declaracion                    shift and go to state 4
    asignacion                     shift and go to state 5
    loop                           shift and go to state 6
    estructurasDatos               shift and go to state 7
    if                             shift and go to state 8
    unless                         shift and go to state 9
    impresion                      shift and go to state 10
    operacionSet                   shift and go to state 11
    operacionarray                 shift and go to state 12
    operacionHash                  shift and go to state 13
    tiposvariables                 shift and go to state 16
    hash                           shift and go to state 18
    array                          shift and go to state 19
    set                            shift and go to state 20

state 209

    (100) unless -> UNLESS condiciones cuerpo ELSE cuerpo END .

    LOCALVAR        reduce using rule 100 (unless -> UNLESS condiciones cuerpo ELSE cuerpo END .)
    FOR             reduce using rule 100 (unless -> UNLESS condiciones cuerpo ELSE cuerpo END .)
    IF              reduce using rule 100 (unless -> UNLESS condiciones cuerpo ELSE cuerpo END .)
    UNLESS          reduce using rule 100 (unless -> UNLESS condiciones cuerpo ELSE cuerpo END .)
    PUTS            reduce using rule 100 (unless -> UNLESS condiciones cuerpo ELSE cuerpo END .)
    PRINT           reduce using rule 100 (unless -> UNLESS condiciones cuerpo ELSE cuerpo END .)
    VAR             reduce using rule 100 (unless -> UNLESS condiciones cuerpo ELSE cuerpo END .)
    CONSTANT        reduce using rule 100 (unless -> UNLESS condiciones cuerpo ELSE cuerpo END .)
    LCURLYBRACKET   reduce using rule 100 (unless -> UNLESS condiciones cuerpo ELSE cuerpo END .)
    SET             reduce using rule 100 (unless -> UNLESS condiciones cuerpo ELSE cuerpo END .)
    $end            reduce using rule 100 (unless -> UNLESS condiciones cuerpo ELSE cuerpo END .)
    ELSE            reduce using rule 100 (unless -> UNLESS condiciones cuerpo ELSE cuerpo END .)
    END             reduce using rule 100 (unless -> UNLESS condiciones cuerpo ELSE cuerpo END .)
    RETURN          reduce using rule 100 (unless -> UNLESS condiciones cuerpo ELSE cuerpo END .)


state 210

    (51) elementoHash -> datos EQUAL GREATERTHAN datos maselementos .

    RCURLYBRACKET   reduce using rule 51 (elementoHash -> datos EQUAL GREATERTHAN datos maselementos .)
    COMMA           reduce using rule 51 (elementoHash -> datos EQUAL GREATERTHAN datos maselementos .)


state 211

    (54) maselementos -> COMMA . elementoHash maselementos
    (51) elementoHash -> . datos EQUAL GREATERTHAN datos maselementos
    (52) elementoHash -> .
    (44) datos -> . INTEGER
    (45) datos -> . FLOAT
    (46) datos -> . STRING

    COMMA           reduce using rule 52 (elementoHash -> .)
    RCURLYBRACKET   reduce using rule 52 (elementoHash -> .)
    INTEGER         shift and go to state 56
    FLOAT           shift and go to state 57
    STRING          shift and go to state 58

    elementoHash                   shift and go to state 221
    datos                          shift and go to state 68

state 212

    (110) otroElemento -> COMMA elementoSet otroElemento .

    RBRACKET        reduce using rule 110 (otroElemento -> COMMA elementoSet otroElemento .)
    COMMA           reduce using rule 110 (otroElemento -> COMMA elementoSet otroElemento .)


state 213

    (8) argumentos -> LOCALVAR EQUAL LCURLYBRACKET RCURLYBRACKET .

    RPARENTHESES    reduce using rule 8 (argumentos -> LOCALVAR EQUAL LCURLYBRACKET RCURLYBRACKET .)


state 214

    (13) variosargumentos -> LOCALVAR EQUAL datos masargumentos .

    RPARENTHESES    reduce using rule 13 (variosargumentos -> LOCALVAR EQUAL datos masargumentos .)


state 215

    (11) variosargumentos -> LOCALVAR EQUAL . datos
    (13) variosargumentos -> LOCALVAR EQUAL . datos masargumentos
    (44) datos -> . INTEGER
    (45) datos -> . FLOAT
    (46) datos -> . STRING

    INTEGER         shift and go to state 56
    FLOAT           shift and go to state 57
    STRING          shift and go to state 58

    datos                          shift and go to state 186

state 216

    (3) funcion -> DEF LOCALVAR LPARENTHESES argumentos RPARENTHESES cuerpo END .

    $end            reduce using rule 3 (funcion -> DEF LOCALVAR LPARENTHESES argumentos RPARENTHESES cuerpo END .)


state 217

    (4) funcion -> DEF LOCALVAR LPARENTHESES argumentos RPARENTHESES cuerpo retornar . END

    END             shift and go to state 222


state 218

    (15) retornar -> RETURN . LOCALVAR
    (16) retornar -> RETURN . datos
    (44) datos -> . INTEGER
    (45) datos -> . FLOAT
    (46) datos -> . STRING

    LOCALVAR        shift and go to state 223
    INTEGER         shift and go to state 56
    FLOAT           shift and go to state 57
    STRING          shift and go to state 58

    datos                          shift and go to state 224

state 219

    (57) operacionHash -> hash DOT INCLUDE QUESTIONMARK LPARENTHESES datos RPARENTHESES .

    LOCALVAR        reduce using rule 57 (operacionHash -> hash DOT INCLUDE QUESTIONMARK LPARENTHESES datos RPARENTHESES .)
    FOR             reduce using rule 57 (operacionHash -> hash DOT INCLUDE QUESTIONMARK LPARENTHESES datos RPARENTHESES .)
    IF              reduce using rule 57 (operacionHash -> hash DOT INCLUDE QUESTIONMARK LPARENTHESES datos RPARENTHESES .)
    UNLESS          reduce using rule 57 (operacionHash -> hash DOT INCLUDE QUESTIONMARK LPARENTHESES datos RPARENTHESES .)
    PUTS            reduce using rule 57 (operacionHash -> hash DOT INCLUDE QUESTIONMARK LPARENTHESES datos RPARENTHESES .)
    PRINT           reduce using rule 57 (operacionHash -> hash DOT INCLUDE QUESTIONMARK LPARENTHESES datos RPARENTHESES .)
    VAR             reduce using rule 57 (operacionHash -> hash DOT INCLUDE QUESTIONMARK LPARENTHESES datos RPARENTHESES .)
    CONSTANT        reduce using rule 57 (operacionHash -> hash DOT INCLUDE QUESTIONMARK LPARENTHESES datos RPARENTHESES .)
    LCURLYBRACKET   reduce using rule 57 (operacionHash -> hash DOT INCLUDE QUESTIONMARK LPARENTHESES datos RPARENTHESES .)
    SET             reduce using rule 57 (operacionHash -> hash DOT INCLUDE QUESTIONMARK LPARENTHESES datos RPARENTHESES .)
    $end            reduce using rule 57 (operacionHash -> hash DOT INCLUDE QUESTIONMARK LPARENTHESES datos RPARENTHESES .)
    ELSE            reduce using rule 57 (operacionHash -> hash DOT INCLUDE QUESTIONMARK LPARENTHESES datos RPARENTHESES .)
    END             reduce using rule 57 (operacionHash -> hash DOT INCLUDE QUESTIONMARK LPARENTHESES datos RPARENTHESES .)
    RETURN          reduce using rule 57 (operacionHash -> hash DOT INCLUDE QUESTIONMARK LPARENTHESES datos RPARENTHESES .)


state 220

    (85) else -> ELSE cuerpo . END

    END             shift and go to state 225


state 221

    (54) maselementos -> COMMA elementoHash . maselementos
    (53) maselementos -> .
    (54) maselementos -> . COMMA elementoHash maselementos

  ! shift/reduce conflict for COMMA resolved as shift
    RCURLYBRACKET   reduce using rule 53 (maselementos -> .)
    COMMA           shift and go to state 211

  ! COMMA           [ reduce using rule 53 (maselementos -> .) ]

    maselementos                   shift and go to state 226

state 222

    (4) funcion -> DEF LOCALVAR LPARENTHESES argumentos RPARENTHESES cuerpo retornar END .

    $end            reduce using rule 4 (funcion -> DEF LOCALVAR LPARENTHESES argumentos RPARENTHESES cuerpo retornar END .)


state 223

    (15) retornar -> RETURN LOCALVAR .

    END             reduce using rule 15 (retornar -> RETURN LOCALVAR .)


state 224

    (16) retornar -> RETURN datos .

    END             reduce using rule 16 (retornar -> RETURN datos .)


state 225

    (85) else -> ELSE cuerpo END .

    LOCALVAR        reduce using rule 85 (else -> ELSE cuerpo END .)
    FOR             reduce using rule 85 (else -> ELSE cuerpo END .)
    IF              reduce using rule 85 (else -> ELSE cuerpo END .)
    UNLESS          reduce using rule 85 (else -> ELSE cuerpo END .)
    PUTS            reduce using rule 85 (else -> ELSE cuerpo END .)
    PRINT           reduce using rule 85 (else -> ELSE cuerpo END .)
    VAR             reduce using rule 85 (else -> ELSE cuerpo END .)
    CONSTANT        reduce using rule 85 (else -> ELSE cuerpo END .)
    LCURLYBRACKET   reduce using rule 85 (else -> ELSE cuerpo END .)
    SET             reduce using rule 85 (else -> ELSE cuerpo END .)
    $end            reduce using rule 85 (else -> ELSE cuerpo END .)
    ELSE            reduce using rule 85 (else -> ELSE cuerpo END .)
    END             reduce using rule 85 (else -> ELSE cuerpo END .)
    RETURN          reduce using rule 85 (else -> ELSE cuerpo END .)


state 226

    (54) maselementos -> COMMA elementoHash maselementos .

    COMMA           reduce using rule 54 (maselementos -> COMMA elementoHash maselementos .)
    RCURLYBRACKET   reduce using rule 54 (maselementos -> COMMA elementoHash maselementos .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PLUS in state 93 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 93 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 93 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 93 resolved as shift
WARNING: shift/reduce conflict for PERCENTAGE in state 93 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 118 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 167 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 167 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 167 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 167 resolved as shift
WARNING: shift/reduce conflict for PERCENTAGE in state 167 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 168 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 168 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 168 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 168 resolved as shift
WARNING: shift/reduce conflict for PERCENTAGE in state 168 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 169 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 169 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 169 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 169 resolved as shift
WARNING: shift/reduce conflict for PERCENTAGE in state 169 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 183 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 184 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 221 resolved as shift
WARNING: reduce/reduce conflict in state 118 resolved using rule (elementoSet -> datos)
WARNING: rejected rule (otroElemento -> <empty>) in state 118
