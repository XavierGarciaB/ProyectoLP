Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ALERT
    AMPERSAND
    BEGIN
    BEGIN_M
    BOOLEAN
    CIRCUMFLEX
    COLON
    COMBCOMP
    COMMENT
    DOBLEQUOTE
    DOUBLELESSTHAN
    ELSEIF
    END_M
    GETS
    NIL
    NOT
    OR
    PIPE
    QUESTIONMARKPERIOD
    SEMICOLON
    SINGLEQUOTE
    TWOGREATERTHAN
    UNTIL
    WAVE

Grammar

Rule 0     S' -> inicio
Rule 1     inicio -> cuerpo
Rule 2     inicio -> funcion
Rule 3     funcion -> DEF LOCALVAR LPARENTHESES argumentos RPARENTHESES cuerpo END
Rule 4     funcion -> DEF LOCALVAR LPARENTHESES argumentos RPARENTHESES cuerpo retornar END
Rule 5     argumentos -> variosargumentos
Rule 6     argumentos -> MULTIPLY LOCALVAR
Rule 7     argumentos -> TWOSTARS LOCALVAR
Rule 8     argumentos -> LOCALVAR EQUAL LCURLYBRACKET RCURLYBRACKET
Rule 9     argumentos -> LOCALVAR TWOPOINTS datos
Rule 10    variosargumentos -> LOCALVAR
Rule 11    variosargumentos -> LOCALVAR EQUAL datos
Rule 12    variosargumentos -> LOCALVAR masargumentos
Rule 13    variosargumentos -> LOCALVAR EQUAL datos masargumentos
Rule 14    masargumentos -> COMMA variosargumentos
Rule 15    retornar -> RETURN LOCALVAR
Rule 16    retornar -> RETURN datos
Rule 17    cuerpo -> declaracion cuerpo
Rule 18    cuerpo -> asignacion cuerpo
Rule 19    cuerpo -> loop cuerpo
Rule 20    cuerpo -> estructurasDatos cuerpo
Rule 21    cuerpo -> if cuerpo
Rule 22    cuerpo -> unless cuerpo
Rule 23    cuerpo -> impresion cuerpo
Rule 24    cuerpo -> operacionSet cuerpo
Rule 25    cuerpo -> operacionarray cuerpo
Rule 26    cuerpo -> operacionHash cuerpo
Rule 27    cuerpo -> string cuerpo
Rule 28    cuerpo -> integer cuerpo
Rule 29    cuerpo -> float cuerpo
Rule 30    cuerpo -> <empty>
Rule 31    loop -> FOR LOCALVAR IN rango cuerpo END
Rule 32    declaracion -> tiposvariables EQUAL datos
Rule 33    declaracion -> tiposvariables EQUAL estructurasDatos
Rule 34    declaracion -> tiposvariables EQUAL expresion
Rule 35    declaracion -> tiposvariables EQUAL declaracion
Rule 36    declaracion -> tiposvariables EQUAL casting
Rule 37    asignacion -> LOCALVAR PLUSASSIGN datosAsignacion
Rule 38    asignacion -> LOCALVAR MINASSIGN datosAsignacion
Rule 39    asignacion -> LOCALVAR DIVASSIGN datosAsignacion
Rule 40    asignacion -> LOCALVAR TIMESASSIGN datosAsignacion
Rule 41    asignacion -> LOCALVAR MODASSIGN datosAsignacion
Rule 42    asignacion -> LOCALVAR EXPASSIGN datosAsignacion
Rule 43    datosAsignacion -> number
Rule 44    datosAsignacion -> LOCALVAR
Rule 45    tiposvariables -> VAR
Rule 46    tiposvariables -> LOCALVAR
Rule 47    tiposvariables -> CONSTANT
Rule 48    datos -> INTEGER
Rule 49    datos -> FLOAT
Rule 50    datos -> STRING
Rule 51    datos -> booleanos
Rule 52    booleanos -> TRUE
Rule 53    booleanos -> FALSE
Rule 54    estructurasDatos -> hash
Rule 55    estructurasDatos -> array
Rule 56    estructurasDatos -> set
Rule 57    hash -> LCURLYBRACKET elementoHash RCURLYBRACKET
Rule 58    elementoHash -> datos EQUAL GREATERTHAN datos maselementos
Rule 59    elementoHash -> <empty>
Rule 60    maselementos -> <empty>
Rule 61    maselementos -> COMMA elementoHash maselementos
Rule 62    operacionHash -> hash LBRACKET datos RBRACKET
Rule 63    operacionHash -> hash LBRACKET datos RBRACKET EQUAL datos
Rule 64    operacionHash -> hash DOT INCLUDE QUESTIONMARK LPARENTHESES datos RPARENTHESES
Rule 65    operacionHash -> hash DOT DELETE LPARENTHESES datos RPARENTHESES
Rule 66    operacionHash -> hash DOT KEYS
Rule 67    operacionHash -> hash DOT EMPTY QUESTIONMARK
Rule 68    operacionHash -> hash DOT SIZE
Rule 69    operacionHash -> hash DOT LENGTH
Rule 70    rango -> INTEGER RANGEINCLUSIVE INTEGER
Rule 71    rango -> INTEGER RANGEXCLUSIVE INTEGER
Rule 72    impresion -> PUTS datos
Rule 73    impresion -> PUTS LOCALVAR
Rule 74    impresion -> PRINT datos
Rule 75    impresion -> PRINT LOCALVAR
Rule 76    number -> INTEGER
Rule 77    number -> FLOAT
Rule 78    expresion -> operacion
Rule 79    expresion -> LPARENTHESES operacion RPARENTHESES
Rule 80    expresion -> LPARENTHESES operacion RPARENTHESES masoperaciones
Rule 81    operacion -> number operador number
Rule 82    operacion -> operacion masoperaciones
Rule 83    masoperaciones -> operador expresion masoperaciones
Rule 84    masoperaciones -> operador number
Rule 85    masoperaciones -> operador expresion
Rule 86    operador -> PLUS
Rule 87    operador -> MINUS
Rule 88    operador -> MULTIPLY
Rule 89    operador -> DIVIDE
Rule 90    operador -> PERCENTAGE
Rule 91    array -> LBRACKET RBRACKET
Rule 92    array -> LBRACKET datosarray RBRACKET
Rule 93    datosvarios -> datos
Rule 94    datosvarios -> number
Rule 95    datosvarios -> VAR
Rule 96    datosvarios -> LOCALVAR
Rule 97    datosarray -> datosvarios
Rule 98    datosarray -> datosarray COMMA datosvarios
Rule 99    operacionarray -> array LBRACKET INTEGER RBRACKET
Rule 100   operacionarray -> array DOT TAKE LPARENTHESES INTEGER RPARENTHESES
Rule 101   operacionarray -> array DOT DROP LPARENTHESES INTEGER RPARENTHESES
Rule 102   operacionarray -> array DOT push maspush
Rule 103   push -> PUSH LPARENTHESES datosvarios RPARENTHESES
Rule 104   push -> <empty>
Rule 105   maspush -> <empty>
Rule 106   maspush -> DOT push maspush
Rule 107   operacionarray -> array DOT POP
Rule 108   operacionarray -> array DOT POP LPARENTHESES INTEGER RPARENTHESES
Rule 109   operacionarray -> array DOT DELETE LPARENTHESES INTEGER RPARENTHESES
Rule 110   operacionarray -> array DOT LENGTH LPARENTHESES RPARENTHESES
Rule 111   operacionarray -> array DOT EMPTY QUESTIONMARK
Rule 112   datoscompletos -> datosvarios
Rule 113   datoscompletos -> tiposvariables
Rule 114   if -> IF datoscompletos operadores datoscompletos cuerpo END
Rule 115   if -> IF datoscompletos operadores datoscompletos cuerpo else
Rule 116   else -> ELSE cuerpo END
Rule 117   operadores -> DOUBLEEQUAL
Rule 118   operadores -> TRIPLEEQUAL
Rule 119   operadores -> GREATERTHAN
Rule 120   operadores -> NOTEQUAL
Rule 121   operadores -> LESSTHAN
Rule 122   operadores -> GREQUAL
Rule 123   operadores -> LEQUAL
Rule 124   integer -> INTEGERW DOT SQRT LPARENTHESES INTEGER RPARENTHESES
Rule 125   integer -> INTEGER DOT CEIL LPARENTHESES RPARENTHESES
Rule 126   integer -> INTEGER DOT CEIL LPARENTHESES INTEGER RPARENTHESES
Rule 127   integer -> INTEGER DOT FLOOR LPARENTHESES RPARENTHESES
Rule 128   integer -> INTEGER DOT FLOOR LPARENTHESES INTEGER RPARENTHESES
Rule 129   integer -> INTEGER DOT ABS
Rule 130   float -> FLOAT DOT CEIL LPARENTHESES RPARENTHESES
Rule 131   float -> FLOAT DOT CEIL LPARENTHESES INTEGER RPARENTHESES
Rule 132   float -> FLOAT DOT FLOOR LPARENTHESES RPARENTHESES
Rule 133   float -> FLOAT DOT FLOOR LPARENTHESES INTEGER RPARENTHESES
Rule 134   float -> FLOAT DOT ABS
Rule 135   unless -> UNLESS expresionCondicional cuerpo ELSE cuerpo END
Rule 136   expresionCondicional -> boolean
Rule 137   expresionCondicional -> EXCLAMATION LPARENTHESES boolean RPARENTHESES
Rule 138   operadorBinario -> DOUBLEAMPERSAND
Rule 139   operadorBinario -> DOUBLEPIPE
Rule 140   boolean -> condiciones
Rule 141   boolean -> EXCLAMATION LPARENTHESES condiciones RPARENTHESES
Rule 142   boolean -> boolean operadorBinario boolean
Rule 143   condiciones -> tiposvariables operadores tiposvariables
Rule 144   condiciones -> datos operadores datos
Rule 145   condiciones -> tiposvariables operadores datos
Rule 146   condiciones -> datos operadores tiposvariables
Rule 147   set -> SET LBRACKET elementoSet RBRACKET
Rule 148   elementoSet -> <empty>
Rule 149   elementoSet -> datos
Rule 150   elementoSet -> datos otroElemento
Rule 151   otroElemento -> <empty>
Rule 152   otroElemento -> COMMA elementoSet otroElemento
Rule 153   operacionSet -> set DOT ADD LPARENTHESES datos RPARENTHESES
Rule 154   operacionSet -> set DOT ADD LPARENTHESES tiposvariables RPARENTHESES
Rule 155   operacionSet -> set DOT CLEAR
Rule 156   operacionSet -> set DOT DELETE LPARENTHESES datos RPARENTHESES
Rule 157   operacionSet -> set DOT DELETE LPARENTHESES tiposvariables RPARENTHESES
Rule 158   string -> STRING PLUS STRING
Rule 159   string -> STRING MULTIPLY INTEGER
Rule 160   string -> STRING DOT stringOpt
Rule 161   stringOpt -> UPCASE
Rule 162   stringOpt -> DOWNCASE
Rule 163   stringOpt -> LENGTH
Rule 164   stringOpt -> CAPS
Rule 165   stringOpt -> INSERT LPARENTHESES INTEGER COMMA STRING RPARENTHESES
Rule 166   casting -> STRING DOT TO_I
Rule 167   casting -> STRING DOT TO_F
Rule 168   casting -> number DOT TO_S

Terminals, with rules where they appear

ABS                  : 129 134
ADD                  : 153 154
ALERT                : 
AMPERSAND            : 
BEGIN                : 
BEGIN_M              : 
BOOLEAN              : 
CAPS                 : 164
CEIL                 : 125 126 130 131
CIRCUMFLEX           : 
CLEAR                : 155
COLON                : 
COMBCOMP             : 
COMMA                : 14 61 98 152 165
COMMENT              : 
CONSTANT             : 47
DEF                  : 3 4
DELETE               : 65 109 156 157
DIVASSIGN            : 39
DIVIDE               : 89
DOBLEQUOTE           : 
DOT                  : 64 65 66 67 68 69 100 101 102 106 107 108 109 110 111 124 125 126 127 128 129 130 131 132 133 134 153 154 155 156 157 160 166 167 168
DOUBLEAMPERSAND      : 138
DOUBLEEQUAL          : 117
DOUBLELESSTHAN       : 
DOUBLEPIPE           : 139
DOWNCASE             : 162
DROP                 : 101
ELSE                 : 116 135
ELSEIF               : 
EMPTY                : 67 111
END                  : 3 4 31 114 116 135
END_M                : 
EQUAL                : 8 11 13 32 33 34 35 36 58 63
EXCLAMATION          : 137 141
EXPASSIGN            : 42
FALSE                : 53
FLOAT                : 49 77 130 131 132 133 134
FLOOR                : 127 128 132 133
FOR                  : 31
GETS                 : 
GREATERTHAN          : 58 119
GREQUAL              : 122
IF                   : 114 115
IN                   : 31
INCLUDE              : 64
INSERT               : 165
INTEGER              : 48 70 70 71 71 76 99 100 101 108 109 124 125 126 126 127 128 128 129 131 133 159 165
INTEGERW             : 124
KEYS                 : 66
LBRACKET             : 62 63 91 92 99 147
LCURLYBRACKET        : 8 57
LENGTH               : 69 110 163
LEQUAL               : 123
LESSTHAN             : 121
LOCALVAR             : 3 4 6 7 8 9 10 11 12 13 15 31 37 38 39 40 41 42 44 46 73 75 96
LPARENTHESES         : 3 4 64 65 79 80 100 101 103 108 109 110 124 125 126 127 128 130 131 132 133 137 141 153 154 156 157 165
MINASSIGN            : 38
MINUS                : 87
MODASSIGN            : 41
MULTIPLY             : 6 88 159
NIL                  : 
NOT                  : 
NOTEQUAL             : 120
OR                   : 
PERCENTAGE           : 90
PIPE                 : 
PLUS                 : 86 158
PLUSASSIGN           : 37
POP                  : 107 108
PRINT                : 74 75
PUSH                 : 103
PUTS                 : 72 73
QUESTIONMARK         : 64 67 111
QUESTIONMARKPERIOD   : 
RANGEINCLUSIVE       : 70
RANGEXCLUSIVE        : 71
RBRACKET             : 62 63 91 92 99 147
RCURLYBRACKET        : 8 57
RETURN               : 15 16
RPARENTHESES         : 3 4 64 65 79 80 100 101 103 108 109 110 124 125 126 127 128 130 131 132 133 137 141 153 154 156 157 165
SEMICOLON            : 
SET                  : 147
SINGLEQUOTE          : 
SIZE                 : 68
SQRT                 : 124
STRING               : 50 158 158 159 160 165 166 167
TAKE                 : 100
TIMESASSIGN          : 40
TO_F                 : 167
TO_I                 : 166
TO_S                 : 168
TRIPLEEQUAL          : 118
TRUE                 : 52
TWOGREATERTHAN       : 
TWOPOINTS            : 9
TWOSTARS             : 7
UNLESS               : 135
UNTIL                : 
UPCASE               : 161
VAR                  : 45 95
WAVE                 : 
error                : 

Nonterminals, with rules where they appear

argumentos           : 3 4
array                : 55 99 100 101 102 107 108 109 110 111
asignacion           : 18
boolean              : 136 137 142 142
booleanos            : 51
casting              : 36
condiciones          : 140 141
cuerpo               : 1 3 4 17 18 19 20 21 22 23 24 25 26 27 28 29 31 114 115 116 135 135
datos                : 9 11 13 16 32 58 58 62 63 63 64 65 72 74 93 144 144 145 146 149 150 153 156
datosAsignacion      : 37 38 39 40 41 42
datosarray           : 92 98
datoscompletos       : 114 114 115 115
datosvarios          : 97 98 103 112
declaracion          : 17 35
elementoHash         : 57 61
elementoSet          : 147 152
else                 : 115
estructurasDatos     : 20 33
expresion            : 34 83 85
expresionCondicional : 135
float                : 29
funcion              : 2
hash                 : 54 62 63 64 65 66 67 68 69
if                   : 21
impresion            : 23
inicio               : 0
integer              : 28
loop                 : 19
masargumentos        : 12 13
maselementos         : 58 61
masoperaciones       : 80 82 83
maspush              : 102 106
number               : 43 81 81 84 94 168
operacion            : 78 79 80 82
operacionHash        : 26
operacionSet         : 24
operacionarray       : 25
operador             : 81 83 84 85
operadorBinario      : 142
operadores           : 114 115 143 144 145 146
otroElemento         : 150 152
push                 : 102 106
rango                : 31
retornar             : 4
set                  : 56 153 154 155 156 157
string               : 27
stringOpt            : 160
tiposvariables       : 32 33 34 35 36 113 143 143 145 146 154 157
unless               : 22
variosargumentos     : 5 14

Parsing method: LALR

state 0

    (0) S' -> . inicio
    (1) inicio -> . cuerpo
    (2) inicio -> . funcion
    (17) cuerpo -> . declaracion cuerpo
    (18) cuerpo -> . asignacion cuerpo
    (19) cuerpo -> . loop cuerpo
    (20) cuerpo -> . estructurasDatos cuerpo
    (21) cuerpo -> . if cuerpo
    (22) cuerpo -> . unless cuerpo
    (23) cuerpo -> . impresion cuerpo
    (24) cuerpo -> . operacionSet cuerpo
    (25) cuerpo -> . operacionarray cuerpo
    (26) cuerpo -> . operacionHash cuerpo
    (27) cuerpo -> . string cuerpo
    (28) cuerpo -> . integer cuerpo
    (29) cuerpo -> . float cuerpo
    (30) cuerpo -> .
    (3) funcion -> . DEF LOCALVAR LPARENTHESES argumentos RPARENTHESES cuerpo END
    (4) funcion -> . DEF LOCALVAR LPARENTHESES argumentos RPARENTHESES cuerpo retornar END
    (32) declaracion -> . tiposvariables EQUAL datos
    (33) declaracion -> . tiposvariables EQUAL estructurasDatos
    (34) declaracion -> . tiposvariables EQUAL expresion
    (35) declaracion -> . tiposvariables EQUAL declaracion
    (36) declaracion -> . tiposvariables EQUAL casting
    (37) asignacion -> . LOCALVAR PLUSASSIGN datosAsignacion
    (38) asignacion -> . LOCALVAR MINASSIGN datosAsignacion
    (39) asignacion -> . LOCALVAR DIVASSIGN datosAsignacion
    (40) asignacion -> . LOCALVAR TIMESASSIGN datosAsignacion
    (41) asignacion -> . LOCALVAR MODASSIGN datosAsignacion
    (42) asignacion -> . LOCALVAR EXPASSIGN datosAsignacion
    (31) loop -> . FOR LOCALVAR IN rango cuerpo END
    (54) estructurasDatos -> . hash
    (55) estructurasDatos -> . array
    (56) estructurasDatos -> . set
    (114) if -> . IF datoscompletos operadores datoscompletos cuerpo END
    (115) if -> . IF datoscompletos operadores datoscompletos cuerpo else
    (135) unless -> . UNLESS expresionCondicional cuerpo ELSE cuerpo END
    (72) impresion -> . PUTS datos
    (73) impresion -> . PUTS LOCALVAR
    (74) impresion -> . PRINT datos
    (75) impresion -> . PRINT LOCALVAR
    (153) operacionSet -> . set DOT ADD LPARENTHESES datos RPARENTHESES
    (154) operacionSet -> . set DOT ADD LPARENTHESES tiposvariables RPARENTHESES
    (155) operacionSet -> . set DOT CLEAR
    (156) operacionSet -> . set DOT DELETE LPARENTHESES datos RPARENTHESES
    (157) operacionSet -> . set DOT DELETE LPARENTHESES tiposvariables RPARENTHESES
    (99) operacionarray -> . array LBRACKET INTEGER RBRACKET
    (100) operacionarray -> . array DOT TAKE LPARENTHESES INTEGER RPARENTHESES
    (101) operacionarray -> . array DOT DROP LPARENTHESES INTEGER RPARENTHESES
    (102) operacionarray -> . array DOT push maspush
    (107) operacionarray -> . array DOT POP
    (108) operacionarray -> . array DOT POP LPARENTHESES INTEGER RPARENTHESES
    (109) operacionarray -> . array DOT DELETE LPARENTHESES INTEGER RPARENTHESES
    (110) operacionarray -> . array DOT LENGTH LPARENTHESES RPARENTHESES
    (111) operacionarray -> . array DOT EMPTY QUESTIONMARK
    (62) operacionHash -> . hash LBRACKET datos RBRACKET
    (63) operacionHash -> . hash LBRACKET datos RBRACKET EQUAL datos
    (64) operacionHash -> . hash DOT INCLUDE QUESTIONMARK LPARENTHESES datos RPARENTHESES
    (65) operacionHash -> . hash DOT DELETE LPARENTHESES datos RPARENTHESES
    (66) operacionHash -> . hash DOT KEYS
    (67) operacionHash -> . hash DOT EMPTY QUESTIONMARK
    (68) operacionHash -> . hash DOT SIZE
    (69) operacionHash -> . hash DOT LENGTH
    (158) string -> . STRING PLUS STRING
    (159) string -> . STRING MULTIPLY INTEGER
    (160) string -> . STRING DOT stringOpt
    (124) integer -> . INTEGERW DOT SQRT LPARENTHESES INTEGER RPARENTHESES
    (125) integer -> . INTEGER DOT CEIL LPARENTHESES RPARENTHESES
    (126) integer -> . INTEGER DOT CEIL LPARENTHESES INTEGER RPARENTHESES
    (127) integer -> . INTEGER DOT FLOOR LPARENTHESES RPARENTHESES
    (128) integer -> . INTEGER DOT FLOOR LPARENTHESES INTEGER RPARENTHESES
    (129) integer -> . INTEGER DOT ABS
    (130) float -> . FLOAT DOT CEIL LPARENTHESES RPARENTHESES
    (131) float -> . FLOAT DOT CEIL LPARENTHESES INTEGER RPARENTHESES
    (132) float -> . FLOAT DOT FLOOR LPARENTHESES RPARENTHESES
    (133) float -> . FLOAT DOT FLOOR LPARENTHESES INTEGER RPARENTHESES
    (134) float -> . FLOAT DOT ABS
    (45) tiposvariables -> . VAR
    (46) tiposvariables -> . LOCALVAR
    (47) tiposvariables -> . CONSTANT
    (57) hash -> . LCURLYBRACKET elementoHash RCURLYBRACKET
    (91) array -> . LBRACKET RBRACKET
    (92) array -> . LBRACKET datosarray RBRACKET
    (147) set -> . SET LBRACKET elementoSet RBRACKET

    $end            reduce using rule 30 (cuerpo -> .)
    DEF             shift and go to state 17
    LOCALVAR        shift and go to state 18
    FOR             shift and go to state 20
    IF              shift and go to state 24
    UNLESS          shift and go to state 25
    PUTS            shift and go to state 26
    PRINT           shift and go to state 27
    STRING          shift and go to state 30
    INTEGERW        shift and go to state 31
    INTEGER         shift and go to state 29
    FLOAT           shift and go to state 32
    VAR             shift and go to state 33
    CONSTANT        shift and go to state 34
    LCURLYBRACKET   shift and go to state 35
    LBRACKET        shift and go to state 28
    SET             shift and go to state 36

    inicio                         shift and go to state 1
    cuerpo                         shift and go to state 2
    funcion                        shift and go to state 3
    declaracion                    shift and go to state 4
    asignacion                     shift and go to state 5
    loop                           shift and go to state 6
    estructurasDatos               shift and go to state 7
    if                             shift and go to state 8
    unless                         shift and go to state 9
    impresion                      shift and go to state 10
    operacionSet                   shift and go to state 11
    operacionarray                 shift and go to state 12
    operacionHash                  shift and go to state 13
    string                         shift and go to state 14
    integer                        shift and go to state 15
    float                          shift and go to state 16
    tiposvariables                 shift and go to state 19
    hash                           shift and go to state 21
    array                          shift and go to state 22
    set                            shift and go to state 23

state 1

    (0) S' -> inicio .



state 2

    (1) inicio -> cuerpo .

    $end            reduce using rule 1 (inicio -> cuerpo .)


state 3

    (2) inicio -> funcion .

    $end            reduce using rule 2 (inicio -> funcion .)


state 4

    (17) cuerpo -> declaracion . cuerpo
    (17) cuerpo -> . declaracion cuerpo
    (18) cuerpo -> . asignacion cuerpo
    (19) cuerpo -> . loop cuerpo
    (20) cuerpo -> . estructurasDatos cuerpo
    (21) cuerpo -> . if cuerpo
    (22) cuerpo -> . unless cuerpo
    (23) cuerpo -> . impresion cuerpo
    (24) cuerpo -> . operacionSet cuerpo
    (25) cuerpo -> . operacionarray cuerpo
    (26) cuerpo -> . operacionHash cuerpo
    (27) cuerpo -> . string cuerpo
    (28) cuerpo -> . integer cuerpo
    (29) cuerpo -> . float cuerpo
    (30) cuerpo -> .
    (32) declaracion -> . tiposvariables EQUAL datos
    (33) declaracion -> . tiposvariables EQUAL estructurasDatos
    (34) declaracion -> . tiposvariables EQUAL expresion
    (35) declaracion -> . tiposvariables EQUAL declaracion
    (36) declaracion -> . tiposvariables EQUAL casting
    (37) asignacion -> . LOCALVAR PLUSASSIGN datosAsignacion
    (38) asignacion -> . LOCALVAR MINASSIGN datosAsignacion
    (39) asignacion -> . LOCALVAR DIVASSIGN datosAsignacion
    (40) asignacion -> . LOCALVAR TIMESASSIGN datosAsignacion
    (41) asignacion -> . LOCALVAR MODASSIGN datosAsignacion
    (42) asignacion -> . LOCALVAR EXPASSIGN datosAsignacion
    (31) loop -> . FOR LOCALVAR IN rango cuerpo END
    (54) estructurasDatos -> . hash
    (55) estructurasDatos -> . array
    (56) estructurasDatos -> . set
    (114) if -> . IF datoscompletos operadores datoscompletos cuerpo END
    (115) if -> . IF datoscompletos operadores datoscompletos cuerpo else
    (135) unless -> . UNLESS expresionCondicional cuerpo ELSE cuerpo END
    (72) impresion -> . PUTS datos
    (73) impresion -> . PUTS LOCALVAR
    (74) impresion -> . PRINT datos
    (75) impresion -> . PRINT LOCALVAR
    (153) operacionSet -> . set DOT ADD LPARENTHESES datos RPARENTHESES
    (154) operacionSet -> . set DOT ADD LPARENTHESES tiposvariables RPARENTHESES
    (155) operacionSet -> . set DOT CLEAR
    (156) operacionSet -> . set DOT DELETE LPARENTHESES datos RPARENTHESES
    (157) operacionSet -> . set DOT DELETE LPARENTHESES tiposvariables RPARENTHESES
    (99) operacionarray -> . array LBRACKET INTEGER RBRACKET
    (100) operacionarray -> . array DOT TAKE LPARENTHESES INTEGER RPARENTHESES
    (101) operacionarray -> . array DOT DROP LPARENTHESES INTEGER RPARENTHESES
    (102) operacionarray -> . array DOT push maspush
    (107) operacionarray -> . array DOT POP
    (108) operacionarray -> . array DOT POP LPARENTHESES INTEGER RPARENTHESES
    (109) operacionarray -> . array DOT DELETE LPARENTHESES INTEGER RPARENTHESES
    (110) operacionarray -> . array DOT LENGTH LPARENTHESES RPARENTHESES
    (111) operacionarray -> . array DOT EMPTY QUESTIONMARK
    (62) operacionHash -> . hash LBRACKET datos RBRACKET
    (63) operacionHash -> . hash LBRACKET datos RBRACKET EQUAL datos
    (64) operacionHash -> . hash DOT INCLUDE QUESTIONMARK LPARENTHESES datos RPARENTHESES
    (65) operacionHash -> . hash DOT DELETE LPARENTHESES datos RPARENTHESES
    (66) operacionHash -> . hash DOT KEYS
    (67) operacionHash -> . hash DOT EMPTY QUESTIONMARK
    (68) operacionHash -> . hash DOT SIZE
    (69) operacionHash -> . hash DOT LENGTH
    (158) string -> . STRING PLUS STRING
    (159) string -> . STRING MULTIPLY INTEGER
    (160) string -> . STRING DOT stringOpt
    (124) integer -> . INTEGERW DOT SQRT LPARENTHESES INTEGER RPARENTHESES
    (125) integer -> . INTEGER DOT CEIL LPARENTHESES RPARENTHESES
    (126) integer -> . INTEGER DOT CEIL LPARENTHESES INTEGER RPARENTHESES
    (127) integer -> . INTEGER DOT FLOOR LPARENTHESES RPARENTHESES
    (128) integer -> . INTEGER DOT FLOOR LPARENTHESES INTEGER RPARENTHESES
    (129) integer -> . INTEGER DOT ABS
    (130) float -> . FLOAT DOT CEIL LPARENTHESES RPARENTHESES
    (131) float -> . FLOAT DOT CEIL LPARENTHESES INTEGER RPARENTHESES
    (132) float -> . FLOAT DOT FLOOR LPARENTHESES RPARENTHESES
    (133) float -> . FLOAT DOT FLOOR LPARENTHESES INTEGER RPARENTHESES
    (134) float -> . FLOAT DOT ABS
    (45) tiposvariables -> . VAR
    (46) tiposvariables -> . LOCALVAR
    (47) tiposvariables -> . CONSTANT
    (57) hash -> . LCURLYBRACKET elementoHash RCURLYBRACKET
    (91) array -> . LBRACKET RBRACKET
    (92) array -> . LBRACKET datosarray RBRACKET
    (147) set -> . SET LBRACKET elementoSet RBRACKET

    $end            reduce using rule 30 (cuerpo -> .)
    ELSE            reduce using rule 30 (cuerpo -> .)
    END             reduce using rule 30 (cuerpo -> .)
    RETURN          reduce using rule 30 (cuerpo -> .)
    LOCALVAR        shift and go to state 18
    FOR             shift and go to state 20
    IF              shift and go to state 24
    UNLESS          shift and go to state 25
    PUTS            shift and go to state 26
    PRINT           shift and go to state 27
    STRING          shift and go to state 30
    INTEGERW        shift and go to state 31
    INTEGER         shift and go to state 29
    FLOAT           shift and go to state 32
    VAR             shift and go to state 33
    CONSTANT        shift and go to state 34
    LCURLYBRACKET   shift and go to state 35
    LBRACKET        shift and go to state 28
    SET             shift and go to state 36

    declaracion                    shift and go to state 4
    cuerpo                         shift and go to state 37
    asignacion                     shift and go to state 5
    loop                           shift and go to state 6
    estructurasDatos               shift and go to state 7
    if                             shift and go to state 8
    unless                         shift and go to state 9
    impresion                      shift and go to state 10
    operacionSet                   shift and go to state 11
    operacionarray                 shift and go to state 12
    operacionHash                  shift and go to state 13
    string                         shift and go to state 14
    integer                        shift and go to state 15
    float                          shift and go to state 16
    tiposvariables                 shift and go to state 19
    hash                           shift and go to state 21
    array                          shift and go to state 22
    set                            shift and go to state 23

state 5

    (18) cuerpo -> asignacion . cuerpo
    (17) cuerpo -> . declaracion cuerpo
    (18) cuerpo -> . asignacion cuerpo
    (19) cuerpo -> . loop cuerpo
    (20) cuerpo -> . estructurasDatos cuerpo
    (21) cuerpo -> . if cuerpo
    (22) cuerpo -> . unless cuerpo
    (23) cuerpo -> . impresion cuerpo
    (24) cuerpo -> . operacionSet cuerpo
    (25) cuerpo -> . operacionarray cuerpo
    (26) cuerpo -> . operacionHash cuerpo
    (27) cuerpo -> . string cuerpo
    (28) cuerpo -> . integer cuerpo
    (29) cuerpo -> . float cuerpo
    (30) cuerpo -> .
    (32) declaracion -> . tiposvariables EQUAL datos
    (33) declaracion -> . tiposvariables EQUAL estructurasDatos
    (34) declaracion -> . tiposvariables EQUAL expresion
    (35) declaracion -> . tiposvariables EQUAL declaracion
    (36) declaracion -> . tiposvariables EQUAL casting
    (37) asignacion -> . LOCALVAR PLUSASSIGN datosAsignacion
    (38) asignacion -> . LOCALVAR MINASSIGN datosAsignacion
    (39) asignacion -> . LOCALVAR DIVASSIGN datosAsignacion
    (40) asignacion -> . LOCALVAR TIMESASSIGN datosAsignacion
    (41) asignacion -> . LOCALVAR MODASSIGN datosAsignacion
    (42) asignacion -> . LOCALVAR EXPASSIGN datosAsignacion
    (31) loop -> . FOR LOCALVAR IN rango cuerpo END
    (54) estructurasDatos -> . hash
    (55) estructurasDatos -> . array
    (56) estructurasDatos -> . set
    (114) if -> . IF datoscompletos operadores datoscompletos cuerpo END
    (115) if -> . IF datoscompletos operadores datoscompletos cuerpo else
    (135) unless -> . UNLESS expresionCondicional cuerpo ELSE cuerpo END
    (72) impresion -> . PUTS datos
    (73) impresion -> . PUTS LOCALVAR
    (74) impresion -> . PRINT datos
    (75) impresion -> . PRINT LOCALVAR
    (153) operacionSet -> . set DOT ADD LPARENTHESES datos RPARENTHESES
    (154) operacionSet -> . set DOT ADD LPARENTHESES tiposvariables RPARENTHESES
    (155) operacionSet -> . set DOT CLEAR
    (156) operacionSet -> . set DOT DELETE LPARENTHESES datos RPARENTHESES
    (157) operacionSet -> . set DOT DELETE LPARENTHESES tiposvariables RPARENTHESES
    (99) operacionarray -> . array LBRACKET INTEGER RBRACKET
    (100) operacionarray -> . array DOT TAKE LPARENTHESES INTEGER RPARENTHESES
    (101) operacionarray -> . array DOT DROP LPARENTHESES INTEGER RPARENTHESES
    (102) operacionarray -> . array DOT push maspush
    (107) operacionarray -> . array DOT POP
    (108) operacionarray -> . array DOT POP LPARENTHESES INTEGER RPARENTHESES
    (109) operacionarray -> . array DOT DELETE LPARENTHESES INTEGER RPARENTHESES
    (110) operacionarray -> . array DOT LENGTH LPARENTHESES RPARENTHESES
    (111) operacionarray -> . array DOT EMPTY QUESTIONMARK
    (62) operacionHash -> . hash LBRACKET datos RBRACKET
    (63) operacionHash -> . hash LBRACKET datos RBRACKET EQUAL datos
    (64) operacionHash -> . hash DOT INCLUDE QUESTIONMARK LPARENTHESES datos RPARENTHESES
    (65) operacionHash -> . hash DOT DELETE LPARENTHESES datos RPARENTHESES
    (66) operacionHash -> . hash DOT KEYS
    (67) operacionHash -> . hash DOT EMPTY QUESTIONMARK
    (68) operacionHash -> . hash DOT SIZE
    (69) operacionHash -> . hash DOT LENGTH
    (158) string -> . STRING PLUS STRING
    (159) string -> . STRING MULTIPLY INTEGER
    (160) string -> . STRING DOT stringOpt
    (124) integer -> . INTEGERW DOT SQRT LPARENTHESES INTEGER RPARENTHESES
    (125) integer -> . INTEGER DOT CEIL LPARENTHESES RPARENTHESES
    (126) integer -> . INTEGER DOT CEIL LPARENTHESES INTEGER RPARENTHESES
    (127) integer -> . INTEGER DOT FLOOR LPARENTHESES RPARENTHESES
    (128) integer -> . INTEGER DOT FLOOR LPARENTHESES INTEGER RPARENTHESES
    (129) integer -> . INTEGER DOT ABS
    (130) float -> . FLOAT DOT CEIL LPARENTHESES RPARENTHESES
    (131) float -> . FLOAT DOT CEIL LPARENTHESES INTEGER RPARENTHESES
    (132) float -> . FLOAT DOT FLOOR LPARENTHESES RPARENTHESES
    (133) float -> . FLOAT DOT FLOOR LPARENTHESES INTEGER RPARENTHESES
    (134) float -> . FLOAT DOT ABS
    (45) tiposvariables -> . VAR
    (46) tiposvariables -> . LOCALVAR
    (47) tiposvariables -> . CONSTANT
    (57) hash -> . LCURLYBRACKET elementoHash RCURLYBRACKET
    (91) array -> . LBRACKET RBRACKET
    (92) array -> . LBRACKET datosarray RBRACKET
    (147) set -> . SET LBRACKET elementoSet RBRACKET

    $end            reduce using rule 30 (cuerpo -> .)
    ELSE            reduce using rule 30 (cuerpo -> .)
    END             reduce using rule 30 (cuerpo -> .)
    RETURN          reduce using rule 30 (cuerpo -> .)
    LOCALVAR        shift and go to state 18
    FOR             shift and go to state 20
    IF              shift and go to state 24
    UNLESS          shift and go to state 25
    PUTS            shift and go to state 26
    PRINT           shift and go to state 27
    STRING          shift and go to state 30
    INTEGERW        shift and go to state 31
    INTEGER         shift and go to state 29
    FLOAT           shift and go to state 32
    VAR             shift and go to state 33
    CONSTANT        shift and go to state 34
    LCURLYBRACKET   shift and go to state 35
    LBRACKET        shift and go to state 28
    SET             shift and go to state 36

    asignacion                     shift and go to state 5
    cuerpo                         shift and go to state 38
    declaracion                    shift and go to state 4
    loop                           shift and go to state 6
    estructurasDatos               shift and go to state 7
    if                             shift and go to state 8
    unless                         shift and go to state 9
    impresion                      shift and go to state 10
    operacionSet                   shift and go to state 11
    operacionarray                 shift and go to state 12
    operacionHash                  shift and go to state 13
    string                         shift and go to state 14
    integer                        shift and go to state 15
    float                          shift and go to state 16
    tiposvariables                 shift and go to state 19
    hash                           shift and go to state 21
    array                          shift and go to state 22
    set                            shift and go to state 23

state 6

    (19) cuerpo -> loop . cuerpo
    (17) cuerpo -> . declaracion cuerpo
    (18) cuerpo -> . asignacion cuerpo
    (19) cuerpo -> . loop cuerpo
    (20) cuerpo -> . estructurasDatos cuerpo
    (21) cuerpo -> . if cuerpo
    (22) cuerpo -> . unless cuerpo
    (23) cuerpo -> . impresion cuerpo
    (24) cuerpo -> . operacionSet cuerpo
    (25) cuerpo -> . operacionarray cuerpo
    (26) cuerpo -> . operacionHash cuerpo
    (27) cuerpo -> . string cuerpo
    (28) cuerpo -> . integer cuerpo
    (29) cuerpo -> . float cuerpo
    (30) cuerpo -> .
    (32) declaracion -> . tiposvariables EQUAL datos
    (33) declaracion -> . tiposvariables EQUAL estructurasDatos
    (34) declaracion -> . tiposvariables EQUAL expresion
    (35) declaracion -> . tiposvariables EQUAL declaracion
    (36) declaracion -> . tiposvariables EQUAL casting
    (37) asignacion -> . LOCALVAR PLUSASSIGN datosAsignacion
    (38) asignacion -> . LOCALVAR MINASSIGN datosAsignacion
    (39) asignacion -> . LOCALVAR DIVASSIGN datosAsignacion
    (40) asignacion -> . LOCALVAR TIMESASSIGN datosAsignacion
    (41) asignacion -> . LOCALVAR MODASSIGN datosAsignacion
    (42) asignacion -> . LOCALVAR EXPASSIGN datosAsignacion
    (31) loop -> . FOR LOCALVAR IN rango cuerpo END
    (54) estructurasDatos -> . hash
    (55) estructurasDatos -> . array
    (56) estructurasDatos -> . set
    (114) if -> . IF datoscompletos operadores datoscompletos cuerpo END
    (115) if -> . IF datoscompletos operadores datoscompletos cuerpo else
    (135) unless -> . UNLESS expresionCondicional cuerpo ELSE cuerpo END
    (72) impresion -> . PUTS datos
    (73) impresion -> . PUTS LOCALVAR
    (74) impresion -> . PRINT datos
    (75) impresion -> . PRINT LOCALVAR
    (153) operacionSet -> . set DOT ADD LPARENTHESES datos RPARENTHESES
    (154) operacionSet -> . set DOT ADD LPARENTHESES tiposvariables RPARENTHESES
    (155) operacionSet -> . set DOT CLEAR
    (156) operacionSet -> . set DOT DELETE LPARENTHESES datos RPARENTHESES
    (157) operacionSet -> . set DOT DELETE LPARENTHESES tiposvariables RPARENTHESES
    (99) operacionarray -> . array LBRACKET INTEGER RBRACKET
    (100) operacionarray -> . array DOT TAKE LPARENTHESES INTEGER RPARENTHESES
    (101) operacionarray -> . array DOT DROP LPARENTHESES INTEGER RPARENTHESES
    (102) operacionarray -> . array DOT push maspush
    (107) operacionarray -> . array DOT POP
    (108) operacionarray -> . array DOT POP LPARENTHESES INTEGER RPARENTHESES
    (109) operacionarray -> . array DOT DELETE LPARENTHESES INTEGER RPARENTHESES
    (110) operacionarray -> . array DOT LENGTH LPARENTHESES RPARENTHESES
    (111) operacionarray -> . array DOT EMPTY QUESTIONMARK
    (62) operacionHash -> . hash LBRACKET datos RBRACKET
    (63) operacionHash -> . hash LBRACKET datos RBRACKET EQUAL datos
    (64) operacionHash -> . hash DOT INCLUDE QUESTIONMARK LPARENTHESES datos RPARENTHESES
    (65) operacionHash -> . hash DOT DELETE LPARENTHESES datos RPARENTHESES
    (66) operacionHash -> . hash DOT KEYS
    (67) operacionHash -> . hash DOT EMPTY QUESTIONMARK
    (68) operacionHash -> . hash DOT SIZE
    (69) operacionHash -> . hash DOT LENGTH
    (158) string -> . STRING PLUS STRING
    (159) string -> . STRING MULTIPLY INTEGER
    (160) string -> . STRING DOT stringOpt
    (124) integer -> . INTEGERW DOT SQRT LPARENTHESES INTEGER RPARENTHESES
    (125) integer -> . INTEGER DOT CEIL LPARENTHESES RPARENTHESES
    (126) integer -> . INTEGER DOT CEIL LPARENTHESES INTEGER RPARENTHESES
    (127) integer -> . INTEGER DOT FLOOR LPARENTHESES RPARENTHESES
    (128) integer -> . INTEGER DOT FLOOR LPARENTHESES INTEGER RPARENTHESES
    (129) integer -> . INTEGER DOT ABS
    (130) float -> . FLOAT DOT CEIL LPARENTHESES RPARENTHESES
    (131) float -> . FLOAT DOT CEIL LPARENTHESES INTEGER RPARENTHESES
    (132) float -> . FLOAT DOT FLOOR LPARENTHESES RPARENTHESES
    (133) float -> . FLOAT DOT FLOOR LPARENTHESES INTEGER RPARENTHESES
    (134) float -> . FLOAT DOT ABS
    (45) tiposvariables -> . VAR
    (46) tiposvariables -> . LOCALVAR
    (47) tiposvariables -> . CONSTANT
    (57) hash -> . LCURLYBRACKET elementoHash RCURLYBRACKET
    (91) array -> . LBRACKET RBRACKET
    (92) array -> . LBRACKET datosarray RBRACKET
    (147) set -> . SET LBRACKET elementoSet RBRACKET

    $end            reduce using rule 30 (cuerpo -> .)
    ELSE            reduce using rule 30 (cuerpo -> .)
    END             reduce using rule 30 (cuerpo -> .)
    RETURN          reduce using rule 30 (cuerpo -> .)
    LOCALVAR        shift and go to state 18
    FOR             shift and go to state 20
    IF              shift and go to state 24
    UNLESS          shift and go to state 25
    PUTS            shift and go to state 26
    PRINT           shift and go to state 27
    STRING          shift and go to state 30
    INTEGERW        shift and go to state 31
    INTEGER         shift and go to state 29
    FLOAT           shift and go to state 32
    VAR             shift and go to state 33
    CONSTANT        shift and go to state 34
    LCURLYBRACKET   shift and go to state 35
    LBRACKET        shift and go to state 28
    SET             shift and go to state 36

    loop                           shift and go to state 6
    cuerpo                         shift and go to state 39
    declaracion                    shift and go to state 4
    asignacion                     shift and go to state 5
    estructurasDatos               shift and go to state 7
    if                             shift and go to state 8
    unless                         shift and go to state 9
    impresion                      shift and go to state 10
    operacionSet                   shift and go to state 11
    operacionarray                 shift and go to state 12
    operacionHash                  shift and go to state 13
    string                         shift and go to state 14
    integer                        shift and go to state 15
    float                          shift and go to state 16
    tiposvariables                 shift and go to state 19
    hash                           shift and go to state 21
    array                          shift and go to state 22
    set                            shift and go to state 23

state 7

    (20) cuerpo -> estructurasDatos . cuerpo
    (17) cuerpo -> . declaracion cuerpo
    (18) cuerpo -> . asignacion cuerpo
    (19) cuerpo -> . loop cuerpo
    (20) cuerpo -> . estructurasDatos cuerpo
    (21) cuerpo -> . if cuerpo
    (22) cuerpo -> . unless cuerpo
    (23) cuerpo -> . impresion cuerpo
    (24) cuerpo -> . operacionSet cuerpo
    (25) cuerpo -> . operacionarray cuerpo
    (26) cuerpo -> . operacionHash cuerpo
    (27) cuerpo -> . string cuerpo
    (28) cuerpo -> . integer cuerpo
    (29) cuerpo -> . float cuerpo
    (30) cuerpo -> .
    (32) declaracion -> . tiposvariables EQUAL datos
    (33) declaracion -> . tiposvariables EQUAL estructurasDatos
    (34) declaracion -> . tiposvariables EQUAL expresion
    (35) declaracion -> . tiposvariables EQUAL declaracion
    (36) declaracion -> . tiposvariables EQUAL casting
    (37) asignacion -> . LOCALVAR PLUSASSIGN datosAsignacion
    (38) asignacion -> . LOCALVAR MINASSIGN datosAsignacion
    (39) asignacion -> . LOCALVAR DIVASSIGN datosAsignacion
    (40) asignacion -> . LOCALVAR TIMESASSIGN datosAsignacion
    (41) asignacion -> . LOCALVAR MODASSIGN datosAsignacion
    (42) asignacion -> . LOCALVAR EXPASSIGN datosAsignacion
    (31) loop -> . FOR LOCALVAR IN rango cuerpo END
    (54) estructurasDatos -> . hash
    (55) estructurasDatos -> . array
    (56) estructurasDatos -> . set
    (114) if -> . IF datoscompletos operadores datoscompletos cuerpo END
    (115) if -> . IF datoscompletos operadores datoscompletos cuerpo else
    (135) unless -> . UNLESS expresionCondicional cuerpo ELSE cuerpo END
    (72) impresion -> . PUTS datos
    (73) impresion -> . PUTS LOCALVAR
    (74) impresion -> . PRINT datos
    (75) impresion -> . PRINT LOCALVAR
    (153) operacionSet -> . set DOT ADD LPARENTHESES datos RPARENTHESES
    (154) operacionSet -> . set DOT ADD LPARENTHESES tiposvariables RPARENTHESES
    (155) operacionSet -> . set DOT CLEAR
    (156) operacionSet -> . set DOT DELETE LPARENTHESES datos RPARENTHESES
    (157) operacionSet -> . set DOT DELETE LPARENTHESES tiposvariables RPARENTHESES
    (99) operacionarray -> . array LBRACKET INTEGER RBRACKET
    (100) operacionarray -> . array DOT TAKE LPARENTHESES INTEGER RPARENTHESES
    (101) operacionarray -> . array DOT DROP LPARENTHESES INTEGER RPARENTHESES
    (102) operacionarray -> . array DOT push maspush
    (107) operacionarray -> . array DOT POP
    (108) operacionarray -> . array DOT POP LPARENTHESES INTEGER RPARENTHESES
    (109) operacionarray -> . array DOT DELETE LPARENTHESES INTEGER RPARENTHESES
    (110) operacionarray -> . array DOT LENGTH LPARENTHESES RPARENTHESES
    (111) operacionarray -> . array DOT EMPTY QUESTIONMARK
    (62) operacionHash -> . hash LBRACKET datos RBRACKET
    (63) operacionHash -> . hash LBRACKET datos RBRACKET EQUAL datos
    (64) operacionHash -> . hash DOT INCLUDE QUESTIONMARK LPARENTHESES datos RPARENTHESES
    (65) operacionHash -> . hash DOT DELETE LPARENTHESES datos RPARENTHESES
    (66) operacionHash -> . hash DOT KEYS
    (67) operacionHash -> . hash DOT EMPTY QUESTIONMARK
    (68) operacionHash -> . hash DOT SIZE
    (69) operacionHash -> . hash DOT LENGTH
    (158) string -> . STRING PLUS STRING
    (159) string -> . STRING MULTIPLY INTEGER
    (160) string -> . STRING DOT stringOpt
    (124) integer -> . INTEGERW DOT SQRT LPARENTHESES INTEGER RPARENTHESES
    (125) integer -> . INTEGER DOT CEIL LPARENTHESES RPARENTHESES
    (126) integer -> . INTEGER DOT CEIL LPARENTHESES INTEGER RPARENTHESES
    (127) integer -> . INTEGER DOT FLOOR LPARENTHESES RPARENTHESES
    (128) integer -> . INTEGER DOT FLOOR LPARENTHESES INTEGER RPARENTHESES
    (129) integer -> . INTEGER DOT ABS
    (130) float -> . FLOAT DOT CEIL LPARENTHESES RPARENTHESES
    (131) float -> . FLOAT DOT CEIL LPARENTHESES INTEGER RPARENTHESES
    (132) float -> . FLOAT DOT FLOOR LPARENTHESES RPARENTHESES
    (133) float -> . FLOAT DOT FLOOR LPARENTHESES INTEGER RPARENTHESES
    (134) float -> . FLOAT DOT ABS
    (45) tiposvariables -> . VAR
    (46) tiposvariables -> . LOCALVAR
    (47) tiposvariables -> . CONSTANT
    (57) hash -> . LCURLYBRACKET elementoHash RCURLYBRACKET
    (91) array -> . LBRACKET RBRACKET
    (92) array -> . LBRACKET datosarray RBRACKET
    (147) set -> . SET LBRACKET elementoSet RBRACKET

    $end            reduce using rule 30 (cuerpo -> .)
    ELSE            reduce using rule 30 (cuerpo -> .)
    END             reduce using rule 30 (cuerpo -> .)
    RETURN          reduce using rule 30 (cuerpo -> .)
    LOCALVAR        shift and go to state 18
    FOR             shift and go to state 20
    IF              shift and go to state 24
    UNLESS          shift and go to state 25
    PUTS            shift and go to state 26
    PRINT           shift and go to state 27
    STRING          shift and go to state 30
    INTEGERW        shift and go to state 31
    INTEGER         shift and go to state 29
    FLOAT           shift and go to state 32
    VAR             shift and go to state 33
    CONSTANT        shift and go to state 34
    LCURLYBRACKET   shift and go to state 35
    LBRACKET        shift and go to state 28
    SET             shift and go to state 36

    estructurasDatos               shift and go to state 7
    cuerpo                         shift and go to state 40
    declaracion                    shift and go to state 4
    asignacion                     shift and go to state 5
    loop                           shift and go to state 6
    if                             shift and go to state 8
    unless                         shift and go to state 9
    impresion                      shift and go to state 10
    operacionSet                   shift and go to state 11
    operacionarray                 shift and go to state 12
    operacionHash                  shift and go to state 13
    string                         shift and go to state 14
    integer                        shift and go to state 15
    float                          shift and go to state 16
    tiposvariables                 shift and go to state 19
    hash                           shift and go to state 21
    array                          shift and go to state 22
    set                            shift and go to state 23

state 8

    (21) cuerpo -> if . cuerpo
    (17) cuerpo -> . declaracion cuerpo
    (18) cuerpo -> . asignacion cuerpo
    (19) cuerpo -> . loop cuerpo
    (20) cuerpo -> . estructurasDatos cuerpo
    (21) cuerpo -> . if cuerpo
    (22) cuerpo -> . unless cuerpo
    (23) cuerpo -> . impresion cuerpo
    (24) cuerpo -> . operacionSet cuerpo
    (25) cuerpo -> . operacionarray cuerpo
    (26) cuerpo -> . operacionHash cuerpo
    (27) cuerpo -> . string cuerpo
    (28) cuerpo -> . integer cuerpo
    (29) cuerpo -> . float cuerpo
    (30) cuerpo -> .
    (32) declaracion -> . tiposvariables EQUAL datos
    (33) declaracion -> . tiposvariables EQUAL estructurasDatos
    (34) declaracion -> . tiposvariables EQUAL expresion
    (35) declaracion -> . tiposvariables EQUAL declaracion
    (36) declaracion -> . tiposvariables EQUAL casting
    (37) asignacion -> . LOCALVAR PLUSASSIGN datosAsignacion
    (38) asignacion -> . LOCALVAR MINASSIGN datosAsignacion
    (39) asignacion -> . LOCALVAR DIVASSIGN datosAsignacion
    (40) asignacion -> . LOCALVAR TIMESASSIGN datosAsignacion
    (41) asignacion -> . LOCALVAR MODASSIGN datosAsignacion
    (42) asignacion -> . LOCALVAR EXPASSIGN datosAsignacion
    (31) loop -> . FOR LOCALVAR IN rango cuerpo END
    (54) estructurasDatos -> . hash
    (55) estructurasDatos -> . array
    (56) estructurasDatos -> . set
    (114) if -> . IF datoscompletos operadores datoscompletos cuerpo END
    (115) if -> . IF datoscompletos operadores datoscompletos cuerpo else
    (135) unless -> . UNLESS expresionCondicional cuerpo ELSE cuerpo END
    (72) impresion -> . PUTS datos
    (73) impresion -> . PUTS LOCALVAR
    (74) impresion -> . PRINT datos
    (75) impresion -> . PRINT LOCALVAR
    (153) operacionSet -> . set DOT ADD LPARENTHESES datos RPARENTHESES
    (154) operacionSet -> . set DOT ADD LPARENTHESES tiposvariables RPARENTHESES
    (155) operacionSet -> . set DOT CLEAR
    (156) operacionSet -> . set DOT DELETE LPARENTHESES datos RPARENTHESES
    (157) operacionSet -> . set DOT DELETE LPARENTHESES tiposvariables RPARENTHESES
    (99) operacionarray -> . array LBRACKET INTEGER RBRACKET
    (100) operacionarray -> . array DOT TAKE LPARENTHESES INTEGER RPARENTHESES
    (101) operacionarray -> . array DOT DROP LPARENTHESES INTEGER RPARENTHESES
    (102) operacionarray -> . array DOT push maspush
    (107) operacionarray -> . array DOT POP
    (108) operacionarray -> . array DOT POP LPARENTHESES INTEGER RPARENTHESES
    (109) operacionarray -> . array DOT DELETE LPARENTHESES INTEGER RPARENTHESES
    (110) operacionarray -> . array DOT LENGTH LPARENTHESES RPARENTHESES
    (111) operacionarray -> . array DOT EMPTY QUESTIONMARK
    (62) operacionHash -> . hash LBRACKET datos RBRACKET
    (63) operacionHash -> . hash LBRACKET datos RBRACKET EQUAL datos
    (64) operacionHash -> . hash DOT INCLUDE QUESTIONMARK LPARENTHESES datos RPARENTHESES
    (65) operacionHash -> . hash DOT DELETE LPARENTHESES datos RPARENTHESES
    (66) operacionHash -> . hash DOT KEYS
    (67) operacionHash -> . hash DOT EMPTY QUESTIONMARK
    (68) operacionHash -> . hash DOT SIZE
    (69) operacionHash -> . hash DOT LENGTH
    (158) string -> . STRING PLUS STRING
    (159) string -> . STRING MULTIPLY INTEGER
    (160) string -> . STRING DOT stringOpt
    (124) integer -> . INTEGERW DOT SQRT LPARENTHESES INTEGER RPARENTHESES
    (125) integer -> . INTEGER DOT CEIL LPARENTHESES RPARENTHESES
    (126) integer -> . INTEGER DOT CEIL LPARENTHESES INTEGER RPARENTHESES
    (127) integer -> . INTEGER DOT FLOOR LPARENTHESES RPARENTHESES
    (128) integer -> . INTEGER DOT FLOOR LPARENTHESES INTEGER RPARENTHESES
    (129) integer -> . INTEGER DOT ABS
    (130) float -> . FLOAT DOT CEIL LPARENTHESES RPARENTHESES
    (131) float -> . FLOAT DOT CEIL LPARENTHESES INTEGER RPARENTHESES
    (132) float -> . FLOAT DOT FLOOR LPARENTHESES RPARENTHESES
    (133) float -> . FLOAT DOT FLOOR LPARENTHESES INTEGER RPARENTHESES
    (134) float -> . FLOAT DOT ABS
    (45) tiposvariables -> . VAR
    (46) tiposvariables -> . LOCALVAR
    (47) tiposvariables -> . CONSTANT
    (57) hash -> . LCURLYBRACKET elementoHash RCURLYBRACKET
    (91) array -> . LBRACKET RBRACKET
    (92) array -> . LBRACKET datosarray RBRACKET
    (147) set -> . SET LBRACKET elementoSet RBRACKET

    $end            reduce using rule 30 (cuerpo -> .)
    ELSE            reduce using rule 30 (cuerpo -> .)
    END             reduce using rule 30 (cuerpo -> .)
    RETURN          reduce using rule 30 (cuerpo -> .)
    LOCALVAR        shift and go to state 18
    FOR             shift and go to state 20
    IF              shift and go to state 24
    UNLESS          shift and go to state 25
    PUTS            shift and go to state 26
    PRINT           shift and go to state 27
    STRING          shift and go to state 30
    INTEGERW        shift and go to state 31
    INTEGER         shift and go to state 29
    FLOAT           shift and go to state 32
    VAR             shift and go to state 33
    CONSTANT        shift and go to state 34
    LCURLYBRACKET   shift and go to state 35
    LBRACKET        shift and go to state 28
    SET             shift and go to state 36

    if                             shift and go to state 8
    cuerpo                         shift and go to state 41
    declaracion                    shift and go to state 4
    asignacion                     shift and go to state 5
    loop                           shift and go to state 6
    estructurasDatos               shift and go to state 7
    unless                         shift and go to state 9
    impresion                      shift and go to state 10
    operacionSet                   shift and go to state 11
    operacionarray                 shift and go to state 12
    operacionHash                  shift and go to state 13
    string                         shift and go to state 14
    integer                        shift and go to state 15
    float                          shift and go to state 16
    tiposvariables                 shift and go to state 19
    hash                           shift and go to state 21
    array                          shift and go to state 22
    set                            shift and go to state 23

state 9

    (22) cuerpo -> unless . cuerpo
    (17) cuerpo -> . declaracion cuerpo
    (18) cuerpo -> . asignacion cuerpo
    (19) cuerpo -> . loop cuerpo
    (20) cuerpo -> . estructurasDatos cuerpo
    (21) cuerpo -> . if cuerpo
    (22) cuerpo -> . unless cuerpo
    (23) cuerpo -> . impresion cuerpo
    (24) cuerpo -> . operacionSet cuerpo
    (25) cuerpo -> . operacionarray cuerpo
    (26) cuerpo -> . operacionHash cuerpo
    (27) cuerpo -> . string cuerpo
    (28) cuerpo -> . integer cuerpo
    (29) cuerpo -> . float cuerpo
    (30) cuerpo -> .
    (32) declaracion -> . tiposvariables EQUAL datos
    (33) declaracion -> . tiposvariables EQUAL estructurasDatos
    (34) declaracion -> . tiposvariables EQUAL expresion
    (35) declaracion -> . tiposvariables EQUAL declaracion
    (36) declaracion -> . tiposvariables EQUAL casting
    (37) asignacion -> . LOCALVAR PLUSASSIGN datosAsignacion
    (38) asignacion -> . LOCALVAR MINASSIGN datosAsignacion
    (39) asignacion -> . LOCALVAR DIVASSIGN datosAsignacion
    (40) asignacion -> . LOCALVAR TIMESASSIGN datosAsignacion
    (41) asignacion -> . LOCALVAR MODASSIGN datosAsignacion
    (42) asignacion -> . LOCALVAR EXPASSIGN datosAsignacion
    (31) loop -> . FOR LOCALVAR IN rango cuerpo END
    (54) estructurasDatos -> . hash
    (55) estructurasDatos -> . array
    (56) estructurasDatos -> . set
    (114) if -> . IF datoscompletos operadores datoscompletos cuerpo END
    (115) if -> . IF datoscompletos operadores datoscompletos cuerpo else
    (135) unless -> . UNLESS expresionCondicional cuerpo ELSE cuerpo END
    (72) impresion -> . PUTS datos
    (73) impresion -> . PUTS LOCALVAR
    (74) impresion -> . PRINT datos
    (75) impresion -> . PRINT LOCALVAR
    (153) operacionSet -> . set DOT ADD LPARENTHESES datos RPARENTHESES
    (154) operacionSet -> . set DOT ADD LPARENTHESES tiposvariables RPARENTHESES
    (155) operacionSet -> . set DOT CLEAR
    (156) operacionSet -> . set DOT DELETE LPARENTHESES datos RPARENTHESES
    (157) operacionSet -> . set DOT DELETE LPARENTHESES tiposvariables RPARENTHESES
    (99) operacionarray -> . array LBRACKET INTEGER RBRACKET
    (100) operacionarray -> . array DOT TAKE LPARENTHESES INTEGER RPARENTHESES
    (101) operacionarray -> . array DOT DROP LPARENTHESES INTEGER RPARENTHESES
    (102) operacionarray -> . array DOT push maspush
    (107) operacionarray -> . array DOT POP
    (108) operacionarray -> . array DOT POP LPARENTHESES INTEGER RPARENTHESES
    (109) operacionarray -> . array DOT DELETE LPARENTHESES INTEGER RPARENTHESES
    (110) operacionarray -> . array DOT LENGTH LPARENTHESES RPARENTHESES
    (111) operacionarray -> . array DOT EMPTY QUESTIONMARK
    (62) operacionHash -> . hash LBRACKET datos RBRACKET
    (63) operacionHash -> . hash LBRACKET datos RBRACKET EQUAL datos
    (64) operacionHash -> . hash DOT INCLUDE QUESTIONMARK LPARENTHESES datos RPARENTHESES
    (65) operacionHash -> . hash DOT DELETE LPARENTHESES datos RPARENTHESES
    (66) operacionHash -> . hash DOT KEYS
    (67) operacionHash -> . hash DOT EMPTY QUESTIONMARK
    (68) operacionHash -> . hash DOT SIZE
    (69) operacionHash -> . hash DOT LENGTH
    (158) string -> . STRING PLUS STRING
    (159) string -> . STRING MULTIPLY INTEGER
    (160) string -> . STRING DOT stringOpt
    (124) integer -> . INTEGERW DOT SQRT LPARENTHESES INTEGER RPARENTHESES
    (125) integer -> . INTEGER DOT CEIL LPARENTHESES RPARENTHESES
    (126) integer -> . INTEGER DOT CEIL LPARENTHESES INTEGER RPARENTHESES
    (127) integer -> . INTEGER DOT FLOOR LPARENTHESES RPARENTHESES
    (128) integer -> . INTEGER DOT FLOOR LPARENTHESES INTEGER RPARENTHESES
    (129) integer -> . INTEGER DOT ABS
    (130) float -> . FLOAT DOT CEIL LPARENTHESES RPARENTHESES
    (131) float -> . FLOAT DOT CEIL LPARENTHESES INTEGER RPARENTHESES
    (132) float -> . FLOAT DOT FLOOR LPARENTHESES RPARENTHESES
    (133) float -> . FLOAT DOT FLOOR LPARENTHESES INTEGER RPARENTHESES
    (134) float -> . FLOAT DOT ABS
    (45) tiposvariables -> . VAR
    (46) tiposvariables -> . LOCALVAR
    (47) tiposvariables -> . CONSTANT
    (57) hash -> . LCURLYBRACKET elementoHash RCURLYBRACKET
    (91) array -> . LBRACKET RBRACKET
    (92) array -> . LBRACKET datosarray RBRACKET
    (147) set -> . SET LBRACKET elementoSet RBRACKET

    $end            reduce using rule 30 (cuerpo -> .)
    ELSE            reduce using rule 30 (cuerpo -> .)
    END             reduce using rule 30 (cuerpo -> .)
    RETURN          reduce using rule 30 (cuerpo -> .)
    LOCALVAR        shift and go to state 18
    FOR             shift and go to state 20
    IF              shift and go to state 24
    UNLESS          shift and go to state 25
    PUTS            shift and go to state 26
    PRINT           shift and go to state 27
    STRING          shift and go to state 30
    INTEGERW        shift and go to state 31
    INTEGER         shift and go to state 29
    FLOAT           shift and go to state 32
    VAR             shift and go to state 33
    CONSTANT        shift and go to state 34
    LCURLYBRACKET   shift and go to state 35
    LBRACKET        shift and go to state 28
    SET             shift and go to state 36

    unless                         shift and go to state 9
    cuerpo                         shift and go to state 42
    declaracion                    shift and go to state 4
    asignacion                     shift and go to state 5
    loop                           shift and go to state 6
    estructurasDatos               shift and go to state 7
    if                             shift and go to state 8
    impresion                      shift and go to state 10
    operacionSet                   shift and go to state 11
    operacionarray                 shift and go to state 12
    operacionHash                  shift and go to state 13
    string                         shift and go to state 14
    integer                        shift and go to state 15
    float                          shift and go to state 16
    tiposvariables                 shift and go to state 19
    hash                           shift and go to state 21
    array                          shift and go to state 22
    set                            shift and go to state 23

state 10

    (23) cuerpo -> impresion . cuerpo
    (17) cuerpo -> . declaracion cuerpo
    (18) cuerpo -> . asignacion cuerpo
    (19) cuerpo -> . loop cuerpo
    (20) cuerpo -> . estructurasDatos cuerpo
    (21) cuerpo -> . if cuerpo
    (22) cuerpo -> . unless cuerpo
    (23) cuerpo -> . impresion cuerpo
    (24) cuerpo -> . operacionSet cuerpo
    (25) cuerpo -> . operacionarray cuerpo
    (26) cuerpo -> . operacionHash cuerpo
    (27) cuerpo -> . string cuerpo
    (28) cuerpo -> . integer cuerpo
    (29) cuerpo -> . float cuerpo
    (30) cuerpo -> .
    (32) declaracion -> . tiposvariables EQUAL datos
    (33) declaracion -> . tiposvariables EQUAL estructurasDatos
    (34) declaracion -> . tiposvariables EQUAL expresion
    (35) declaracion -> . tiposvariables EQUAL declaracion
    (36) declaracion -> . tiposvariables EQUAL casting
    (37) asignacion -> . LOCALVAR PLUSASSIGN datosAsignacion
    (38) asignacion -> . LOCALVAR MINASSIGN datosAsignacion
    (39) asignacion -> . LOCALVAR DIVASSIGN datosAsignacion
    (40) asignacion -> . LOCALVAR TIMESASSIGN datosAsignacion
    (41) asignacion -> . LOCALVAR MODASSIGN datosAsignacion
    (42) asignacion -> . LOCALVAR EXPASSIGN datosAsignacion
    (31) loop -> . FOR LOCALVAR IN rango cuerpo END
    (54) estructurasDatos -> . hash
    (55) estructurasDatos -> . array
    (56) estructurasDatos -> . set
    (114) if -> . IF datoscompletos operadores datoscompletos cuerpo END
    (115) if -> . IF datoscompletos operadores datoscompletos cuerpo else
    (135) unless -> . UNLESS expresionCondicional cuerpo ELSE cuerpo END
    (72) impresion -> . PUTS datos
    (73) impresion -> . PUTS LOCALVAR
    (74) impresion -> . PRINT datos
    (75) impresion -> . PRINT LOCALVAR
    (153) operacionSet -> . set DOT ADD LPARENTHESES datos RPARENTHESES
    (154) operacionSet -> . set DOT ADD LPARENTHESES tiposvariables RPARENTHESES
    (155) operacionSet -> . set DOT CLEAR
    (156) operacionSet -> . set DOT DELETE LPARENTHESES datos RPARENTHESES
    (157) operacionSet -> . set DOT DELETE LPARENTHESES tiposvariables RPARENTHESES
    (99) operacionarray -> . array LBRACKET INTEGER RBRACKET
    (100) operacionarray -> . array DOT TAKE LPARENTHESES INTEGER RPARENTHESES
    (101) operacionarray -> . array DOT DROP LPARENTHESES INTEGER RPARENTHESES
    (102) operacionarray -> . array DOT push maspush
    (107) operacionarray -> . array DOT POP
    (108) operacionarray -> . array DOT POP LPARENTHESES INTEGER RPARENTHESES
    (109) operacionarray -> . array DOT DELETE LPARENTHESES INTEGER RPARENTHESES
    (110) operacionarray -> . array DOT LENGTH LPARENTHESES RPARENTHESES
    (111) operacionarray -> . array DOT EMPTY QUESTIONMARK
    (62) operacionHash -> . hash LBRACKET datos RBRACKET
    (63) operacionHash -> . hash LBRACKET datos RBRACKET EQUAL datos
    (64) operacionHash -> . hash DOT INCLUDE QUESTIONMARK LPARENTHESES datos RPARENTHESES
    (65) operacionHash -> . hash DOT DELETE LPARENTHESES datos RPARENTHESES
    (66) operacionHash -> . hash DOT KEYS
    (67) operacionHash -> . hash DOT EMPTY QUESTIONMARK
    (68) operacionHash -> . hash DOT SIZE
    (69) operacionHash -> . hash DOT LENGTH
    (158) string -> . STRING PLUS STRING
    (159) string -> . STRING MULTIPLY INTEGER
    (160) string -> . STRING DOT stringOpt
    (124) integer -> . INTEGERW DOT SQRT LPARENTHESES INTEGER RPARENTHESES
    (125) integer -> . INTEGER DOT CEIL LPARENTHESES RPARENTHESES
    (126) integer -> . INTEGER DOT CEIL LPARENTHESES INTEGER RPARENTHESES
    (127) integer -> . INTEGER DOT FLOOR LPARENTHESES RPARENTHESES
    (128) integer -> . INTEGER DOT FLOOR LPARENTHESES INTEGER RPARENTHESES
    (129) integer -> . INTEGER DOT ABS
    (130) float -> . FLOAT DOT CEIL LPARENTHESES RPARENTHESES
    (131) float -> . FLOAT DOT CEIL LPARENTHESES INTEGER RPARENTHESES
    (132) float -> . FLOAT DOT FLOOR LPARENTHESES RPARENTHESES
    (133) float -> . FLOAT DOT FLOOR LPARENTHESES INTEGER RPARENTHESES
    (134) float -> . FLOAT DOT ABS
    (45) tiposvariables -> . VAR
    (46) tiposvariables -> . LOCALVAR
    (47) tiposvariables -> . CONSTANT
    (57) hash -> . LCURLYBRACKET elementoHash RCURLYBRACKET
    (91) array -> . LBRACKET RBRACKET
    (92) array -> . LBRACKET datosarray RBRACKET
    (147) set -> . SET LBRACKET elementoSet RBRACKET

    $end            reduce using rule 30 (cuerpo -> .)
    ELSE            reduce using rule 30 (cuerpo -> .)
    END             reduce using rule 30 (cuerpo -> .)
    RETURN          reduce using rule 30 (cuerpo -> .)
    LOCALVAR        shift and go to state 18
    FOR             shift and go to state 20
    IF              shift and go to state 24
    UNLESS          shift and go to state 25
    PUTS            shift and go to state 26
    PRINT           shift and go to state 27
    STRING          shift and go to state 30
    INTEGERW        shift and go to state 31
    INTEGER         shift and go to state 29
    FLOAT           shift and go to state 32
    VAR             shift and go to state 33
    CONSTANT        shift and go to state 34
    LCURLYBRACKET   shift and go to state 35
    LBRACKET        shift and go to state 28
    SET             shift and go to state 36

    impresion                      shift and go to state 10
    cuerpo                         shift and go to state 43
    declaracion                    shift and go to state 4
    asignacion                     shift and go to state 5
    loop                           shift and go to state 6
    estructurasDatos               shift and go to state 7
    if                             shift and go to state 8
    unless                         shift and go to state 9
    operacionSet                   shift and go to state 11
    operacionarray                 shift and go to state 12
    operacionHash                  shift and go to state 13
    string                         shift and go to state 14
    integer                        shift and go to state 15
    float                          shift and go to state 16
    tiposvariables                 shift and go to state 19
    hash                           shift and go to state 21
    array                          shift and go to state 22
    set                            shift and go to state 23

state 11

    (24) cuerpo -> operacionSet . cuerpo
    (17) cuerpo -> . declaracion cuerpo
    (18) cuerpo -> . asignacion cuerpo
    (19) cuerpo -> . loop cuerpo
    (20) cuerpo -> . estructurasDatos cuerpo
    (21) cuerpo -> . if cuerpo
    (22) cuerpo -> . unless cuerpo
    (23) cuerpo -> . impresion cuerpo
    (24) cuerpo -> . operacionSet cuerpo
    (25) cuerpo -> . operacionarray cuerpo
    (26) cuerpo -> . operacionHash cuerpo
    (27) cuerpo -> . string cuerpo
    (28) cuerpo -> . integer cuerpo
    (29) cuerpo -> . float cuerpo
    (30) cuerpo -> .
    (32) declaracion -> . tiposvariables EQUAL datos
    (33) declaracion -> . tiposvariables EQUAL estructurasDatos
    (34) declaracion -> . tiposvariables EQUAL expresion
    (35) declaracion -> . tiposvariables EQUAL declaracion
    (36) declaracion -> . tiposvariables EQUAL casting
    (37) asignacion -> . LOCALVAR PLUSASSIGN datosAsignacion
    (38) asignacion -> . LOCALVAR MINASSIGN datosAsignacion
    (39) asignacion -> . LOCALVAR DIVASSIGN datosAsignacion
    (40) asignacion -> . LOCALVAR TIMESASSIGN datosAsignacion
    (41) asignacion -> . LOCALVAR MODASSIGN datosAsignacion
    (42) asignacion -> . LOCALVAR EXPASSIGN datosAsignacion
    (31) loop -> . FOR LOCALVAR IN rango cuerpo END
    (54) estructurasDatos -> . hash
    (55) estructurasDatos -> . array
    (56) estructurasDatos -> . set
    (114) if -> . IF datoscompletos operadores datoscompletos cuerpo END
    (115) if -> . IF datoscompletos operadores datoscompletos cuerpo else
    (135) unless -> . UNLESS expresionCondicional cuerpo ELSE cuerpo END
    (72) impresion -> . PUTS datos
    (73) impresion -> . PUTS LOCALVAR
    (74) impresion -> . PRINT datos
    (75) impresion -> . PRINT LOCALVAR
    (153) operacionSet -> . set DOT ADD LPARENTHESES datos RPARENTHESES
    (154) operacionSet -> . set DOT ADD LPARENTHESES tiposvariables RPARENTHESES
    (155) operacionSet -> . set DOT CLEAR
    (156) operacionSet -> . set DOT DELETE LPARENTHESES datos RPARENTHESES
    (157) operacionSet -> . set DOT DELETE LPARENTHESES tiposvariables RPARENTHESES
    (99) operacionarray -> . array LBRACKET INTEGER RBRACKET
    (100) operacionarray -> . array DOT TAKE LPARENTHESES INTEGER RPARENTHESES
    (101) operacionarray -> . array DOT DROP LPARENTHESES INTEGER RPARENTHESES
    (102) operacionarray -> . array DOT push maspush
    (107) operacionarray -> . array DOT POP
    (108) operacionarray -> . array DOT POP LPARENTHESES INTEGER RPARENTHESES
    (109) operacionarray -> . array DOT DELETE LPARENTHESES INTEGER RPARENTHESES
    (110) operacionarray -> . array DOT LENGTH LPARENTHESES RPARENTHESES
    (111) operacionarray -> . array DOT EMPTY QUESTIONMARK
    (62) operacionHash -> . hash LBRACKET datos RBRACKET
    (63) operacionHash -> . hash LBRACKET datos RBRACKET EQUAL datos
    (64) operacionHash -> . hash DOT INCLUDE QUESTIONMARK LPARENTHESES datos RPARENTHESES
    (65) operacionHash -> . hash DOT DELETE LPARENTHESES datos RPARENTHESES
    (66) operacionHash -> . hash DOT KEYS
    (67) operacionHash -> . hash DOT EMPTY QUESTIONMARK
    (68) operacionHash -> . hash DOT SIZE
    (69) operacionHash -> . hash DOT LENGTH
    (158) string -> . STRING PLUS STRING
    (159) string -> . STRING MULTIPLY INTEGER
    (160) string -> . STRING DOT stringOpt
    (124) integer -> . INTEGERW DOT SQRT LPARENTHESES INTEGER RPARENTHESES
    (125) integer -> . INTEGER DOT CEIL LPARENTHESES RPARENTHESES
    (126) integer -> . INTEGER DOT CEIL LPARENTHESES INTEGER RPARENTHESES
    (127) integer -> . INTEGER DOT FLOOR LPARENTHESES RPARENTHESES
    (128) integer -> . INTEGER DOT FLOOR LPARENTHESES INTEGER RPARENTHESES
    (129) integer -> . INTEGER DOT ABS
    (130) float -> . FLOAT DOT CEIL LPARENTHESES RPARENTHESES
    (131) float -> . FLOAT DOT CEIL LPARENTHESES INTEGER RPARENTHESES
    (132) float -> . FLOAT DOT FLOOR LPARENTHESES RPARENTHESES
    (133) float -> . FLOAT DOT FLOOR LPARENTHESES INTEGER RPARENTHESES
    (134) float -> . FLOAT DOT ABS
    (45) tiposvariables -> . VAR
    (46) tiposvariables -> . LOCALVAR
    (47) tiposvariables -> . CONSTANT
    (57) hash -> . LCURLYBRACKET elementoHash RCURLYBRACKET
    (91) array -> . LBRACKET RBRACKET
    (92) array -> . LBRACKET datosarray RBRACKET
    (147) set -> . SET LBRACKET elementoSet RBRACKET

    $end            reduce using rule 30 (cuerpo -> .)
    ELSE            reduce using rule 30 (cuerpo -> .)
    END             reduce using rule 30 (cuerpo -> .)
    RETURN          reduce using rule 30 (cuerpo -> .)
    LOCALVAR        shift and go to state 18
    FOR             shift and go to state 20
    IF              shift and go to state 24
    UNLESS          shift and go to state 25
    PUTS            shift and go to state 26
    PRINT           shift and go to state 27
    STRING          shift and go to state 30
    INTEGERW        shift and go to state 31
    INTEGER         shift and go to state 29
    FLOAT           shift and go to state 32
    VAR             shift and go to state 33
    CONSTANT        shift and go to state 34
    LCURLYBRACKET   shift and go to state 35
    LBRACKET        shift and go to state 28
    SET             shift and go to state 36

    operacionSet                   shift and go to state 11
    cuerpo                         shift and go to state 44
    declaracion                    shift and go to state 4
    asignacion                     shift and go to state 5
    loop                           shift and go to state 6
    estructurasDatos               shift and go to state 7
    if                             shift and go to state 8
    unless                         shift and go to state 9
    impresion                      shift and go to state 10
    operacionarray                 shift and go to state 12
    operacionHash                  shift and go to state 13
    string                         shift and go to state 14
    integer                        shift and go to state 15
    float                          shift and go to state 16
    tiposvariables                 shift and go to state 19
    hash                           shift and go to state 21
    array                          shift and go to state 22
    set                            shift and go to state 23

state 12

    (25) cuerpo -> operacionarray . cuerpo
    (17) cuerpo -> . declaracion cuerpo
    (18) cuerpo -> . asignacion cuerpo
    (19) cuerpo -> . loop cuerpo
    (20) cuerpo -> . estructurasDatos cuerpo
    (21) cuerpo -> . if cuerpo
    (22) cuerpo -> . unless cuerpo
    (23) cuerpo -> . impresion cuerpo
    (24) cuerpo -> . operacionSet cuerpo
    (25) cuerpo -> . operacionarray cuerpo
    (26) cuerpo -> . operacionHash cuerpo
    (27) cuerpo -> . string cuerpo
    (28) cuerpo -> . integer cuerpo
    (29) cuerpo -> . float cuerpo
    (30) cuerpo -> .
    (32) declaracion -> . tiposvariables EQUAL datos
    (33) declaracion -> . tiposvariables EQUAL estructurasDatos
    (34) declaracion -> . tiposvariables EQUAL expresion
    (35) declaracion -> . tiposvariables EQUAL declaracion
    (36) declaracion -> . tiposvariables EQUAL casting
    (37) asignacion -> . LOCALVAR PLUSASSIGN datosAsignacion
    (38) asignacion -> . LOCALVAR MINASSIGN datosAsignacion
    (39) asignacion -> . LOCALVAR DIVASSIGN datosAsignacion
    (40) asignacion -> . LOCALVAR TIMESASSIGN datosAsignacion
    (41) asignacion -> . LOCALVAR MODASSIGN datosAsignacion
    (42) asignacion -> . LOCALVAR EXPASSIGN datosAsignacion
    (31) loop -> . FOR LOCALVAR IN rango cuerpo END
    (54) estructurasDatos -> . hash
    (55) estructurasDatos -> . array
    (56) estructurasDatos -> . set
    (114) if -> . IF datoscompletos operadores datoscompletos cuerpo END
    (115) if -> . IF datoscompletos operadores datoscompletos cuerpo else
    (135) unless -> . UNLESS expresionCondicional cuerpo ELSE cuerpo END
    (72) impresion -> . PUTS datos
    (73) impresion -> . PUTS LOCALVAR
    (74) impresion -> . PRINT datos
    (75) impresion -> . PRINT LOCALVAR
    (153) operacionSet -> . set DOT ADD LPARENTHESES datos RPARENTHESES
    (154) operacionSet -> . set DOT ADD LPARENTHESES tiposvariables RPARENTHESES
    (155) operacionSet -> . set DOT CLEAR
    (156) operacionSet -> . set DOT DELETE LPARENTHESES datos RPARENTHESES
    (157) operacionSet -> . set DOT DELETE LPARENTHESES tiposvariables RPARENTHESES
    (99) operacionarray -> . array LBRACKET INTEGER RBRACKET
    (100) operacionarray -> . array DOT TAKE LPARENTHESES INTEGER RPARENTHESES
    (101) operacionarray -> . array DOT DROP LPARENTHESES INTEGER RPARENTHESES
    (102) operacionarray -> . array DOT push maspush
    (107) operacionarray -> . array DOT POP
    (108) operacionarray -> . array DOT POP LPARENTHESES INTEGER RPARENTHESES
    (109) operacionarray -> . array DOT DELETE LPARENTHESES INTEGER RPARENTHESES
    (110) operacionarray -> . array DOT LENGTH LPARENTHESES RPARENTHESES
    (111) operacionarray -> . array DOT EMPTY QUESTIONMARK
    (62) operacionHash -> . hash LBRACKET datos RBRACKET
    (63) operacionHash -> . hash LBRACKET datos RBRACKET EQUAL datos
    (64) operacionHash -> . hash DOT INCLUDE QUESTIONMARK LPARENTHESES datos RPARENTHESES
    (65) operacionHash -> . hash DOT DELETE LPARENTHESES datos RPARENTHESES
    (66) operacionHash -> . hash DOT KEYS
    (67) operacionHash -> . hash DOT EMPTY QUESTIONMARK
    (68) operacionHash -> . hash DOT SIZE
    (69) operacionHash -> . hash DOT LENGTH
    (158) string -> . STRING PLUS STRING
    (159) string -> . STRING MULTIPLY INTEGER
    (160) string -> . STRING DOT stringOpt
    (124) integer -> . INTEGERW DOT SQRT LPARENTHESES INTEGER RPARENTHESES
    (125) integer -> . INTEGER DOT CEIL LPARENTHESES RPARENTHESES
    (126) integer -> . INTEGER DOT CEIL LPARENTHESES INTEGER RPARENTHESES
    (127) integer -> . INTEGER DOT FLOOR LPARENTHESES RPARENTHESES
    (128) integer -> . INTEGER DOT FLOOR LPARENTHESES INTEGER RPARENTHESES
    (129) integer -> . INTEGER DOT ABS
    (130) float -> . FLOAT DOT CEIL LPARENTHESES RPARENTHESES
    (131) float -> . FLOAT DOT CEIL LPARENTHESES INTEGER RPARENTHESES
    (132) float -> . FLOAT DOT FLOOR LPARENTHESES RPARENTHESES
    (133) float -> . FLOAT DOT FLOOR LPARENTHESES INTEGER RPARENTHESES
    (134) float -> . FLOAT DOT ABS
    (45) tiposvariables -> . VAR
    (46) tiposvariables -> . LOCALVAR
    (47) tiposvariables -> . CONSTANT
    (57) hash -> . LCURLYBRACKET elementoHash RCURLYBRACKET
    (91) array -> . LBRACKET RBRACKET
    (92) array -> . LBRACKET datosarray RBRACKET
    (147) set -> . SET LBRACKET elementoSet RBRACKET

    $end            reduce using rule 30 (cuerpo -> .)
    ELSE            reduce using rule 30 (cuerpo -> .)
    END             reduce using rule 30 (cuerpo -> .)
    RETURN          reduce using rule 30 (cuerpo -> .)
    LOCALVAR        shift and go to state 18
    FOR             shift and go to state 20
    IF              shift and go to state 24
    UNLESS          shift and go to state 25
    PUTS            shift and go to state 26
    PRINT           shift and go to state 27
    STRING          shift and go to state 30
    INTEGERW        shift and go to state 31
    INTEGER         shift and go to state 29
    FLOAT           shift and go to state 32
    VAR             shift and go to state 33
    CONSTANT        shift and go to state 34
    LCURLYBRACKET   shift and go to state 35
    LBRACKET        shift and go to state 28
    SET             shift and go to state 36

    operacionarray                 shift and go to state 12
    cuerpo                         shift and go to state 45
    declaracion                    shift and go to state 4
    asignacion                     shift and go to state 5
    loop                           shift and go to state 6
    estructurasDatos               shift and go to state 7
    if                             shift and go to state 8
    unless                         shift and go to state 9
    impresion                      shift and go to state 10
    operacionSet                   shift and go to state 11
    operacionHash                  shift and go to state 13
    string                         shift and go to state 14
    integer                        shift and go to state 15
    float                          shift and go to state 16
    tiposvariables                 shift and go to state 19
    hash                           shift and go to state 21
    array                          shift and go to state 22
    set                            shift and go to state 23

state 13

    (26) cuerpo -> operacionHash . cuerpo
    (17) cuerpo -> . declaracion cuerpo
    (18) cuerpo -> . asignacion cuerpo
    (19) cuerpo -> . loop cuerpo
    (20) cuerpo -> . estructurasDatos cuerpo
    (21) cuerpo -> . if cuerpo
    (22) cuerpo -> . unless cuerpo
    (23) cuerpo -> . impresion cuerpo
    (24) cuerpo -> . operacionSet cuerpo
    (25) cuerpo -> . operacionarray cuerpo
    (26) cuerpo -> . operacionHash cuerpo
    (27) cuerpo -> . string cuerpo
    (28) cuerpo -> . integer cuerpo
    (29) cuerpo -> . float cuerpo
    (30) cuerpo -> .
    (32) declaracion -> . tiposvariables EQUAL datos
    (33) declaracion -> . tiposvariables EQUAL estructurasDatos
    (34) declaracion -> . tiposvariables EQUAL expresion
    (35) declaracion -> . tiposvariables EQUAL declaracion
    (36) declaracion -> . tiposvariables EQUAL casting
    (37) asignacion -> . LOCALVAR PLUSASSIGN datosAsignacion
    (38) asignacion -> . LOCALVAR MINASSIGN datosAsignacion
    (39) asignacion -> . LOCALVAR DIVASSIGN datosAsignacion
    (40) asignacion -> . LOCALVAR TIMESASSIGN datosAsignacion
    (41) asignacion -> . LOCALVAR MODASSIGN datosAsignacion
    (42) asignacion -> . LOCALVAR EXPASSIGN datosAsignacion
    (31) loop -> . FOR LOCALVAR IN rango cuerpo END
    (54) estructurasDatos -> . hash
    (55) estructurasDatos -> . array
    (56) estructurasDatos -> . set
    (114) if -> . IF datoscompletos operadores datoscompletos cuerpo END
    (115) if -> . IF datoscompletos operadores datoscompletos cuerpo else
    (135) unless -> . UNLESS expresionCondicional cuerpo ELSE cuerpo END
    (72) impresion -> . PUTS datos
    (73) impresion -> . PUTS LOCALVAR
    (74) impresion -> . PRINT datos
    (75) impresion -> . PRINT LOCALVAR
    (153) operacionSet -> . set DOT ADD LPARENTHESES datos RPARENTHESES
    (154) operacionSet -> . set DOT ADD LPARENTHESES tiposvariables RPARENTHESES
    (155) operacionSet -> . set DOT CLEAR
    (156) operacionSet -> . set DOT DELETE LPARENTHESES datos RPARENTHESES
    (157) operacionSet -> . set DOT DELETE LPARENTHESES tiposvariables RPARENTHESES
    (99) operacionarray -> . array LBRACKET INTEGER RBRACKET
    (100) operacionarray -> . array DOT TAKE LPARENTHESES INTEGER RPARENTHESES
    (101) operacionarray -> . array DOT DROP LPARENTHESES INTEGER RPARENTHESES
    (102) operacionarray -> . array DOT push maspush
    (107) operacionarray -> . array DOT POP
    (108) operacionarray -> . array DOT POP LPARENTHESES INTEGER RPARENTHESES
    (109) operacionarray -> . array DOT DELETE LPARENTHESES INTEGER RPARENTHESES
    (110) operacionarray -> . array DOT LENGTH LPARENTHESES RPARENTHESES
    (111) operacionarray -> . array DOT EMPTY QUESTIONMARK
    (62) operacionHash -> . hash LBRACKET datos RBRACKET
    (63) operacionHash -> . hash LBRACKET datos RBRACKET EQUAL datos
    (64) operacionHash -> . hash DOT INCLUDE QUESTIONMARK LPARENTHESES datos RPARENTHESES
    (65) operacionHash -> . hash DOT DELETE LPARENTHESES datos RPARENTHESES
    (66) operacionHash -> . hash DOT KEYS
    (67) operacionHash -> . hash DOT EMPTY QUESTIONMARK
    (68) operacionHash -> . hash DOT SIZE
    (69) operacionHash -> . hash DOT LENGTH
    (158) string -> . STRING PLUS STRING
    (159) string -> . STRING MULTIPLY INTEGER
    (160) string -> . STRING DOT stringOpt
    (124) integer -> . INTEGERW DOT SQRT LPARENTHESES INTEGER RPARENTHESES
    (125) integer -> . INTEGER DOT CEIL LPARENTHESES RPARENTHESES
    (126) integer -> . INTEGER DOT CEIL LPARENTHESES INTEGER RPARENTHESES
    (127) integer -> . INTEGER DOT FLOOR LPARENTHESES RPARENTHESES
    (128) integer -> . INTEGER DOT FLOOR LPARENTHESES INTEGER RPARENTHESES
    (129) integer -> . INTEGER DOT ABS
    (130) float -> . FLOAT DOT CEIL LPARENTHESES RPARENTHESES
    (131) float -> . FLOAT DOT CEIL LPARENTHESES INTEGER RPARENTHESES
    (132) float -> . FLOAT DOT FLOOR LPARENTHESES RPARENTHESES
    (133) float -> . FLOAT DOT FLOOR LPARENTHESES INTEGER RPARENTHESES
    (134) float -> . FLOAT DOT ABS
    (45) tiposvariables -> . VAR
    (46) tiposvariables -> . LOCALVAR
    (47) tiposvariables -> . CONSTANT
    (57) hash -> . LCURLYBRACKET elementoHash RCURLYBRACKET
    (91) array -> . LBRACKET RBRACKET
    (92) array -> . LBRACKET datosarray RBRACKET
    (147) set -> . SET LBRACKET elementoSet RBRACKET

    $end            reduce using rule 30 (cuerpo -> .)
    ELSE            reduce using rule 30 (cuerpo -> .)
    END             reduce using rule 30 (cuerpo -> .)
    RETURN          reduce using rule 30 (cuerpo -> .)
    LOCALVAR        shift and go to state 18
    FOR             shift and go to state 20
    IF              shift and go to state 24
    UNLESS          shift and go to state 25
    PUTS            shift and go to state 26
    PRINT           shift and go to state 27
    STRING          shift and go to state 30
    INTEGERW        shift and go to state 31
    INTEGER         shift and go to state 29
    FLOAT           shift and go to state 32
    VAR             shift and go to state 33
    CONSTANT        shift and go to state 34
    LCURLYBRACKET   shift and go to state 35
    LBRACKET        shift and go to state 28
    SET             shift and go to state 36

    operacionHash                  shift and go to state 13
    cuerpo                         shift and go to state 46
    declaracion                    shift and go to state 4
    asignacion                     shift and go to state 5
    loop                           shift and go to state 6
    estructurasDatos               shift and go to state 7
    if                             shift and go to state 8
    unless                         shift and go to state 9
    impresion                      shift and go to state 10
    operacionSet                   shift and go to state 11
    operacionarray                 shift and go to state 12
    string                         shift and go to state 14
    integer                        shift and go to state 15
    float                          shift and go to state 16
    tiposvariables                 shift and go to state 19
    hash                           shift and go to state 21
    array                          shift and go to state 22
    set                            shift and go to state 23

state 14

    (27) cuerpo -> string . cuerpo
    (17) cuerpo -> . declaracion cuerpo
    (18) cuerpo -> . asignacion cuerpo
    (19) cuerpo -> . loop cuerpo
    (20) cuerpo -> . estructurasDatos cuerpo
    (21) cuerpo -> . if cuerpo
    (22) cuerpo -> . unless cuerpo
    (23) cuerpo -> . impresion cuerpo
    (24) cuerpo -> . operacionSet cuerpo
    (25) cuerpo -> . operacionarray cuerpo
    (26) cuerpo -> . operacionHash cuerpo
    (27) cuerpo -> . string cuerpo
    (28) cuerpo -> . integer cuerpo
    (29) cuerpo -> . float cuerpo
    (30) cuerpo -> .
    (32) declaracion -> . tiposvariables EQUAL datos
    (33) declaracion -> . tiposvariables EQUAL estructurasDatos
    (34) declaracion -> . tiposvariables EQUAL expresion
    (35) declaracion -> . tiposvariables EQUAL declaracion
    (36) declaracion -> . tiposvariables EQUAL casting
    (37) asignacion -> . LOCALVAR PLUSASSIGN datosAsignacion
    (38) asignacion -> . LOCALVAR MINASSIGN datosAsignacion
    (39) asignacion -> . LOCALVAR DIVASSIGN datosAsignacion
    (40) asignacion -> . LOCALVAR TIMESASSIGN datosAsignacion
    (41) asignacion -> . LOCALVAR MODASSIGN datosAsignacion
    (42) asignacion -> . LOCALVAR EXPASSIGN datosAsignacion
    (31) loop -> . FOR LOCALVAR IN rango cuerpo END
    (54) estructurasDatos -> . hash
    (55) estructurasDatos -> . array
    (56) estructurasDatos -> . set
    (114) if -> . IF datoscompletos operadores datoscompletos cuerpo END
    (115) if -> . IF datoscompletos operadores datoscompletos cuerpo else
    (135) unless -> . UNLESS expresionCondicional cuerpo ELSE cuerpo END
    (72) impresion -> . PUTS datos
    (73) impresion -> . PUTS LOCALVAR
    (74) impresion -> . PRINT datos
    (75) impresion -> . PRINT LOCALVAR
    (153) operacionSet -> . set DOT ADD LPARENTHESES datos RPARENTHESES
    (154) operacionSet -> . set DOT ADD LPARENTHESES tiposvariables RPARENTHESES
    (155) operacionSet -> . set DOT CLEAR
    (156) operacionSet -> . set DOT DELETE LPARENTHESES datos RPARENTHESES
    (157) operacionSet -> . set DOT DELETE LPARENTHESES tiposvariables RPARENTHESES
    (99) operacionarray -> . array LBRACKET INTEGER RBRACKET
    (100) operacionarray -> . array DOT TAKE LPARENTHESES INTEGER RPARENTHESES
    (101) operacionarray -> . array DOT DROP LPARENTHESES INTEGER RPARENTHESES
    (102) operacionarray -> . array DOT push maspush
    (107) operacionarray -> . array DOT POP
    (108) operacionarray -> . array DOT POP LPARENTHESES INTEGER RPARENTHESES
    (109) operacionarray -> . array DOT DELETE LPARENTHESES INTEGER RPARENTHESES
    (110) operacionarray -> . array DOT LENGTH LPARENTHESES RPARENTHESES
    (111) operacionarray -> . array DOT EMPTY QUESTIONMARK
    (62) operacionHash -> . hash LBRACKET datos RBRACKET
    (63) operacionHash -> . hash LBRACKET datos RBRACKET EQUAL datos
    (64) operacionHash -> . hash DOT INCLUDE QUESTIONMARK LPARENTHESES datos RPARENTHESES
    (65) operacionHash -> . hash DOT DELETE LPARENTHESES datos RPARENTHESES
    (66) operacionHash -> . hash DOT KEYS
    (67) operacionHash -> . hash DOT EMPTY QUESTIONMARK
    (68) operacionHash -> . hash DOT SIZE
    (69) operacionHash -> . hash DOT LENGTH
    (158) string -> . STRING PLUS STRING
    (159) string -> . STRING MULTIPLY INTEGER
    (160) string -> . STRING DOT stringOpt
    (124) integer -> . INTEGERW DOT SQRT LPARENTHESES INTEGER RPARENTHESES
    (125) integer -> . INTEGER DOT CEIL LPARENTHESES RPARENTHESES
    (126) integer -> . INTEGER DOT CEIL LPARENTHESES INTEGER RPARENTHESES
    (127) integer -> . INTEGER DOT FLOOR LPARENTHESES RPARENTHESES
    (128) integer -> . INTEGER DOT FLOOR LPARENTHESES INTEGER RPARENTHESES
    (129) integer -> . INTEGER DOT ABS
    (130) float -> . FLOAT DOT CEIL LPARENTHESES RPARENTHESES
    (131) float -> . FLOAT DOT CEIL LPARENTHESES INTEGER RPARENTHESES
    (132) float -> . FLOAT DOT FLOOR LPARENTHESES RPARENTHESES
    (133) float -> . FLOAT DOT FLOOR LPARENTHESES INTEGER RPARENTHESES
    (134) float -> . FLOAT DOT ABS
    (45) tiposvariables -> . VAR
    (46) tiposvariables -> . LOCALVAR
    (47) tiposvariables -> . CONSTANT
    (57) hash -> . LCURLYBRACKET elementoHash RCURLYBRACKET
    (91) array -> . LBRACKET RBRACKET
    (92) array -> . LBRACKET datosarray RBRACKET
    (147) set -> . SET LBRACKET elementoSet RBRACKET

    $end            reduce using rule 30 (cuerpo -> .)
    ELSE            reduce using rule 30 (cuerpo -> .)
    END             reduce using rule 30 (cuerpo -> .)
    RETURN          reduce using rule 30 (cuerpo -> .)
    LOCALVAR        shift and go to state 18
    FOR             shift and go to state 20
    IF              shift and go to state 24
    UNLESS          shift and go to state 25
    PUTS            shift and go to state 26
    PRINT           shift and go to state 27
    STRING          shift and go to state 30
    INTEGERW        shift and go to state 31
    INTEGER         shift and go to state 29
    FLOAT           shift and go to state 32
    VAR             shift and go to state 33
    CONSTANT        shift and go to state 34
    LCURLYBRACKET   shift and go to state 35
    LBRACKET        shift and go to state 28
    SET             shift and go to state 36

    string                         shift and go to state 14
    cuerpo                         shift and go to state 47
    declaracion                    shift and go to state 4
    asignacion                     shift and go to state 5
    loop                           shift and go to state 6
    estructurasDatos               shift and go to state 7
    if                             shift and go to state 8
    unless                         shift and go to state 9
    impresion                      shift and go to state 10
    operacionSet                   shift and go to state 11
    operacionarray                 shift and go to state 12
    operacionHash                  shift and go to state 13
    integer                        shift and go to state 15
    float                          shift and go to state 16
    tiposvariables                 shift and go to state 19
    hash                           shift and go to state 21
    array                          shift and go to state 22
    set                            shift and go to state 23

state 15

    (28) cuerpo -> integer . cuerpo
    (17) cuerpo -> . declaracion cuerpo
    (18) cuerpo -> . asignacion cuerpo
    (19) cuerpo -> . loop cuerpo
    (20) cuerpo -> . estructurasDatos cuerpo
    (21) cuerpo -> . if cuerpo
    (22) cuerpo -> . unless cuerpo
    (23) cuerpo -> . impresion cuerpo
    (24) cuerpo -> . operacionSet cuerpo
    (25) cuerpo -> . operacionarray cuerpo
    (26) cuerpo -> . operacionHash cuerpo
    (27) cuerpo -> . string cuerpo
    (28) cuerpo -> . integer cuerpo
    (29) cuerpo -> . float cuerpo
    (30) cuerpo -> .
    (32) declaracion -> . tiposvariables EQUAL datos
    (33) declaracion -> . tiposvariables EQUAL estructurasDatos
    (34) declaracion -> . tiposvariables EQUAL expresion
    (35) declaracion -> . tiposvariables EQUAL declaracion
    (36) declaracion -> . tiposvariables EQUAL casting
    (37) asignacion -> . LOCALVAR PLUSASSIGN datosAsignacion
    (38) asignacion -> . LOCALVAR MINASSIGN datosAsignacion
    (39) asignacion -> . LOCALVAR DIVASSIGN datosAsignacion
    (40) asignacion -> . LOCALVAR TIMESASSIGN datosAsignacion
    (41) asignacion -> . LOCALVAR MODASSIGN datosAsignacion
    (42) asignacion -> . LOCALVAR EXPASSIGN datosAsignacion
    (31) loop -> . FOR LOCALVAR IN rango cuerpo END
    (54) estructurasDatos -> . hash
    (55) estructurasDatos -> . array
    (56) estructurasDatos -> . set
    (114) if -> . IF datoscompletos operadores datoscompletos cuerpo END
    (115) if -> . IF datoscompletos operadores datoscompletos cuerpo else
    (135) unless -> . UNLESS expresionCondicional cuerpo ELSE cuerpo END
    (72) impresion -> . PUTS datos
    (73) impresion -> . PUTS LOCALVAR
    (74) impresion -> . PRINT datos
    (75) impresion -> . PRINT LOCALVAR
    (153) operacionSet -> . set DOT ADD LPARENTHESES datos RPARENTHESES
    (154) operacionSet -> . set DOT ADD LPARENTHESES tiposvariables RPARENTHESES
    (155) operacionSet -> . set DOT CLEAR
    (156) operacionSet -> . set DOT DELETE LPARENTHESES datos RPARENTHESES
    (157) operacionSet -> . set DOT DELETE LPARENTHESES tiposvariables RPARENTHESES
    (99) operacionarray -> . array LBRACKET INTEGER RBRACKET
    (100) operacionarray -> . array DOT TAKE LPARENTHESES INTEGER RPARENTHESES
    (101) operacionarray -> . array DOT DROP LPARENTHESES INTEGER RPARENTHESES
    (102) operacionarray -> . array DOT push maspush
    (107) operacionarray -> . array DOT POP
    (108) operacionarray -> . array DOT POP LPARENTHESES INTEGER RPARENTHESES
    (109) operacionarray -> . array DOT DELETE LPARENTHESES INTEGER RPARENTHESES
    (110) operacionarray -> . array DOT LENGTH LPARENTHESES RPARENTHESES
    (111) operacionarray -> . array DOT EMPTY QUESTIONMARK
    (62) operacionHash -> . hash LBRACKET datos RBRACKET
    (63) operacionHash -> . hash LBRACKET datos RBRACKET EQUAL datos
    (64) operacionHash -> . hash DOT INCLUDE QUESTIONMARK LPARENTHESES datos RPARENTHESES
    (65) operacionHash -> . hash DOT DELETE LPARENTHESES datos RPARENTHESES
    (66) operacionHash -> . hash DOT KEYS
    (67) operacionHash -> . hash DOT EMPTY QUESTIONMARK
    (68) operacionHash -> . hash DOT SIZE
    (69) operacionHash -> . hash DOT LENGTH
    (158) string -> . STRING PLUS STRING
    (159) string -> . STRING MULTIPLY INTEGER
    (160) string -> . STRING DOT stringOpt
    (124) integer -> . INTEGERW DOT SQRT LPARENTHESES INTEGER RPARENTHESES
    (125) integer -> . INTEGER DOT CEIL LPARENTHESES RPARENTHESES
    (126) integer -> . INTEGER DOT CEIL LPARENTHESES INTEGER RPARENTHESES
    (127) integer -> . INTEGER DOT FLOOR LPARENTHESES RPARENTHESES
    (128) integer -> . INTEGER DOT FLOOR LPARENTHESES INTEGER RPARENTHESES
    (129) integer -> . INTEGER DOT ABS
    (130) float -> . FLOAT DOT CEIL LPARENTHESES RPARENTHESES
    (131) float -> . FLOAT DOT CEIL LPARENTHESES INTEGER RPARENTHESES
    (132) float -> . FLOAT DOT FLOOR LPARENTHESES RPARENTHESES
    (133) float -> . FLOAT DOT FLOOR LPARENTHESES INTEGER RPARENTHESES
    (134) float -> . FLOAT DOT ABS
    (45) tiposvariables -> . VAR
    (46) tiposvariables -> . LOCALVAR
    (47) tiposvariables -> . CONSTANT
    (57) hash -> . LCURLYBRACKET elementoHash RCURLYBRACKET
    (91) array -> . LBRACKET RBRACKET
    (92) array -> . LBRACKET datosarray RBRACKET
    (147) set -> . SET LBRACKET elementoSet RBRACKET

    $end            reduce using rule 30 (cuerpo -> .)
    ELSE            reduce using rule 30 (cuerpo -> .)
    END             reduce using rule 30 (cuerpo -> .)
    RETURN          reduce using rule 30 (cuerpo -> .)
    LOCALVAR        shift and go to state 18
    FOR             shift and go to state 20
    IF              shift and go to state 24
    UNLESS          shift and go to state 25
    PUTS            shift and go to state 26
    PRINT           shift and go to state 27
    STRING          shift and go to state 30
    INTEGERW        shift and go to state 31
    INTEGER         shift and go to state 29
    FLOAT           shift and go to state 32
    VAR             shift and go to state 33
    CONSTANT        shift and go to state 34
    LCURLYBRACKET   shift and go to state 35
    LBRACKET        shift and go to state 28
    SET             shift and go to state 36

    integer                        shift and go to state 15
    cuerpo                         shift and go to state 48
    declaracion                    shift and go to state 4
    asignacion                     shift and go to state 5
    loop                           shift and go to state 6
    estructurasDatos               shift and go to state 7
    if                             shift and go to state 8
    unless                         shift and go to state 9
    impresion                      shift and go to state 10
    operacionSet                   shift and go to state 11
    operacionarray                 shift and go to state 12
    operacionHash                  shift and go to state 13
    string                         shift and go to state 14
    float                          shift and go to state 16
    tiposvariables                 shift and go to state 19
    hash                           shift and go to state 21
    array                          shift and go to state 22
    set                            shift and go to state 23

state 16

    (29) cuerpo -> float . cuerpo
    (17) cuerpo -> . declaracion cuerpo
    (18) cuerpo -> . asignacion cuerpo
    (19) cuerpo -> . loop cuerpo
    (20) cuerpo -> . estructurasDatos cuerpo
    (21) cuerpo -> . if cuerpo
    (22) cuerpo -> . unless cuerpo
    (23) cuerpo -> . impresion cuerpo
    (24) cuerpo -> . operacionSet cuerpo
    (25) cuerpo -> . operacionarray cuerpo
    (26) cuerpo -> . operacionHash cuerpo
    (27) cuerpo -> . string cuerpo
    (28) cuerpo -> . integer cuerpo
    (29) cuerpo -> . float cuerpo
    (30) cuerpo -> .
    (32) declaracion -> . tiposvariables EQUAL datos
    (33) declaracion -> . tiposvariables EQUAL estructurasDatos
    (34) declaracion -> . tiposvariables EQUAL expresion
    (35) declaracion -> . tiposvariables EQUAL declaracion
    (36) declaracion -> . tiposvariables EQUAL casting
    (37) asignacion -> . LOCALVAR PLUSASSIGN datosAsignacion
    (38) asignacion -> . LOCALVAR MINASSIGN datosAsignacion
    (39) asignacion -> . LOCALVAR DIVASSIGN datosAsignacion
    (40) asignacion -> . LOCALVAR TIMESASSIGN datosAsignacion
    (41) asignacion -> . LOCALVAR MODASSIGN datosAsignacion
    (42) asignacion -> . LOCALVAR EXPASSIGN datosAsignacion
    (31) loop -> . FOR LOCALVAR IN rango cuerpo END
    (54) estructurasDatos -> . hash
    (55) estructurasDatos -> . array
    (56) estructurasDatos -> . set
    (114) if -> . IF datoscompletos operadores datoscompletos cuerpo END
    (115) if -> . IF datoscompletos operadores datoscompletos cuerpo else
    (135) unless -> . UNLESS expresionCondicional cuerpo ELSE cuerpo END
    (72) impresion -> . PUTS datos
    (73) impresion -> . PUTS LOCALVAR
    (74) impresion -> . PRINT datos
    (75) impresion -> . PRINT LOCALVAR
    (153) operacionSet -> . set DOT ADD LPARENTHESES datos RPARENTHESES
    (154) operacionSet -> . set DOT ADD LPARENTHESES tiposvariables RPARENTHESES
    (155) operacionSet -> . set DOT CLEAR
    (156) operacionSet -> . set DOT DELETE LPARENTHESES datos RPARENTHESES
    (157) operacionSet -> . set DOT DELETE LPARENTHESES tiposvariables RPARENTHESES
    (99) operacionarray -> . array LBRACKET INTEGER RBRACKET
    (100) operacionarray -> . array DOT TAKE LPARENTHESES INTEGER RPARENTHESES
    (101) operacionarray -> . array DOT DROP LPARENTHESES INTEGER RPARENTHESES
    (102) operacionarray -> . array DOT push maspush
    (107) operacionarray -> . array DOT POP
    (108) operacionarray -> . array DOT POP LPARENTHESES INTEGER RPARENTHESES
    (109) operacionarray -> . array DOT DELETE LPARENTHESES INTEGER RPARENTHESES
    (110) operacionarray -> . array DOT LENGTH LPARENTHESES RPARENTHESES
    (111) operacionarray -> . array DOT EMPTY QUESTIONMARK
    (62) operacionHash -> . hash LBRACKET datos RBRACKET
    (63) operacionHash -> . hash LBRACKET datos RBRACKET EQUAL datos
    (64) operacionHash -> . hash DOT INCLUDE QUESTIONMARK LPARENTHESES datos RPARENTHESES
    (65) operacionHash -> . hash DOT DELETE LPARENTHESES datos RPARENTHESES
    (66) operacionHash -> . hash DOT KEYS
    (67) operacionHash -> . hash DOT EMPTY QUESTIONMARK
    (68) operacionHash -> . hash DOT SIZE
    (69) operacionHash -> . hash DOT LENGTH
    (158) string -> . STRING PLUS STRING
    (159) string -> . STRING MULTIPLY INTEGER
    (160) string -> . STRING DOT stringOpt
    (124) integer -> . INTEGERW DOT SQRT LPARENTHESES INTEGER RPARENTHESES
    (125) integer -> . INTEGER DOT CEIL LPARENTHESES RPARENTHESES
    (126) integer -> . INTEGER DOT CEIL LPARENTHESES INTEGER RPARENTHESES
    (127) integer -> . INTEGER DOT FLOOR LPARENTHESES RPARENTHESES
    (128) integer -> . INTEGER DOT FLOOR LPARENTHESES INTEGER RPARENTHESES
    (129) integer -> . INTEGER DOT ABS
    (130) float -> . FLOAT DOT CEIL LPARENTHESES RPARENTHESES
    (131) float -> . FLOAT DOT CEIL LPARENTHESES INTEGER RPARENTHESES
    (132) float -> . FLOAT DOT FLOOR LPARENTHESES RPARENTHESES
    (133) float -> . FLOAT DOT FLOOR LPARENTHESES INTEGER RPARENTHESES
    (134) float -> . FLOAT DOT ABS
    (45) tiposvariables -> . VAR
    (46) tiposvariables -> . LOCALVAR
    (47) tiposvariables -> . CONSTANT
    (57) hash -> . LCURLYBRACKET elementoHash RCURLYBRACKET
    (91) array -> . LBRACKET RBRACKET
    (92) array -> . LBRACKET datosarray RBRACKET
    (147) set -> . SET LBRACKET elementoSet RBRACKET

    $end            reduce using rule 30 (cuerpo -> .)
    ELSE            reduce using rule 30 (cuerpo -> .)
    END             reduce using rule 30 (cuerpo -> .)
    RETURN          reduce using rule 30 (cuerpo -> .)
    LOCALVAR        shift and go to state 18
    FOR             shift and go to state 20
    IF              shift and go to state 24
    UNLESS          shift and go to state 25
    PUTS            shift and go to state 26
    PRINT           shift and go to state 27
    STRING          shift and go to state 30
    INTEGERW        shift and go to state 31
    INTEGER         shift and go to state 29
    FLOAT           shift and go to state 32
    VAR             shift and go to state 33
    CONSTANT        shift and go to state 34
    LCURLYBRACKET   shift and go to state 35
    LBRACKET        shift and go to state 28
    SET             shift and go to state 36

    float                          shift and go to state 16
    cuerpo                         shift and go to state 49
    declaracion                    shift and go to state 4
    asignacion                     shift and go to state 5
    loop                           shift and go to state 6
    estructurasDatos               shift and go to state 7
    if                             shift and go to state 8
    unless                         shift and go to state 9
    impresion                      shift and go to state 10
    operacionSet                   shift and go to state 11
    operacionarray                 shift and go to state 12
    operacionHash                  shift and go to state 13
    string                         shift and go to state 14
    integer                        shift and go to state 15
    tiposvariables                 shift and go to state 19
    hash                           shift and go to state 21
    array                          shift and go to state 22
    set                            shift and go to state 23

state 17

    (3) funcion -> DEF . LOCALVAR LPARENTHESES argumentos RPARENTHESES cuerpo END
    (4) funcion -> DEF . LOCALVAR LPARENTHESES argumentos RPARENTHESES cuerpo retornar END

    LOCALVAR        shift and go to state 50


state 18

    (37) asignacion -> LOCALVAR . PLUSASSIGN datosAsignacion
    (38) asignacion -> LOCALVAR . MINASSIGN datosAsignacion
    (39) asignacion -> LOCALVAR . DIVASSIGN datosAsignacion
    (40) asignacion -> LOCALVAR . TIMESASSIGN datosAsignacion
    (41) asignacion -> LOCALVAR . MODASSIGN datosAsignacion
    (42) asignacion -> LOCALVAR . EXPASSIGN datosAsignacion
    (46) tiposvariables -> LOCALVAR .

    PLUSASSIGN      shift and go to state 51
    MINASSIGN       shift and go to state 52
    DIVASSIGN       shift and go to state 53
    TIMESASSIGN     shift and go to state 54
    MODASSIGN       shift and go to state 55
    EXPASSIGN       shift and go to state 56
    EQUAL           reduce using rule 46 (tiposvariables -> LOCALVAR .)


state 19

    (32) declaracion -> tiposvariables . EQUAL datos
    (33) declaracion -> tiposvariables . EQUAL estructurasDatos
    (34) declaracion -> tiposvariables . EQUAL expresion
    (35) declaracion -> tiposvariables . EQUAL declaracion
    (36) declaracion -> tiposvariables . EQUAL casting

    EQUAL           shift and go to state 57


state 20

    (31) loop -> FOR . LOCALVAR IN rango cuerpo END

    LOCALVAR        shift and go to state 58


state 21

    (54) estructurasDatos -> hash .
    (62) operacionHash -> hash . LBRACKET datos RBRACKET
    (63) operacionHash -> hash . LBRACKET datos RBRACKET EQUAL datos
    (64) operacionHash -> hash . DOT INCLUDE QUESTIONMARK LPARENTHESES datos RPARENTHESES
    (65) operacionHash -> hash . DOT DELETE LPARENTHESES datos RPARENTHESES
    (66) operacionHash -> hash . DOT KEYS
    (67) operacionHash -> hash . DOT EMPTY QUESTIONMARK
    (68) operacionHash -> hash . DOT SIZE
    (69) operacionHash -> hash . DOT LENGTH

  ! shift/reduce conflict for LBRACKET resolved as shift
    LOCALVAR        reduce using rule 54 (estructurasDatos -> hash .)
    FOR             reduce using rule 54 (estructurasDatos -> hash .)
    IF              reduce using rule 54 (estructurasDatos -> hash .)
    UNLESS          reduce using rule 54 (estructurasDatos -> hash .)
    PUTS            reduce using rule 54 (estructurasDatos -> hash .)
    PRINT           reduce using rule 54 (estructurasDatos -> hash .)
    STRING          reduce using rule 54 (estructurasDatos -> hash .)
    INTEGERW        reduce using rule 54 (estructurasDatos -> hash .)
    INTEGER         reduce using rule 54 (estructurasDatos -> hash .)
    FLOAT           reduce using rule 54 (estructurasDatos -> hash .)
    VAR             reduce using rule 54 (estructurasDatos -> hash .)
    CONSTANT        reduce using rule 54 (estructurasDatos -> hash .)
    LCURLYBRACKET   reduce using rule 54 (estructurasDatos -> hash .)
    SET             reduce using rule 54 (estructurasDatos -> hash .)
    $end            reduce using rule 54 (estructurasDatos -> hash .)
    ELSE            reduce using rule 54 (estructurasDatos -> hash .)
    END             reduce using rule 54 (estructurasDatos -> hash .)
    RETURN          reduce using rule 54 (estructurasDatos -> hash .)
    LBRACKET        shift and go to state 59
    DOT             shift and go to state 60

  ! LBRACKET        [ reduce using rule 54 (estructurasDatos -> hash .) ]


state 22

    (55) estructurasDatos -> array .
    (99) operacionarray -> array . LBRACKET INTEGER RBRACKET
    (100) operacionarray -> array . DOT TAKE LPARENTHESES INTEGER RPARENTHESES
    (101) operacionarray -> array . DOT DROP LPARENTHESES INTEGER RPARENTHESES
    (102) operacionarray -> array . DOT push maspush
    (107) operacionarray -> array . DOT POP
    (108) operacionarray -> array . DOT POP LPARENTHESES INTEGER RPARENTHESES
    (109) operacionarray -> array . DOT DELETE LPARENTHESES INTEGER RPARENTHESES
    (110) operacionarray -> array . DOT LENGTH LPARENTHESES RPARENTHESES
    (111) operacionarray -> array . DOT EMPTY QUESTIONMARK

  ! shift/reduce conflict for LBRACKET resolved as shift
    LOCALVAR        reduce using rule 55 (estructurasDatos -> array .)
    FOR             reduce using rule 55 (estructurasDatos -> array .)
    IF              reduce using rule 55 (estructurasDatos -> array .)
    UNLESS          reduce using rule 55 (estructurasDatos -> array .)
    PUTS            reduce using rule 55 (estructurasDatos -> array .)
    PRINT           reduce using rule 55 (estructurasDatos -> array .)
    STRING          reduce using rule 55 (estructurasDatos -> array .)
    INTEGERW        reduce using rule 55 (estructurasDatos -> array .)
    INTEGER         reduce using rule 55 (estructurasDatos -> array .)
    FLOAT           reduce using rule 55 (estructurasDatos -> array .)
    VAR             reduce using rule 55 (estructurasDatos -> array .)
    CONSTANT        reduce using rule 55 (estructurasDatos -> array .)
    LCURLYBRACKET   reduce using rule 55 (estructurasDatos -> array .)
    SET             reduce using rule 55 (estructurasDatos -> array .)
    $end            reduce using rule 55 (estructurasDatos -> array .)
    ELSE            reduce using rule 55 (estructurasDatos -> array .)
    END             reduce using rule 55 (estructurasDatos -> array .)
    RETURN          reduce using rule 55 (estructurasDatos -> array .)
    LBRACKET        shift and go to state 61
    DOT             shift and go to state 62

  ! LBRACKET        [ reduce using rule 55 (estructurasDatos -> array .) ]


state 23

    (56) estructurasDatos -> set .
    (153) operacionSet -> set . DOT ADD LPARENTHESES datos RPARENTHESES
    (154) operacionSet -> set . DOT ADD LPARENTHESES tiposvariables RPARENTHESES
    (155) operacionSet -> set . DOT CLEAR
    (156) operacionSet -> set . DOT DELETE LPARENTHESES datos RPARENTHESES
    (157) operacionSet -> set . DOT DELETE LPARENTHESES tiposvariables RPARENTHESES

    LOCALVAR        reduce using rule 56 (estructurasDatos -> set .)
    FOR             reduce using rule 56 (estructurasDatos -> set .)
    IF              reduce using rule 56 (estructurasDatos -> set .)
    UNLESS          reduce using rule 56 (estructurasDatos -> set .)
    PUTS            reduce using rule 56 (estructurasDatos -> set .)
    PRINT           reduce using rule 56 (estructurasDatos -> set .)
    STRING          reduce using rule 56 (estructurasDatos -> set .)
    INTEGERW        reduce using rule 56 (estructurasDatos -> set .)
    INTEGER         reduce using rule 56 (estructurasDatos -> set .)
    FLOAT           reduce using rule 56 (estructurasDatos -> set .)
    VAR             reduce using rule 56 (estructurasDatos -> set .)
    CONSTANT        reduce using rule 56 (estructurasDatos -> set .)
    LCURLYBRACKET   reduce using rule 56 (estructurasDatos -> set .)
    LBRACKET        reduce using rule 56 (estructurasDatos -> set .)
    SET             reduce using rule 56 (estructurasDatos -> set .)
    $end            reduce using rule 56 (estructurasDatos -> set .)
    ELSE            reduce using rule 56 (estructurasDatos -> set .)
    END             reduce using rule 56 (estructurasDatos -> set .)
    RETURN          reduce using rule 56 (estructurasDatos -> set .)
    DOT             shift and go to state 63


state 24

    (114) if -> IF . datoscompletos operadores datoscompletos cuerpo END
    (115) if -> IF . datoscompletos operadores datoscompletos cuerpo else
    (112) datoscompletos -> . datosvarios
    (113) datoscompletos -> . tiposvariables
    (93) datosvarios -> . datos
    (94) datosvarios -> . number
    (95) datosvarios -> . VAR
    (96) datosvarios -> . LOCALVAR
    (45) tiposvariables -> . VAR
    (46) tiposvariables -> . LOCALVAR
    (47) tiposvariables -> . CONSTANT
    (48) datos -> . INTEGER
    (49) datos -> . FLOAT
    (50) datos -> . STRING
    (51) datos -> . booleanos
    (76) number -> . INTEGER
    (77) number -> . FLOAT
    (52) booleanos -> . TRUE
    (53) booleanos -> . FALSE

    VAR             shift and go to state 69
    LOCALVAR        shift and go to state 70
    CONSTANT        shift and go to state 34
    INTEGER         shift and go to state 71
    FLOAT           shift and go to state 72
    STRING          shift and go to state 73
    TRUE            shift and go to state 75
    FALSE           shift and go to state 76

    datoscompletos                 shift and go to state 64
    datosvarios                    shift and go to state 65
    tiposvariables                 shift and go to state 66
    datos                          shift and go to state 67
    number                         shift and go to state 68
    booleanos                      shift and go to state 74

state 25

    (135) unless -> UNLESS . expresionCondicional cuerpo ELSE cuerpo END
    (136) expresionCondicional -> . boolean
    (137) expresionCondicional -> . EXCLAMATION LPARENTHESES boolean RPARENTHESES
    (140) boolean -> . condiciones
    (141) boolean -> . EXCLAMATION LPARENTHESES condiciones RPARENTHESES
    (142) boolean -> . boolean operadorBinario boolean
    (143) condiciones -> . tiposvariables operadores tiposvariables
    (144) condiciones -> . datos operadores datos
    (145) condiciones -> . tiposvariables operadores datos
    (146) condiciones -> . datos operadores tiposvariables
    (45) tiposvariables -> . VAR
    (46) tiposvariables -> . LOCALVAR
    (47) tiposvariables -> . CONSTANT
    (48) datos -> . INTEGER
    (49) datos -> . FLOAT
    (50) datos -> . STRING
    (51) datos -> . booleanos
    (52) booleanos -> . TRUE
    (53) booleanos -> . FALSE

    EXCLAMATION     shift and go to state 79
    VAR             shift and go to state 33
    LOCALVAR        shift and go to state 83
    CONSTANT        shift and go to state 34
    INTEGER         shift and go to state 84
    FLOAT           shift and go to state 85
    STRING          shift and go to state 73
    TRUE            shift and go to state 75
    FALSE           shift and go to state 76

    expresionCondicional           shift and go to state 77
    boolean                        shift and go to state 78
    condiciones                    shift and go to state 80
    tiposvariables                 shift and go to state 81
    datos                          shift and go to state 82
    booleanos                      shift and go to state 74

state 26

    (72) impresion -> PUTS . datos
    (73) impresion -> PUTS . LOCALVAR
    (48) datos -> . INTEGER
    (49) datos -> . FLOAT
    (50) datos -> . STRING
    (51) datos -> . booleanos
    (52) booleanos -> . TRUE
    (53) booleanos -> . FALSE

    LOCALVAR        shift and go to state 87
    INTEGER         shift and go to state 84
    FLOAT           shift and go to state 85
    STRING          shift and go to state 73
    TRUE            shift and go to state 75
    FALSE           shift and go to state 76

    datos                          shift and go to state 86
    booleanos                      shift and go to state 74

state 27

    (74) impresion -> PRINT . datos
    (75) impresion -> PRINT . LOCALVAR
    (48) datos -> . INTEGER
    (49) datos -> . FLOAT
    (50) datos -> . STRING
    (51) datos -> . booleanos
    (52) booleanos -> . TRUE
    (53) booleanos -> . FALSE

    LOCALVAR        shift and go to state 89
    INTEGER         shift and go to state 84
    FLOAT           shift and go to state 85
    STRING          shift and go to state 73
    TRUE            shift and go to state 75
    FALSE           shift and go to state 76

    datos                          shift and go to state 88
    booleanos                      shift and go to state 74

state 28

    (91) array -> LBRACKET . RBRACKET
    (92) array -> LBRACKET . datosarray RBRACKET
    (97) datosarray -> . datosvarios
    (98) datosarray -> . datosarray COMMA datosvarios
    (93) datosvarios -> . datos
    (94) datosvarios -> . number
    (95) datosvarios -> . VAR
    (96) datosvarios -> . LOCALVAR
    (48) datos -> . INTEGER
    (49) datos -> . FLOAT
    (50) datos -> . STRING
    (51) datos -> . booleanos
    (76) number -> . INTEGER
    (77) number -> . FLOAT
    (52) booleanos -> . TRUE
    (53) booleanos -> . FALSE

    RBRACKET        shift and go to state 90
    VAR             shift and go to state 93
    LOCALVAR        shift and go to state 94
    INTEGER         shift and go to state 71
    FLOAT           shift and go to state 72
    STRING          shift and go to state 73
    TRUE            shift and go to state 75
    FALSE           shift and go to state 76

    datosarray                     shift and go to state 91
    datosvarios                    shift and go to state 92
    datos                          shift and go to state 67
    number                         shift and go to state 68
    booleanos                      shift and go to state 74

state 29

    (125) integer -> INTEGER . DOT CEIL LPARENTHESES RPARENTHESES
    (126) integer -> INTEGER . DOT CEIL LPARENTHESES INTEGER RPARENTHESES
    (127) integer -> INTEGER . DOT FLOOR LPARENTHESES RPARENTHESES
    (128) integer -> INTEGER . DOT FLOOR LPARENTHESES INTEGER RPARENTHESES
    (129) integer -> INTEGER . DOT ABS

    DOT             shift and go to state 95


state 30

    (158) string -> STRING . PLUS STRING
    (159) string -> STRING . MULTIPLY INTEGER
    (160) string -> STRING . DOT stringOpt

    PLUS            shift and go to state 96
    MULTIPLY        shift and go to state 97
    DOT             shift and go to state 98


state 31

    (124) integer -> INTEGERW . DOT SQRT LPARENTHESES INTEGER RPARENTHESES

    DOT             shift and go to state 99


state 32

    (130) float -> FLOAT . DOT CEIL LPARENTHESES RPARENTHESES
    (131) float -> FLOAT . DOT CEIL LPARENTHESES INTEGER RPARENTHESES
    (132) float -> FLOAT . DOT FLOOR LPARENTHESES RPARENTHESES
    (133) float -> FLOAT . DOT FLOOR LPARENTHESES INTEGER RPARENTHESES
    (134) float -> FLOAT . DOT ABS

    DOT             shift and go to state 100


state 33

    (45) tiposvariables -> VAR .

    EQUAL           reduce using rule 45 (tiposvariables -> VAR .)
    DOUBLEEQUAL     reduce using rule 45 (tiposvariables -> VAR .)
    TRIPLEEQUAL     reduce using rule 45 (tiposvariables -> VAR .)
    GREATERTHAN     reduce using rule 45 (tiposvariables -> VAR .)
    NOTEQUAL        reduce using rule 45 (tiposvariables -> VAR .)
    LESSTHAN        reduce using rule 45 (tiposvariables -> VAR .)
    GREQUAL         reduce using rule 45 (tiposvariables -> VAR .)
    LEQUAL          reduce using rule 45 (tiposvariables -> VAR .)
    DOUBLEAMPERSAND reduce using rule 45 (tiposvariables -> VAR .)
    DOUBLEPIPE      reduce using rule 45 (tiposvariables -> VAR .)
    LOCALVAR        reduce using rule 45 (tiposvariables -> VAR .)
    FOR             reduce using rule 45 (tiposvariables -> VAR .)
    IF              reduce using rule 45 (tiposvariables -> VAR .)
    UNLESS          reduce using rule 45 (tiposvariables -> VAR .)
    PUTS            reduce using rule 45 (tiposvariables -> VAR .)
    PRINT           reduce using rule 45 (tiposvariables -> VAR .)
    STRING          reduce using rule 45 (tiposvariables -> VAR .)
    INTEGERW        reduce using rule 45 (tiposvariables -> VAR .)
    INTEGER         reduce using rule 45 (tiposvariables -> VAR .)
    FLOAT           reduce using rule 45 (tiposvariables -> VAR .)
    VAR             reduce using rule 45 (tiposvariables -> VAR .)
    CONSTANT        reduce using rule 45 (tiposvariables -> VAR .)
    LCURLYBRACKET   reduce using rule 45 (tiposvariables -> VAR .)
    LBRACKET        reduce using rule 45 (tiposvariables -> VAR .)
    SET             reduce using rule 45 (tiposvariables -> VAR .)
    ELSE            reduce using rule 45 (tiposvariables -> VAR .)
    RPARENTHESES    reduce using rule 45 (tiposvariables -> VAR .)


state 34

    (47) tiposvariables -> CONSTANT .

    EQUAL           reduce using rule 47 (tiposvariables -> CONSTANT .)
    DOUBLEEQUAL     reduce using rule 47 (tiposvariables -> CONSTANT .)
    TRIPLEEQUAL     reduce using rule 47 (tiposvariables -> CONSTANT .)
    GREATERTHAN     reduce using rule 47 (tiposvariables -> CONSTANT .)
    NOTEQUAL        reduce using rule 47 (tiposvariables -> CONSTANT .)
    LESSTHAN        reduce using rule 47 (tiposvariables -> CONSTANT .)
    GREQUAL         reduce using rule 47 (tiposvariables -> CONSTANT .)
    LEQUAL          reduce using rule 47 (tiposvariables -> CONSTANT .)
    LOCALVAR        reduce using rule 47 (tiposvariables -> CONSTANT .)
    FOR             reduce using rule 47 (tiposvariables -> CONSTANT .)
    IF              reduce using rule 47 (tiposvariables -> CONSTANT .)
    UNLESS          reduce using rule 47 (tiposvariables -> CONSTANT .)
    PUTS            reduce using rule 47 (tiposvariables -> CONSTANT .)
    PRINT           reduce using rule 47 (tiposvariables -> CONSTANT .)
    STRING          reduce using rule 47 (tiposvariables -> CONSTANT .)
    INTEGERW        reduce using rule 47 (tiposvariables -> CONSTANT .)
    INTEGER         reduce using rule 47 (tiposvariables -> CONSTANT .)
    FLOAT           reduce using rule 47 (tiposvariables -> CONSTANT .)
    VAR             reduce using rule 47 (tiposvariables -> CONSTANT .)
    CONSTANT        reduce using rule 47 (tiposvariables -> CONSTANT .)
    LCURLYBRACKET   reduce using rule 47 (tiposvariables -> CONSTANT .)
    LBRACKET        reduce using rule 47 (tiposvariables -> CONSTANT .)
    SET             reduce using rule 47 (tiposvariables -> CONSTANT .)
    END             reduce using rule 47 (tiposvariables -> CONSTANT .)
    ELSE            reduce using rule 47 (tiposvariables -> CONSTANT .)
    DOUBLEAMPERSAND reduce using rule 47 (tiposvariables -> CONSTANT .)
    DOUBLEPIPE      reduce using rule 47 (tiposvariables -> CONSTANT .)
    RPARENTHESES    reduce using rule 47 (tiposvariables -> CONSTANT .)


state 35

    (57) hash -> LCURLYBRACKET . elementoHash RCURLYBRACKET
    (58) elementoHash -> . datos EQUAL GREATERTHAN datos maselementos
    (59) elementoHash -> .
    (48) datos -> . INTEGER
    (49) datos -> . FLOAT
    (50) datos -> . STRING
    (51) datos -> . booleanos
    (52) booleanos -> . TRUE
    (53) booleanos -> . FALSE

    RCURLYBRACKET   reduce using rule 59 (elementoHash -> .)
    INTEGER         shift and go to state 84
    FLOAT           shift and go to state 85
    STRING          shift and go to state 73
    TRUE            shift and go to state 75
    FALSE           shift and go to state 76

    elementoHash                   shift and go to state 101
    datos                          shift and go to state 102
    booleanos                      shift and go to state 74

state 36

    (147) set -> SET . LBRACKET elementoSet RBRACKET

    LBRACKET        shift and go to state 103


state 37

    (17) cuerpo -> declaracion cuerpo .

    $end            reduce using rule 17 (cuerpo -> declaracion cuerpo .)
    ELSE            reduce using rule 17 (cuerpo -> declaracion cuerpo .)
    END             reduce using rule 17 (cuerpo -> declaracion cuerpo .)
    RETURN          reduce using rule 17 (cuerpo -> declaracion cuerpo .)


state 38

    (18) cuerpo -> asignacion cuerpo .

    $end            reduce using rule 18 (cuerpo -> asignacion cuerpo .)
    ELSE            reduce using rule 18 (cuerpo -> asignacion cuerpo .)
    END             reduce using rule 18 (cuerpo -> asignacion cuerpo .)
    RETURN          reduce using rule 18 (cuerpo -> asignacion cuerpo .)


state 39

    (19) cuerpo -> loop cuerpo .

    $end            reduce using rule 19 (cuerpo -> loop cuerpo .)
    ELSE            reduce using rule 19 (cuerpo -> loop cuerpo .)
    END             reduce using rule 19 (cuerpo -> loop cuerpo .)
    RETURN          reduce using rule 19 (cuerpo -> loop cuerpo .)


state 40

    (20) cuerpo -> estructurasDatos cuerpo .

    $end            reduce using rule 20 (cuerpo -> estructurasDatos cuerpo .)
    ELSE            reduce using rule 20 (cuerpo -> estructurasDatos cuerpo .)
    END             reduce using rule 20 (cuerpo -> estructurasDatos cuerpo .)
    RETURN          reduce using rule 20 (cuerpo -> estructurasDatos cuerpo .)


state 41

    (21) cuerpo -> if cuerpo .

    $end            reduce using rule 21 (cuerpo -> if cuerpo .)
    ELSE            reduce using rule 21 (cuerpo -> if cuerpo .)
    END             reduce using rule 21 (cuerpo -> if cuerpo .)
    RETURN          reduce using rule 21 (cuerpo -> if cuerpo .)


state 42

    (22) cuerpo -> unless cuerpo .

    $end            reduce using rule 22 (cuerpo -> unless cuerpo .)
    ELSE            reduce using rule 22 (cuerpo -> unless cuerpo .)
    END             reduce using rule 22 (cuerpo -> unless cuerpo .)
    RETURN          reduce using rule 22 (cuerpo -> unless cuerpo .)


state 43

    (23) cuerpo -> impresion cuerpo .

    $end            reduce using rule 23 (cuerpo -> impresion cuerpo .)
    ELSE            reduce using rule 23 (cuerpo -> impresion cuerpo .)
    END             reduce using rule 23 (cuerpo -> impresion cuerpo .)
    RETURN          reduce using rule 23 (cuerpo -> impresion cuerpo .)


state 44

    (24) cuerpo -> operacionSet cuerpo .

    $end            reduce using rule 24 (cuerpo -> operacionSet cuerpo .)
    ELSE            reduce using rule 24 (cuerpo -> operacionSet cuerpo .)
    END             reduce using rule 24 (cuerpo -> operacionSet cuerpo .)
    RETURN          reduce using rule 24 (cuerpo -> operacionSet cuerpo .)


state 45

    (25) cuerpo -> operacionarray cuerpo .

    $end            reduce using rule 25 (cuerpo -> operacionarray cuerpo .)
    ELSE            reduce using rule 25 (cuerpo -> operacionarray cuerpo .)
    END             reduce using rule 25 (cuerpo -> operacionarray cuerpo .)
    RETURN          reduce using rule 25 (cuerpo -> operacionarray cuerpo .)


state 46

    (26) cuerpo -> operacionHash cuerpo .

    $end            reduce using rule 26 (cuerpo -> operacionHash cuerpo .)
    ELSE            reduce using rule 26 (cuerpo -> operacionHash cuerpo .)
    END             reduce using rule 26 (cuerpo -> operacionHash cuerpo .)
    RETURN          reduce using rule 26 (cuerpo -> operacionHash cuerpo .)


state 47

    (27) cuerpo -> string cuerpo .

    $end            reduce using rule 27 (cuerpo -> string cuerpo .)
    ELSE            reduce using rule 27 (cuerpo -> string cuerpo .)
    END             reduce using rule 27 (cuerpo -> string cuerpo .)
    RETURN          reduce using rule 27 (cuerpo -> string cuerpo .)


state 48

    (28) cuerpo -> integer cuerpo .

    $end            reduce using rule 28 (cuerpo -> integer cuerpo .)
    ELSE            reduce using rule 28 (cuerpo -> integer cuerpo .)
    END             reduce using rule 28 (cuerpo -> integer cuerpo .)
    RETURN          reduce using rule 28 (cuerpo -> integer cuerpo .)


state 49

    (29) cuerpo -> float cuerpo .

    $end            reduce using rule 29 (cuerpo -> float cuerpo .)
    ELSE            reduce using rule 29 (cuerpo -> float cuerpo .)
    END             reduce using rule 29 (cuerpo -> float cuerpo .)
    RETURN          reduce using rule 29 (cuerpo -> float cuerpo .)


state 50

    (3) funcion -> DEF LOCALVAR . LPARENTHESES argumentos RPARENTHESES cuerpo END
    (4) funcion -> DEF LOCALVAR . LPARENTHESES argumentos RPARENTHESES cuerpo retornar END

    LPARENTHESES    shift and go to state 104


state 51

    (37) asignacion -> LOCALVAR PLUSASSIGN . datosAsignacion
    (43) datosAsignacion -> . number
    (44) datosAsignacion -> . LOCALVAR
    (76) number -> . INTEGER
    (77) number -> . FLOAT

    LOCALVAR        shift and go to state 105
    INTEGER         shift and go to state 108
    FLOAT           shift and go to state 109

    datosAsignacion                shift and go to state 106
    number                         shift and go to state 107

state 52

    (38) asignacion -> LOCALVAR MINASSIGN . datosAsignacion
    (43) datosAsignacion -> . number
    (44) datosAsignacion -> . LOCALVAR
    (76) number -> . INTEGER
    (77) number -> . FLOAT

    LOCALVAR        shift and go to state 105
    INTEGER         shift and go to state 108
    FLOAT           shift and go to state 109

    datosAsignacion                shift and go to state 110
    number                         shift and go to state 107

state 53

    (39) asignacion -> LOCALVAR DIVASSIGN . datosAsignacion
    (43) datosAsignacion -> . number
    (44) datosAsignacion -> . LOCALVAR
    (76) number -> . INTEGER
    (77) number -> . FLOAT

    LOCALVAR        shift and go to state 105
    INTEGER         shift and go to state 108
    FLOAT           shift and go to state 109

    datosAsignacion                shift and go to state 111
    number                         shift and go to state 107

state 54

    (40) asignacion -> LOCALVAR TIMESASSIGN . datosAsignacion
    (43) datosAsignacion -> . number
    (44) datosAsignacion -> . LOCALVAR
    (76) number -> . INTEGER
    (77) number -> . FLOAT

    LOCALVAR        shift and go to state 105
    INTEGER         shift and go to state 108
    FLOAT           shift and go to state 109

    datosAsignacion                shift and go to state 112
    number                         shift and go to state 107

state 55

    (41) asignacion -> LOCALVAR MODASSIGN . datosAsignacion
    (43) datosAsignacion -> . number
    (44) datosAsignacion -> . LOCALVAR
    (76) number -> . INTEGER
    (77) number -> . FLOAT

    LOCALVAR        shift and go to state 105
    INTEGER         shift and go to state 108
    FLOAT           shift and go to state 109

    datosAsignacion                shift and go to state 113
    number                         shift and go to state 107

state 56

    (42) asignacion -> LOCALVAR EXPASSIGN . datosAsignacion
    (43) datosAsignacion -> . number
    (44) datosAsignacion -> . LOCALVAR
    (76) number -> . INTEGER
    (77) number -> . FLOAT

    LOCALVAR        shift and go to state 105
    INTEGER         shift and go to state 108
    FLOAT           shift and go to state 109

    datosAsignacion                shift and go to state 114
    number                         shift and go to state 107

state 57

    (32) declaracion -> tiposvariables EQUAL . datos
    (33) declaracion -> tiposvariables EQUAL . estructurasDatos
    (34) declaracion -> tiposvariables EQUAL . expresion
    (35) declaracion -> tiposvariables EQUAL . declaracion
    (36) declaracion -> tiposvariables EQUAL . casting
    (48) datos -> . INTEGER
    (49) datos -> . FLOAT
    (50) datos -> . STRING
    (51) datos -> . booleanos
    (54) estructurasDatos -> . hash
    (55) estructurasDatos -> . array
    (56) estructurasDatos -> . set
    (78) expresion -> . operacion
    (79) expresion -> . LPARENTHESES operacion RPARENTHESES
    (80) expresion -> . LPARENTHESES operacion RPARENTHESES masoperaciones
    (32) declaracion -> . tiposvariables EQUAL datos
    (33) declaracion -> . tiposvariables EQUAL estructurasDatos
    (34) declaracion -> . tiposvariables EQUAL expresion
    (35) declaracion -> . tiposvariables EQUAL declaracion
    (36) declaracion -> . tiposvariables EQUAL casting
    (166) casting -> . STRING DOT TO_I
    (167) casting -> . STRING DOT TO_F
    (168) casting -> . number DOT TO_S
    (52) booleanos -> . TRUE
    (53) booleanos -> . FALSE
    (57) hash -> . LCURLYBRACKET elementoHash RCURLYBRACKET
    (91) array -> . LBRACKET RBRACKET
    (92) array -> . LBRACKET datosarray RBRACKET
    (147) set -> . SET LBRACKET elementoSet RBRACKET
    (81) operacion -> . number operador number
    (82) operacion -> . operacion masoperaciones
    (45) tiposvariables -> . VAR
    (46) tiposvariables -> . LOCALVAR
    (47) tiposvariables -> . CONSTANT
    (76) number -> . INTEGER
    (77) number -> . FLOAT

    INTEGER         shift and go to state 71
    FLOAT           shift and go to state 72
    STRING          shift and go to state 120
    LPARENTHESES    shift and go to state 125
    TRUE            shift and go to state 75
    FALSE           shift and go to state 76
    LCURLYBRACKET   shift and go to state 35
    LBRACKET        shift and go to state 28
    SET             shift and go to state 36
    VAR             shift and go to state 33
    LOCALVAR        shift and go to state 83
    CONSTANT        shift and go to state 34

    tiposvariables                 shift and go to state 19
    datos                          shift and go to state 115
    estructurasDatos               shift and go to state 116
    expresion                      shift and go to state 117
    declaracion                    shift and go to state 118
    casting                        shift and go to state 119
    booleanos                      shift and go to state 74
    hash                           shift and go to state 121
    array                          shift and go to state 122
    set                            shift and go to state 123
    operacion                      shift and go to state 124
    number                         shift and go to state 126

state 58

    (31) loop -> FOR LOCALVAR . IN rango cuerpo END

    IN              shift and go to state 127


state 59

    (62) operacionHash -> hash LBRACKET . datos RBRACKET
    (63) operacionHash -> hash LBRACKET . datos RBRACKET EQUAL datos
    (48) datos -> . INTEGER
    (49) datos -> . FLOAT
    (50) datos -> . STRING
    (51) datos -> . booleanos
    (52) booleanos -> . TRUE
    (53) booleanos -> . FALSE

    INTEGER         shift and go to state 84
    FLOAT           shift and go to state 85
    STRING          shift and go to state 73
    TRUE            shift and go to state 75
    FALSE           shift and go to state 76

    datos                          shift and go to state 128
    booleanos                      shift and go to state 74

state 60

    (64) operacionHash -> hash DOT . INCLUDE QUESTIONMARK LPARENTHESES datos RPARENTHESES
    (65) operacionHash -> hash DOT . DELETE LPARENTHESES datos RPARENTHESES
    (66) operacionHash -> hash DOT . KEYS
    (67) operacionHash -> hash DOT . EMPTY QUESTIONMARK
    (68) operacionHash -> hash DOT . SIZE
    (69) operacionHash -> hash DOT . LENGTH

    INCLUDE         shift and go to state 129
    DELETE          shift and go to state 130
    KEYS            shift and go to state 131
    EMPTY           shift and go to state 132
    SIZE            shift and go to state 133
    LENGTH          shift and go to state 134


state 61

    (99) operacionarray -> array LBRACKET . INTEGER RBRACKET

    INTEGER         shift and go to state 135


state 62

    (100) operacionarray -> array DOT . TAKE LPARENTHESES INTEGER RPARENTHESES
    (101) operacionarray -> array DOT . DROP LPARENTHESES INTEGER RPARENTHESES
    (102) operacionarray -> array DOT . push maspush
    (107) operacionarray -> array DOT . POP
    (108) operacionarray -> array DOT . POP LPARENTHESES INTEGER RPARENTHESES
    (109) operacionarray -> array DOT . DELETE LPARENTHESES INTEGER RPARENTHESES
    (110) operacionarray -> array DOT . LENGTH LPARENTHESES RPARENTHESES
    (111) operacionarray -> array DOT . EMPTY QUESTIONMARK
    (103) push -> . PUSH LPARENTHESES datosvarios RPARENTHESES
    (104) push -> .

    TAKE            shift and go to state 136
    DROP            shift and go to state 137
    POP             shift and go to state 139
    DELETE          shift and go to state 140
    LENGTH          shift and go to state 141
    EMPTY           shift and go to state 142
    PUSH            shift and go to state 143
    DOT             reduce using rule 104 (push -> .)
    LOCALVAR        reduce using rule 104 (push -> .)
    FOR             reduce using rule 104 (push -> .)
    IF              reduce using rule 104 (push -> .)
    UNLESS          reduce using rule 104 (push -> .)
    PUTS            reduce using rule 104 (push -> .)
    PRINT           reduce using rule 104 (push -> .)
    STRING          reduce using rule 104 (push -> .)
    INTEGERW        reduce using rule 104 (push -> .)
    INTEGER         reduce using rule 104 (push -> .)
    FLOAT           reduce using rule 104 (push -> .)
    VAR             reduce using rule 104 (push -> .)
    CONSTANT        reduce using rule 104 (push -> .)
    LCURLYBRACKET   reduce using rule 104 (push -> .)
    LBRACKET        reduce using rule 104 (push -> .)
    SET             reduce using rule 104 (push -> .)
    $end            reduce using rule 104 (push -> .)
    ELSE            reduce using rule 104 (push -> .)
    END             reduce using rule 104 (push -> .)
    RETURN          reduce using rule 104 (push -> .)

    push                           shift and go to state 138

state 63

    (153) operacionSet -> set DOT . ADD LPARENTHESES datos RPARENTHESES
    (154) operacionSet -> set DOT . ADD LPARENTHESES tiposvariables RPARENTHESES
    (155) operacionSet -> set DOT . CLEAR
    (156) operacionSet -> set DOT . DELETE LPARENTHESES datos RPARENTHESES
    (157) operacionSet -> set DOT . DELETE LPARENTHESES tiposvariables RPARENTHESES

    ADD             shift and go to state 144
    CLEAR           shift and go to state 145
    DELETE          shift and go to state 146


state 64

    (114) if -> IF datoscompletos . operadores datoscompletos cuerpo END
    (115) if -> IF datoscompletos . operadores datoscompletos cuerpo else
    (117) operadores -> . DOUBLEEQUAL
    (118) operadores -> . TRIPLEEQUAL
    (119) operadores -> . GREATERTHAN
    (120) operadores -> . NOTEQUAL
    (121) operadores -> . LESSTHAN
    (122) operadores -> . GREQUAL
    (123) operadores -> . LEQUAL

    DOUBLEEQUAL     shift and go to state 148
    TRIPLEEQUAL     shift and go to state 149
    GREATERTHAN     shift and go to state 150
    NOTEQUAL        shift and go to state 151
    LESSTHAN        shift and go to state 152
    GREQUAL         shift and go to state 153
    LEQUAL          shift and go to state 154

    operadores                     shift and go to state 147

state 65

    (112) datoscompletos -> datosvarios .

    DOUBLEEQUAL     reduce using rule 112 (datoscompletos -> datosvarios .)
    TRIPLEEQUAL     reduce using rule 112 (datoscompletos -> datosvarios .)
    GREATERTHAN     reduce using rule 112 (datoscompletos -> datosvarios .)
    NOTEQUAL        reduce using rule 112 (datoscompletos -> datosvarios .)
    LESSTHAN        reduce using rule 112 (datoscompletos -> datosvarios .)
    GREQUAL         reduce using rule 112 (datoscompletos -> datosvarios .)
    LEQUAL          reduce using rule 112 (datoscompletos -> datosvarios .)
    LOCALVAR        reduce using rule 112 (datoscompletos -> datosvarios .)
    FOR             reduce using rule 112 (datoscompletos -> datosvarios .)
    IF              reduce using rule 112 (datoscompletos -> datosvarios .)
    UNLESS          reduce using rule 112 (datoscompletos -> datosvarios .)
    PUTS            reduce using rule 112 (datoscompletos -> datosvarios .)
    PRINT           reduce using rule 112 (datoscompletos -> datosvarios .)
    STRING          reduce using rule 112 (datoscompletos -> datosvarios .)
    INTEGERW        reduce using rule 112 (datoscompletos -> datosvarios .)
    INTEGER         reduce using rule 112 (datoscompletos -> datosvarios .)
    FLOAT           reduce using rule 112 (datoscompletos -> datosvarios .)
    VAR             reduce using rule 112 (datoscompletos -> datosvarios .)
    CONSTANT        reduce using rule 112 (datoscompletos -> datosvarios .)
    LCURLYBRACKET   reduce using rule 112 (datoscompletos -> datosvarios .)
    LBRACKET        reduce using rule 112 (datoscompletos -> datosvarios .)
    SET             reduce using rule 112 (datoscompletos -> datosvarios .)
    END             reduce using rule 112 (datoscompletos -> datosvarios .)
    ELSE            reduce using rule 112 (datoscompletos -> datosvarios .)


state 66

    (113) datoscompletos -> tiposvariables .

    DOUBLEEQUAL     reduce using rule 113 (datoscompletos -> tiposvariables .)
    TRIPLEEQUAL     reduce using rule 113 (datoscompletos -> tiposvariables .)
    GREATERTHAN     reduce using rule 113 (datoscompletos -> tiposvariables .)
    NOTEQUAL        reduce using rule 113 (datoscompletos -> tiposvariables .)
    LESSTHAN        reduce using rule 113 (datoscompletos -> tiposvariables .)
    GREQUAL         reduce using rule 113 (datoscompletos -> tiposvariables .)
    LEQUAL          reduce using rule 113 (datoscompletos -> tiposvariables .)
    LOCALVAR        reduce using rule 113 (datoscompletos -> tiposvariables .)
    FOR             reduce using rule 113 (datoscompletos -> tiposvariables .)
    IF              reduce using rule 113 (datoscompletos -> tiposvariables .)
    UNLESS          reduce using rule 113 (datoscompletos -> tiposvariables .)
    PUTS            reduce using rule 113 (datoscompletos -> tiposvariables .)
    PRINT           reduce using rule 113 (datoscompletos -> tiposvariables .)
    STRING          reduce using rule 113 (datoscompletos -> tiposvariables .)
    INTEGERW        reduce using rule 113 (datoscompletos -> tiposvariables .)
    INTEGER         reduce using rule 113 (datoscompletos -> tiposvariables .)
    FLOAT           reduce using rule 113 (datoscompletos -> tiposvariables .)
    VAR             reduce using rule 113 (datoscompletos -> tiposvariables .)
    CONSTANT        reduce using rule 113 (datoscompletos -> tiposvariables .)
    LCURLYBRACKET   reduce using rule 113 (datoscompletos -> tiposvariables .)
    LBRACKET        reduce using rule 113 (datoscompletos -> tiposvariables .)
    SET             reduce using rule 113 (datoscompletos -> tiposvariables .)
    END             reduce using rule 113 (datoscompletos -> tiposvariables .)
    ELSE            reduce using rule 113 (datoscompletos -> tiposvariables .)


state 67

    (93) datosvarios -> datos .

    DOUBLEEQUAL     reduce using rule 93 (datosvarios -> datos .)
    TRIPLEEQUAL     reduce using rule 93 (datosvarios -> datos .)
    GREATERTHAN     reduce using rule 93 (datosvarios -> datos .)
    NOTEQUAL        reduce using rule 93 (datosvarios -> datos .)
    LESSTHAN        reduce using rule 93 (datosvarios -> datos .)
    GREQUAL         reduce using rule 93 (datosvarios -> datos .)
    LEQUAL          reduce using rule 93 (datosvarios -> datos .)
    RBRACKET        reduce using rule 93 (datosvarios -> datos .)
    COMMA           reduce using rule 93 (datosvarios -> datos .)
    LOCALVAR        reduce using rule 93 (datosvarios -> datos .)
    FOR             reduce using rule 93 (datosvarios -> datos .)
    IF              reduce using rule 93 (datosvarios -> datos .)
    UNLESS          reduce using rule 93 (datosvarios -> datos .)
    PUTS            reduce using rule 93 (datosvarios -> datos .)
    PRINT           reduce using rule 93 (datosvarios -> datos .)
    STRING          reduce using rule 93 (datosvarios -> datos .)
    INTEGERW        reduce using rule 93 (datosvarios -> datos .)
    INTEGER         reduce using rule 93 (datosvarios -> datos .)
    FLOAT           reduce using rule 93 (datosvarios -> datos .)
    VAR             reduce using rule 93 (datosvarios -> datos .)
    CONSTANT        reduce using rule 93 (datosvarios -> datos .)
    LCURLYBRACKET   reduce using rule 93 (datosvarios -> datos .)
    LBRACKET        reduce using rule 93 (datosvarios -> datos .)
    SET             reduce using rule 93 (datosvarios -> datos .)
    END             reduce using rule 93 (datosvarios -> datos .)
    ELSE            reduce using rule 93 (datosvarios -> datos .)
    RPARENTHESES    reduce using rule 93 (datosvarios -> datos .)


state 68

    (94) datosvarios -> number .

    DOUBLEEQUAL     reduce using rule 94 (datosvarios -> number .)
    TRIPLEEQUAL     reduce using rule 94 (datosvarios -> number .)
    GREATERTHAN     reduce using rule 94 (datosvarios -> number .)
    NOTEQUAL        reduce using rule 94 (datosvarios -> number .)
    LESSTHAN        reduce using rule 94 (datosvarios -> number .)
    GREQUAL         reduce using rule 94 (datosvarios -> number .)
    LEQUAL          reduce using rule 94 (datosvarios -> number .)
    RBRACKET        reduce using rule 94 (datosvarios -> number .)
    COMMA           reduce using rule 94 (datosvarios -> number .)
    LOCALVAR        reduce using rule 94 (datosvarios -> number .)
    FOR             reduce using rule 94 (datosvarios -> number .)
    IF              reduce using rule 94 (datosvarios -> number .)
    UNLESS          reduce using rule 94 (datosvarios -> number .)
    PUTS            reduce using rule 94 (datosvarios -> number .)
    PRINT           reduce using rule 94 (datosvarios -> number .)
    STRING          reduce using rule 94 (datosvarios -> number .)
    INTEGERW        reduce using rule 94 (datosvarios -> number .)
    INTEGER         reduce using rule 94 (datosvarios -> number .)
    FLOAT           reduce using rule 94 (datosvarios -> number .)
    VAR             reduce using rule 94 (datosvarios -> number .)
    CONSTANT        reduce using rule 94 (datosvarios -> number .)
    LCURLYBRACKET   reduce using rule 94 (datosvarios -> number .)
    LBRACKET        reduce using rule 94 (datosvarios -> number .)
    SET             reduce using rule 94 (datosvarios -> number .)
    END             reduce using rule 94 (datosvarios -> number .)
    ELSE            reduce using rule 94 (datosvarios -> number .)
    RPARENTHESES    reduce using rule 94 (datosvarios -> number .)


state 69

    (95) datosvarios -> VAR .
    (45) tiposvariables -> VAR .

  ! reduce/reduce conflict for DOUBLEEQUAL resolved using rule 45 (tiposvariables -> VAR .)
  ! reduce/reduce conflict for TRIPLEEQUAL resolved using rule 45 (tiposvariables -> VAR .)
  ! reduce/reduce conflict for GREATERTHAN resolved using rule 45 (tiposvariables -> VAR .)
  ! reduce/reduce conflict for NOTEQUAL resolved using rule 45 (tiposvariables -> VAR .)
  ! reduce/reduce conflict for LESSTHAN resolved using rule 45 (tiposvariables -> VAR .)
  ! reduce/reduce conflict for GREQUAL resolved using rule 45 (tiposvariables -> VAR .)
  ! reduce/reduce conflict for LEQUAL resolved using rule 45 (tiposvariables -> VAR .)
  ! reduce/reduce conflict for LOCALVAR resolved using rule 45 (tiposvariables -> VAR .)
  ! reduce/reduce conflict for FOR resolved using rule 45 (tiposvariables -> VAR .)
  ! reduce/reduce conflict for IF resolved using rule 45 (tiposvariables -> VAR .)
  ! reduce/reduce conflict for UNLESS resolved using rule 45 (tiposvariables -> VAR .)
  ! reduce/reduce conflict for PUTS resolved using rule 45 (tiposvariables -> VAR .)
  ! reduce/reduce conflict for PRINT resolved using rule 45 (tiposvariables -> VAR .)
  ! reduce/reduce conflict for STRING resolved using rule 45 (tiposvariables -> VAR .)
  ! reduce/reduce conflict for INTEGERW resolved using rule 45 (tiposvariables -> VAR .)
  ! reduce/reduce conflict for INTEGER resolved using rule 45 (tiposvariables -> VAR .)
  ! reduce/reduce conflict for FLOAT resolved using rule 45 (tiposvariables -> VAR .)
  ! reduce/reduce conflict for VAR resolved using rule 45 (tiposvariables -> VAR .)
  ! reduce/reduce conflict for CONSTANT resolved using rule 45 (tiposvariables -> VAR .)
  ! reduce/reduce conflict for LCURLYBRACKET resolved using rule 45 (tiposvariables -> VAR .)
  ! reduce/reduce conflict for LBRACKET resolved using rule 45 (tiposvariables -> VAR .)
  ! reduce/reduce conflict for SET resolved using rule 45 (tiposvariables -> VAR .)
  ! reduce/reduce conflict for END resolved using rule 45 (tiposvariables -> VAR .)
  ! reduce/reduce conflict for ELSE resolved using rule 45 (tiposvariables -> VAR .)
    DOUBLEEQUAL     reduce using rule 45 (tiposvariables -> VAR .)
    TRIPLEEQUAL     reduce using rule 45 (tiposvariables -> VAR .)
    GREATERTHAN     reduce using rule 45 (tiposvariables -> VAR .)
    NOTEQUAL        reduce using rule 45 (tiposvariables -> VAR .)
    LESSTHAN        reduce using rule 45 (tiposvariables -> VAR .)
    GREQUAL         reduce using rule 45 (tiposvariables -> VAR .)
    LEQUAL          reduce using rule 45 (tiposvariables -> VAR .)
    LOCALVAR        reduce using rule 45 (tiposvariables -> VAR .)
    FOR             reduce using rule 45 (tiposvariables -> VAR .)
    IF              reduce using rule 45 (tiposvariables -> VAR .)
    UNLESS          reduce using rule 45 (tiposvariables -> VAR .)
    PUTS            reduce using rule 45 (tiposvariables -> VAR .)
    PRINT           reduce using rule 45 (tiposvariables -> VAR .)
    STRING          reduce using rule 45 (tiposvariables -> VAR .)
    INTEGERW        reduce using rule 45 (tiposvariables -> VAR .)
    INTEGER         reduce using rule 45 (tiposvariables -> VAR .)
    FLOAT           reduce using rule 45 (tiposvariables -> VAR .)
    VAR             reduce using rule 45 (tiposvariables -> VAR .)
    CONSTANT        reduce using rule 45 (tiposvariables -> VAR .)
    LCURLYBRACKET   reduce using rule 45 (tiposvariables -> VAR .)
    LBRACKET        reduce using rule 45 (tiposvariables -> VAR .)
    SET             reduce using rule 45 (tiposvariables -> VAR .)
    END             reduce using rule 45 (tiposvariables -> VAR .)
    ELSE            reduce using rule 45 (tiposvariables -> VAR .)

  ! DOUBLEEQUAL     [ reduce using rule 95 (datosvarios -> VAR .) ]
  ! TRIPLEEQUAL     [ reduce using rule 95 (datosvarios -> VAR .) ]
  ! GREATERTHAN     [ reduce using rule 95 (datosvarios -> VAR .) ]
  ! NOTEQUAL        [ reduce using rule 95 (datosvarios -> VAR .) ]
  ! LESSTHAN        [ reduce using rule 95 (datosvarios -> VAR .) ]
  ! GREQUAL         [ reduce using rule 95 (datosvarios -> VAR .) ]
  ! LEQUAL          [ reduce using rule 95 (datosvarios -> VAR .) ]
  ! LOCALVAR        [ reduce using rule 95 (datosvarios -> VAR .) ]
  ! FOR             [ reduce using rule 95 (datosvarios -> VAR .) ]
  ! IF              [ reduce using rule 95 (datosvarios -> VAR .) ]
  ! UNLESS          [ reduce using rule 95 (datosvarios -> VAR .) ]
  ! PUTS            [ reduce using rule 95 (datosvarios -> VAR .) ]
  ! PRINT           [ reduce using rule 95 (datosvarios -> VAR .) ]
  ! STRING          [ reduce using rule 95 (datosvarios -> VAR .) ]
  ! INTEGERW        [ reduce using rule 95 (datosvarios -> VAR .) ]
  ! INTEGER         [ reduce using rule 95 (datosvarios -> VAR .) ]
  ! FLOAT           [ reduce using rule 95 (datosvarios -> VAR .) ]
  ! VAR             [ reduce using rule 95 (datosvarios -> VAR .) ]
  ! CONSTANT        [ reduce using rule 95 (datosvarios -> VAR .) ]
  ! LCURLYBRACKET   [ reduce using rule 95 (datosvarios -> VAR .) ]
  ! LBRACKET        [ reduce using rule 95 (datosvarios -> VAR .) ]
  ! SET             [ reduce using rule 95 (datosvarios -> VAR .) ]
  ! END             [ reduce using rule 95 (datosvarios -> VAR .) ]
  ! ELSE            [ reduce using rule 95 (datosvarios -> VAR .) ]


state 70

    (96) datosvarios -> LOCALVAR .
    (46) tiposvariables -> LOCALVAR .

  ! reduce/reduce conflict for DOUBLEEQUAL resolved using rule 46 (tiposvariables -> LOCALVAR .)
  ! reduce/reduce conflict for TRIPLEEQUAL resolved using rule 46 (tiposvariables -> LOCALVAR .)
  ! reduce/reduce conflict for GREATERTHAN resolved using rule 46 (tiposvariables -> LOCALVAR .)
  ! reduce/reduce conflict for NOTEQUAL resolved using rule 46 (tiposvariables -> LOCALVAR .)
  ! reduce/reduce conflict for LESSTHAN resolved using rule 46 (tiposvariables -> LOCALVAR .)
  ! reduce/reduce conflict for GREQUAL resolved using rule 46 (tiposvariables -> LOCALVAR .)
  ! reduce/reduce conflict for LEQUAL resolved using rule 46 (tiposvariables -> LOCALVAR .)
  ! reduce/reduce conflict for LOCALVAR resolved using rule 46 (tiposvariables -> LOCALVAR .)
  ! reduce/reduce conflict for FOR resolved using rule 46 (tiposvariables -> LOCALVAR .)
  ! reduce/reduce conflict for IF resolved using rule 46 (tiposvariables -> LOCALVAR .)
  ! reduce/reduce conflict for UNLESS resolved using rule 46 (tiposvariables -> LOCALVAR .)
  ! reduce/reduce conflict for PUTS resolved using rule 46 (tiposvariables -> LOCALVAR .)
  ! reduce/reduce conflict for PRINT resolved using rule 46 (tiposvariables -> LOCALVAR .)
  ! reduce/reduce conflict for STRING resolved using rule 46 (tiposvariables -> LOCALVAR .)
  ! reduce/reduce conflict for INTEGERW resolved using rule 46 (tiposvariables -> LOCALVAR .)
  ! reduce/reduce conflict for INTEGER resolved using rule 46 (tiposvariables -> LOCALVAR .)
  ! reduce/reduce conflict for FLOAT resolved using rule 46 (tiposvariables -> LOCALVAR .)
  ! reduce/reduce conflict for VAR resolved using rule 46 (tiposvariables -> LOCALVAR .)
  ! reduce/reduce conflict for CONSTANT resolved using rule 46 (tiposvariables -> LOCALVAR .)
  ! reduce/reduce conflict for LCURLYBRACKET resolved using rule 46 (tiposvariables -> LOCALVAR .)
  ! reduce/reduce conflict for LBRACKET resolved using rule 46 (tiposvariables -> LOCALVAR .)
  ! reduce/reduce conflict for SET resolved using rule 46 (tiposvariables -> LOCALVAR .)
  ! reduce/reduce conflict for END resolved using rule 46 (tiposvariables -> LOCALVAR .)
  ! reduce/reduce conflict for ELSE resolved using rule 46 (tiposvariables -> LOCALVAR .)
    DOUBLEEQUAL     reduce using rule 46 (tiposvariables -> LOCALVAR .)
    TRIPLEEQUAL     reduce using rule 46 (tiposvariables -> LOCALVAR .)
    GREATERTHAN     reduce using rule 46 (tiposvariables -> LOCALVAR .)
    NOTEQUAL        reduce using rule 46 (tiposvariables -> LOCALVAR .)
    LESSTHAN        reduce using rule 46 (tiposvariables -> LOCALVAR .)
    GREQUAL         reduce using rule 46 (tiposvariables -> LOCALVAR .)
    LEQUAL          reduce using rule 46 (tiposvariables -> LOCALVAR .)
    LOCALVAR        reduce using rule 46 (tiposvariables -> LOCALVAR .)
    FOR             reduce using rule 46 (tiposvariables -> LOCALVAR .)
    IF              reduce using rule 46 (tiposvariables -> LOCALVAR .)
    UNLESS          reduce using rule 46 (tiposvariables -> LOCALVAR .)
    PUTS            reduce using rule 46 (tiposvariables -> LOCALVAR .)
    PRINT           reduce using rule 46 (tiposvariables -> LOCALVAR .)
    STRING          reduce using rule 46 (tiposvariables -> LOCALVAR .)
    INTEGERW        reduce using rule 46 (tiposvariables -> LOCALVAR .)
    INTEGER         reduce using rule 46 (tiposvariables -> LOCALVAR .)
    FLOAT           reduce using rule 46 (tiposvariables -> LOCALVAR .)
    VAR             reduce using rule 46 (tiposvariables -> LOCALVAR .)
    CONSTANT        reduce using rule 46 (tiposvariables -> LOCALVAR .)
    LCURLYBRACKET   reduce using rule 46 (tiposvariables -> LOCALVAR .)
    LBRACKET        reduce using rule 46 (tiposvariables -> LOCALVAR .)
    SET             reduce using rule 46 (tiposvariables -> LOCALVAR .)
    END             reduce using rule 46 (tiposvariables -> LOCALVAR .)
    ELSE            reduce using rule 46 (tiposvariables -> LOCALVAR .)

  ! DOUBLEEQUAL     [ reduce using rule 96 (datosvarios -> LOCALVAR .) ]
  ! TRIPLEEQUAL     [ reduce using rule 96 (datosvarios -> LOCALVAR .) ]
  ! GREATERTHAN     [ reduce using rule 96 (datosvarios -> LOCALVAR .) ]
  ! NOTEQUAL        [ reduce using rule 96 (datosvarios -> LOCALVAR .) ]
  ! LESSTHAN        [ reduce using rule 96 (datosvarios -> LOCALVAR .) ]
  ! GREQUAL         [ reduce using rule 96 (datosvarios -> LOCALVAR .) ]
  ! LEQUAL          [ reduce using rule 96 (datosvarios -> LOCALVAR .) ]
  ! LOCALVAR        [ reduce using rule 96 (datosvarios -> LOCALVAR .) ]
  ! FOR             [ reduce using rule 96 (datosvarios -> LOCALVAR .) ]
  ! IF              [ reduce using rule 96 (datosvarios -> LOCALVAR .) ]
  ! UNLESS          [ reduce using rule 96 (datosvarios -> LOCALVAR .) ]
  ! PUTS            [ reduce using rule 96 (datosvarios -> LOCALVAR .) ]
  ! PRINT           [ reduce using rule 96 (datosvarios -> LOCALVAR .) ]
  ! STRING          [ reduce using rule 96 (datosvarios -> LOCALVAR .) ]
  ! INTEGERW        [ reduce using rule 96 (datosvarios -> LOCALVAR .) ]
  ! INTEGER         [ reduce using rule 96 (datosvarios -> LOCALVAR .) ]
  ! FLOAT           [ reduce using rule 96 (datosvarios -> LOCALVAR .) ]
  ! VAR             [ reduce using rule 96 (datosvarios -> LOCALVAR .) ]
  ! CONSTANT        [ reduce using rule 96 (datosvarios -> LOCALVAR .) ]
  ! LCURLYBRACKET   [ reduce using rule 96 (datosvarios -> LOCALVAR .) ]
  ! LBRACKET        [ reduce using rule 96 (datosvarios -> LOCALVAR .) ]
  ! SET             [ reduce using rule 96 (datosvarios -> LOCALVAR .) ]
  ! END             [ reduce using rule 96 (datosvarios -> LOCALVAR .) ]
  ! ELSE            [ reduce using rule 96 (datosvarios -> LOCALVAR .) ]


state 71

    (48) datos -> INTEGER .
    (76) number -> INTEGER .

  ! reduce/reduce conflict for DOUBLEEQUAL resolved using rule 48 (datos -> INTEGER .)
  ! reduce/reduce conflict for TRIPLEEQUAL resolved using rule 48 (datos -> INTEGER .)
  ! reduce/reduce conflict for GREATERTHAN resolved using rule 48 (datos -> INTEGER .)
  ! reduce/reduce conflict for NOTEQUAL resolved using rule 48 (datos -> INTEGER .)
  ! reduce/reduce conflict for LESSTHAN resolved using rule 48 (datos -> INTEGER .)
  ! reduce/reduce conflict for GREQUAL resolved using rule 48 (datos -> INTEGER .)
  ! reduce/reduce conflict for LEQUAL resolved using rule 48 (datos -> INTEGER .)
  ! reduce/reduce conflict for RBRACKET resolved using rule 48 (datos -> INTEGER .)
  ! reduce/reduce conflict for COMMA resolved using rule 48 (datos -> INTEGER .)
  ! reduce/reduce conflict for LOCALVAR resolved using rule 48 (datos -> INTEGER .)
  ! reduce/reduce conflict for FOR resolved using rule 48 (datos -> INTEGER .)
  ! reduce/reduce conflict for IF resolved using rule 48 (datos -> INTEGER .)
  ! reduce/reduce conflict for UNLESS resolved using rule 48 (datos -> INTEGER .)
  ! reduce/reduce conflict for PUTS resolved using rule 48 (datos -> INTEGER .)
  ! reduce/reduce conflict for PRINT resolved using rule 48 (datos -> INTEGER .)
  ! reduce/reduce conflict for STRING resolved using rule 48 (datos -> INTEGER .)
  ! reduce/reduce conflict for INTEGERW resolved using rule 48 (datos -> INTEGER .)
  ! reduce/reduce conflict for INTEGER resolved using rule 48 (datos -> INTEGER .)
  ! reduce/reduce conflict for FLOAT resolved using rule 48 (datos -> INTEGER .)
  ! reduce/reduce conflict for VAR resolved using rule 48 (datos -> INTEGER .)
  ! reduce/reduce conflict for CONSTANT resolved using rule 48 (datos -> INTEGER .)
  ! reduce/reduce conflict for LCURLYBRACKET resolved using rule 48 (datos -> INTEGER .)
  ! reduce/reduce conflict for LBRACKET resolved using rule 48 (datos -> INTEGER .)
  ! reduce/reduce conflict for SET resolved using rule 48 (datos -> INTEGER .)
  ! reduce/reduce conflict for END resolved using rule 48 (datos -> INTEGER .)
  ! reduce/reduce conflict for ELSE resolved using rule 48 (datos -> INTEGER .)
  ! reduce/reduce conflict for RPARENTHESES resolved using rule 48 (datos -> INTEGER .)
    DOUBLEEQUAL     reduce using rule 48 (datos -> INTEGER .)
    TRIPLEEQUAL     reduce using rule 48 (datos -> INTEGER .)
    GREATERTHAN     reduce using rule 48 (datos -> INTEGER .)
    NOTEQUAL        reduce using rule 48 (datos -> INTEGER .)
    LESSTHAN        reduce using rule 48 (datos -> INTEGER .)
    GREQUAL         reduce using rule 48 (datos -> INTEGER .)
    LEQUAL          reduce using rule 48 (datos -> INTEGER .)
    RBRACKET        reduce using rule 48 (datos -> INTEGER .)
    COMMA           reduce using rule 48 (datos -> INTEGER .)
    LOCALVAR        reduce using rule 48 (datos -> INTEGER .)
    FOR             reduce using rule 48 (datos -> INTEGER .)
    IF              reduce using rule 48 (datos -> INTEGER .)
    UNLESS          reduce using rule 48 (datos -> INTEGER .)
    PUTS            reduce using rule 48 (datos -> INTEGER .)
    PRINT           reduce using rule 48 (datos -> INTEGER .)
    STRING          reduce using rule 48 (datos -> INTEGER .)
    INTEGERW        reduce using rule 48 (datos -> INTEGER .)
    INTEGER         reduce using rule 48 (datos -> INTEGER .)
    FLOAT           reduce using rule 48 (datos -> INTEGER .)
    VAR             reduce using rule 48 (datos -> INTEGER .)
    CONSTANT        reduce using rule 48 (datos -> INTEGER .)
    LCURLYBRACKET   reduce using rule 48 (datos -> INTEGER .)
    LBRACKET        reduce using rule 48 (datos -> INTEGER .)
    SET             reduce using rule 48 (datos -> INTEGER .)
    $end            reduce using rule 48 (datos -> INTEGER .)
    ELSE            reduce using rule 48 (datos -> INTEGER .)
    END             reduce using rule 48 (datos -> INTEGER .)
    RETURN          reduce using rule 48 (datos -> INTEGER .)
    RPARENTHESES    reduce using rule 48 (datos -> INTEGER .)
    DOT             reduce using rule 76 (number -> INTEGER .)
    PLUS            reduce using rule 76 (number -> INTEGER .)
    MINUS           reduce using rule 76 (number -> INTEGER .)
    MULTIPLY        reduce using rule 76 (number -> INTEGER .)
    DIVIDE          reduce using rule 76 (number -> INTEGER .)
    PERCENTAGE      reduce using rule 76 (number -> INTEGER .)

  ! DOUBLEEQUAL     [ reduce using rule 76 (number -> INTEGER .) ]
  ! TRIPLEEQUAL     [ reduce using rule 76 (number -> INTEGER .) ]
  ! GREATERTHAN     [ reduce using rule 76 (number -> INTEGER .) ]
  ! NOTEQUAL        [ reduce using rule 76 (number -> INTEGER .) ]
  ! LESSTHAN        [ reduce using rule 76 (number -> INTEGER .) ]
  ! GREQUAL         [ reduce using rule 76 (number -> INTEGER .) ]
  ! LEQUAL          [ reduce using rule 76 (number -> INTEGER .) ]
  ! RBRACKET        [ reduce using rule 76 (number -> INTEGER .) ]
  ! COMMA           [ reduce using rule 76 (number -> INTEGER .) ]
  ! LOCALVAR        [ reduce using rule 76 (number -> INTEGER .) ]
  ! FOR             [ reduce using rule 76 (number -> INTEGER .) ]
  ! IF              [ reduce using rule 76 (number -> INTEGER .) ]
  ! UNLESS          [ reduce using rule 76 (number -> INTEGER .) ]
  ! PUTS            [ reduce using rule 76 (number -> INTEGER .) ]
  ! PRINT           [ reduce using rule 76 (number -> INTEGER .) ]
  ! STRING          [ reduce using rule 76 (number -> INTEGER .) ]
  ! INTEGERW        [ reduce using rule 76 (number -> INTEGER .) ]
  ! INTEGER         [ reduce using rule 76 (number -> INTEGER .) ]
  ! FLOAT           [ reduce using rule 76 (number -> INTEGER .) ]
  ! VAR             [ reduce using rule 76 (number -> INTEGER .) ]
  ! CONSTANT        [ reduce using rule 76 (number -> INTEGER .) ]
  ! LCURLYBRACKET   [ reduce using rule 76 (number -> INTEGER .) ]
  ! LBRACKET        [ reduce using rule 76 (number -> INTEGER .) ]
  ! SET             [ reduce using rule 76 (number -> INTEGER .) ]
  ! END             [ reduce using rule 76 (number -> INTEGER .) ]
  ! ELSE            [ reduce using rule 76 (number -> INTEGER .) ]
  ! RPARENTHESES    [ reduce using rule 76 (number -> INTEGER .) ]


state 72

    (49) datos -> FLOAT .
    (77) number -> FLOAT .

  ! reduce/reduce conflict for DOUBLEEQUAL resolved using rule 49 (datos -> FLOAT .)
  ! reduce/reduce conflict for TRIPLEEQUAL resolved using rule 49 (datos -> FLOAT .)
  ! reduce/reduce conflict for GREATERTHAN resolved using rule 49 (datos -> FLOAT .)
  ! reduce/reduce conflict for NOTEQUAL resolved using rule 49 (datos -> FLOAT .)
  ! reduce/reduce conflict for LESSTHAN resolved using rule 49 (datos -> FLOAT .)
  ! reduce/reduce conflict for GREQUAL resolved using rule 49 (datos -> FLOAT .)
  ! reduce/reduce conflict for LEQUAL resolved using rule 49 (datos -> FLOAT .)
  ! reduce/reduce conflict for RBRACKET resolved using rule 49 (datos -> FLOAT .)
  ! reduce/reduce conflict for COMMA resolved using rule 49 (datos -> FLOAT .)
  ! reduce/reduce conflict for LOCALVAR resolved using rule 49 (datos -> FLOAT .)
  ! reduce/reduce conflict for FOR resolved using rule 49 (datos -> FLOAT .)
  ! reduce/reduce conflict for IF resolved using rule 49 (datos -> FLOAT .)
  ! reduce/reduce conflict for UNLESS resolved using rule 49 (datos -> FLOAT .)
  ! reduce/reduce conflict for PUTS resolved using rule 49 (datos -> FLOAT .)
  ! reduce/reduce conflict for PRINT resolved using rule 49 (datos -> FLOAT .)
  ! reduce/reduce conflict for STRING resolved using rule 49 (datos -> FLOAT .)
  ! reduce/reduce conflict for INTEGERW resolved using rule 49 (datos -> FLOAT .)
  ! reduce/reduce conflict for INTEGER resolved using rule 49 (datos -> FLOAT .)
  ! reduce/reduce conflict for FLOAT resolved using rule 49 (datos -> FLOAT .)
  ! reduce/reduce conflict for VAR resolved using rule 49 (datos -> FLOAT .)
  ! reduce/reduce conflict for CONSTANT resolved using rule 49 (datos -> FLOAT .)
  ! reduce/reduce conflict for LCURLYBRACKET resolved using rule 49 (datos -> FLOAT .)
  ! reduce/reduce conflict for LBRACKET resolved using rule 49 (datos -> FLOAT .)
  ! reduce/reduce conflict for SET resolved using rule 49 (datos -> FLOAT .)
  ! reduce/reduce conflict for END resolved using rule 49 (datos -> FLOAT .)
  ! reduce/reduce conflict for ELSE resolved using rule 49 (datos -> FLOAT .)
  ! reduce/reduce conflict for RPARENTHESES resolved using rule 49 (datos -> FLOAT .)
    DOUBLEEQUAL     reduce using rule 49 (datos -> FLOAT .)
    TRIPLEEQUAL     reduce using rule 49 (datos -> FLOAT .)
    GREATERTHAN     reduce using rule 49 (datos -> FLOAT .)
    NOTEQUAL        reduce using rule 49 (datos -> FLOAT .)
    LESSTHAN        reduce using rule 49 (datos -> FLOAT .)
    GREQUAL         reduce using rule 49 (datos -> FLOAT .)
    LEQUAL          reduce using rule 49 (datos -> FLOAT .)
    RBRACKET        reduce using rule 49 (datos -> FLOAT .)
    COMMA           reduce using rule 49 (datos -> FLOAT .)
    LOCALVAR        reduce using rule 49 (datos -> FLOAT .)
    FOR             reduce using rule 49 (datos -> FLOAT .)
    IF              reduce using rule 49 (datos -> FLOAT .)
    UNLESS          reduce using rule 49 (datos -> FLOAT .)
    PUTS            reduce using rule 49 (datos -> FLOAT .)
    PRINT           reduce using rule 49 (datos -> FLOAT .)
    STRING          reduce using rule 49 (datos -> FLOAT .)
    INTEGERW        reduce using rule 49 (datos -> FLOAT .)
    INTEGER         reduce using rule 49 (datos -> FLOAT .)
    FLOAT           reduce using rule 49 (datos -> FLOAT .)
    VAR             reduce using rule 49 (datos -> FLOAT .)
    CONSTANT        reduce using rule 49 (datos -> FLOAT .)
    LCURLYBRACKET   reduce using rule 49 (datos -> FLOAT .)
    LBRACKET        reduce using rule 49 (datos -> FLOAT .)
    SET             reduce using rule 49 (datos -> FLOAT .)
    $end            reduce using rule 49 (datos -> FLOAT .)
    ELSE            reduce using rule 49 (datos -> FLOAT .)
    END             reduce using rule 49 (datos -> FLOAT .)
    RETURN          reduce using rule 49 (datos -> FLOAT .)
    RPARENTHESES    reduce using rule 49 (datos -> FLOAT .)
    DOT             reduce using rule 77 (number -> FLOAT .)
    PLUS            reduce using rule 77 (number -> FLOAT .)
    MINUS           reduce using rule 77 (number -> FLOAT .)
    MULTIPLY        reduce using rule 77 (number -> FLOAT .)
    DIVIDE          reduce using rule 77 (number -> FLOAT .)
    PERCENTAGE      reduce using rule 77 (number -> FLOAT .)

  ! DOUBLEEQUAL     [ reduce using rule 77 (number -> FLOAT .) ]
  ! TRIPLEEQUAL     [ reduce using rule 77 (number -> FLOAT .) ]
  ! GREATERTHAN     [ reduce using rule 77 (number -> FLOAT .) ]
  ! NOTEQUAL        [ reduce using rule 77 (number -> FLOAT .) ]
  ! LESSTHAN        [ reduce using rule 77 (number -> FLOAT .) ]
  ! GREQUAL         [ reduce using rule 77 (number -> FLOAT .) ]
  ! LEQUAL          [ reduce using rule 77 (number -> FLOAT .) ]
  ! RBRACKET        [ reduce using rule 77 (number -> FLOAT .) ]
  ! COMMA           [ reduce using rule 77 (number -> FLOAT .) ]
  ! LOCALVAR        [ reduce using rule 77 (number -> FLOAT .) ]
  ! FOR             [ reduce using rule 77 (number -> FLOAT .) ]
  ! IF              [ reduce using rule 77 (number -> FLOAT .) ]
  ! UNLESS          [ reduce using rule 77 (number -> FLOAT .) ]
  ! PUTS            [ reduce using rule 77 (number -> FLOAT .) ]
  ! PRINT           [ reduce using rule 77 (number -> FLOAT .) ]
  ! STRING          [ reduce using rule 77 (number -> FLOAT .) ]
  ! INTEGERW        [ reduce using rule 77 (number -> FLOAT .) ]
  ! INTEGER         [ reduce using rule 77 (number -> FLOAT .) ]
  ! FLOAT           [ reduce using rule 77 (number -> FLOAT .) ]
  ! VAR             [ reduce using rule 77 (number -> FLOAT .) ]
  ! CONSTANT        [ reduce using rule 77 (number -> FLOAT .) ]
  ! LCURLYBRACKET   [ reduce using rule 77 (number -> FLOAT .) ]
  ! LBRACKET        [ reduce using rule 77 (number -> FLOAT .) ]
  ! SET             [ reduce using rule 77 (number -> FLOAT .) ]
  ! END             [ reduce using rule 77 (number -> FLOAT .) ]
  ! ELSE            [ reduce using rule 77 (number -> FLOAT .) ]
  ! RPARENTHESES    [ reduce using rule 77 (number -> FLOAT .) ]


state 73

    (50) datos -> STRING .

    DOUBLEEQUAL     reduce using rule 50 (datos -> STRING .)
    TRIPLEEQUAL     reduce using rule 50 (datos -> STRING .)
    GREATERTHAN     reduce using rule 50 (datos -> STRING .)
    NOTEQUAL        reduce using rule 50 (datos -> STRING .)
    LESSTHAN        reduce using rule 50 (datos -> STRING .)
    GREQUAL         reduce using rule 50 (datos -> STRING .)
    LEQUAL          reduce using rule 50 (datos -> STRING .)
    LOCALVAR        reduce using rule 50 (datos -> STRING .)
    FOR             reduce using rule 50 (datos -> STRING .)
    IF              reduce using rule 50 (datos -> STRING .)
    UNLESS          reduce using rule 50 (datos -> STRING .)
    PUTS            reduce using rule 50 (datos -> STRING .)
    PRINT           reduce using rule 50 (datos -> STRING .)
    STRING          reduce using rule 50 (datos -> STRING .)
    INTEGERW        reduce using rule 50 (datos -> STRING .)
    INTEGER         reduce using rule 50 (datos -> STRING .)
    FLOAT           reduce using rule 50 (datos -> STRING .)
    VAR             reduce using rule 50 (datos -> STRING .)
    CONSTANT        reduce using rule 50 (datos -> STRING .)
    LCURLYBRACKET   reduce using rule 50 (datos -> STRING .)
    LBRACKET        reduce using rule 50 (datos -> STRING .)
    SET             reduce using rule 50 (datos -> STRING .)
    $end            reduce using rule 50 (datos -> STRING .)
    ELSE            reduce using rule 50 (datos -> STRING .)
    END             reduce using rule 50 (datos -> STRING .)
    RETURN          reduce using rule 50 (datos -> STRING .)
    RBRACKET        reduce using rule 50 (datos -> STRING .)
    COMMA           reduce using rule 50 (datos -> STRING .)
    EQUAL           reduce using rule 50 (datos -> STRING .)
    DOUBLEAMPERSAND reduce using rule 50 (datos -> STRING .)
    DOUBLEPIPE      reduce using rule 50 (datos -> STRING .)
    RPARENTHESES    reduce using rule 50 (datos -> STRING .)
    RCURLYBRACKET   reduce using rule 50 (datos -> STRING .)


state 74

    (51) datos -> booleanos .

    DOUBLEEQUAL     reduce using rule 51 (datos -> booleanos .)
    TRIPLEEQUAL     reduce using rule 51 (datos -> booleanos .)
    GREATERTHAN     reduce using rule 51 (datos -> booleanos .)
    NOTEQUAL        reduce using rule 51 (datos -> booleanos .)
    LESSTHAN        reduce using rule 51 (datos -> booleanos .)
    GREQUAL         reduce using rule 51 (datos -> booleanos .)
    LEQUAL          reduce using rule 51 (datos -> booleanos .)
    LOCALVAR        reduce using rule 51 (datos -> booleanos .)
    FOR             reduce using rule 51 (datos -> booleanos .)
    IF              reduce using rule 51 (datos -> booleanos .)
    UNLESS          reduce using rule 51 (datos -> booleanos .)
    PUTS            reduce using rule 51 (datos -> booleanos .)
    PRINT           reduce using rule 51 (datos -> booleanos .)
    STRING          reduce using rule 51 (datos -> booleanos .)
    INTEGERW        reduce using rule 51 (datos -> booleanos .)
    INTEGER         reduce using rule 51 (datos -> booleanos .)
    FLOAT           reduce using rule 51 (datos -> booleanos .)
    VAR             reduce using rule 51 (datos -> booleanos .)
    CONSTANT        reduce using rule 51 (datos -> booleanos .)
    LCURLYBRACKET   reduce using rule 51 (datos -> booleanos .)
    LBRACKET        reduce using rule 51 (datos -> booleanos .)
    SET             reduce using rule 51 (datos -> booleanos .)
    $end            reduce using rule 51 (datos -> booleanos .)
    ELSE            reduce using rule 51 (datos -> booleanos .)
    END             reduce using rule 51 (datos -> booleanos .)
    RETURN          reduce using rule 51 (datos -> booleanos .)
    RBRACKET        reduce using rule 51 (datos -> booleanos .)
    COMMA           reduce using rule 51 (datos -> booleanos .)
    EQUAL           reduce using rule 51 (datos -> booleanos .)
    DOUBLEAMPERSAND reduce using rule 51 (datos -> booleanos .)
    DOUBLEPIPE      reduce using rule 51 (datos -> booleanos .)
    RPARENTHESES    reduce using rule 51 (datos -> booleanos .)
    RCURLYBRACKET   reduce using rule 51 (datos -> booleanos .)


state 75

    (52) booleanos -> TRUE .

    DOUBLEEQUAL     reduce using rule 52 (booleanos -> TRUE .)
    TRIPLEEQUAL     reduce using rule 52 (booleanos -> TRUE .)
    GREATERTHAN     reduce using rule 52 (booleanos -> TRUE .)
    NOTEQUAL        reduce using rule 52 (booleanos -> TRUE .)
    LESSTHAN        reduce using rule 52 (booleanos -> TRUE .)
    GREQUAL         reduce using rule 52 (booleanos -> TRUE .)
    LEQUAL          reduce using rule 52 (booleanos -> TRUE .)
    LOCALVAR        reduce using rule 52 (booleanos -> TRUE .)
    FOR             reduce using rule 52 (booleanos -> TRUE .)
    IF              reduce using rule 52 (booleanos -> TRUE .)
    UNLESS          reduce using rule 52 (booleanos -> TRUE .)
    PUTS            reduce using rule 52 (booleanos -> TRUE .)
    PRINT           reduce using rule 52 (booleanos -> TRUE .)
    STRING          reduce using rule 52 (booleanos -> TRUE .)
    INTEGERW        reduce using rule 52 (booleanos -> TRUE .)
    INTEGER         reduce using rule 52 (booleanos -> TRUE .)
    FLOAT           reduce using rule 52 (booleanos -> TRUE .)
    VAR             reduce using rule 52 (booleanos -> TRUE .)
    CONSTANT        reduce using rule 52 (booleanos -> TRUE .)
    LCURLYBRACKET   reduce using rule 52 (booleanos -> TRUE .)
    LBRACKET        reduce using rule 52 (booleanos -> TRUE .)
    SET             reduce using rule 52 (booleanos -> TRUE .)
    $end            reduce using rule 52 (booleanos -> TRUE .)
    ELSE            reduce using rule 52 (booleanos -> TRUE .)
    END             reduce using rule 52 (booleanos -> TRUE .)
    RETURN          reduce using rule 52 (booleanos -> TRUE .)
    RBRACKET        reduce using rule 52 (booleanos -> TRUE .)
    COMMA           reduce using rule 52 (booleanos -> TRUE .)
    EQUAL           reduce using rule 52 (booleanos -> TRUE .)
    DOUBLEAMPERSAND reduce using rule 52 (booleanos -> TRUE .)
    DOUBLEPIPE      reduce using rule 52 (booleanos -> TRUE .)
    RPARENTHESES    reduce using rule 52 (booleanos -> TRUE .)
    RCURLYBRACKET   reduce using rule 52 (booleanos -> TRUE .)


state 76

    (53) booleanos -> FALSE .

    DOUBLEEQUAL     reduce using rule 53 (booleanos -> FALSE .)
    TRIPLEEQUAL     reduce using rule 53 (booleanos -> FALSE .)
    GREATERTHAN     reduce using rule 53 (booleanos -> FALSE .)
    NOTEQUAL        reduce using rule 53 (booleanos -> FALSE .)
    LESSTHAN        reduce using rule 53 (booleanos -> FALSE .)
    GREQUAL         reduce using rule 53 (booleanos -> FALSE .)
    LEQUAL          reduce using rule 53 (booleanos -> FALSE .)
    LOCALVAR        reduce using rule 53 (booleanos -> FALSE .)
    FOR             reduce using rule 53 (booleanos -> FALSE .)
    IF              reduce using rule 53 (booleanos -> FALSE .)
    UNLESS          reduce using rule 53 (booleanos -> FALSE .)
    PUTS            reduce using rule 53 (booleanos -> FALSE .)
    PRINT           reduce using rule 53 (booleanos -> FALSE .)
    STRING          reduce using rule 53 (booleanos -> FALSE .)
    INTEGERW        reduce using rule 53 (booleanos -> FALSE .)
    INTEGER         reduce using rule 53 (booleanos -> FALSE .)
    FLOAT           reduce using rule 53 (booleanos -> FALSE .)
    VAR             reduce using rule 53 (booleanos -> FALSE .)
    CONSTANT        reduce using rule 53 (booleanos -> FALSE .)
    LCURLYBRACKET   reduce using rule 53 (booleanos -> FALSE .)
    LBRACKET        reduce using rule 53 (booleanos -> FALSE .)
    SET             reduce using rule 53 (booleanos -> FALSE .)
    $end            reduce using rule 53 (booleanos -> FALSE .)
    ELSE            reduce using rule 53 (booleanos -> FALSE .)
    END             reduce using rule 53 (booleanos -> FALSE .)
    RETURN          reduce using rule 53 (booleanos -> FALSE .)
    RBRACKET        reduce using rule 53 (booleanos -> FALSE .)
    COMMA           reduce using rule 53 (booleanos -> FALSE .)
    EQUAL           reduce using rule 53 (booleanos -> FALSE .)
    DOUBLEAMPERSAND reduce using rule 53 (booleanos -> FALSE .)
    DOUBLEPIPE      reduce using rule 53 (booleanos -> FALSE .)
    RPARENTHESES    reduce using rule 53 (booleanos -> FALSE .)
    RCURLYBRACKET   reduce using rule 53 (booleanos -> FALSE .)


state 77

    (135) unless -> UNLESS expresionCondicional . cuerpo ELSE cuerpo END
    (17) cuerpo -> . declaracion cuerpo
    (18) cuerpo -> . asignacion cuerpo
    (19) cuerpo -> . loop cuerpo
    (20) cuerpo -> . estructurasDatos cuerpo
    (21) cuerpo -> . if cuerpo
    (22) cuerpo -> . unless cuerpo
    (23) cuerpo -> . impresion cuerpo
    (24) cuerpo -> . operacionSet cuerpo
    (25) cuerpo -> . operacionarray cuerpo
    (26) cuerpo -> . operacionHash cuerpo
    (27) cuerpo -> . string cuerpo
    (28) cuerpo -> . integer cuerpo
    (29) cuerpo -> . float cuerpo
    (30) cuerpo -> .
    (32) declaracion -> . tiposvariables EQUAL datos
    (33) declaracion -> . tiposvariables EQUAL estructurasDatos
    (34) declaracion -> . tiposvariables EQUAL expresion
    (35) declaracion -> . tiposvariables EQUAL declaracion
    (36) declaracion -> . tiposvariables EQUAL casting
    (37) asignacion -> . LOCALVAR PLUSASSIGN datosAsignacion
    (38) asignacion -> . LOCALVAR MINASSIGN datosAsignacion
    (39) asignacion -> . LOCALVAR DIVASSIGN datosAsignacion
    (40) asignacion -> . LOCALVAR TIMESASSIGN datosAsignacion
    (41) asignacion -> . LOCALVAR MODASSIGN datosAsignacion
    (42) asignacion -> . LOCALVAR EXPASSIGN datosAsignacion
    (31) loop -> . FOR LOCALVAR IN rango cuerpo END
    (54) estructurasDatos -> . hash
    (55) estructurasDatos -> . array
    (56) estructurasDatos -> . set
    (114) if -> . IF datoscompletos operadores datoscompletos cuerpo END
    (115) if -> . IF datoscompletos operadores datoscompletos cuerpo else
    (135) unless -> . UNLESS expresionCondicional cuerpo ELSE cuerpo END
    (72) impresion -> . PUTS datos
    (73) impresion -> . PUTS LOCALVAR
    (74) impresion -> . PRINT datos
    (75) impresion -> . PRINT LOCALVAR
    (153) operacionSet -> . set DOT ADD LPARENTHESES datos RPARENTHESES
    (154) operacionSet -> . set DOT ADD LPARENTHESES tiposvariables RPARENTHESES
    (155) operacionSet -> . set DOT CLEAR
    (156) operacionSet -> . set DOT DELETE LPARENTHESES datos RPARENTHESES
    (157) operacionSet -> . set DOT DELETE LPARENTHESES tiposvariables RPARENTHESES
    (99) operacionarray -> . array LBRACKET INTEGER RBRACKET
    (100) operacionarray -> . array DOT TAKE LPARENTHESES INTEGER RPARENTHESES
    (101) operacionarray -> . array DOT DROP LPARENTHESES INTEGER RPARENTHESES
    (102) operacionarray -> . array DOT push maspush
    (107) operacionarray -> . array DOT POP
    (108) operacionarray -> . array DOT POP LPARENTHESES INTEGER RPARENTHESES
    (109) operacionarray -> . array DOT DELETE LPARENTHESES INTEGER RPARENTHESES
    (110) operacionarray -> . array DOT LENGTH LPARENTHESES RPARENTHESES
    (111) operacionarray -> . array DOT EMPTY QUESTIONMARK
    (62) operacionHash -> . hash LBRACKET datos RBRACKET
    (63) operacionHash -> . hash LBRACKET datos RBRACKET EQUAL datos
    (64) operacionHash -> . hash DOT INCLUDE QUESTIONMARK LPARENTHESES datos RPARENTHESES
    (65) operacionHash -> . hash DOT DELETE LPARENTHESES datos RPARENTHESES
    (66) operacionHash -> . hash DOT KEYS
    (67) operacionHash -> . hash DOT EMPTY QUESTIONMARK
    (68) operacionHash -> . hash DOT SIZE
    (69) operacionHash -> . hash DOT LENGTH
    (158) string -> . STRING PLUS STRING
    (159) string -> . STRING MULTIPLY INTEGER
    (160) string -> . STRING DOT stringOpt
    (124) integer -> . INTEGERW DOT SQRT LPARENTHESES INTEGER RPARENTHESES
    (125) integer -> . INTEGER DOT CEIL LPARENTHESES RPARENTHESES
    (126) integer -> . INTEGER DOT CEIL LPARENTHESES INTEGER RPARENTHESES
    (127) integer -> . INTEGER DOT FLOOR LPARENTHESES RPARENTHESES
    (128) integer -> . INTEGER DOT FLOOR LPARENTHESES INTEGER RPARENTHESES
    (129) integer -> . INTEGER DOT ABS
    (130) float -> . FLOAT DOT CEIL LPARENTHESES RPARENTHESES
    (131) float -> . FLOAT DOT CEIL LPARENTHESES INTEGER RPARENTHESES
    (132) float -> . FLOAT DOT FLOOR LPARENTHESES RPARENTHESES
    (133) float -> . FLOAT DOT FLOOR LPARENTHESES INTEGER RPARENTHESES
    (134) float -> . FLOAT DOT ABS
    (45) tiposvariables -> . VAR
    (46) tiposvariables -> . LOCALVAR
    (47) tiposvariables -> . CONSTANT
    (57) hash -> . LCURLYBRACKET elementoHash RCURLYBRACKET
    (91) array -> . LBRACKET RBRACKET
    (92) array -> . LBRACKET datosarray RBRACKET
    (147) set -> . SET LBRACKET elementoSet RBRACKET

    ELSE            reduce using rule 30 (cuerpo -> .)
    LOCALVAR        shift and go to state 18
    FOR             shift and go to state 20
    IF              shift and go to state 24
    UNLESS          shift and go to state 25
    PUTS            shift and go to state 26
    PRINT           shift and go to state 27
    STRING          shift and go to state 30
    INTEGERW        shift and go to state 31
    INTEGER         shift and go to state 29
    FLOAT           shift and go to state 32
    VAR             shift and go to state 33
    CONSTANT        shift and go to state 34
    LCURLYBRACKET   shift and go to state 35
    LBRACKET        shift and go to state 28
    SET             shift and go to state 36

    cuerpo                         shift and go to state 155
    declaracion                    shift and go to state 4
    asignacion                     shift and go to state 5
    loop                           shift and go to state 6
    estructurasDatos               shift and go to state 7
    if                             shift and go to state 8
    unless                         shift and go to state 9
    impresion                      shift and go to state 10
    operacionSet                   shift and go to state 11
    operacionarray                 shift and go to state 12
    operacionHash                  shift and go to state 13
    string                         shift and go to state 14
    integer                        shift and go to state 15
    float                          shift and go to state 16
    tiposvariables                 shift and go to state 19
    hash                           shift and go to state 21
    array                          shift and go to state 22
    set                            shift and go to state 23

state 78

    (136) expresionCondicional -> boolean .
    (142) boolean -> boolean . operadorBinario boolean
    (138) operadorBinario -> . DOUBLEAMPERSAND
    (139) operadorBinario -> . DOUBLEPIPE

    LOCALVAR        reduce using rule 136 (expresionCondicional -> boolean .)
    FOR             reduce using rule 136 (expresionCondicional -> boolean .)
    IF              reduce using rule 136 (expresionCondicional -> boolean .)
    UNLESS          reduce using rule 136 (expresionCondicional -> boolean .)
    PUTS            reduce using rule 136 (expresionCondicional -> boolean .)
    PRINT           reduce using rule 136 (expresionCondicional -> boolean .)
    STRING          reduce using rule 136 (expresionCondicional -> boolean .)
    INTEGERW        reduce using rule 136 (expresionCondicional -> boolean .)
    INTEGER         reduce using rule 136 (expresionCondicional -> boolean .)
    FLOAT           reduce using rule 136 (expresionCondicional -> boolean .)
    VAR             reduce using rule 136 (expresionCondicional -> boolean .)
    CONSTANT        reduce using rule 136 (expresionCondicional -> boolean .)
    LCURLYBRACKET   reduce using rule 136 (expresionCondicional -> boolean .)
    LBRACKET        reduce using rule 136 (expresionCondicional -> boolean .)
    SET             reduce using rule 136 (expresionCondicional -> boolean .)
    ELSE            reduce using rule 136 (expresionCondicional -> boolean .)
    DOUBLEAMPERSAND shift and go to state 157
    DOUBLEPIPE      shift and go to state 158

    operadorBinario                shift and go to state 156

state 79

    (137) expresionCondicional -> EXCLAMATION . LPARENTHESES boolean RPARENTHESES
    (141) boolean -> EXCLAMATION . LPARENTHESES condiciones RPARENTHESES

    LPARENTHESES    shift and go to state 159


state 80

    (140) boolean -> condiciones .

    DOUBLEAMPERSAND reduce using rule 140 (boolean -> condiciones .)
    DOUBLEPIPE      reduce using rule 140 (boolean -> condiciones .)
    LOCALVAR        reduce using rule 140 (boolean -> condiciones .)
    FOR             reduce using rule 140 (boolean -> condiciones .)
    IF              reduce using rule 140 (boolean -> condiciones .)
    UNLESS          reduce using rule 140 (boolean -> condiciones .)
    PUTS            reduce using rule 140 (boolean -> condiciones .)
    PRINT           reduce using rule 140 (boolean -> condiciones .)
    STRING          reduce using rule 140 (boolean -> condiciones .)
    INTEGERW        reduce using rule 140 (boolean -> condiciones .)
    INTEGER         reduce using rule 140 (boolean -> condiciones .)
    FLOAT           reduce using rule 140 (boolean -> condiciones .)
    VAR             reduce using rule 140 (boolean -> condiciones .)
    CONSTANT        reduce using rule 140 (boolean -> condiciones .)
    LCURLYBRACKET   reduce using rule 140 (boolean -> condiciones .)
    LBRACKET        reduce using rule 140 (boolean -> condiciones .)
    SET             reduce using rule 140 (boolean -> condiciones .)
    ELSE            reduce using rule 140 (boolean -> condiciones .)
    RPARENTHESES    reduce using rule 140 (boolean -> condiciones .)


state 81

    (143) condiciones -> tiposvariables . operadores tiposvariables
    (145) condiciones -> tiposvariables . operadores datos
    (117) operadores -> . DOUBLEEQUAL
    (118) operadores -> . TRIPLEEQUAL
    (119) operadores -> . GREATERTHAN
    (120) operadores -> . NOTEQUAL
    (121) operadores -> . LESSTHAN
    (122) operadores -> . GREQUAL
    (123) operadores -> . LEQUAL

    DOUBLEEQUAL     shift and go to state 148
    TRIPLEEQUAL     shift and go to state 149
    GREATERTHAN     shift and go to state 150
    NOTEQUAL        shift and go to state 151
    LESSTHAN        shift and go to state 152
    GREQUAL         shift and go to state 153
    LEQUAL          shift and go to state 154

    operadores                     shift and go to state 160

state 82

    (144) condiciones -> datos . operadores datos
    (146) condiciones -> datos . operadores tiposvariables
    (117) operadores -> . DOUBLEEQUAL
    (118) operadores -> . TRIPLEEQUAL
    (119) operadores -> . GREATERTHAN
    (120) operadores -> . NOTEQUAL
    (121) operadores -> . LESSTHAN
    (122) operadores -> . GREQUAL
    (123) operadores -> . LEQUAL

    DOUBLEEQUAL     shift and go to state 148
    TRIPLEEQUAL     shift and go to state 149
    GREATERTHAN     shift and go to state 150
    NOTEQUAL        shift and go to state 151
    LESSTHAN        shift and go to state 152
    GREQUAL         shift and go to state 153
    LEQUAL          shift and go to state 154

    operadores                     shift and go to state 161

state 83

    (46) tiposvariables -> LOCALVAR .

    DOUBLEEQUAL     reduce using rule 46 (tiposvariables -> LOCALVAR .)
    TRIPLEEQUAL     reduce using rule 46 (tiposvariables -> LOCALVAR .)
    GREATERTHAN     reduce using rule 46 (tiposvariables -> LOCALVAR .)
    NOTEQUAL        reduce using rule 46 (tiposvariables -> LOCALVAR .)
    LESSTHAN        reduce using rule 46 (tiposvariables -> LOCALVAR .)
    GREQUAL         reduce using rule 46 (tiposvariables -> LOCALVAR .)
    LEQUAL          reduce using rule 46 (tiposvariables -> LOCALVAR .)
    EQUAL           reduce using rule 46 (tiposvariables -> LOCALVAR .)
    DOUBLEAMPERSAND reduce using rule 46 (tiposvariables -> LOCALVAR .)
    DOUBLEPIPE      reduce using rule 46 (tiposvariables -> LOCALVAR .)
    LOCALVAR        reduce using rule 46 (tiposvariables -> LOCALVAR .)
    FOR             reduce using rule 46 (tiposvariables -> LOCALVAR .)
    IF              reduce using rule 46 (tiposvariables -> LOCALVAR .)
    UNLESS          reduce using rule 46 (tiposvariables -> LOCALVAR .)
    PUTS            reduce using rule 46 (tiposvariables -> LOCALVAR .)
    PRINT           reduce using rule 46 (tiposvariables -> LOCALVAR .)
    STRING          reduce using rule 46 (tiposvariables -> LOCALVAR .)
    INTEGERW        reduce using rule 46 (tiposvariables -> LOCALVAR .)
    INTEGER         reduce using rule 46 (tiposvariables -> LOCALVAR .)
    FLOAT           reduce using rule 46 (tiposvariables -> LOCALVAR .)
    VAR             reduce using rule 46 (tiposvariables -> LOCALVAR .)
    CONSTANT        reduce using rule 46 (tiposvariables -> LOCALVAR .)
    LCURLYBRACKET   reduce using rule 46 (tiposvariables -> LOCALVAR .)
    LBRACKET        reduce using rule 46 (tiposvariables -> LOCALVAR .)
    SET             reduce using rule 46 (tiposvariables -> LOCALVAR .)
    ELSE            reduce using rule 46 (tiposvariables -> LOCALVAR .)
    RPARENTHESES    reduce using rule 46 (tiposvariables -> LOCALVAR .)


state 84

    (48) datos -> INTEGER .

    DOUBLEEQUAL     reduce using rule 48 (datos -> INTEGER .)
    TRIPLEEQUAL     reduce using rule 48 (datos -> INTEGER .)
    GREATERTHAN     reduce using rule 48 (datos -> INTEGER .)
    NOTEQUAL        reduce using rule 48 (datos -> INTEGER .)
    LESSTHAN        reduce using rule 48 (datos -> INTEGER .)
    GREQUAL         reduce using rule 48 (datos -> INTEGER .)
    LEQUAL          reduce using rule 48 (datos -> INTEGER .)
    LOCALVAR        reduce using rule 48 (datos -> INTEGER .)
    FOR             reduce using rule 48 (datos -> INTEGER .)
    IF              reduce using rule 48 (datos -> INTEGER .)
    UNLESS          reduce using rule 48 (datos -> INTEGER .)
    PUTS            reduce using rule 48 (datos -> INTEGER .)
    PRINT           reduce using rule 48 (datos -> INTEGER .)
    STRING          reduce using rule 48 (datos -> INTEGER .)
    INTEGERW        reduce using rule 48 (datos -> INTEGER .)
    INTEGER         reduce using rule 48 (datos -> INTEGER .)
    FLOAT           reduce using rule 48 (datos -> INTEGER .)
    VAR             reduce using rule 48 (datos -> INTEGER .)
    CONSTANT        reduce using rule 48 (datos -> INTEGER .)
    LCURLYBRACKET   reduce using rule 48 (datos -> INTEGER .)
    LBRACKET        reduce using rule 48 (datos -> INTEGER .)
    SET             reduce using rule 48 (datos -> INTEGER .)
    $end            reduce using rule 48 (datos -> INTEGER .)
    ELSE            reduce using rule 48 (datos -> INTEGER .)
    END             reduce using rule 48 (datos -> INTEGER .)
    RETURN          reduce using rule 48 (datos -> INTEGER .)
    EQUAL           reduce using rule 48 (datos -> INTEGER .)
    RBRACKET        reduce using rule 48 (datos -> INTEGER .)
    COMMA           reduce using rule 48 (datos -> INTEGER .)
    DOUBLEAMPERSAND reduce using rule 48 (datos -> INTEGER .)
    DOUBLEPIPE      reduce using rule 48 (datos -> INTEGER .)
    RPARENTHESES    reduce using rule 48 (datos -> INTEGER .)
    RCURLYBRACKET   reduce using rule 48 (datos -> INTEGER .)


state 85

    (49) datos -> FLOAT .

    DOUBLEEQUAL     reduce using rule 49 (datos -> FLOAT .)
    TRIPLEEQUAL     reduce using rule 49 (datos -> FLOAT .)
    GREATERTHAN     reduce using rule 49 (datos -> FLOAT .)
    NOTEQUAL        reduce using rule 49 (datos -> FLOAT .)
    LESSTHAN        reduce using rule 49 (datos -> FLOAT .)
    GREQUAL         reduce using rule 49 (datos -> FLOAT .)
    LEQUAL          reduce using rule 49 (datos -> FLOAT .)
    LOCALVAR        reduce using rule 49 (datos -> FLOAT .)
    FOR             reduce using rule 49 (datos -> FLOAT .)
    IF              reduce using rule 49 (datos -> FLOAT .)
    UNLESS          reduce using rule 49 (datos -> FLOAT .)
    PUTS            reduce using rule 49 (datos -> FLOAT .)
    PRINT           reduce using rule 49 (datos -> FLOAT .)
    STRING          reduce using rule 49 (datos -> FLOAT .)
    INTEGERW        reduce using rule 49 (datos -> FLOAT .)
    INTEGER         reduce using rule 49 (datos -> FLOAT .)
    FLOAT           reduce using rule 49 (datos -> FLOAT .)
    VAR             reduce using rule 49 (datos -> FLOAT .)
    CONSTANT        reduce using rule 49 (datos -> FLOAT .)
    LCURLYBRACKET   reduce using rule 49 (datos -> FLOAT .)
    LBRACKET        reduce using rule 49 (datos -> FLOAT .)
    SET             reduce using rule 49 (datos -> FLOAT .)
    $end            reduce using rule 49 (datos -> FLOAT .)
    ELSE            reduce using rule 49 (datos -> FLOAT .)
    END             reduce using rule 49 (datos -> FLOAT .)
    RETURN          reduce using rule 49 (datos -> FLOAT .)
    EQUAL           reduce using rule 49 (datos -> FLOAT .)
    RBRACKET        reduce using rule 49 (datos -> FLOAT .)
    COMMA           reduce using rule 49 (datos -> FLOAT .)
    DOUBLEAMPERSAND reduce using rule 49 (datos -> FLOAT .)
    DOUBLEPIPE      reduce using rule 49 (datos -> FLOAT .)
    RPARENTHESES    reduce using rule 49 (datos -> FLOAT .)
    RCURLYBRACKET   reduce using rule 49 (datos -> FLOAT .)


state 86

    (72) impresion -> PUTS datos .

    LOCALVAR        reduce using rule 72 (impresion -> PUTS datos .)
    FOR             reduce using rule 72 (impresion -> PUTS datos .)
    IF              reduce using rule 72 (impresion -> PUTS datos .)
    UNLESS          reduce using rule 72 (impresion -> PUTS datos .)
    PUTS            reduce using rule 72 (impresion -> PUTS datos .)
    PRINT           reduce using rule 72 (impresion -> PUTS datos .)
    STRING          reduce using rule 72 (impresion -> PUTS datos .)
    INTEGERW        reduce using rule 72 (impresion -> PUTS datos .)
    INTEGER         reduce using rule 72 (impresion -> PUTS datos .)
    FLOAT           reduce using rule 72 (impresion -> PUTS datos .)
    VAR             reduce using rule 72 (impresion -> PUTS datos .)
    CONSTANT        reduce using rule 72 (impresion -> PUTS datos .)
    LCURLYBRACKET   reduce using rule 72 (impresion -> PUTS datos .)
    LBRACKET        reduce using rule 72 (impresion -> PUTS datos .)
    SET             reduce using rule 72 (impresion -> PUTS datos .)
    $end            reduce using rule 72 (impresion -> PUTS datos .)
    ELSE            reduce using rule 72 (impresion -> PUTS datos .)
    END             reduce using rule 72 (impresion -> PUTS datos .)
    RETURN          reduce using rule 72 (impresion -> PUTS datos .)


state 87

    (73) impresion -> PUTS LOCALVAR .

    LOCALVAR        reduce using rule 73 (impresion -> PUTS LOCALVAR .)
    FOR             reduce using rule 73 (impresion -> PUTS LOCALVAR .)
    IF              reduce using rule 73 (impresion -> PUTS LOCALVAR .)
    UNLESS          reduce using rule 73 (impresion -> PUTS LOCALVAR .)
    PUTS            reduce using rule 73 (impresion -> PUTS LOCALVAR .)
    PRINT           reduce using rule 73 (impresion -> PUTS LOCALVAR .)
    STRING          reduce using rule 73 (impresion -> PUTS LOCALVAR .)
    INTEGERW        reduce using rule 73 (impresion -> PUTS LOCALVAR .)
    INTEGER         reduce using rule 73 (impresion -> PUTS LOCALVAR .)
    FLOAT           reduce using rule 73 (impresion -> PUTS LOCALVAR .)
    VAR             reduce using rule 73 (impresion -> PUTS LOCALVAR .)
    CONSTANT        reduce using rule 73 (impresion -> PUTS LOCALVAR .)
    LCURLYBRACKET   reduce using rule 73 (impresion -> PUTS LOCALVAR .)
    LBRACKET        reduce using rule 73 (impresion -> PUTS LOCALVAR .)
    SET             reduce using rule 73 (impresion -> PUTS LOCALVAR .)
    $end            reduce using rule 73 (impresion -> PUTS LOCALVAR .)
    ELSE            reduce using rule 73 (impresion -> PUTS LOCALVAR .)
    END             reduce using rule 73 (impresion -> PUTS LOCALVAR .)
    RETURN          reduce using rule 73 (impresion -> PUTS LOCALVAR .)


state 88

    (74) impresion -> PRINT datos .

    LOCALVAR        reduce using rule 74 (impresion -> PRINT datos .)
    FOR             reduce using rule 74 (impresion -> PRINT datos .)
    IF              reduce using rule 74 (impresion -> PRINT datos .)
    UNLESS          reduce using rule 74 (impresion -> PRINT datos .)
    PUTS            reduce using rule 74 (impresion -> PRINT datos .)
    PRINT           reduce using rule 74 (impresion -> PRINT datos .)
    STRING          reduce using rule 74 (impresion -> PRINT datos .)
    INTEGERW        reduce using rule 74 (impresion -> PRINT datos .)
    INTEGER         reduce using rule 74 (impresion -> PRINT datos .)
    FLOAT           reduce using rule 74 (impresion -> PRINT datos .)
    VAR             reduce using rule 74 (impresion -> PRINT datos .)
    CONSTANT        reduce using rule 74 (impresion -> PRINT datos .)
    LCURLYBRACKET   reduce using rule 74 (impresion -> PRINT datos .)
    LBRACKET        reduce using rule 74 (impresion -> PRINT datos .)
    SET             reduce using rule 74 (impresion -> PRINT datos .)
    $end            reduce using rule 74 (impresion -> PRINT datos .)
    ELSE            reduce using rule 74 (impresion -> PRINT datos .)
    END             reduce using rule 74 (impresion -> PRINT datos .)
    RETURN          reduce using rule 74 (impresion -> PRINT datos .)


state 89

    (75) impresion -> PRINT LOCALVAR .

    LOCALVAR        reduce using rule 75 (impresion -> PRINT LOCALVAR .)
    FOR             reduce using rule 75 (impresion -> PRINT LOCALVAR .)
    IF              reduce using rule 75 (impresion -> PRINT LOCALVAR .)
    UNLESS          reduce using rule 75 (impresion -> PRINT LOCALVAR .)
    PUTS            reduce using rule 75 (impresion -> PRINT LOCALVAR .)
    PRINT           reduce using rule 75 (impresion -> PRINT LOCALVAR .)
    STRING          reduce using rule 75 (impresion -> PRINT LOCALVAR .)
    INTEGERW        reduce using rule 75 (impresion -> PRINT LOCALVAR .)
    INTEGER         reduce using rule 75 (impresion -> PRINT LOCALVAR .)
    FLOAT           reduce using rule 75 (impresion -> PRINT LOCALVAR .)
    VAR             reduce using rule 75 (impresion -> PRINT LOCALVAR .)
    CONSTANT        reduce using rule 75 (impresion -> PRINT LOCALVAR .)
    LCURLYBRACKET   reduce using rule 75 (impresion -> PRINT LOCALVAR .)
    LBRACKET        reduce using rule 75 (impresion -> PRINT LOCALVAR .)
    SET             reduce using rule 75 (impresion -> PRINT LOCALVAR .)
    $end            reduce using rule 75 (impresion -> PRINT LOCALVAR .)
    ELSE            reduce using rule 75 (impresion -> PRINT LOCALVAR .)
    END             reduce using rule 75 (impresion -> PRINT LOCALVAR .)
    RETURN          reduce using rule 75 (impresion -> PRINT LOCALVAR .)


state 90

    (91) array -> LBRACKET RBRACKET .

    LBRACKET        reduce using rule 91 (array -> LBRACKET RBRACKET .)
    DOT             reduce using rule 91 (array -> LBRACKET RBRACKET .)
    LOCALVAR        reduce using rule 91 (array -> LBRACKET RBRACKET .)
    FOR             reduce using rule 91 (array -> LBRACKET RBRACKET .)
    IF              reduce using rule 91 (array -> LBRACKET RBRACKET .)
    UNLESS          reduce using rule 91 (array -> LBRACKET RBRACKET .)
    PUTS            reduce using rule 91 (array -> LBRACKET RBRACKET .)
    PRINT           reduce using rule 91 (array -> LBRACKET RBRACKET .)
    STRING          reduce using rule 91 (array -> LBRACKET RBRACKET .)
    INTEGERW        reduce using rule 91 (array -> LBRACKET RBRACKET .)
    INTEGER         reduce using rule 91 (array -> LBRACKET RBRACKET .)
    FLOAT           reduce using rule 91 (array -> LBRACKET RBRACKET .)
    VAR             reduce using rule 91 (array -> LBRACKET RBRACKET .)
    CONSTANT        reduce using rule 91 (array -> LBRACKET RBRACKET .)
    LCURLYBRACKET   reduce using rule 91 (array -> LBRACKET RBRACKET .)
    SET             reduce using rule 91 (array -> LBRACKET RBRACKET .)
    $end            reduce using rule 91 (array -> LBRACKET RBRACKET .)
    ELSE            reduce using rule 91 (array -> LBRACKET RBRACKET .)
    END             reduce using rule 91 (array -> LBRACKET RBRACKET .)
    RETURN          reduce using rule 91 (array -> LBRACKET RBRACKET .)


state 91

    (92) array -> LBRACKET datosarray . RBRACKET
    (98) datosarray -> datosarray . COMMA datosvarios

    RBRACKET        shift and go to state 162
    COMMA           shift and go to state 163


state 92

    (97) datosarray -> datosvarios .

    RBRACKET        reduce using rule 97 (datosarray -> datosvarios .)
    COMMA           reduce using rule 97 (datosarray -> datosvarios .)


state 93

    (95) datosvarios -> VAR .

    RBRACKET        reduce using rule 95 (datosvarios -> VAR .)
    COMMA           reduce using rule 95 (datosvarios -> VAR .)
    RPARENTHESES    reduce using rule 95 (datosvarios -> VAR .)


state 94

    (96) datosvarios -> LOCALVAR .

    RBRACKET        reduce using rule 96 (datosvarios -> LOCALVAR .)
    COMMA           reduce using rule 96 (datosvarios -> LOCALVAR .)
    RPARENTHESES    reduce using rule 96 (datosvarios -> LOCALVAR .)


state 95

    (125) integer -> INTEGER DOT . CEIL LPARENTHESES RPARENTHESES
    (126) integer -> INTEGER DOT . CEIL LPARENTHESES INTEGER RPARENTHESES
    (127) integer -> INTEGER DOT . FLOOR LPARENTHESES RPARENTHESES
    (128) integer -> INTEGER DOT . FLOOR LPARENTHESES INTEGER RPARENTHESES
    (129) integer -> INTEGER DOT . ABS

    CEIL            shift and go to state 164
    FLOOR           shift and go to state 165
    ABS             shift and go to state 166


state 96

    (158) string -> STRING PLUS . STRING

    STRING          shift and go to state 167


state 97

    (159) string -> STRING MULTIPLY . INTEGER

    INTEGER         shift and go to state 168


state 98

    (160) string -> STRING DOT . stringOpt
    (161) stringOpt -> . UPCASE
    (162) stringOpt -> . DOWNCASE
    (163) stringOpt -> . LENGTH
    (164) stringOpt -> . CAPS
    (165) stringOpt -> . INSERT LPARENTHESES INTEGER COMMA STRING RPARENTHESES

    UPCASE          shift and go to state 170
    DOWNCASE        shift and go to state 171
    LENGTH          shift and go to state 172
    CAPS            shift and go to state 173
    INSERT          shift and go to state 174

    stringOpt                      shift and go to state 169

state 99

    (124) integer -> INTEGERW DOT . SQRT LPARENTHESES INTEGER RPARENTHESES

    SQRT            shift and go to state 175


state 100

    (130) float -> FLOAT DOT . CEIL LPARENTHESES RPARENTHESES
    (131) float -> FLOAT DOT . CEIL LPARENTHESES INTEGER RPARENTHESES
    (132) float -> FLOAT DOT . FLOOR LPARENTHESES RPARENTHESES
    (133) float -> FLOAT DOT . FLOOR LPARENTHESES INTEGER RPARENTHESES
    (134) float -> FLOAT DOT . ABS

    CEIL            shift and go to state 176
    FLOOR           shift and go to state 177
    ABS             shift and go to state 178


state 101

    (57) hash -> LCURLYBRACKET elementoHash . RCURLYBRACKET

    RCURLYBRACKET   shift and go to state 179


state 102

    (58) elementoHash -> datos . EQUAL GREATERTHAN datos maselementos

    EQUAL           shift and go to state 180


state 103

    (147) set -> SET LBRACKET . elementoSet RBRACKET
    (148) elementoSet -> .
    (149) elementoSet -> . datos
    (150) elementoSet -> . datos otroElemento
    (48) datos -> . INTEGER
    (49) datos -> . FLOAT
    (50) datos -> . STRING
    (51) datos -> . booleanos
    (52) booleanos -> . TRUE
    (53) booleanos -> . FALSE

    RBRACKET        reduce using rule 148 (elementoSet -> .)
    INTEGER         shift and go to state 84
    FLOAT           shift and go to state 85
    STRING          shift and go to state 73
    TRUE            shift and go to state 75
    FALSE           shift and go to state 76

    elementoSet                    shift and go to state 181
    datos                          shift and go to state 182
    booleanos                      shift and go to state 74

state 104

    (3) funcion -> DEF LOCALVAR LPARENTHESES . argumentos RPARENTHESES cuerpo END
    (4) funcion -> DEF LOCALVAR LPARENTHESES . argumentos RPARENTHESES cuerpo retornar END
    (5) argumentos -> . variosargumentos
    (6) argumentos -> . MULTIPLY LOCALVAR
    (7) argumentos -> . TWOSTARS LOCALVAR
    (8) argumentos -> . LOCALVAR EQUAL LCURLYBRACKET RCURLYBRACKET
    (9) argumentos -> . LOCALVAR TWOPOINTS datos
    (10) variosargumentos -> . LOCALVAR
    (11) variosargumentos -> . LOCALVAR EQUAL datos
    (12) variosargumentos -> . LOCALVAR masargumentos
    (13) variosargumentos -> . LOCALVAR EQUAL datos masargumentos

    MULTIPLY        shift and go to state 186
    TWOSTARS        shift and go to state 187
    LOCALVAR        shift and go to state 183

    argumentos                     shift and go to state 184
    variosargumentos               shift and go to state 185

state 105

    (44) datosAsignacion -> LOCALVAR .

    LOCALVAR        reduce using rule 44 (datosAsignacion -> LOCALVAR .)
    FOR             reduce using rule 44 (datosAsignacion -> LOCALVAR .)
    IF              reduce using rule 44 (datosAsignacion -> LOCALVAR .)
    UNLESS          reduce using rule 44 (datosAsignacion -> LOCALVAR .)
    PUTS            reduce using rule 44 (datosAsignacion -> LOCALVAR .)
    PRINT           reduce using rule 44 (datosAsignacion -> LOCALVAR .)
    STRING          reduce using rule 44 (datosAsignacion -> LOCALVAR .)
    INTEGERW        reduce using rule 44 (datosAsignacion -> LOCALVAR .)
    INTEGER         reduce using rule 44 (datosAsignacion -> LOCALVAR .)
    FLOAT           reduce using rule 44 (datosAsignacion -> LOCALVAR .)
    VAR             reduce using rule 44 (datosAsignacion -> LOCALVAR .)
    CONSTANT        reduce using rule 44 (datosAsignacion -> LOCALVAR .)
    LCURLYBRACKET   reduce using rule 44 (datosAsignacion -> LOCALVAR .)
    LBRACKET        reduce using rule 44 (datosAsignacion -> LOCALVAR .)
    SET             reduce using rule 44 (datosAsignacion -> LOCALVAR .)
    $end            reduce using rule 44 (datosAsignacion -> LOCALVAR .)
    ELSE            reduce using rule 44 (datosAsignacion -> LOCALVAR .)
    END             reduce using rule 44 (datosAsignacion -> LOCALVAR .)
    RETURN          reduce using rule 44 (datosAsignacion -> LOCALVAR .)


state 106

    (37) asignacion -> LOCALVAR PLUSASSIGN datosAsignacion .

    LOCALVAR        reduce using rule 37 (asignacion -> LOCALVAR PLUSASSIGN datosAsignacion .)
    FOR             reduce using rule 37 (asignacion -> LOCALVAR PLUSASSIGN datosAsignacion .)
    IF              reduce using rule 37 (asignacion -> LOCALVAR PLUSASSIGN datosAsignacion .)
    UNLESS          reduce using rule 37 (asignacion -> LOCALVAR PLUSASSIGN datosAsignacion .)
    PUTS            reduce using rule 37 (asignacion -> LOCALVAR PLUSASSIGN datosAsignacion .)
    PRINT           reduce using rule 37 (asignacion -> LOCALVAR PLUSASSIGN datosAsignacion .)
    STRING          reduce using rule 37 (asignacion -> LOCALVAR PLUSASSIGN datosAsignacion .)
    INTEGERW        reduce using rule 37 (asignacion -> LOCALVAR PLUSASSIGN datosAsignacion .)
    INTEGER         reduce using rule 37 (asignacion -> LOCALVAR PLUSASSIGN datosAsignacion .)
    FLOAT           reduce using rule 37 (asignacion -> LOCALVAR PLUSASSIGN datosAsignacion .)
    VAR             reduce using rule 37 (asignacion -> LOCALVAR PLUSASSIGN datosAsignacion .)
    CONSTANT        reduce using rule 37 (asignacion -> LOCALVAR PLUSASSIGN datosAsignacion .)
    LCURLYBRACKET   reduce using rule 37 (asignacion -> LOCALVAR PLUSASSIGN datosAsignacion .)
    LBRACKET        reduce using rule 37 (asignacion -> LOCALVAR PLUSASSIGN datosAsignacion .)
    SET             reduce using rule 37 (asignacion -> LOCALVAR PLUSASSIGN datosAsignacion .)
    $end            reduce using rule 37 (asignacion -> LOCALVAR PLUSASSIGN datosAsignacion .)
    ELSE            reduce using rule 37 (asignacion -> LOCALVAR PLUSASSIGN datosAsignacion .)
    END             reduce using rule 37 (asignacion -> LOCALVAR PLUSASSIGN datosAsignacion .)
    RETURN          reduce using rule 37 (asignacion -> LOCALVAR PLUSASSIGN datosAsignacion .)


state 107

    (43) datosAsignacion -> number .

    LOCALVAR        reduce using rule 43 (datosAsignacion -> number .)
    FOR             reduce using rule 43 (datosAsignacion -> number .)
    IF              reduce using rule 43 (datosAsignacion -> number .)
    UNLESS          reduce using rule 43 (datosAsignacion -> number .)
    PUTS            reduce using rule 43 (datosAsignacion -> number .)
    PRINT           reduce using rule 43 (datosAsignacion -> number .)
    STRING          reduce using rule 43 (datosAsignacion -> number .)
    INTEGERW        reduce using rule 43 (datosAsignacion -> number .)
    INTEGER         reduce using rule 43 (datosAsignacion -> number .)
    FLOAT           reduce using rule 43 (datosAsignacion -> number .)
    VAR             reduce using rule 43 (datosAsignacion -> number .)
    CONSTANT        reduce using rule 43 (datosAsignacion -> number .)
    LCURLYBRACKET   reduce using rule 43 (datosAsignacion -> number .)
    LBRACKET        reduce using rule 43 (datosAsignacion -> number .)
    SET             reduce using rule 43 (datosAsignacion -> number .)
    $end            reduce using rule 43 (datosAsignacion -> number .)
    ELSE            reduce using rule 43 (datosAsignacion -> number .)
    END             reduce using rule 43 (datosAsignacion -> number .)
    RETURN          reduce using rule 43 (datosAsignacion -> number .)


state 108

    (76) number -> INTEGER .

    LOCALVAR        reduce using rule 76 (number -> INTEGER .)
    FOR             reduce using rule 76 (number -> INTEGER .)
    IF              reduce using rule 76 (number -> INTEGER .)
    UNLESS          reduce using rule 76 (number -> INTEGER .)
    PUTS            reduce using rule 76 (number -> INTEGER .)
    PRINT           reduce using rule 76 (number -> INTEGER .)
    STRING          reduce using rule 76 (number -> INTEGER .)
    INTEGERW        reduce using rule 76 (number -> INTEGER .)
    INTEGER         reduce using rule 76 (number -> INTEGER .)
    FLOAT           reduce using rule 76 (number -> INTEGER .)
    VAR             reduce using rule 76 (number -> INTEGER .)
    CONSTANT        reduce using rule 76 (number -> INTEGER .)
    LCURLYBRACKET   reduce using rule 76 (number -> INTEGER .)
    LBRACKET        reduce using rule 76 (number -> INTEGER .)
    SET             reduce using rule 76 (number -> INTEGER .)
    $end            reduce using rule 76 (number -> INTEGER .)
    ELSE            reduce using rule 76 (number -> INTEGER .)
    END             reduce using rule 76 (number -> INTEGER .)
    RETURN          reduce using rule 76 (number -> INTEGER .)
    PLUS            reduce using rule 76 (number -> INTEGER .)
    MINUS           reduce using rule 76 (number -> INTEGER .)
    MULTIPLY        reduce using rule 76 (number -> INTEGER .)
    DIVIDE          reduce using rule 76 (number -> INTEGER .)
    PERCENTAGE      reduce using rule 76 (number -> INTEGER .)
    RPARENTHESES    reduce using rule 76 (number -> INTEGER .)


state 109

    (77) number -> FLOAT .

    LOCALVAR        reduce using rule 77 (number -> FLOAT .)
    FOR             reduce using rule 77 (number -> FLOAT .)
    IF              reduce using rule 77 (number -> FLOAT .)
    UNLESS          reduce using rule 77 (number -> FLOAT .)
    PUTS            reduce using rule 77 (number -> FLOAT .)
    PRINT           reduce using rule 77 (number -> FLOAT .)
    STRING          reduce using rule 77 (number -> FLOAT .)
    INTEGERW        reduce using rule 77 (number -> FLOAT .)
    INTEGER         reduce using rule 77 (number -> FLOAT .)
    FLOAT           reduce using rule 77 (number -> FLOAT .)
    VAR             reduce using rule 77 (number -> FLOAT .)
    CONSTANT        reduce using rule 77 (number -> FLOAT .)
    LCURLYBRACKET   reduce using rule 77 (number -> FLOAT .)
    LBRACKET        reduce using rule 77 (number -> FLOAT .)
    SET             reduce using rule 77 (number -> FLOAT .)
    $end            reduce using rule 77 (number -> FLOAT .)
    ELSE            reduce using rule 77 (number -> FLOAT .)
    END             reduce using rule 77 (number -> FLOAT .)
    RETURN          reduce using rule 77 (number -> FLOAT .)
    PLUS            reduce using rule 77 (number -> FLOAT .)
    MINUS           reduce using rule 77 (number -> FLOAT .)
    MULTIPLY        reduce using rule 77 (number -> FLOAT .)
    DIVIDE          reduce using rule 77 (number -> FLOAT .)
    PERCENTAGE      reduce using rule 77 (number -> FLOAT .)
    RPARENTHESES    reduce using rule 77 (number -> FLOAT .)


state 110

    (38) asignacion -> LOCALVAR MINASSIGN datosAsignacion .

    LOCALVAR        reduce using rule 38 (asignacion -> LOCALVAR MINASSIGN datosAsignacion .)
    FOR             reduce using rule 38 (asignacion -> LOCALVAR MINASSIGN datosAsignacion .)
    IF              reduce using rule 38 (asignacion -> LOCALVAR MINASSIGN datosAsignacion .)
    UNLESS          reduce using rule 38 (asignacion -> LOCALVAR MINASSIGN datosAsignacion .)
    PUTS            reduce using rule 38 (asignacion -> LOCALVAR MINASSIGN datosAsignacion .)
    PRINT           reduce using rule 38 (asignacion -> LOCALVAR MINASSIGN datosAsignacion .)
    STRING          reduce using rule 38 (asignacion -> LOCALVAR MINASSIGN datosAsignacion .)
    INTEGERW        reduce using rule 38 (asignacion -> LOCALVAR MINASSIGN datosAsignacion .)
    INTEGER         reduce using rule 38 (asignacion -> LOCALVAR MINASSIGN datosAsignacion .)
    FLOAT           reduce using rule 38 (asignacion -> LOCALVAR MINASSIGN datosAsignacion .)
    VAR             reduce using rule 38 (asignacion -> LOCALVAR MINASSIGN datosAsignacion .)
    CONSTANT        reduce using rule 38 (asignacion -> LOCALVAR MINASSIGN datosAsignacion .)
    LCURLYBRACKET   reduce using rule 38 (asignacion -> LOCALVAR MINASSIGN datosAsignacion .)
    LBRACKET        reduce using rule 38 (asignacion -> LOCALVAR MINASSIGN datosAsignacion .)
    SET             reduce using rule 38 (asignacion -> LOCALVAR MINASSIGN datosAsignacion .)
    $end            reduce using rule 38 (asignacion -> LOCALVAR MINASSIGN datosAsignacion .)
    ELSE            reduce using rule 38 (asignacion -> LOCALVAR MINASSIGN datosAsignacion .)
    END             reduce using rule 38 (asignacion -> LOCALVAR MINASSIGN datosAsignacion .)
    RETURN          reduce using rule 38 (asignacion -> LOCALVAR MINASSIGN datosAsignacion .)


state 111

    (39) asignacion -> LOCALVAR DIVASSIGN datosAsignacion .

    LOCALVAR        reduce using rule 39 (asignacion -> LOCALVAR DIVASSIGN datosAsignacion .)
    FOR             reduce using rule 39 (asignacion -> LOCALVAR DIVASSIGN datosAsignacion .)
    IF              reduce using rule 39 (asignacion -> LOCALVAR DIVASSIGN datosAsignacion .)
    UNLESS          reduce using rule 39 (asignacion -> LOCALVAR DIVASSIGN datosAsignacion .)
    PUTS            reduce using rule 39 (asignacion -> LOCALVAR DIVASSIGN datosAsignacion .)
    PRINT           reduce using rule 39 (asignacion -> LOCALVAR DIVASSIGN datosAsignacion .)
    STRING          reduce using rule 39 (asignacion -> LOCALVAR DIVASSIGN datosAsignacion .)
    INTEGERW        reduce using rule 39 (asignacion -> LOCALVAR DIVASSIGN datosAsignacion .)
    INTEGER         reduce using rule 39 (asignacion -> LOCALVAR DIVASSIGN datosAsignacion .)
    FLOAT           reduce using rule 39 (asignacion -> LOCALVAR DIVASSIGN datosAsignacion .)
    VAR             reduce using rule 39 (asignacion -> LOCALVAR DIVASSIGN datosAsignacion .)
    CONSTANT        reduce using rule 39 (asignacion -> LOCALVAR DIVASSIGN datosAsignacion .)
    LCURLYBRACKET   reduce using rule 39 (asignacion -> LOCALVAR DIVASSIGN datosAsignacion .)
    LBRACKET        reduce using rule 39 (asignacion -> LOCALVAR DIVASSIGN datosAsignacion .)
    SET             reduce using rule 39 (asignacion -> LOCALVAR DIVASSIGN datosAsignacion .)
    $end            reduce using rule 39 (asignacion -> LOCALVAR DIVASSIGN datosAsignacion .)
    ELSE            reduce using rule 39 (asignacion -> LOCALVAR DIVASSIGN datosAsignacion .)
    END             reduce using rule 39 (asignacion -> LOCALVAR DIVASSIGN datosAsignacion .)
    RETURN          reduce using rule 39 (asignacion -> LOCALVAR DIVASSIGN datosAsignacion .)


state 112

    (40) asignacion -> LOCALVAR TIMESASSIGN datosAsignacion .

    LOCALVAR        reduce using rule 40 (asignacion -> LOCALVAR TIMESASSIGN datosAsignacion .)
    FOR             reduce using rule 40 (asignacion -> LOCALVAR TIMESASSIGN datosAsignacion .)
    IF              reduce using rule 40 (asignacion -> LOCALVAR TIMESASSIGN datosAsignacion .)
    UNLESS          reduce using rule 40 (asignacion -> LOCALVAR TIMESASSIGN datosAsignacion .)
    PUTS            reduce using rule 40 (asignacion -> LOCALVAR TIMESASSIGN datosAsignacion .)
    PRINT           reduce using rule 40 (asignacion -> LOCALVAR TIMESASSIGN datosAsignacion .)
    STRING          reduce using rule 40 (asignacion -> LOCALVAR TIMESASSIGN datosAsignacion .)
    INTEGERW        reduce using rule 40 (asignacion -> LOCALVAR TIMESASSIGN datosAsignacion .)
    INTEGER         reduce using rule 40 (asignacion -> LOCALVAR TIMESASSIGN datosAsignacion .)
    FLOAT           reduce using rule 40 (asignacion -> LOCALVAR TIMESASSIGN datosAsignacion .)
    VAR             reduce using rule 40 (asignacion -> LOCALVAR TIMESASSIGN datosAsignacion .)
    CONSTANT        reduce using rule 40 (asignacion -> LOCALVAR TIMESASSIGN datosAsignacion .)
    LCURLYBRACKET   reduce using rule 40 (asignacion -> LOCALVAR TIMESASSIGN datosAsignacion .)
    LBRACKET        reduce using rule 40 (asignacion -> LOCALVAR TIMESASSIGN datosAsignacion .)
    SET             reduce using rule 40 (asignacion -> LOCALVAR TIMESASSIGN datosAsignacion .)
    $end            reduce using rule 40 (asignacion -> LOCALVAR TIMESASSIGN datosAsignacion .)
    ELSE            reduce using rule 40 (asignacion -> LOCALVAR TIMESASSIGN datosAsignacion .)
    END             reduce using rule 40 (asignacion -> LOCALVAR TIMESASSIGN datosAsignacion .)
    RETURN          reduce using rule 40 (asignacion -> LOCALVAR TIMESASSIGN datosAsignacion .)


state 113

    (41) asignacion -> LOCALVAR MODASSIGN datosAsignacion .

    LOCALVAR        reduce using rule 41 (asignacion -> LOCALVAR MODASSIGN datosAsignacion .)
    FOR             reduce using rule 41 (asignacion -> LOCALVAR MODASSIGN datosAsignacion .)
    IF              reduce using rule 41 (asignacion -> LOCALVAR MODASSIGN datosAsignacion .)
    UNLESS          reduce using rule 41 (asignacion -> LOCALVAR MODASSIGN datosAsignacion .)
    PUTS            reduce using rule 41 (asignacion -> LOCALVAR MODASSIGN datosAsignacion .)
    PRINT           reduce using rule 41 (asignacion -> LOCALVAR MODASSIGN datosAsignacion .)
    STRING          reduce using rule 41 (asignacion -> LOCALVAR MODASSIGN datosAsignacion .)
    INTEGERW        reduce using rule 41 (asignacion -> LOCALVAR MODASSIGN datosAsignacion .)
    INTEGER         reduce using rule 41 (asignacion -> LOCALVAR MODASSIGN datosAsignacion .)
    FLOAT           reduce using rule 41 (asignacion -> LOCALVAR MODASSIGN datosAsignacion .)
    VAR             reduce using rule 41 (asignacion -> LOCALVAR MODASSIGN datosAsignacion .)
    CONSTANT        reduce using rule 41 (asignacion -> LOCALVAR MODASSIGN datosAsignacion .)
    LCURLYBRACKET   reduce using rule 41 (asignacion -> LOCALVAR MODASSIGN datosAsignacion .)
    LBRACKET        reduce using rule 41 (asignacion -> LOCALVAR MODASSIGN datosAsignacion .)
    SET             reduce using rule 41 (asignacion -> LOCALVAR MODASSIGN datosAsignacion .)
    $end            reduce using rule 41 (asignacion -> LOCALVAR MODASSIGN datosAsignacion .)
    ELSE            reduce using rule 41 (asignacion -> LOCALVAR MODASSIGN datosAsignacion .)
    END             reduce using rule 41 (asignacion -> LOCALVAR MODASSIGN datosAsignacion .)
    RETURN          reduce using rule 41 (asignacion -> LOCALVAR MODASSIGN datosAsignacion .)


state 114

    (42) asignacion -> LOCALVAR EXPASSIGN datosAsignacion .

    LOCALVAR        reduce using rule 42 (asignacion -> LOCALVAR EXPASSIGN datosAsignacion .)
    FOR             reduce using rule 42 (asignacion -> LOCALVAR EXPASSIGN datosAsignacion .)
    IF              reduce using rule 42 (asignacion -> LOCALVAR EXPASSIGN datosAsignacion .)
    UNLESS          reduce using rule 42 (asignacion -> LOCALVAR EXPASSIGN datosAsignacion .)
    PUTS            reduce using rule 42 (asignacion -> LOCALVAR EXPASSIGN datosAsignacion .)
    PRINT           reduce using rule 42 (asignacion -> LOCALVAR EXPASSIGN datosAsignacion .)
    STRING          reduce using rule 42 (asignacion -> LOCALVAR EXPASSIGN datosAsignacion .)
    INTEGERW        reduce using rule 42 (asignacion -> LOCALVAR EXPASSIGN datosAsignacion .)
    INTEGER         reduce using rule 42 (asignacion -> LOCALVAR EXPASSIGN datosAsignacion .)
    FLOAT           reduce using rule 42 (asignacion -> LOCALVAR EXPASSIGN datosAsignacion .)
    VAR             reduce using rule 42 (asignacion -> LOCALVAR EXPASSIGN datosAsignacion .)
    CONSTANT        reduce using rule 42 (asignacion -> LOCALVAR EXPASSIGN datosAsignacion .)
    LCURLYBRACKET   reduce using rule 42 (asignacion -> LOCALVAR EXPASSIGN datosAsignacion .)
    LBRACKET        reduce using rule 42 (asignacion -> LOCALVAR EXPASSIGN datosAsignacion .)
    SET             reduce using rule 42 (asignacion -> LOCALVAR EXPASSIGN datosAsignacion .)
    $end            reduce using rule 42 (asignacion -> LOCALVAR EXPASSIGN datosAsignacion .)
    ELSE            reduce using rule 42 (asignacion -> LOCALVAR EXPASSIGN datosAsignacion .)
    END             reduce using rule 42 (asignacion -> LOCALVAR EXPASSIGN datosAsignacion .)
    RETURN          reduce using rule 42 (asignacion -> LOCALVAR EXPASSIGN datosAsignacion .)


state 115

    (32) declaracion -> tiposvariables EQUAL datos .

    LOCALVAR        reduce using rule 32 (declaracion -> tiposvariables EQUAL datos .)
    FOR             reduce using rule 32 (declaracion -> tiposvariables EQUAL datos .)
    IF              reduce using rule 32 (declaracion -> tiposvariables EQUAL datos .)
    UNLESS          reduce using rule 32 (declaracion -> tiposvariables EQUAL datos .)
    PUTS            reduce using rule 32 (declaracion -> tiposvariables EQUAL datos .)
    PRINT           reduce using rule 32 (declaracion -> tiposvariables EQUAL datos .)
    STRING          reduce using rule 32 (declaracion -> tiposvariables EQUAL datos .)
    INTEGERW        reduce using rule 32 (declaracion -> tiposvariables EQUAL datos .)
    INTEGER         reduce using rule 32 (declaracion -> tiposvariables EQUAL datos .)
    FLOAT           reduce using rule 32 (declaracion -> tiposvariables EQUAL datos .)
    VAR             reduce using rule 32 (declaracion -> tiposvariables EQUAL datos .)
    CONSTANT        reduce using rule 32 (declaracion -> tiposvariables EQUAL datos .)
    LCURLYBRACKET   reduce using rule 32 (declaracion -> tiposvariables EQUAL datos .)
    LBRACKET        reduce using rule 32 (declaracion -> tiposvariables EQUAL datos .)
    SET             reduce using rule 32 (declaracion -> tiposvariables EQUAL datos .)
    $end            reduce using rule 32 (declaracion -> tiposvariables EQUAL datos .)
    ELSE            reduce using rule 32 (declaracion -> tiposvariables EQUAL datos .)
    END             reduce using rule 32 (declaracion -> tiposvariables EQUAL datos .)
    RETURN          reduce using rule 32 (declaracion -> tiposvariables EQUAL datos .)


state 116

    (33) declaracion -> tiposvariables EQUAL estructurasDatos .

    LOCALVAR        reduce using rule 33 (declaracion -> tiposvariables EQUAL estructurasDatos .)
    FOR             reduce using rule 33 (declaracion -> tiposvariables EQUAL estructurasDatos .)
    IF              reduce using rule 33 (declaracion -> tiposvariables EQUAL estructurasDatos .)
    UNLESS          reduce using rule 33 (declaracion -> tiposvariables EQUAL estructurasDatos .)
    PUTS            reduce using rule 33 (declaracion -> tiposvariables EQUAL estructurasDatos .)
    PRINT           reduce using rule 33 (declaracion -> tiposvariables EQUAL estructurasDatos .)
    STRING          reduce using rule 33 (declaracion -> tiposvariables EQUAL estructurasDatos .)
    INTEGERW        reduce using rule 33 (declaracion -> tiposvariables EQUAL estructurasDatos .)
    INTEGER         reduce using rule 33 (declaracion -> tiposvariables EQUAL estructurasDatos .)
    FLOAT           reduce using rule 33 (declaracion -> tiposvariables EQUAL estructurasDatos .)
    VAR             reduce using rule 33 (declaracion -> tiposvariables EQUAL estructurasDatos .)
    CONSTANT        reduce using rule 33 (declaracion -> tiposvariables EQUAL estructurasDatos .)
    LCURLYBRACKET   reduce using rule 33 (declaracion -> tiposvariables EQUAL estructurasDatos .)
    LBRACKET        reduce using rule 33 (declaracion -> tiposvariables EQUAL estructurasDatos .)
    SET             reduce using rule 33 (declaracion -> tiposvariables EQUAL estructurasDatos .)
    $end            reduce using rule 33 (declaracion -> tiposvariables EQUAL estructurasDatos .)
    ELSE            reduce using rule 33 (declaracion -> tiposvariables EQUAL estructurasDatos .)
    END             reduce using rule 33 (declaracion -> tiposvariables EQUAL estructurasDatos .)
    RETURN          reduce using rule 33 (declaracion -> tiposvariables EQUAL estructurasDatos .)


state 117

    (34) declaracion -> tiposvariables EQUAL expresion .

    LOCALVAR        reduce using rule 34 (declaracion -> tiposvariables EQUAL expresion .)
    FOR             reduce using rule 34 (declaracion -> tiposvariables EQUAL expresion .)
    IF              reduce using rule 34 (declaracion -> tiposvariables EQUAL expresion .)
    UNLESS          reduce using rule 34 (declaracion -> tiposvariables EQUAL expresion .)
    PUTS            reduce using rule 34 (declaracion -> tiposvariables EQUAL expresion .)
    PRINT           reduce using rule 34 (declaracion -> tiposvariables EQUAL expresion .)
    STRING          reduce using rule 34 (declaracion -> tiposvariables EQUAL expresion .)
    INTEGERW        reduce using rule 34 (declaracion -> tiposvariables EQUAL expresion .)
    INTEGER         reduce using rule 34 (declaracion -> tiposvariables EQUAL expresion .)
    FLOAT           reduce using rule 34 (declaracion -> tiposvariables EQUAL expresion .)
    VAR             reduce using rule 34 (declaracion -> tiposvariables EQUAL expresion .)
    CONSTANT        reduce using rule 34 (declaracion -> tiposvariables EQUAL expresion .)
    LCURLYBRACKET   reduce using rule 34 (declaracion -> tiposvariables EQUAL expresion .)
    LBRACKET        reduce using rule 34 (declaracion -> tiposvariables EQUAL expresion .)
    SET             reduce using rule 34 (declaracion -> tiposvariables EQUAL expresion .)
    $end            reduce using rule 34 (declaracion -> tiposvariables EQUAL expresion .)
    ELSE            reduce using rule 34 (declaracion -> tiposvariables EQUAL expresion .)
    END             reduce using rule 34 (declaracion -> tiposvariables EQUAL expresion .)
    RETURN          reduce using rule 34 (declaracion -> tiposvariables EQUAL expresion .)


state 118

    (35) declaracion -> tiposvariables EQUAL declaracion .

    LOCALVAR        reduce using rule 35 (declaracion -> tiposvariables EQUAL declaracion .)
    FOR             reduce using rule 35 (declaracion -> tiposvariables EQUAL declaracion .)
    IF              reduce using rule 35 (declaracion -> tiposvariables EQUAL declaracion .)
    UNLESS          reduce using rule 35 (declaracion -> tiposvariables EQUAL declaracion .)
    PUTS            reduce using rule 35 (declaracion -> tiposvariables EQUAL declaracion .)
    PRINT           reduce using rule 35 (declaracion -> tiposvariables EQUAL declaracion .)
    STRING          reduce using rule 35 (declaracion -> tiposvariables EQUAL declaracion .)
    INTEGERW        reduce using rule 35 (declaracion -> tiposvariables EQUAL declaracion .)
    INTEGER         reduce using rule 35 (declaracion -> tiposvariables EQUAL declaracion .)
    FLOAT           reduce using rule 35 (declaracion -> tiposvariables EQUAL declaracion .)
    VAR             reduce using rule 35 (declaracion -> tiposvariables EQUAL declaracion .)
    CONSTANT        reduce using rule 35 (declaracion -> tiposvariables EQUAL declaracion .)
    LCURLYBRACKET   reduce using rule 35 (declaracion -> tiposvariables EQUAL declaracion .)
    LBRACKET        reduce using rule 35 (declaracion -> tiposvariables EQUAL declaracion .)
    SET             reduce using rule 35 (declaracion -> tiposvariables EQUAL declaracion .)
    $end            reduce using rule 35 (declaracion -> tiposvariables EQUAL declaracion .)
    ELSE            reduce using rule 35 (declaracion -> tiposvariables EQUAL declaracion .)
    END             reduce using rule 35 (declaracion -> tiposvariables EQUAL declaracion .)
    RETURN          reduce using rule 35 (declaracion -> tiposvariables EQUAL declaracion .)


state 119

    (36) declaracion -> tiposvariables EQUAL casting .

    LOCALVAR        reduce using rule 36 (declaracion -> tiposvariables EQUAL casting .)
    FOR             reduce using rule 36 (declaracion -> tiposvariables EQUAL casting .)
    IF              reduce using rule 36 (declaracion -> tiposvariables EQUAL casting .)
    UNLESS          reduce using rule 36 (declaracion -> tiposvariables EQUAL casting .)
    PUTS            reduce using rule 36 (declaracion -> tiposvariables EQUAL casting .)
    PRINT           reduce using rule 36 (declaracion -> tiposvariables EQUAL casting .)
    STRING          reduce using rule 36 (declaracion -> tiposvariables EQUAL casting .)
    INTEGERW        reduce using rule 36 (declaracion -> tiposvariables EQUAL casting .)
    INTEGER         reduce using rule 36 (declaracion -> tiposvariables EQUAL casting .)
    FLOAT           reduce using rule 36 (declaracion -> tiposvariables EQUAL casting .)
    VAR             reduce using rule 36 (declaracion -> tiposvariables EQUAL casting .)
    CONSTANT        reduce using rule 36 (declaracion -> tiposvariables EQUAL casting .)
    LCURLYBRACKET   reduce using rule 36 (declaracion -> tiposvariables EQUAL casting .)
    LBRACKET        reduce using rule 36 (declaracion -> tiposvariables EQUAL casting .)
    SET             reduce using rule 36 (declaracion -> tiposvariables EQUAL casting .)
    $end            reduce using rule 36 (declaracion -> tiposvariables EQUAL casting .)
    ELSE            reduce using rule 36 (declaracion -> tiposvariables EQUAL casting .)
    END             reduce using rule 36 (declaracion -> tiposvariables EQUAL casting .)
    RETURN          reduce using rule 36 (declaracion -> tiposvariables EQUAL casting .)


state 120

    (50) datos -> STRING .
    (166) casting -> STRING . DOT TO_I
    (167) casting -> STRING . DOT TO_F

    LOCALVAR        reduce using rule 50 (datos -> STRING .)
    FOR             reduce using rule 50 (datos -> STRING .)
    IF              reduce using rule 50 (datos -> STRING .)
    UNLESS          reduce using rule 50 (datos -> STRING .)
    PUTS            reduce using rule 50 (datos -> STRING .)
    PRINT           reduce using rule 50 (datos -> STRING .)
    STRING          reduce using rule 50 (datos -> STRING .)
    INTEGERW        reduce using rule 50 (datos -> STRING .)
    INTEGER         reduce using rule 50 (datos -> STRING .)
    FLOAT           reduce using rule 50 (datos -> STRING .)
    VAR             reduce using rule 50 (datos -> STRING .)
    CONSTANT        reduce using rule 50 (datos -> STRING .)
    LCURLYBRACKET   reduce using rule 50 (datos -> STRING .)
    LBRACKET        reduce using rule 50 (datos -> STRING .)
    SET             reduce using rule 50 (datos -> STRING .)
    $end            reduce using rule 50 (datos -> STRING .)
    ELSE            reduce using rule 50 (datos -> STRING .)
    END             reduce using rule 50 (datos -> STRING .)
    RETURN          reduce using rule 50 (datos -> STRING .)
    DOT             shift and go to state 188


state 121

    (54) estructurasDatos -> hash .

    LOCALVAR        reduce using rule 54 (estructurasDatos -> hash .)
    FOR             reduce using rule 54 (estructurasDatos -> hash .)
    IF              reduce using rule 54 (estructurasDatos -> hash .)
    UNLESS          reduce using rule 54 (estructurasDatos -> hash .)
    PUTS            reduce using rule 54 (estructurasDatos -> hash .)
    PRINT           reduce using rule 54 (estructurasDatos -> hash .)
    STRING          reduce using rule 54 (estructurasDatos -> hash .)
    INTEGERW        reduce using rule 54 (estructurasDatos -> hash .)
    INTEGER         reduce using rule 54 (estructurasDatos -> hash .)
    FLOAT           reduce using rule 54 (estructurasDatos -> hash .)
    VAR             reduce using rule 54 (estructurasDatos -> hash .)
    CONSTANT        reduce using rule 54 (estructurasDatos -> hash .)
    LCURLYBRACKET   reduce using rule 54 (estructurasDatos -> hash .)
    LBRACKET        reduce using rule 54 (estructurasDatos -> hash .)
    SET             reduce using rule 54 (estructurasDatos -> hash .)
    $end            reduce using rule 54 (estructurasDatos -> hash .)
    ELSE            reduce using rule 54 (estructurasDatos -> hash .)
    END             reduce using rule 54 (estructurasDatos -> hash .)
    RETURN          reduce using rule 54 (estructurasDatos -> hash .)


state 122

    (55) estructurasDatos -> array .

    LOCALVAR        reduce using rule 55 (estructurasDatos -> array .)
    FOR             reduce using rule 55 (estructurasDatos -> array .)
    IF              reduce using rule 55 (estructurasDatos -> array .)
    UNLESS          reduce using rule 55 (estructurasDatos -> array .)
    PUTS            reduce using rule 55 (estructurasDatos -> array .)
    PRINT           reduce using rule 55 (estructurasDatos -> array .)
    STRING          reduce using rule 55 (estructurasDatos -> array .)
    INTEGERW        reduce using rule 55 (estructurasDatos -> array .)
    INTEGER         reduce using rule 55 (estructurasDatos -> array .)
    FLOAT           reduce using rule 55 (estructurasDatos -> array .)
    VAR             reduce using rule 55 (estructurasDatos -> array .)
    CONSTANT        reduce using rule 55 (estructurasDatos -> array .)
    LCURLYBRACKET   reduce using rule 55 (estructurasDatos -> array .)
    LBRACKET        reduce using rule 55 (estructurasDatos -> array .)
    SET             reduce using rule 55 (estructurasDatos -> array .)
    $end            reduce using rule 55 (estructurasDatos -> array .)
    ELSE            reduce using rule 55 (estructurasDatos -> array .)
    END             reduce using rule 55 (estructurasDatos -> array .)
    RETURN          reduce using rule 55 (estructurasDatos -> array .)


state 123

    (56) estructurasDatos -> set .

    LOCALVAR        reduce using rule 56 (estructurasDatos -> set .)
    FOR             reduce using rule 56 (estructurasDatos -> set .)
    IF              reduce using rule 56 (estructurasDatos -> set .)
    UNLESS          reduce using rule 56 (estructurasDatos -> set .)
    PUTS            reduce using rule 56 (estructurasDatos -> set .)
    PRINT           reduce using rule 56 (estructurasDatos -> set .)
    STRING          reduce using rule 56 (estructurasDatos -> set .)
    INTEGERW        reduce using rule 56 (estructurasDatos -> set .)
    INTEGER         reduce using rule 56 (estructurasDatos -> set .)
    FLOAT           reduce using rule 56 (estructurasDatos -> set .)
    VAR             reduce using rule 56 (estructurasDatos -> set .)
    CONSTANT        reduce using rule 56 (estructurasDatos -> set .)
    LCURLYBRACKET   reduce using rule 56 (estructurasDatos -> set .)
    LBRACKET        reduce using rule 56 (estructurasDatos -> set .)
    SET             reduce using rule 56 (estructurasDatos -> set .)
    $end            reduce using rule 56 (estructurasDatos -> set .)
    ELSE            reduce using rule 56 (estructurasDatos -> set .)
    END             reduce using rule 56 (estructurasDatos -> set .)
    RETURN          reduce using rule 56 (estructurasDatos -> set .)


state 124

    (78) expresion -> operacion .
    (82) operacion -> operacion . masoperaciones
    (83) masoperaciones -> . operador expresion masoperaciones
    (84) masoperaciones -> . operador number
    (85) masoperaciones -> . operador expresion
    (86) operador -> . PLUS
    (87) operador -> . MINUS
    (88) operador -> . MULTIPLY
    (89) operador -> . DIVIDE
    (90) operador -> . PERCENTAGE

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for PERCENTAGE resolved as shift
    LOCALVAR        reduce using rule 78 (expresion -> operacion .)
    FOR             reduce using rule 78 (expresion -> operacion .)
    IF              reduce using rule 78 (expresion -> operacion .)
    UNLESS          reduce using rule 78 (expresion -> operacion .)
    PUTS            reduce using rule 78 (expresion -> operacion .)
    PRINT           reduce using rule 78 (expresion -> operacion .)
    STRING          reduce using rule 78 (expresion -> operacion .)
    INTEGERW        reduce using rule 78 (expresion -> operacion .)
    INTEGER         reduce using rule 78 (expresion -> operacion .)
    FLOAT           reduce using rule 78 (expresion -> operacion .)
    VAR             reduce using rule 78 (expresion -> operacion .)
    CONSTANT        reduce using rule 78 (expresion -> operacion .)
    LCURLYBRACKET   reduce using rule 78 (expresion -> operacion .)
    LBRACKET        reduce using rule 78 (expresion -> operacion .)
    SET             reduce using rule 78 (expresion -> operacion .)
    $end            reduce using rule 78 (expresion -> operacion .)
    ELSE            reduce using rule 78 (expresion -> operacion .)
    END             reduce using rule 78 (expresion -> operacion .)
    RETURN          reduce using rule 78 (expresion -> operacion .)
    RPARENTHESES    reduce using rule 78 (expresion -> operacion .)
    PLUS            shift and go to state 191
    MINUS           shift and go to state 192
    MULTIPLY        shift and go to state 193
    DIVIDE          shift and go to state 194
    PERCENTAGE      shift and go to state 195

  ! PLUS            [ reduce using rule 78 (expresion -> operacion .) ]
  ! MINUS           [ reduce using rule 78 (expresion -> operacion .) ]
  ! MULTIPLY        [ reduce using rule 78 (expresion -> operacion .) ]
  ! DIVIDE          [ reduce using rule 78 (expresion -> operacion .) ]
  ! PERCENTAGE      [ reduce using rule 78 (expresion -> operacion .) ]

    masoperaciones                 shift and go to state 189
    operador                       shift and go to state 190

state 125

    (79) expresion -> LPARENTHESES . operacion RPARENTHESES
    (80) expresion -> LPARENTHESES . operacion RPARENTHESES masoperaciones
    (81) operacion -> . number operador number
    (82) operacion -> . operacion masoperaciones
    (76) number -> . INTEGER
    (77) number -> . FLOAT

    INTEGER         shift and go to state 108
    FLOAT           shift and go to state 109

    operacion                      shift and go to state 196
    number                         shift and go to state 197

state 126

    (168) casting -> number . DOT TO_S
    (81) operacion -> number . operador number
    (86) operador -> . PLUS
    (87) operador -> . MINUS
    (88) operador -> . MULTIPLY
    (89) operador -> . DIVIDE
    (90) operador -> . PERCENTAGE

    DOT             shift and go to state 198
    PLUS            shift and go to state 191
    MINUS           shift and go to state 192
    MULTIPLY        shift and go to state 193
    DIVIDE          shift and go to state 194
    PERCENTAGE      shift and go to state 195

    operador                       shift and go to state 199

state 127

    (31) loop -> FOR LOCALVAR IN . rango cuerpo END
    (70) rango -> . INTEGER RANGEINCLUSIVE INTEGER
    (71) rango -> . INTEGER RANGEXCLUSIVE INTEGER

    INTEGER         shift and go to state 201

    rango                          shift and go to state 200

state 128

    (62) operacionHash -> hash LBRACKET datos . RBRACKET
    (63) operacionHash -> hash LBRACKET datos . RBRACKET EQUAL datos

    RBRACKET        shift and go to state 202


state 129

    (64) operacionHash -> hash DOT INCLUDE . QUESTIONMARK LPARENTHESES datos RPARENTHESES

    QUESTIONMARK    shift and go to state 203


state 130

    (65) operacionHash -> hash DOT DELETE . LPARENTHESES datos RPARENTHESES

    LPARENTHESES    shift and go to state 204


state 131

    (66) operacionHash -> hash DOT KEYS .

    LOCALVAR        reduce using rule 66 (operacionHash -> hash DOT KEYS .)
    FOR             reduce using rule 66 (operacionHash -> hash DOT KEYS .)
    IF              reduce using rule 66 (operacionHash -> hash DOT KEYS .)
    UNLESS          reduce using rule 66 (operacionHash -> hash DOT KEYS .)
    PUTS            reduce using rule 66 (operacionHash -> hash DOT KEYS .)
    PRINT           reduce using rule 66 (operacionHash -> hash DOT KEYS .)
    STRING          reduce using rule 66 (operacionHash -> hash DOT KEYS .)
    INTEGERW        reduce using rule 66 (operacionHash -> hash DOT KEYS .)
    INTEGER         reduce using rule 66 (operacionHash -> hash DOT KEYS .)
    FLOAT           reduce using rule 66 (operacionHash -> hash DOT KEYS .)
    VAR             reduce using rule 66 (operacionHash -> hash DOT KEYS .)
    CONSTANT        reduce using rule 66 (operacionHash -> hash DOT KEYS .)
    LCURLYBRACKET   reduce using rule 66 (operacionHash -> hash DOT KEYS .)
    LBRACKET        reduce using rule 66 (operacionHash -> hash DOT KEYS .)
    SET             reduce using rule 66 (operacionHash -> hash DOT KEYS .)
    $end            reduce using rule 66 (operacionHash -> hash DOT KEYS .)
    ELSE            reduce using rule 66 (operacionHash -> hash DOT KEYS .)
    END             reduce using rule 66 (operacionHash -> hash DOT KEYS .)
    RETURN          reduce using rule 66 (operacionHash -> hash DOT KEYS .)


state 132

    (67) operacionHash -> hash DOT EMPTY . QUESTIONMARK

    QUESTIONMARK    shift and go to state 205


state 133

    (68) operacionHash -> hash DOT SIZE .

    LOCALVAR        reduce using rule 68 (operacionHash -> hash DOT SIZE .)
    FOR             reduce using rule 68 (operacionHash -> hash DOT SIZE .)
    IF              reduce using rule 68 (operacionHash -> hash DOT SIZE .)
    UNLESS          reduce using rule 68 (operacionHash -> hash DOT SIZE .)
    PUTS            reduce using rule 68 (operacionHash -> hash DOT SIZE .)
    PRINT           reduce using rule 68 (operacionHash -> hash DOT SIZE .)
    STRING          reduce using rule 68 (operacionHash -> hash DOT SIZE .)
    INTEGERW        reduce using rule 68 (operacionHash -> hash DOT SIZE .)
    INTEGER         reduce using rule 68 (operacionHash -> hash DOT SIZE .)
    FLOAT           reduce using rule 68 (operacionHash -> hash DOT SIZE .)
    VAR             reduce using rule 68 (operacionHash -> hash DOT SIZE .)
    CONSTANT        reduce using rule 68 (operacionHash -> hash DOT SIZE .)
    LCURLYBRACKET   reduce using rule 68 (operacionHash -> hash DOT SIZE .)
    LBRACKET        reduce using rule 68 (operacionHash -> hash DOT SIZE .)
    SET             reduce using rule 68 (operacionHash -> hash DOT SIZE .)
    $end            reduce using rule 68 (operacionHash -> hash DOT SIZE .)
    ELSE            reduce using rule 68 (operacionHash -> hash DOT SIZE .)
    END             reduce using rule 68 (operacionHash -> hash DOT SIZE .)
    RETURN          reduce using rule 68 (operacionHash -> hash DOT SIZE .)


state 134

    (69) operacionHash -> hash DOT LENGTH .

    LOCALVAR        reduce using rule 69 (operacionHash -> hash DOT LENGTH .)
    FOR             reduce using rule 69 (operacionHash -> hash DOT LENGTH .)
    IF              reduce using rule 69 (operacionHash -> hash DOT LENGTH .)
    UNLESS          reduce using rule 69 (operacionHash -> hash DOT LENGTH .)
    PUTS            reduce using rule 69 (operacionHash -> hash DOT LENGTH .)
    PRINT           reduce using rule 69 (operacionHash -> hash DOT LENGTH .)
    STRING          reduce using rule 69 (operacionHash -> hash DOT LENGTH .)
    INTEGERW        reduce using rule 69 (operacionHash -> hash DOT LENGTH .)
    INTEGER         reduce using rule 69 (operacionHash -> hash DOT LENGTH .)
    FLOAT           reduce using rule 69 (operacionHash -> hash DOT LENGTH .)
    VAR             reduce using rule 69 (operacionHash -> hash DOT LENGTH .)
    CONSTANT        reduce using rule 69 (operacionHash -> hash DOT LENGTH .)
    LCURLYBRACKET   reduce using rule 69 (operacionHash -> hash DOT LENGTH .)
    LBRACKET        reduce using rule 69 (operacionHash -> hash DOT LENGTH .)
    SET             reduce using rule 69 (operacionHash -> hash DOT LENGTH .)
    $end            reduce using rule 69 (operacionHash -> hash DOT LENGTH .)
    ELSE            reduce using rule 69 (operacionHash -> hash DOT LENGTH .)
    END             reduce using rule 69 (operacionHash -> hash DOT LENGTH .)
    RETURN          reduce using rule 69 (operacionHash -> hash DOT LENGTH .)


state 135

    (99) operacionarray -> array LBRACKET INTEGER . RBRACKET

    RBRACKET        shift and go to state 206


state 136

    (100) operacionarray -> array DOT TAKE . LPARENTHESES INTEGER RPARENTHESES

    LPARENTHESES    shift and go to state 207


state 137

    (101) operacionarray -> array DOT DROP . LPARENTHESES INTEGER RPARENTHESES

    LPARENTHESES    shift and go to state 208


state 138

    (102) operacionarray -> array DOT push . maspush
    (105) maspush -> .
    (106) maspush -> . DOT push maspush

    LOCALVAR        reduce using rule 105 (maspush -> .)
    FOR             reduce using rule 105 (maspush -> .)
    IF              reduce using rule 105 (maspush -> .)
    UNLESS          reduce using rule 105 (maspush -> .)
    PUTS            reduce using rule 105 (maspush -> .)
    PRINT           reduce using rule 105 (maspush -> .)
    STRING          reduce using rule 105 (maspush -> .)
    INTEGERW        reduce using rule 105 (maspush -> .)
    INTEGER         reduce using rule 105 (maspush -> .)
    FLOAT           reduce using rule 105 (maspush -> .)
    VAR             reduce using rule 105 (maspush -> .)
    CONSTANT        reduce using rule 105 (maspush -> .)
    LCURLYBRACKET   reduce using rule 105 (maspush -> .)
    LBRACKET        reduce using rule 105 (maspush -> .)
    SET             reduce using rule 105 (maspush -> .)
    $end            reduce using rule 105 (maspush -> .)
    ELSE            reduce using rule 105 (maspush -> .)
    END             reduce using rule 105 (maspush -> .)
    RETURN          reduce using rule 105 (maspush -> .)
    DOT             shift and go to state 209

    maspush                        shift and go to state 210

state 139

    (107) operacionarray -> array DOT POP .
    (108) operacionarray -> array DOT POP . LPARENTHESES INTEGER RPARENTHESES

    LOCALVAR        reduce using rule 107 (operacionarray -> array DOT POP .)
    FOR             reduce using rule 107 (operacionarray -> array DOT POP .)
    IF              reduce using rule 107 (operacionarray -> array DOT POP .)
    UNLESS          reduce using rule 107 (operacionarray -> array DOT POP .)
    PUTS            reduce using rule 107 (operacionarray -> array DOT POP .)
    PRINT           reduce using rule 107 (operacionarray -> array DOT POP .)
    STRING          reduce using rule 107 (operacionarray -> array DOT POP .)
    INTEGERW        reduce using rule 107 (operacionarray -> array DOT POP .)
    INTEGER         reduce using rule 107 (operacionarray -> array DOT POP .)
    FLOAT           reduce using rule 107 (operacionarray -> array DOT POP .)
    VAR             reduce using rule 107 (operacionarray -> array DOT POP .)
    CONSTANT        reduce using rule 107 (operacionarray -> array DOT POP .)
    LCURLYBRACKET   reduce using rule 107 (operacionarray -> array DOT POP .)
    LBRACKET        reduce using rule 107 (operacionarray -> array DOT POP .)
    SET             reduce using rule 107 (operacionarray -> array DOT POP .)
    $end            reduce using rule 107 (operacionarray -> array DOT POP .)
    ELSE            reduce using rule 107 (operacionarray -> array DOT POP .)
    END             reduce using rule 107 (operacionarray -> array DOT POP .)
    RETURN          reduce using rule 107 (operacionarray -> array DOT POP .)
    LPARENTHESES    shift and go to state 211


state 140

    (109) operacionarray -> array DOT DELETE . LPARENTHESES INTEGER RPARENTHESES

    LPARENTHESES    shift and go to state 212


state 141

    (110) operacionarray -> array DOT LENGTH . LPARENTHESES RPARENTHESES

    LPARENTHESES    shift and go to state 213


state 142

    (111) operacionarray -> array DOT EMPTY . QUESTIONMARK

    QUESTIONMARK    shift and go to state 214


state 143

    (103) push -> PUSH . LPARENTHESES datosvarios RPARENTHESES

    LPARENTHESES    shift and go to state 215


state 144

    (153) operacionSet -> set DOT ADD . LPARENTHESES datos RPARENTHESES
    (154) operacionSet -> set DOT ADD . LPARENTHESES tiposvariables RPARENTHESES

    LPARENTHESES    shift and go to state 216


state 145

    (155) operacionSet -> set DOT CLEAR .

    LOCALVAR        reduce using rule 155 (operacionSet -> set DOT CLEAR .)
    FOR             reduce using rule 155 (operacionSet -> set DOT CLEAR .)
    IF              reduce using rule 155 (operacionSet -> set DOT CLEAR .)
    UNLESS          reduce using rule 155 (operacionSet -> set DOT CLEAR .)
    PUTS            reduce using rule 155 (operacionSet -> set DOT CLEAR .)
    PRINT           reduce using rule 155 (operacionSet -> set DOT CLEAR .)
    STRING          reduce using rule 155 (operacionSet -> set DOT CLEAR .)
    INTEGERW        reduce using rule 155 (operacionSet -> set DOT CLEAR .)
    INTEGER         reduce using rule 155 (operacionSet -> set DOT CLEAR .)
    FLOAT           reduce using rule 155 (operacionSet -> set DOT CLEAR .)
    VAR             reduce using rule 155 (operacionSet -> set DOT CLEAR .)
    CONSTANT        reduce using rule 155 (operacionSet -> set DOT CLEAR .)
    LCURLYBRACKET   reduce using rule 155 (operacionSet -> set DOT CLEAR .)
    LBRACKET        reduce using rule 155 (operacionSet -> set DOT CLEAR .)
    SET             reduce using rule 155 (operacionSet -> set DOT CLEAR .)
    $end            reduce using rule 155 (operacionSet -> set DOT CLEAR .)
    ELSE            reduce using rule 155 (operacionSet -> set DOT CLEAR .)
    END             reduce using rule 155 (operacionSet -> set DOT CLEAR .)
    RETURN          reduce using rule 155 (operacionSet -> set DOT CLEAR .)


state 146

    (156) operacionSet -> set DOT DELETE . LPARENTHESES datos RPARENTHESES
    (157) operacionSet -> set DOT DELETE . LPARENTHESES tiposvariables RPARENTHESES

    LPARENTHESES    shift and go to state 217


state 147

    (114) if -> IF datoscompletos operadores . datoscompletos cuerpo END
    (115) if -> IF datoscompletos operadores . datoscompletos cuerpo else
    (112) datoscompletos -> . datosvarios
    (113) datoscompletos -> . tiposvariables
    (93) datosvarios -> . datos
    (94) datosvarios -> . number
    (95) datosvarios -> . VAR
    (96) datosvarios -> . LOCALVAR
    (45) tiposvariables -> . VAR
    (46) tiposvariables -> . LOCALVAR
    (47) tiposvariables -> . CONSTANT
    (48) datos -> . INTEGER
    (49) datos -> . FLOAT
    (50) datos -> . STRING
    (51) datos -> . booleanos
    (76) number -> . INTEGER
    (77) number -> . FLOAT
    (52) booleanos -> . TRUE
    (53) booleanos -> . FALSE

    VAR             shift and go to state 69
    LOCALVAR        shift and go to state 70
    CONSTANT        shift and go to state 34
    INTEGER         shift and go to state 71
    FLOAT           shift and go to state 72
    STRING          shift and go to state 73
    TRUE            shift and go to state 75
    FALSE           shift and go to state 76

    datoscompletos                 shift and go to state 218
    datosvarios                    shift and go to state 65
    tiposvariables                 shift and go to state 66
    datos                          shift and go to state 67
    number                         shift and go to state 68
    booleanos                      shift and go to state 74

state 148

    (117) operadores -> DOUBLEEQUAL .

    VAR             reduce using rule 117 (operadores -> DOUBLEEQUAL .)
    LOCALVAR        reduce using rule 117 (operadores -> DOUBLEEQUAL .)
    CONSTANT        reduce using rule 117 (operadores -> DOUBLEEQUAL .)
    INTEGER         reduce using rule 117 (operadores -> DOUBLEEQUAL .)
    FLOAT           reduce using rule 117 (operadores -> DOUBLEEQUAL .)
    STRING          reduce using rule 117 (operadores -> DOUBLEEQUAL .)
    TRUE            reduce using rule 117 (operadores -> DOUBLEEQUAL .)
    FALSE           reduce using rule 117 (operadores -> DOUBLEEQUAL .)


state 149

    (118) operadores -> TRIPLEEQUAL .

    VAR             reduce using rule 118 (operadores -> TRIPLEEQUAL .)
    LOCALVAR        reduce using rule 118 (operadores -> TRIPLEEQUAL .)
    CONSTANT        reduce using rule 118 (operadores -> TRIPLEEQUAL .)
    INTEGER         reduce using rule 118 (operadores -> TRIPLEEQUAL .)
    FLOAT           reduce using rule 118 (operadores -> TRIPLEEQUAL .)
    STRING          reduce using rule 118 (operadores -> TRIPLEEQUAL .)
    TRUE            reduce using rule 118 (operadores -> TRIPLEEQUAL .)
    FALSE           reduce using rule 118 (operadores -> TRIPLEEQUAL .)


state 150

    (119) operadores -> GREATERTHAN .

    VAR             reduce using rule 119 (operadores -> GREATERTHAN .)
    LOCALVAR        reduce using rule 119 (operadores -> GREATERTHAN .)
    CONSTANT        reduce using rule 119 (operadores -> GREATERTHAN .)
    INTEGER         reduce using rule 119 (operadores -> GREATERTHAN .)
    FLOAT           reduce using rule 119 (operadores -> GREATERTHAN .)
    STRING          reduce using rule 119 (operadores -> GREATERTHAN .)
    TRUE            reduce using rule 119 (operadores -> GREATERTHAN .)
    FALSE           reduce using rule 119 (operadores -> GREATERTHAN .)


state 151

    (120) operadores -> NOTEQUAL .

    VAR             reduce using rule 120 (operadores -> NOTEQUAL .)
    LOCALVAR        reduce using rule 120 (operadores -> NOTEQUAL .)
    CONSTANT        reduce using rule 120 (operadores -> NOTEQUAL .)
    INTEGER         reduce using rule 120 (operadores -> NOTEQUAL .)
    FLOAT           reduce using rule 120 (operadores -> NOTEQUAL .)
    STRING          reduce using rule 120 (operadores -> NOTEQUAL .)
    TRUE            reduce using rule 120 (operadores -> NOTEQUAL .)
    FALSE           reduce using rule 120 (operadores -> NOTEQUAL .)


state 152

    (121) operadores -> LESSTHAN .

    VAR             reduce using rule 121 (operadores -> LESSTHAN .)
    LOCALVAR        reduce using rule 121 (operadores -> LESSTHAN .)
    CONSTANT        reduce using rule 121 (operadores -> LESSTHAN .)
    INTEGER         reduce using rule 121 (operadores -> LESSTHAN .)
    FLOAT           reduce using rule 121 (operadores -> LESSTHAN .)
    STRING          reduce using rule 121 (operadores -> LESSTHAN .)
    TRUE            reduce using rule 121 (operadores -> LESSTHAN .)
    FALSE           reduce using rule 121 (operadores -> LESSTHAN .)


state 153

    (122) operadores -> GREQUAL .

    VAR             reduce using rule 122 (operadores -> GREQUAL .)
    LOCALVAR        reduce using rule 122 (operadores -> GREQUAL .)
    CONSTANT        reduce using rule 122 (operadores -> GREQUAL .)
    INTEGER         reduce using rule 122 (operadores -> GREQUAL .)
    FLOAT           reduce using rule 122 (operadores -> GREQUAL .)
    STRING          reduce using rule 122 (operadores -> GREQUAL .)
    TRUE            reduce using rule 122 (operadores -> GREQUAL .)
    FALSE           reduce using rule 122 (operadores -> GREQUAL .)


state 154

    (123) operadores -> LEQUAL .

    VAR             reduce using rule 123 (operadores -> LEQUAL .)
    LOCALVAR        reduce using rule 123 (operadores -> LEQUAL .)
    CONSTANT        reduce using rule 123 (operadores -> LEQUAL .)
    INTEGER         reduce using rule 123 (operadores -> LEQUAL .)
    FLOAT           reduce using rule 123 (operadores -> LEQUAL .)
    STRING          reduce using rule 123 (operadores -> LEQUAL .)
    TRUE            reduce using rule 123 (operadores -> LEQUAL .)
    FALSE           reduce using rule 123 (operadores -> LEQUAL .)


state 155

    (135) unless -> UNLESS expresionCondicional cuerpo . ELSE cuerpo END

    ELSE            shift and go to state 219


state 156

    (142) boolean -> boolean operadorBinario . boolean
    (140) boolean -> . condiciones
    (141) boolean -> . EXCLAMATION LPARENTHESES condiciones RPARENTHESES
    (142) boolean -> . boolean operadorBinario boolean
    (143) condiciones -> . tiposvariables operadores tiposvariables
    (144) condiciones -> . datos operadores datos
    (145) condiciones -> . tiposvariables operadores datos
    (146) condiciones -> . datos operadores tiposvariables
    (45) tiposvariables -> . VAR
    (46) tiposvariables -> . LOCALVAR
    (47) tiposvariables -> . CONSTANT
    (48) datos -> . INTEGER
    (49) datos -> . FLOAT
    (50) datos -> . STRING
    (51) datos -> . booleanos
    (52) booleanos -> . TRUE
    (53) booleanos -> . FALSE

    EXCLAMATION     shift and go to state 221
    VAR             shift and go to state 33
    LOCALVAR        shift and go to state 83
    CONSTANT        shift and go to state 34
    INTEGER         shift and go to state 84
    FLOAT           shift and go to state 85
    STRING          shift and go to state 73
    TRUE            shift and go to state 75
    FALSE           shift and go to state 76

    boolean                        shift and go to state 220
    condiciones                    shift and go to state 80
    tiposvariables                 shift and go to state 81
    datos                          shift and go to state 82
    booleanos                      shift and go to state 74

state 157

    (138) operadorBinario -> DOUBLEAMPERSAND .

    EXCLAMATION     reduce using rule 138 (operadorBinario -> DOUBLEAMPERSAND .)
    VAR             reduce using rule 138 (operadorBinario -> DOUBLEAMPERSAND .)
    LOCALVAR        reduce using rule 138 (operadorBinario -> DOUBLEAMPERSAND .)
    CONSTANT        reduce using rule 138 (operadorBinario -> DOUBLEAMPERSAND .)
    INTEGER         reduce using rule 138 (operadorBinario -> DOUBLEAMPERSAND .)
    FLOAT           reduce using rule 138 (operadorBinario -> DOUBLEAMPERSAND .)
    STRING          reduce using rule 138 (operadorBinario -> DOUBLEAMPERSAND .)
    TRUE            reduce using rule 138 (operadorBinario -> DOUBLEAMPERSAND .)
    FALSE           reduce using rule 138 (operadorBinario -> DOUBLEAMPERSAND .)


state 158

    (139) operadorBinario -> DOUBLEPIPE .

    EXCLAMATION     reduce using rule 139 (operadorBinario -> DOUBLEPIPE .)
    VAR             reduce using rule 139 (operadorBinario -> DOUBLEPIPE .)
    LOCALVAR        reduce using rule 139 (operadorBinario -> DOUBLEPIPE .)
    CONSTANT        reduce using rule 139 (operadorBinario -> DOUBLEPIPE .)
    INTEGER         reduce using rule 139 (operadorBinario -> DOUBLEPIPE .)
    FLOAT           reduce using rule 139 (operadorBinario -> DOUBLEPIPE .)
    STRING          reduce using rule 139 (operadorBinario -> DOUBLEPIPE .)
    TRUE            reduce using rule 139 (operadorBinario -> DOUBLEPIPE .)
    FALSE           reduce using rule 139 (operadorBinario -> DOUBLEPIPE .)


state 159

    (137) expresionCondicional -> EXCLAMATION LPARENTHESES . boolean RPARENTHESES
    (141) boolean -> EXCLAMATION LPARENTHESES . condiciones RPARENTHESES
    (140) boolean -> . condiciones
    (141) boolean -> . EXCLAMATION LPARENTHESES condiciones RPARENTHESES
    (142) boolean -> . boolean operadorBinario boolean
    (143) condiciones -> . tiposvariables operadores tiposvariables
    (144) condiciones -> . datos operadores datos
    (145) condiciones -> . tiposvariables operadores datos
    (146) condiciones -> . datos operadores tiposvariables
    (45) tiposvariables -> . VAR
    (46) tiposvariables -> . LOCALVAR
    (47) tiposvariables -> . CONSTANT
    (48) datos -> . INTEGER
    (49) datos -> . FLOAT
    (50) datos -> . STRING
    (51) datos -> . booleanos
    (52) booleanos -> . TRUE
    (53) booleanos -> . FALSE

    EXCLAMATION     shift and go to state 221
    VAR             shift and go to state 33
    LOCALVAR        shift and go to state 83
    CONSTANT        shift and go to state 34
    INTEGER         shift and go to state 84
    FLOAT           shift and go to state 85
    STRING          shift and go to state 73
    TRUE            shift and go to state 75
    FALSE           shift and go to state 76

    boolean                        shift and go to state 222
    condiciones                    shift and go to state 223
    tiposvariables                 shift and go to state 81
    datos                          shift and go to state 82
    booleanos                      shift and go to state 74

state 160

    (143) condiciones -> tiposvariables operadores . tiposvariables
    (145) condiciones -> tiposvariables operadores . datos
    (45) tiposvariables -> . VAR
    (46) tiposvariables -> . LOCALVAR
    (47) tiposvariables -> . CONSTANT
    (48) datos -> . INTEGER
    (49) datos -> . FLOAT
    (50) datos -> . STRING
    (51) datos -> . booleanos
    (52) booleanos -> . TRUE
    (53) booleanos -> . FALSE

    VAR             shift and go to state 33
    LOCALVAR        shift and go to state 83
    CONSTANT        shift and go to state 34
    INTEGER         shift and go to state 84
    FLOAT           shift and go to state 85
    STRING          shift and go to state 73
    TRUE            shift and go to state 75
    FALSE           shift and go to state 76

    tiposvariables                 shift and go to state 224
    datos                          shift and go to state 225
    booleanos                      shift and go to state 74

state 161

    (144) condiciones -> datos operadores . datos
    (146) condiciones -> datos operadores . tiposvariables
    (48) datos -> . INTEGER
    (49) datos -> . FLOAT
    (50) datos -> . STRING
    (51) datos -> . booleanos
    (45) tiposvariables -> . VAR
    (46) tiposvariables -> . LOCALVAR
    (47) tiposvariables -> . CONSTANT
    (52) booleanos -> . TRUE
    (53) booleanos -> . FALSE

    INTEGER         shift and go to state 84
    FLOAT           shift and go to state 85
    STRING          shift and go to state 73
    VAR             shift and go to state 33
    LOCALVAR        shift and go to state 83
    CONSTANT        shift and go to state 34
    TRUE            shift and go to state 75
    FALSE           shift and go to state 76

    datos                          shift and go to state 226
    tiposvariables                 shift and go to state 227
    booleanos                      shift and go to state 74

state 162

    (92) array -> LBRACKET datosarray RBRACKET .

    LBRACKET        reduce using rule 92 (array -> LBRACKET datosarray RBRACKET .)
    DOT             reduce using rule 92 (array -> LBRACKET datosarray RBRACKET .)
    LOCALVAR        reduce using rule 92 (array -> LBRACKET datosarray RBRACKET .)
    FOR             reduce using rule 92 (array -> LBRACKET datosarray RBRACKET .)
    IF              reduce using rule 92 (array -> LBRACKET datosarray RBRACKET .)
    UNLESS          reduce using rule 92 (array -> LBRACKET datosarray RBRACKET .)
    PUTS            reduce using rule 92 (array -> LBRACKET datosarray RBRACKET .)
    PRINT           reduce using rule 92 (array -> LBRACKET datosarray RBRACKET .)
    STRING          reduce using rule 92 (array -> LBRACKET datosarray RBRACKET .)
    INTEGERW        reduce using rule 92 (array -> LBRACKET datosarray RBRACKET .)
    INTEGER         reduce using rule 92 (array -> LBRACKET datosarray RBRACKET .)
    FLOAT           reduce using rule 92 (array -> LBRACKET datosarray RBRACKET .)
    VAR             reduce using rule 92 (array -> LBRACKET datosarray RBRACKET .)
    CONSTANT        reduce using rule 92 (array -> LBRACKET datosarray RBRACKET .)
    LCURLYBRACKET   reduce using rule 92 (array -> LBRACKET datosarray RBRACKET .)
    SET             reduce using rule 92 (array -> LBRACKET datosarray RBRACKET .)
    $end            reduce using rule 92 (array -> LBRACKET datosarray RBRACKET .)
    ELSE            reduce using rule 92 (array -> LBRACKET datosarray RBRACKET .)
    END             reduce using rule 92 (array -> LBRACKET datosarray RBRACKET .)
    RETURN          reduce using rule 92 (array -> LBRACKET datosarray RBRACKET .)


state 163

    (98) datosarray -> datosarray COMMA . datosvarios
    (93) datosvarios -> . datos
    (94) datosvarios -> . number
    (95) datosvarios -> . VAR
    (96) datosvarios -> . LOCALVAR
    (48) datos -> . INTEGER
    (49) datos -> . FLOAT
    (50) datos -> . STRING
    (51) datos -> . booleanos
    (76) number -> . INTEGER
    (77) number -> . FLOAT
    (52) booleanos -> . TRUE
    (53) booleanos -> . FALSE

    VAR             shift and go to state 93
    LOCALVAR        shift and go to state 94
    INTEGER         shift and go to state 71
    FLOAT           shift and go to state 72
    STRING          shift and go to state 73
    TRUE            shift and go to state 75
    FALSE           shift and go to state 76

    datosvarios                    shift and go to state 228
    datos                          shift and go to state 67
    number                         shift and go to state 68
    booleanos                      shift and go to state 74

state 164

    (125) integer -> INTEGER DOT CEIL . LPARENTHESES RPARENTHESES
    (126) integer -> INTEGER DOT CEIL . LPARENTHESES INTEGER RPARENTHESES

    LPARENTHESES    shift and go to state 229


state 165

    (127) integer -> INTEGER DOT FLOOR . LPARENTHESES RPARENTHESES
    (128) integer -> INTEGER DOT FLOOR . LPARENTHESES INTEGER RPARENTHESES

    LPARENTHESES    shift and go to state 230


state 166

    (129) integer -> INTEGER DOT ABS .

    LOCALVAR        reduce using rule 129 (integer -> INTEGER DOT ABS .)
    FOR             reduce using rule 129 (integer -> INTEGER DOT ABS .)
    IF              reduce using rule 129 (integer -> INTEGER DOT ABS .)
    UNLESS          reduce using rule 129 (integer -> INTEGER DOT ABS .)
    PUTS            reduce using rule 129 (integer -> INTEGER DOT ABS .)
    PRINT           reduce using rule 129 (integer -> INTEGER DOT ABS .)
    STRING          reduce using rule 129 (integer -> INTEGER DOT ABS .)
    INTEGERW        reduce using rule 129 (integer -> INTEGER DOT ABS .)
    INTEGER         reduce using rule 129 (integer -> INTEGER DOT ABS .)
    FLOAT           reduce using rule 129 (integer -> INTEGER DOT ABS .)
    VAR             reduce using rule 129 (integer -> INTEGER DOT ABS .)
    CONSTANT        reduce using rule 129 (integer -> INTEGER DOT ABS .)
    LCURLYBRACKET   reduce using rule 129 (integer -> INTEGER DOT ABS .)
    LBRACKET        reduce using rule 129 (integer -> INTEGER DOT ABS .)
    SET             reduce using rule 129 (integer -> INTEGER DOT ABS .)
    $end            reduce using rule 129 (integer -> INTEGER DOT ABS .)
    ELSE            reduce using rule 129 (integer -> INTEGER DOT ABS .)
    END             reduce using rule 129 (integer -> INTEGER DOT ABS .)
    RETURN          reduce using rule 129 (integer -> INTEGER DOT ABS .)


state 167

    (158) string -> STRING PLUS STRING .

    LOCALVAR        reduce using rule 158 (string -> STRING PLUS STRING .)
    FOR             reduce using rule 158 (string -> STRING PLUS STRING .)
    IF              reduce using rule 158 (string -> STRING PLUS STRING .)
    UNLESS          reduce using rule 158 (string -> STRING PLUS STRING .)
    PUTS            reduce using rule 158 (string -> STRING PLUS STRING .)
    PRINT           reduce using rule 158 (string -> STRING PLUS STRING .)
    STRING          reduce using rule 158 (string -> STRING PLUS STRING .)
    INTEGERW        reduce using rule 158 (string -> STRING PLUS STRING .)
    INTEGER         reduce using rule 158 (string -> STRING PLUS STRING .)
    FLOAT           reduce using rule 158 (string -> STRING PLUS STRING .)
    VAR             reduce using rule 158 (string -> STRING PLUS STRING .)
    CONSTANT        reduce using rule 158 (string -> STRING PLUS STRING .)
    LCURLYBRACKET   reduce using rule 158 (string -> STRING PLUS STRING .)
    LBRACKET        reduce using rule 158 (string -> STRING PLUS STRING .)
    SET             reduce using rule 158 (string -> STRING PLUS STRING .)
    $end            reduce using rule 158 (string -> STRING PLUS STRING .)
    ELSE            reduce using rule 158 (string -> STRING PLUS STRING .)
    END             reduce using rule 158 (string -> STRING PLUS STRING .)
    RETURN          reduce using rule 158 (string -> STRING PLUS STRING .)


state 168

    (159) string -> STRING MULTIPLY INTEGER .

    LOCALVAR        reduce using rule 159 (string -> STRING MULTIPLY INTEGER .)
    FOR             reduce using rule 159 (string -> STRING MULTIPLY INTEGER .)
    IF              reduce using rule 159 (string -> STRING MULTIPLY INTEGER .)
    UNLESS          reduce using rule 159 (string -> STRING MULTIPLY INTEGER .)
    PUTS            reduce using rule 159 (string -> STRING MULTIPLY INTEGER .)
    PRINT           reduce using rule 159 (string -> STRING MULTIPLY INTEGER .)
    STRING          reduce using rule 159 (string -> STRING MULTIPLY INTEGER .)
    INTEGERW        reduce using rule 159 (string -> STRING MULTIPLY INTEGER .)
    INTEGER         reduce using rule 159 (string -> STRING MULTIPLY INTEGER .)
    FLOAT           reduce using rule 159 (string -> STRING MULTIPLY INTEGER .)
    VAR             reduce using rule 159 (string -> STRING MULTIPLY INTEGER .)
    CONSTANT        reduce using rule 159 (string -> STRING MULTIPLY INTEGER .)
    LCURLYBRACKET   reduce using rule 159 (string -> STRING MULTIPLY INTEGER .)
    LBRACKET        reduce using rule 159 (string -> STRING MULTIPLY INTEGER .)
    SET             reduce using rule 159 (string -> STRING MULTIPLY INTEGER .)
    $end            reduce using rule 159 (string -> STRING MULTIPLY INTEGER .)
    ELSE            reduce using rule 159 (string -> STRING MULTIPLY INTEGER .)
    END             reduce using rule 159 (string -> STRING MULTIPLY INTEGER .)
    RETURN          reduce using rule 159 (string -> STRING MULTIPLY INTEGER .)


state 169

    (160) string -> STRING DOT stringOpt .

    LOCALVAR        reduce using rule 160 (string -> STRING DOT stringOpt .)
    FOR             reduce using rule 160 (string -> STRING DOT stringOpt .)
    IF              reduce using rule 160 (string -> STRING DOT stringOpt .)
    UNLESS          reduce using rule 160 (string -> STRING DOT stringOpt .)
    PUTS            reduce using rule 160 (string -> STRING DOT stringOpt .)
    PRINT           reduce using rule 160 (string -> STRING DOT stringOpt .)
    STRING          reduce using rule 160 (string -> STRING DOT stringOpt .)
    INTEGERW        reduce using rule 160 (string -> STRING DOT stringOpt .)
    INTEGER         reduce using rule 160 (string -> STRING DOT stringOpt .)
    FLOAT           reduce using rule 160 (string -> STRING DOT stringOpt .)
    VAR             reduce using rule 160 (string -> STRING DOT stringOpt .)
    CONSTANT        reduce using rule 160 (string -> STRING DOT stringOpt .)
    LCURLYBRACKET   reduce using rule 160 (string -> STRING DOT stringOpt .)
    LBRACKET        reduce using rule 160 (string -> STRING DOT stringOpt .)
    SET             reduce using rule 160 (string -> STRING DOT stringOpt .)
    $end            reduce using rule 160 (string -> STRING DOT stringOpt .)
    ELSE            reduce using rule 160 (string -> STRING DOT stringOpt .)
    END             reduce using rule 160 (string -> STRING DOT stringOpt .)
    RETURN          reduce using rule 160 (string -> STRING DOT stringOpt .)


state 170

    (161) stringOpt -> UPCASE .

    LOCALVAR        reduce using rule 161 (stringOpt -> UPCASE .)
    FOR             reduce using rule 161 (stringOpt -> UPCASE .)
    IF              reduce using rule 161 (stringOpt -> UPCASE .)
    UNLESS          reduce using rule 161 (stringOpt -> UPCASE .)
    PUTS            reduce using rule 161 (stringOpt -> UPCASE .)
    PRINT           reduce using rule 161 (stringOpt -> UPCASE .)
    STRING          reduce using rule 161 (stringOpt -> UPCASE .)
    INTEGERW        reduce using rule 161 (stringOpt -> UPCASE .)
    INTEGER         reduce using rule 161 (stringOpt -> UPCASE .)
    FLOAT           reduce using rule 161 (stringOpt -> UPCASE .)
    VAR             reduce using rule 161 (stringOpt -> UPCASE .)
    CONSTANT        reduce using rule 161 (stringOpt -> UPCASE .)
    LCURLYBRACKET   reduce using rule 161 (stringOpt -> UPCASE .)
    LBRACKET        reduce using rule 161 (stringOpt -> UPCASE .)
    SET             reduce using rule 161 (stringOpt -> UPCASE .)
    $end            reduce using rule 161 (stringOpt -> UPCASE .)
    ELSE            reduce using rule 161 (stringOpt -> UPCASE .)
    END             reduce using rule 161 (stringOpt -> UPCASE .)
    RETURN          reduce using rule 161 (stringOpt -> UPCASE .)


state 171

    (162) stringOpt -> DOWNCASE .

    LOCALVAR        reduce using rule 162 (stringOpt -> DOWNCASE .)
    FOR             reduce using rule 162 (stringOpt -> DOWNCASE .)
    IF              reduce using rule 162 (stringOpt -> DOWNCASE .)
    UNLESS          reduce using rule 162 (stringOpt -> DOWNCASE .)
    PUTS            reduce using rule 162 (stringOpt -> DOWNCASE .)
    PRINT           reduce using rule 162 (stringOpt -> DOWNCASE .)
    STRING          reduce using rule 162 (stringOpt -> DOWNCASE .)
    INTEGERW        reduce using rule 162 (stringOpt -> DOWNCASE .)
    INTEGER         reduce using rule 162 (stringOpt -> DOWNCASE .)
    FLOAT           reduce using rule 162 (stringOpt -> DOWNCASE .)
    VAR             reduce using rule 162 (stringOpt -> DOWNCASE .)
    CONSTANT        reduce using rule 162 (stringOpt -> DOWNCASE .)
    LCURLYBRACKET   reduce using rule 162 (stringOpt -> DOWNCASE .)
    LBRACKET        reduce using rule 162 (stringOpt -> DOWNCASE .)
    SET             reduce using rule 162 (stringOpt -> DOWNCASE .)
    $end            reduce using rule 162 (stringOpt -> DOWNCASE .)
    ELSE            reduce using rule 162 (stringOpt -> DOWNCASE .)
    END             reduce using rule 162 (stringOpt -> DOWNCASE .)
    RETURN          reduce using rule 162 (stringOpt -> DOWNCASE .)


state 172

    (163) stringOpt -> LENGTH .

    LOCALVAR        reduce using rule 163 (stringOpt -> LENGTH .)
    FOR             reduce using rule 163 (stringOpt -> LENGTH .)
    IF              reduce using rule 163 (stringOpt -> LENGTH .)
    UNLESS          reduce using rule 163 (stringOpt -> LENGTH .)
    PUTS            reduce using rule 163 (stringOpt -> LENGTH .)
    PRINT           reduce using rule 163 (stringOpt -> LENGTH .)
    STRING          reduce using rule 163 (stringOpt -> LENGTH .)
    INTEGERW        reduce using rule 163 (stringOpt -> LENGTH .)
    INTEGER         reduce using rule 163 (stringOpt -> LENGTH .)
    FLOAT           reduce using rule 163 (stringOpt -> LENGTH .)
    VAR             reduce using rule 163 (stringOpt -> LENGTH .)
    CONSTANT        reduce using rule 163 (stringOpt -> LENGTH .)
    LCURLYBRACKET   reduce using rule 163 (stringOpt -> LENGTH .)
    LBRACKET        reduce using rule 163 (stringOpt -> LENGTH .)
    SET             reduce using rule 163 (stringOpt -> LENGTH .)
    $end            reduce using rule 163 (stringOpt -> LENGTH .)
    ELSE            reduce using rule 163 (stringOpt -> LENGTH .)
    END             reduce using rule 163 (stringOpt -> LENGTH .)
    RETURN          reduce using rule 163 (stringOpt -> LENGTH .)


state 173

    (164) stringOpt -> CAPS .

    LOCALVAR        reduce using rule 164 (stringOpt -> CAPS .)
    FOR             reduce using rule 164 (stringOpt -> CAPS .)
    IF              reduce using rule 164 (stringOpt -> CAPS .)
    UNLESS          reduce using rule 164 (stringOpt -> CAPS .)
    PUTS            reduce using rule 164 (stringOpt -> CAPS .)
    PRINT           reduce using rule 164 (stringOpt -> CAPS .)
    STRING          reduce using rule 164 (stringOpt -> CAPS .)
    INTEGERW        reduce using rule 164 (stringOpt -> CAPS .)
    INTEGER         reduce using rule 164 (stringOpt -> CAPS .)
    FLOAT           reduce using rule 164 (stringOpt -> CAPS .)
    VAR             reduce using rule 164 (stringOpt -> CAPS .)
    CONSTANT        reduce using rule 164 (stringOpt -> CAPS .)
    LCURLYBRACKET   reduce using rule 164 (stringOpt -> CAPS .)
    LBRACKET        reduce using rule 164 (stringOpt -> CAPS .)
    SET             reduce using rule 164 (stringOpt -> CAPS .)
    $end            reduce using rule 164 (stringOpt -> CAPS .)
    ELSE            reduce using rule 164 (stringOpt -> CAPS .)
    END             reduce using rule 164 (stringOpt -> CAPS .)
    RETURN          reduce using rule 164 (stringOpt -> CAPS .)


state 174

    (165) stringOpt -> INSERT . LPARENTHESES INTEGER COMMA STRING RPARENTHESES

    LPARENTHESES    shift and go to state 231


state 175

    (124) integer -> INTEGERW DOT SQRT . LPARENTHESES INTEGER RPARENTHESES

    LPARENTHESES    shift and go to state 232


state 176

    (130) float -> FLOAT DOT CEIL . LPARENTHESES RPARENTHESES
    (131) float -> FLOAT DOT CEIL . LPARENTHESES INTEGER RPARENTHESES

    LPARENTHESES    shift and go to state 233


state 177

    (132) float -> FLOAT DOT FLOOR . LPARENTHESES RPARENTHESES
    (133) float -> FLOAT DOT FLOOR . LPARENTHESES INTEGER RPARENTHESES

    LPARENTHESES    shift and go to state 234


state 178

    (134) float -> FLOAT DOT ABS .

    LOCALVAR        reduce using rule 134 (float -> FLOAT DOT ABS .)
    FOR             reduce using rule 134 (float -> FLOAT DOT ABS .)
    IF              reduce using rule 134 (float -> FLOAT DOT ABS .)
    UNLESS          reduce using rule 134 (float -> FLOAT DOT ABS .)
    PUTS            reduce using rule 134 (float -> FLOAT DOT ABS .)
    PRINT           reduce using rule 134 (float -> FLOAT DOT ABS .)
    STRING          reduce using rule 134 (float -> FLOAT DOT ABS .)
    INTEGERW        reduce using rule 134 (float -> FLOAT DOT ABS .)
    INTEGER         reduce using rule 134 (float -> FLOAT DOT ABS .)
    FLOAT           reduce using rule 134 (float -> FLOAT DOT ABS .)
    VAR             reduce using rule 134 (float -> FLOAT DOT ABS .)
    CONSTANT        reduce using rule 134 (float -> FLOAT DOT ABS .)
    LCURLYBRACKET   reduce using rule 134 (float -> FLOAT DOT ABS .)
    LBRACKET        reduce using rule 134 (float -> FLOAT DOT ABS .)
    SET             reduce using rule 134 (float -> FLOAT DOT ABS .)
    $end            reduce using rule 134 (float -> FLOAT DOT ABS .)
    ELSE            reduce using rule 134 (float -> FLOAT DOT ABS .)
    END             reduce using rule 134 (float -> FLOAT DOT ABS .)
    RETURN          reduce using rule 134 (float -> FLOAT DOT ABS .)


state 179

    (57) hash -> LCURLYBRACKET elementoHash RCURLYBRACKET .

    LBRACKET        reduce using rule 57 (hash -> LCURLYBRACKET elementoHash RCURLYBRACKET .)
    DOT             reduce using rule 57 (hash -> LCURLYBRACKET elementoHash RCURLYBRACKET .)
    LOCALVAR        reduce using rule 57 (hash -> LCURLYBRACKET elementoHash RCURLYBRACKET .)
    FOR             reduce using rule 57 (hash -> LCURLYBRACKET elementoHash RCURLYBRACKET .)
    IF              reduce using rule 57 (hash -> LCURLYBRACKET elementoHash RCURLYBRACKET .)
    UNLESS          reduce using rule 57 (hash -> LCURLYBRACKET elementoHash RCURLYBRACKET .)
    PUTS            reduce using rule 57 (hash -> LCURLYBRACKET elementoHash RCURLYBRACKET .)
    PRINT           reduce using rule 57 (hash -> LCURLYBRACKET elementoHash RCURLYBRACKET .)
    STRING          reduce using rule 57 (hash -> LCURLYBRACKET elementoHash RCURLYBRACKET .)
    INTEGERW        reduce using rule 57 (hash -> LCURLYBRACKET elementoHash RCURLYBRACKET .)
    INTEGER         reduce using rule 57 (hash -> LCURLYBRACKET elementoHash RCURLYBRACKET .)
    FLOAT           reduce using rule 57 (hash -> LCURLYBRACKET elementoHash RCURLYBRACKET .)
    VAR             reduce using rule 57 (hash -> LCURLYBRACKET elementoHash RCURLYBRACKET .)
    CONSTANT        reduce using rule 57 (hash -> LCURLYBRACKET elementoHash RCURLYBRACKET .)
    LCURLYBRACKET   reduce using rule 57 (hash -> LCURLYBRACKET elementoHash RCURLYBRACKET .)
    SET             reduce using rule 57 (hash -> LCURLYBRACKET elementoHash RCURLYBRACKET .)
    $end            reduce using rule 57 (hash -> LCURLYBRACKET elementoHash RCURLYBRACKET .)
    ELSE            reduce using rule 57 (hash -> LCURLYBRACKET elementoHash RCURLYBRACKET .)
    END             reduce using rule 57 (hash -> LCURLYBRACKET elementoHash RCURLYBRACKET .)
    RETURN          reduce using rule 57 (hash -> LCURLYBRACKET elementoHash RCURLYBRACKET .)


state 180

    (58) elementoHash -> datos EQUAL . GREATERTHAN datos maselementos

    GREATERTHAN     shift and go to state 235


state 181

    (147) set -> SET LBRACKET elementoSet . RBRACKET

    RBRACKET        shift and go to state 236


state 182

    (149) elementoSet -> datos .
    (150) elementoSet -> datos . otroElemento
    (151) otroElemento -> .
    (152) otroElemento -> . COMMA elementoSet otroElemento

  ! reduce/reduce conflict for RBRACKET resolved using rule 149 (elementoSet -> datos .)
  ! reduce/reduce conflict for COMMA resolved using rule 149 (elementoSet -> datos .)
  ! shift/reduce conflict for COMMA resolved as shift
    RBRACKET        reduce using rule 149 (elementoSet -> datos .)
    COMMA           shift and go to state 238

  ! COMMA           [ reduce using rule 149 (elementoSet -> datos .) ]
  ! RBRACKET        [ reduce using rule 151 (otroElemento -> .) ]
  ! COMMA           [ reduce using rule 151 (otroElemento -> .) ]

    otroElemento                   shift and go to state 237

state 183

    (8) argumentos -> LOCALVAR . EQUAL LCURLYBRACKET RCURLYBRACKET
    (9) argumentos -> LOCALVAR . TWOPOINTS datos
    (10) variosargumentos -> LOCALVAR .
    (11) variosargumentos -> LOCALVAR . EQUAL datos
    (12) variosargumentos -> LOCALVAR . masargumentos
    (13) variosargumentos -> LOCALVAR . EQUAL datos masargumentos
    (14) masargumentos -> . COMMA variosargumentos

    EQUAL           shift and go to state 239
    TWOPOINTS       shift and go to state 240
    RPARENTHESES    reduce using rule 10 (variosargumentos -> LOCALVAR .)
    COMMA           shift and go to state 242

    masargumentos                  shift and go to state 241

state 184

    (3) funcion -> DEF LOCALVAR LPARENTHESES argumentos . RPARENTHESES cuerpo END
    (4) funcion -> DEF LOCALVAR LPARENTHESES argumentos . RPARENTHESES cuerpo retornar END

    RPARENTHESES    shift and go to state 243


state 185

    (5) argumentos -> variosargumentos .

    RPARENTHESES    reduce using rule 5 (argumentos -> variosargumentos .)


state 186

    (6) argumentos -> MULTIPLY . LOCALVAR

    LOCALVAR        shift and go to state 244


state 187

    (7) argumentos -> TWOSTARS . LOCALVAR

    LOCALVAR        shift and go to state 245


state 188

    (166) casting -> STRING DOT . TO_I
    (167) casting -> STRING DOT . TO_F

    TO_I            shift and go to state 246
    TO_F            shift and go to state 247


state 189

    (82) operacion -> operacion masoperaciones .

    PLUS            reduce using rule 82 (operacion -> operacion masoperaciones .)
    MINUS           reduce using rule 82 (operacion -> operacion masoperaciones .)
    MULTIPLY        reduce using rule 82 (operacion -> operacion masoperaciones .)
    DIVIDE          reduce using rule 82 (operacion -> operacion masoperaciones .)
    PERCENTAGE      reduce using rule 82 (operacion -> operacion masoperaciones .)
    LOCALVAR        reduce using rule 82 (operacion -> operacion masoperaciones .)
    FOR             reduce using rule 82 (operacion -> operacion masoperaciones .)
    IF              reduce using rule 82 (operacion -> operacion masoperaciones .)
    UNLESS          reduce using rule 82 (operacion -> operacion masoperaciones .)
    PUTS            reduce using rule 82 (operacion -> operacion masoperaciones .)
    PRINT           reduce using rule 82 (operacion -> operacion masoperaciones .)
    STRING          reduce using rule 82 (operacion -> operacion masoperaciones .)
    INTEGERW        reduce using rule 82 (operacion -> operacion masoperaciones .)
    INTEGER         reduce using rule 82 (operacion -> operacion masoperaciones .)
    FLOAT           reduce using rule 82 (operacion -> operacion masoperaciones .)
    VAR             reduce using rule 82 (operacion -> operacion masoperaciones .)
    CONSTANT        reduce using rule 82 (operacion -> operacion masoperaciones .)
    LCURLYBRACKET   reduce using rule 82 (operacion -> operacion masoperaciones .)
    LBRACKET        reduce using rule 82 (operacion -> operacion masoperaciones .)
    SET             reduce using rule 82 (operacion -> operacion masoperaciones .)
    $end            reduce using rule 82 (operacion -> operacion masoperaciones .)
    ELSE            reduce using rule 82 (operacion -> operacion masoperaciones .)
    END             reduce using rule 82 (operacion -> operacion masoperaciones .)
    RETURN          reduce using rule 82 (operacion -> operacion masoperaciones .)
    RPARENTHESES    reduce using rule 82 (operacion -> operacion masoperaciones .)


state 190

    (83) masoperaciones -> operador . expresion masoperaciones
    (84) masoperaciones -> operador . number
    (85) masoperaciones -> operador . expresion
    (78) expresion -> . operacion
    (79) expresion -> . LPARENTHESES operacion RPARENTHESES
    (80) expresion -> . LPARENTHESES operacion RPARENTHESES masoperaciones
    (76) number -> . INTEGER
    (77) number -> . FLOAT
    (81) operacion -> . number operador number
    (82) operacion -> . operacion masoperaciones

    LPARENTHESES    shift and go to state 125
    INTEGER         shift and go to state 108
    FLOAT           shift and go to state 109

    expresion                      shift and go to state 248
    number                         shift and go to state 249
    operacion                      shift and go to state 124

state 191

    (86) operador -> PLUS .

    LPARENTHESES    reduce using rule 86 (operador -> PLUS .)
    INTEGER         reduce using rule 86 (operador -> PLUS .)
    FLOAT           reduce using rule 86 (operador -> PLUS .)


state 192

    (87) operador -> MINUS .

    LPARENTHESES    reduce using rule 87 (operador -> MINUS .)
    INTEGER         reduce using rule 87 (operador -> MINUS .)
    FLOAT           reduce using rule 87 (operador -> MINUS .)


state 193

    (88) operador -> MULTIPLY .

    LPARENTHESES    reduce using rule 88 (operador -> MULTIPLY .)
    INTEGER         reduce using rule 88 (operador -> MULTIPLY .)
    FLOAT           reduce using rule 88 (operador -> MULTIPLY .)


state 194

    (89) operador -> DIVIDE .

    LPARENTHESES    reduce using rule 89 (operador -> DIVIDE .)
    INTEGER         reduce using rule 89 (operador -> DIVIDE .)
    FLOAT           reduce using rule 89 (operador -> DIVIDE .)


state 195

    (90) operador -> PERCENTAGE .

    LPARENTHESES    reduce using rule 90 (operador -> PERCENTAGE .)
    INTEGER         reduce using rule 90 (operador -> PERCENTAGE .)
    FLOAT           reduce using rule 90 (operador -> PERCENTAGE .)


state 196

    (79) expresion -> LPARENTHESES operacion . RPARENTHESES
    (80) expresion -> LPARENTHESES operacion . RPARENTHESES masoperaciones
    (82) operacion -> operacion . masoperaciones
    (83) masoperaciones -> . operador expresion masoperaciones
    (84) masoperaciones -> . operador number
    (85) masoperaciones -> . operador expresion
    (86) operador -> . PLUS
    (87) operador -> . MINUS
    (88) operador -> . MULTIPLY
    (89) operador -> . DIVIDE
    (90) operador -> . PERCENTAGE

    RPARENTHESES    shift and go to state 250
    PLUS            shift and go to state 191
    MINUS           shift and go to state 192
    MULTIPLY        shift and go to state 193
    DIVIDE          shift and go to state 194
    PERCENTAGE      shift and go to state 195

    masoperaciones                 shift and go to state 189
    operador                       shift and go to state 190

state 197

    (81) operacion -> number . operador number
    (86) operador -> . PLUS
    (87) operador -> . MINUS
    (88) operador -> . MULTIPLY
    (89) operador -> . DIVIDE
    (90) operador -> . PERCENTAGE

    PLUS            shift and go to state 191
    MINUS           shift and go to state 192
    MULTIPLY        shift and go to state 193
    DIVIDE          shift and go to state 194
    PERCENTAGE      shift and go to state 195

    operador                       shift and go to state 199

state 198

    (168) casting -> number DOT . TO_S

    TO_S            shift and go to state 251


state 199

    (81) operacion -> number operador . number
    (76) number -> . INTEGER
    (77) number -> . FLOAT

    INTEGER         shift and go to state 108
    FLOAT           shift and go to state 109

    number                         shift and go to state 252

state 200

    (31) loop -> FOR LOCALVAR IN rango . cuerpo END
    (17) cuerpo -> . declaracion cuerpo
    (18) cuerpo -> . asignacion cuerpo
    (19) cuerpo -> . loop cuerpo
    (20) cuerpo -> . estructurasDatos cuerpo
    (21) cuerpo -> . if cuerpo
    (22) cuerpo -> . unless cuerpo
    (23) cuerpo -> . impresion cuerpo
    (24) cuerpo -> . operacionSet cuerpo
    (25) cuerpo -> . operacionarray cuerpo
    (26) cuerpo -> . operacionHash cuerpo
    (27) cuerpo -> . string cuerpo
    (28) cuerpo -> . integer cuerpo
    (29) cuerpo -> . float cuerpo
    (30) cuerpo -> .
    (32) declaracion -> . tiposvariables EQUAL datos
    (33) declaracion -> . tiposvariables EQUAL estructurasDatos
    (34) declaracion -> . tiposvariables EQUAL expresion
    (35) declaracion -> . tiposvariables EQUAL declaracion
    (36) declaracion -> . tiposvariables EQUAL casting
    (37) asignacion -> . LOCALVAR PLUSASSIGN datosAsignacion
    (38) asignacion -> . LOCALVAR MINASSIGN datosAsignacion
    (39) asignacion -> . LOCALVAR DIVASSIGN datosAsignacion
    (40) asignacion -> . LOCALVAR TIMESASSIGN datosAsignacion
    (41) asignacion -> . LOCALVAR MODASSIGN datosAsignacion
    (42) asignacion -> . LOCALVAR EXPASSIGN datosAsignacion
    (31) loop -> . FOR LOCALVAR IN rango cuerpo END
    (54) estructurasDatos -> . hash
    (55) estructurasDatos -> . array
    (56) estructurasDatos -> . set
    (114) if -> . IF datoscompletos operadores datoscompletos cuerpo END
    (115) if -> . IF datoscompletos operadores datoscompletos cuerpo else
    (135) unless -> . UNLESS expresionCondicional cuerpo ELSE cuerpo END
    (72) impresion -> . PUTS datos
    (73) impresion -> . PUTS LOCALVAR
    (74) impresion -> . PRINT datos
    (75) impresion -> . PRINT LOCALVAR
    (153) operacionSet -> . set DOT ADD LPARENTHESES datos RPARENTHESES
    (154) operacionSet -> . set DOT ADD LPARENTHESES tiposvariables RPARENTHESES
    (155) operacionSet -> . set DOT CLEAR
    (156) operacionSet -> . set DOT DELETE LPARENTHESES datos RPARENTHESES
    (157) operacionSet -> . set DOT DELETE LPARENTHESES tiposvariables RPARENTHESES
    (99) operacionarray -> . array LBRACKET INTEGER RBRACKET
    (100) operacionarray -> . array DOT TAKE LPARENTHESES INTEGER RPARENTHESES
    (101) operacionarray -> . array DOT DROP LPARENTHESES INTEGER RPARENTHESES
    (102) operacionarray -> . array DOT push maspush
    (107) operacionarray -> . array DOT POP
    (108) operacionarray -> . array DOT POP LPARENTHESES INTEGER RPARENTHESES
    (109) operacionarray -> . array DOT DELETE LPARENTHESES INTEGER RPARENTHESES
    (110) operacionarray -> . array DOT LENGTH LPARENTHESES RPARENTHESES
    (111) operacionarray -> . array DOT EMPTY QUESTIONMARK
    (62) operacionHash -> . hash LBRACKET datos RBRACKET
    (63) operacionHash -> . hash LBRACKET datos RBRACKET EQUAL datos
    (64) operacionHash -> . hash DOT INCLUDE QUESTIONMARK LPARENTHESES datos RPARENTHESES
    (65) operacionHash -> . hash DOT DELETE LPARENTHESES datos RPARENTHESES
    (66) operacionHash -> . hash DOT KEYS
    (67) operacionHash -> . hash DOT EMPTY QUESTIONMARK
    (68) operacionHash -> . hash DOT SIZE
    (69) operacionHash -> . hash DOT LENGTH
    (158) string -> . STRING PLUS STRING
    (159) string -> . STRING MULTIPLY INTEGER
    (160) string -> . STRING DOT stringOpt
    (124) integer -> . INTEGERW DOT SQRT LPARENTHESES INTEGER RPARENTHESES
    (125) integer -> . INTEGER DOT CEIL LPARENTHESES RPARENTHESES
    (126) integer -> . INTEGER DOT CEIL LPARENTHESES INTEGER RPARENTHESES
    (127) integer -> . INTEGER DOT FLOOR LPARENTHESES RPARENTHESES
    (128) integer -> . INTEGER DOT FLOOR LPARENTHESES INTEGER RPARENTHESES
    (129) integer -> . INTEGER DOT ABS
    (130) float -> . FLOAT DOT CEIL LPARENTHESES RPARENTHESES
    (131) float -> . FLOAT DOT CEIL LPARENTHESES INTEGER RPARENTHESES
    (132) float -> . FLOAT DOT FLOOR LPARENTHESES RPARENTHESES
    (133) float -> . FLOAT DOT FLOOR LPARENTHESES INTEGER RPARENTHESES
    (134) float -> . FLOAT DOT ABS
    (45) tiposvariables -> . VAR
    (46) tiposvariables -> . LOCALVAR
    (47) tiposvariables -> . CONSTANT
    (57) hash -> . LCURLYBRACKET elementoHash RCURLYBRACKET
    (91) array -> . LBRACKET RBRACKET
    (92) array -> . LBRACKET datosarray RBRACKET
    (147) set -> . SET LBRACKET elementoSet RBRACKET

    END             reduce using rule 30 (cuerpo -> .)
    LOCALVAR        shift and go to state 18
    FOR             shift and go to state 20
    IF              shift and go to state 24
    UNLESS          shift and go to state 25
    PUTS            shift and go to state 26
    PRINT           shift and go to state 27
    STRING          shift and go to state 30
    INTEGERW        shift and go to state 31
    INTEGER         shift and go to state 29
    FLOAT           shift and go to state 32
    VAR             shift and go to state 33
    CONSTANT        shift and go to state 34
    LCURLYBRACKET   shift and go to state 35
    LBRACKET        shift and go to state 28
    SET             shift and go to state 36

    cuerpo                         shift and go to state 253
    declaracion                    shift and go to state 4
    asignacion                     shift and go to state 5
    loop                           shift and go to state 6
    estructurasDatos               shift and go to state 7
    if                             shift and go to state 8
    unless                         shift and go to state 9
    impresion                      shift and go to state 10
    operacionSet                   shift and go to state 11
    operacionarray                 shift and go to state 12
    operacionHash                  shift and go to state 13
    string                         shift and go to state 14
    integer                        shift and go to state 15
    float                          shift and go to state 16
    tiposvariables                 shift and go to state 19
    hash                           shift and go to state 21
    array                          shift and go to state 22
    set                            shift and go to state 23

state 201

    (70) rango -> INTEGER . RANGEINCLUSIVE INTEGER
    (71) rango -> INTEGER . RANGEXCLUSIVE INTEGER

    RANGEINCLUSIVE  shift and go to state 254
    RANGEXCLUSIVE   shift and go to state 255


state 202

    (62) operacionHash -> hash LBRACKET datos RBRACKET .
    (63) operacionHash -> hash LBRACKET datos RBRACKET . EQUAL datos

    LOCALVAR        reduce using rule 62 (operacionHash -> hash LBRACKET datos RBRACKET .)
    FOR             reduce using rule 62 (operacionHash -> hash LBRACKET datos RBRACKET .)
    IF              reduce using rule 62 (operacionHash -> hash LBRACKET datos RBRACKET .)
    UNLESS          reduce using rule 62 (operacionHash -> hash LBRACKET datos RBRACKET .)
    PUTS            reduce using rule 62 (operacionHash -> hash LBRACKET datos RBRACKET .)
    PRINT           reduce using rule 62 (operacionHash -> hash LBRACKET datos RBRACKET .)
    STRING          reduce using rule 62 (operacionHash -> hash LBRACKET datos RBRACKET .)
    INTEGERW        reduce using rule 62 (operacionHash -> hash LBRACKET datos RBRACKET .)
    INTEGER         reduce using rule 62 (operacionHash -> hash LBRACKET datos RBRACKET .)
    FLOAT           reduce using rule 62 (operacionHash -> hash LBRACKET datos RBRACKET .)
    VAR             reduce using rule 62 (operacionHash -> hash LBRACKET datos RBRACKET .)
    CONSTANT        reduce using rule 62 (operacionHash -> hash LBRACKET datos RBRACKET .)
    LCURLYBRACKET   reduce using rule 62 (operacionHash -> hash LBRACKET datos RBRACKET .)
    LBRACKET        reduce using rule 62 (operacionHash -> hash LBRACKET datos RBRACKET .)
    SET             reduce using rule 62 (operacionHash -> hash LBRACKET datos RBRACKET .)
    $end            reduce using rule 62 (operacionHash -> hash LBRACKET datos RBRACKET .)
    ELSE            reduce using rule 62 (operacionHash -> hash LBRACKET datos RBRACKET .)
    END             reduce using rule 62 (operacionHash -> hash LBRACKET datos RBRACKET .)
    RETURN          reduce using rule 62 (operacionHash -> hash LBRACKET datos RBRACKET .)
    EQUAL           shift and go to state 256


state 203

    (64) operacionHash -> hash DOT INCLUDE QUESTIONMARK . LPARENTHESES datos RPARENTHESES

    LPARENTHESES    shift and go to state 257


state 204

    (65) operacionHash -> hash DOT DELETE LPARENTHESES . datos RPARENTHESES
    (48) datos -> . INTEGER
    (49) datos -> . FLOAT
    (50) datos -> . STRING
    (51) datos -> . booleanos
    (52) booleanos -> . TRUE
    (53) booleanos -> . FALSE

    INTEGER         shift and go to state 84
    FLOAT           shift and go to state 85
    STRING          shift and go to state 73
    TRUE            shift and go to state 75
    FALSE           shift and go to state 76

    datos                          shift and go to state 258
    booleanos                      shift and go to state 74

state 205

    (67) operacionHash -> hash DOT EMPTY QUESTIONMARK .

    LOCALVAR        reduce using rule 67 (operacionHash -> hash DOT EMPTY QUESTIONMARK .)
    FOR             reduce using rule 67 (operacionHash -> hash DOT EMPTY QUESTIONMARK .)
    IF              reduce using rule 67 (operacionHash -> hash DOT EMPTY QUESTIONMARK .)
    UNLESS          reduce using rule 67 (operacionHash -> hash DOT EMPTY QUESTIONMARK .)
    PUTS            reduce using rule 67 (operacionHash -> hash DOT EMPTY QUESTIONMARK .)
    PRINT           reduce using rule 67 (operacionHash -> hash DOT EMPTY QUESTIONMARK .)
    STRING          reduce using rule 67 (operacionHash -> hash DOT EMPTY QUESTIONMARK .)
    INTEGERW        reduce using rule 67 (operacionHash -> hash DOT EMPTY QUESTIONMARK .)
    INTEGER         reduce using rule 67 (operacionHash -> hash DOT EMPTY QUESTIONMARK .)
    FLOAT           reduce using rule 67 (operacionHash -> hash DOT EMPTY QUESTIONMARK .)
    VAR             reduce using rule 67 (operacionHash -> hash DOT EMPTY QUESTIONMARK .)
    CONSTANT        reduce using rule 67 (operacionHash -> hash DOT EMPTY QUESTIONMARK .)
    LCURLYBRACKET   reduce using rule 67 (operacionHash -> hash DOT EMPTY QUESTIONMARK .)
    LBRACKET        reduce using rule 67 (operacionHash -> hash DOT EMPTY QUESTIONMARK .)
    SET             reduce using rule 67 (operacionHash -> hash DOT EMPTY QUESTIONMARK .)
    $end            reduce using rule 67 (operacionHash -> hash DOT EMPTY QUESTIONMARK .)
    ELSE            reduce using rule 67 (operacionHash -> hash DOT EMPTY QUESTIONMARK .)
    END             reduce using rule 67 (operacionHash -> hash DOT EMPTY QUESTIONMARK .)
    RETURN          reduce using rule 67 (operacionHash -> hash DOT EMPTY QUESTIONMARK .)


state 206

    (99) operacionarray -> array LBRACKET INTEGER RBRACKET .

    LOCALVAR        reduce using rule 99 (operacionarray -> array LBRACKET INTEGER RBRACKET .)
    FOR             reduce using rule 99 (operacionarray -> array LBRACKET INTEGER RBRACKET .)
    IF              reduce using rule 99 (operacionarray -> array LBRACKET INTEGER RBRACKET .)
    UNLESS          reduce using rule 99 (operacionarray -> array LBRACKET INTEGER RBRACKET .)
    PUTS            reduce using rule 99 (operacionarray -> array LBRACKET INTEGER RBRACKET .)
    PRINT           reduce using rule 99 (operacionarray -> array LBRACKET INTEGER RBRACKET .)
    STRING          reduce using rule 99 (operacionarray -> array LBRACKET INTEGER RBRACKET .)
    INTEGERW        reduce using rule 99 (operacionarray -> array LBRACKET INTEGER RBRACKET .)
    INTEGER         reduce using rule 99 (operacionarray -> array LBRACKET INTEGER RBRACKET .)
    FLOAT           reduce using rule 99 (operacionarray -> array LBRACKET INTEGER RBRACKET .)
    VAR             reduce using rule 99 (operacionarray -> array LBRACKET INTEGER RBRACKET .)
    CONSTANT        reduce using rule 99 (operacionarray -> array LBRACKET INTEGER RBRACKET .)
    LCURLYBRACKET   reduce using rule 99 (operacionarray -> array LBRACKET INTEGER RBRACKET .)
    LBRACKET        reduce using rule 99 (operacionarray -> array LBRACKET INTEGER RBRACKET .)
    SET             reduce using rule 99 (operacionarray -> array LBRACKET INTEGER RBRACKET .)
    $end            reduce using rule 99 (operacionarray -> array LBRACKET INTEGER RBRACKET .)
    ELSE            reduce using rule 99 (operacionarray -> array LBRACKET INTEGER RBRACKET .)
    END             reduce using rule 99 (operacionarray -> array LBRACKET INTEGER RBRACKET .)
    RETURN          reduce using rule 99 (operacionarray -> array LBRACKET INTEGER RBRACKET .)


state 207

    (100) operacionarray -> array DOT TAKE LPARENTHESES . INTEGER RPARENTHESES

    INTEGER         shift and go to state 259


state 208

    (101) operacionarray -> array DOT DROP LPARENTHESES . INTEGER RPARENTHESES

    INTEGER         shift and go to state 260


state 209

    (106) maspush -> DOT . push maspush
    (103) push -> . PUSH LPARENTHESES datosvarios RPARENTHESES
    (104) push -> .

    PUSH            shift and go to state 143
    DOT             reduce using rule 104 (push -> .)
    LOCALVAR        reduce using rule 104 (push -> .)
    FOR             reduce using rule 104 (push -> .)
    IF              reduce using rule 104 (push -> .)
    UNLESS          reduce using rule 104 (push -> .)
    PUTS            reduce using rule 104 (push -> .)
    PRINT           reduce using rule 104 (push -> .)
    STRING          reduce using rule 104 (push -> .)
    INTEGERW        reduce using rule 104 (push -> .)
    INTEGER         reduce using rule 104 (push -> .)
    FLOAT           reduce using rule 104 (push -> .)
    VAR             reduce using rule 104 (push -> .)
    CONSTANT        reduce using rule 104 (push -> .)
    LCURLYBRACKET   reduce using rule 104 (push -> .)
    LBRACKET        reduce using rule 104 (push -> .)
    SET             reduce using rule 104 (push -> .)
    $end            reduce using rule 104 (push -> .)
    ELSE            reduce using rule 104 (push -> .)
    END             reduce using rule 104 (push -> .)
    RETURN          reduce using rule 104 (push -> .)

    push                           shift and go to state 261

state 210

    (102) operacionarray -> array DOT push maspush .

    LOCALVAR        reduce using rule 102 (operacionarray -> array DOT push maspush .)
    FOR             reduce using rule 102 (operacionarray -> array DOT push maspush .)
    IF              reduce using rule 102 (operacionarray -> array DOT push maspush .)
    UNLESS          reduce using rule 102 (operacionarray -> array DOT push maspush .)
    PUTS            reduce using rule 102 (operacionarray -> array DOT push maspush .)
    PRINT           reduce using rule 102 (operacionarray -> array DOT push maspush .)
    STRING          reduce using rule 102 (operacionarray -> array DOT push maspush .)
    INTEGERW        reduce using rule 102 (operacionarray -> array DOT push maspush .)
    INTEGER         reduce using rule 102 (operacionarray -> array DOT push maspush .)
    FLOAT           reduce using rule 102 (operacionarray -> array DOT push maspush .)
    VAR             reduce using rule 102 (operacionarray -> array DOT push maspush .)
    CONSTANT        reduce using rule 102 (operacionarray -> array DOT push maspush .)
    LCURLYBRACKET   reduce using rule 102 (operacionarray -> array DOT push maspush .)
    LBRACKET        reduce using rule 102 (operacionarray -> array DOT push maspush .)
    SET             reduce using rule 102 (operacionarray -> array DOT push maspush .)
    $end            reduce using rule 102 (operacionarray -> array DOT push maspush .)
    ELSE            reduce using rule 102 (operacionarray -> array DOT push maspush .)
    END             reduce using rule 102 (operacionarray -> array DOT push maspush .)
    RETURN          reduce using rule 102 (operacionarray -> array DOT push maspush .)


state 211

    (108) operacionarray -> array DOT POP LPARENTHESES . INTEGER RPARENTHESES

    INTEGER         shift and go to state 262


state 212

    (109) operacionarray -> array DOT DELETE LPARENTHESES . INTEGER RPARENTHESES

    INTEGER         shift and go to state 263


state 213

    (110) operacionarray -> array DOT LENGTH LPARENTHESES . RPARENTHESES

    RPARENTHESES    shift and go to state 264


state 214

    (111) operacionarray -> array DOT EMPTY QUESTIONMARK .

    LOCALVAR        reduce using rule 111 (operacionarray -> array DOT EMPTY QUESTIONMARK .)
    FOR             reduce using rule 111 (operacionarray -> array DOT EMPTY QUESTIONMARK .)
    IF              reduce using rule 111 (operacionarray -> array DOT EMPTY QUESTIONMARK .)
    UNLESS          reduce using rule 111 (operacionarray -> array DOT EMPTY QUESTIONMARK .)
    PUTS            reduce using rule 111 (operacionarray -> array DOT EMPTY QUESTIONMARK .)
    PRINT           reduce using rule 111 (operacionarray -> array DOT EMPTY QUESTIONMARK .)
    STRING          reduce using rule 111 (operacionarray -> array DOT EMPTY QUESTIONMARK .)
    INTEGERW        reduce using rule 111 (operacionarray -> array DOT EMPTY QUESTIONMARK .)
    INTEGER         reduce using rule 111 (operacionarray -> array DOT EMPTY QUESTIONMARK .)
    FLOAT           reduce using rule 111 (operacionarray -> array DOT EMPTY QUESTIONMARK .)
    VAR             reduce using rule 111 (operacionarray -> array DOT EMPTY QUESTIONMARK .)
    CONSTANT        reduce using rule 111 (operacionarray -> array DOT EMPTY QUESTIONMARK .)
    LCURLYBRACKET   reduce using rule 111 (operacionarray -> array DOT EMPTY QUESTIONMARK .)
    LBRACKET        reduce using rule 111 (operacionarray -> array DOT EMPTY QUESTIONMARK .)
    SET             reduce using rule 111 (operacionarray -> array DOT EMPTY QUESTIONMARK .)
    $end            reduce using rule 111 (operacionarray -> array DOT EMPTY QUESTIONMARK .)
    ELSE            reduce using rule 111 (operacionarray -> array DOT EMPTY QUESTIONMARK .)
    END             reduce using rule 111 (operacionarray -> array DOT EMPTY QUESTIONMARK .)
    RETURN          reduce using rule 111 (operacionarray -> array DOT EMPTY QUESTIONMARK .)


state 215

    (103) push -> PUSH LPARENTHESES . datosvarios RPARENTHESES
    (93) datosvarios -> . datos
    (94) datosvarios -> . number
    (95) datosvarios -> . VAR
    (96) datosvarios -> . LOCALVAR
    (48) datos -> . INTEGER
    (49) datos -> . FLOAT
    (50) datos -> . STRING
    (51) datos -> . booleanos
    (76) number -> . INTEGER
    (77) number -> . FLOAT
    (52) booleanos -> . TRUE
    (53) booleanos -> . FALSE

    VAR             shift and go to state 93
    LOCALVAR        shift and go to state 94
    INTEGER         shift and go to state 71
    FLOAT           shift and go to state 72
    STRING          shift and go to state 73
    TRUE            shift and go to state 75
    FALSE           shift and go to state 76

    datosvarios                    shift and go to state 265
    datos                          shift and go to state 67
    number                         shift and go to state 68
    booleanos                      shift and go to state 74

state 216

    (153) operacionSet -> set DOT ADD LPARENTHESES . datos RPARENTHESES
    (154) operacionSet -> set DOT ADD LPARENTHESES . tiposvariables RPARENTHESES
    (48) datos -> . INTEGER
    (49) datos -> . FLOAT
    (50) datos -> . STRING
    (51) datos -> . booleanos
    (45) tiposvariables -> . VAR
    (46) tiposvariables -> . LOCALVAR
    (47) tiposvariables -> . CONSTANT
    (52) booleanos -> . TRUE
    (53) booleanos -> . FALSE

    INTEGER         shift and go to state 84
    FLOAT           shift and go to state 85
    STRING          shift and go to state 73
    VAR             shift and go to state 33
    LOCALVAR        shift and go to state 83
    CONSTANT        shift and go to state 34
    TRUE            shift and go to state 75
    FALSE           shift and go to state 76

    datos                          shift and go to state 266
    tiposvariables                 shift and go to state 267
    booleanos                      shift and go to state 74

state 217

    (156) operacionSet -> set DOT DELETE LPARENTHESES . datos RPARENTHESES
    (157) operacionSet -> set DOT DELETE LPARENTHESES . tiposvariables RPARENTHESES
    (48) datos -> . INTEGER
    (49) datos -> . FLOAT
    (50) datos -> . STRING
    (51) datos -> . booleanos
    (45) tiposvariables -> . VAR
    (46) tiposvariables -> . LOCALVAR
    (47) tiposvariables -> . CONSTANT
    (52) booleanos -> . TRUE
    (53) booleanos -> . FALSE

    INTEGER         shift and go to state 84
    FLOAT           shift and go to state 85
    STRING          shift and go to state 73
    VAR             shift and go to state 33
    LOCALVAR        shift and go to state 83
    CONSTANT        shift and go to state 34
    TRUE            shift and go to state 75
    FALSE           shift and go to state 76

    datos                          shift and go to state 268
    tiposvariables                 shift and go to state 269
    booleanos                      shift and go to state 74

state 218

    (114) if -> IF datoscompletos operadores datoscompletos . cuerpo END
    (115) if -> IF datoscompletos operadores datoscompletos . cuerpo else
    (17) cuerpo -> . declaracion cuerpo
    (18) cuerpo -> . asignacion cuerpo
    (19) cuerpo -> . loop cuerpo
    (20) cuerpo -> . estructurasDatos cuerpo
    (21) cuerpo -> . if cuerpo
    (22) cuerpo -> . unless cuerpo
    (23) cuerpo -> . impresion cuerpo
    (24) cuerpo -> . operacionSet cuerpo
    (25) cuerpo -> . operacionarray cuerpo
    (26) cuerpo -> . operacionHash cuerpo
    (27) cuerpo -> . string cuerpo
    (28) cuerpo -> . integer cuerpo
    (29) cuerpo -> . float cuerpo
    (30) cuerpo -> .
    (32) declaracion -> . tiposvariables EQUAL datos
    (33) declaracion -> . tiposvariables EQUAL estructurasDatos
    (34) declaracion -> . tiposvariables EQUAL expresion
    (35) declaracion -> . tiposvariables EQUAL declaracion
    (36) declaracion -> . tiposvariables EQUAL casting
    (37) asignacion -> . LOCALVAR PLUSASSIGN datosAsignacion
    (38) asignacion -> . LOCALVAR MINASSIGN datosAsignacion
    (39) asignacion -> . LOCALVAR DIVASSIGN datosAsignacion
    (40) asignacion -> . LOCALVAR TIMESASSIGN datosAsignacion
    (41) asignacion -> . LOCALVAR MODASSIGN datosAsignacion
    (42) asignacion -> . LOCALVAR EXPASSIGN datosAsignacion
    (31) loop -> . FOR LOCALVAR IN rango cuerpo END
    (54) estructurasDatos -> . hash
    (55) estructurasDatos -> . array
    (56) estructurasDatos -> . set
    (114) if -> . IF datoscompletos operadores datoscompletos cuerpo END
    (115) if -> . IF datoscompletos operadores datoscompletos cuerpo else
    (135) unless -> . UNLESS expresionCondicional cuerpo ELSE cuerpo END
    (72) impresion -> . PUTS datos
    (73) impresion -> . PUTS LOCALVAR
    (74) impresion -> . PRINT datos
    (75) impresion -> . PRINT LOCALVAR
    (153) operacionSet -> . set DOT ADD LPARENTHESES datos RPARENTHESES
    (154) operacionSet -> . set DOT ADD LPARENTHESES tiposvariables RPARENTHESES
    (155) operacionSet -> . set DOT CLEAR
    (156) operacionSet -> . set DOT DELETE LPARENTHESES datos RPARENTHESES
    (157) operacionSet -> . set DOT DELETE LPARENTHESES tiposvariables RPARENTHESES
    (99) operacionarray -> . array LBRACKET INTEGER RBRACKET
    (100) operacionarray -> . array DOT TAKE LPARENTHESES INTEGER RPARENTHESES
    (101) operacionarray -> . array DOT DROP LPARENTHESES INTEGER RPARENTHESES
    (102) operacionarray -> . array DOT push maspush
    (107) operacionarray -> . array DOT POP
    (108) operacionarray -> . array DOT POP LPARENTHESES INTEGER RPARENTHESES
    (109) operacionarray -> . array DOT DELETE LPARENTHESES INTEGER RPARENTHESES
    (110) operacionarray -> . array DOT LENGTH LPARENTHESES RPARENTHESES
    (111) operacionarray -> . array DOT EMPTY QUESTIONMARK
    (62) operacionHash -> . hash LBRACKET datos RBRACKET
    (63) operacionHash -> . hash LBRACKET datos RBRACKET EQUAL datos
    (64) operacionHash -> . hash DOT INCLUDE QUESTIONMARK LPARENTHESES datos RPARENTHESES
    (65) operacionHash -> . hash DOT DELETE LPARENTHESES datos RPARENTHESES
    (66) operacionHash -> . hash DOT KEYS
    (67) operacionHash -> . hash DOT EMPTY QUESTIONMARK
    (68) operacionHash -> . hash DOT SIZE
    (69) operacionHash -> . hash DOT LENGTH
    (158) string -> . STRING PLUS STRING
    (159) string -> . STRING MULTIPLY INTEGER
    (160) string -> . STRING DOT stringOpt
    (124) integer -> . INTEGERW DOT SQRT LPARENTHESES INTEGER RPARENTHESES
    (125) integer -> . INTEGER DOT CEIL LPARENTHESES RPARENTHESES
    (126) integer -> . INTEGER DOT CEIL LPARENTHESES INTEGER RPARENTHESES
    (127) integer -> . INTEGER DOT FLOOR LPARENTHESES RPARENTHESES
    (128) integer -> . INTEGER DOT FLOOR LPARENTHESES INTEGER RPARENTHESES
    (129) integer -> . INTEGER DOT ABS
    (130) float -> . FLOAT DOT CEIL LPARENTHESES RPARENTHESES
    (131) float -> . FLOAT DOT CEIL LPARENTHESES INTEGER RPARENTHESES
    (132) float -> . FLOAT DOT FLOOR LPARENTHESES RPARENTHESES
    (133) float -> . FLOAT DOT FLOOR LPARENTHESES INTEGER RPARENTHESES
    (134) float -> . FLOAT DOT ABS
    (45) tiposvariables -> . VAR
    (46) tiposvariables -> . LOCALVAR
    (47) tiposvariables -> . CONSTANT
    (57) hash -> . LCURLYBRACKET elementoHash RCURLYBRACKET
    (91) array -> . LBRACKET RBRACKET
    (92) array -> . LBRACKET datosarray RBRACKET
    (147) set -> . SET LBRACKET elementoSet RBRACKET

    END             reduce using rule 30 (cuerpo -> .)
    ELSE            reduce using rule 30 (cuerpo -> .)
    LOCALVAR        shift and go to state 18
    FOR             shift and go to state 20
    IF              shift and go to state 24
    UNLESS          shift and go to state 25
    PUTS            shift and go to state 26
    PRINT           shift and go to state 27
    STRING          shift and go to state 30
    INTEGERW        shift and go to state 31
    INTEGER         shift and go to state 29
    FLOAT           shift and go to state 32
    VAR             shift and go to state 33
    CONSTANT        shift and go to state 34
    LCURLYBRACKET   shift and go to state 35
    LBRACKET        shift and go to state 28
    SET             shift and go to state 36

    cuerpo                         shift and go to state 270
    declaracion                    shift and go to state 4
    asignacion                     shift and go to state 5
    loop                           shift and go to state 6
    estructurasDatos               shift and go to state 7
    if                             shift and go to state 8
    unless                         shift and go to state 9
    impresion                      shift and go to state 10
    operacionSet                   shift and go to state 11
    operacionarray                 shift and go to state 12
    operacionHash                  shift and go to state 13
    string                         shift and go to state 14
    integer                        shift and go to state 15
    float                          shift and go to state 16
    tiposvariables                 shift and go to state 19
    hash                           shift and go to state 21
    array                          shift and go to state 22
    set                            shift and go to state 23

state 219

    (135) unless -> UNLESS expresionCondicional cuerpo ELSE . cuerpo END
    (17) cuerpo -> . declaracion cuerpo
    (18) cuerpo -> . asignacion cuerpo
    (19) cuerpo -> . loop cuerpo
    (20) cuerpo -> . estructurasDatos cuerpo
    (21) cuerpo -> . if cuerpo
    (22) cuerpo -> . unless cuerpo
    (23) cuerpo -> . impresion cuerpo
    (24) cuerpo -> . operacionSet cuerpo
    (25) cuerpo -> . operacionarray cuerpo
    (26) cuerpo -> . operacionHash cuerpo
    (27) cuerpo -> . string cuerpo
    (28) cuerpo -> . integer cuerpo
    (29) cuerpo -> . float cuerpo
    (30) cuerpo -> .
    (32) declaracion -> . tiposvariables EQUAL datos
    (33) declaracion -> . tiposvariables EQUAL estructurasDatos
    (34) declaracion -> . tiposvariables EQUAL expresion
    (35) declaracion -> . tiposvariables EQUAL declaracion
    (36) declaracion -> . tiposvariables EQUAL casting
    (37) asignacion -> . LOCALVAR PLUSASSIGN datosAsignacion
    (38) asignacion -> . LOCALVAR MINASSIGN datosAsignacion
    (39) asignacion -> . LOCALVAR DIVASSIGN datosAsignacion
    (40) asignacion -> . LOCALVAR TIMESASSIGN datosAsignacion
    (41) asignacion -> . LOCALVAR MODASSIGN datosAsignacion
    (42) asignacion -> . LOCALVAR EXPASSIGN datosAsignacion
    (31) loop -> . FOR LOCALVAR IN rango cuerpo END
    (54) estructurasDatos -> . hash
    (55) estructurasDatos -> . array
    (56) estructurasDatos -> . set
    (114) if -> . IF datoscompletos operadores datoscompletos cuerpo END
    (115) if -> . IF datoscompletos operadores datoscompletos cuerpo else
    (135) unless -> . UNLESS expresionCondicional cuerpo ELSE cuerpo END
    (72) impresion -> . PUTS datos
    (73) impresion -> . PUTS LOCALVAR
    (74) impresion -> . PRINT datos
    (75) impresion -> . PRINT LOCALVAR
    (153) operacionSet -> . set DOT ADD LPARENTHESES datos RPARENTHESES
    (154) operacionSet -> . set DOT ADD LPARENTHESES tiposvariables RPARENTHESES
    (155) operacionSet -> . set DOT CLEAR
    (156) operacionSet -> . set DOT DELETE LPARENTHESES datos RPARENTHESES
    (157) operacionSet -> . set DOT DELETE LPARENTHESES tiposvariables RPARENTHESES
    (99) operacionarray -> . array LBRACKET INTEGER RBRACKET
    (100) operacionarray -> . array DOT TAKE LPARENTHESES INTEGER RPARENTHESES
    (101) operacionarray -> . array DOT DROP LPARENTHESES INTEGER RPARENTHESES
    (102) operacionarray -> . array DOT push maspush
    (107) operacionarray -> . array DOT POP
    (108) operacionarray -> . array DOT POP LPARENTHESES INTEGER RPARENTHESES
    (109) operacionarray -> . array DOT DELETE LPARENTHESES INTEGER RPARENTHESES
    (110) operacionarray -> . array DOT LENGTH LPARENTHESES RPARENTHESES
    (111) operacionarray -> . array DOT EMPTY QUESTIONMARK
    (62) operacionHash -> . hash LBRACKET datos RBRACKET
    (63) operacionHash -> . hash LBRACKET datos RBRACKET EQUAL datos
    (64) operacionHash -> . hash DOT INCLUDE QUESTIONMARK LPARENTHESES datos RPARENTHESES
    (65) operacionHash -> . hash DOT DELETE LPARENTHESES datos RPARENTHESES
    (66) operacionHash -> . hash DOT KEYS
    (67) operacionHash -> . hash DOT EMPTY QUESTIONMARK
    (68) operacionHash -> . hash DOT SIZE
    (69) operacionHash -> . hash DOT LENGTH
    (158) string -> . STRING PLUS STRING
    (159) string -> . STRING MULTIPLY INTEGER
    (160) string -> . STRING DOT stringOpt
    (124) integer -> . INTEGERW DOT SQRT LPARENTHESES INTEGER RPARENTHESES
    (125) integer -> . INTEGER DOT CEIL LPARENTHESES RPARENTHESES
    (126) integer -> . INTEGER DOT CEIL LPARENTHESES INTEGER RPARENTHESES
    (127) integer -> . INTEGER DOT FLOOR LPARENTHESES RPARENTHESES
    (128) integer -> . INTEGER DOT FLOOR LPARENTHESES INTEGER RPARENTHESES
    (129) integer -> . INTEGER DOT ABS
    (130) float -> . FLOAT DOT CEIL LPARENTHESES RPARENTHESES
    (131) float -> . FLOAT DOT CEIL LPARENTHESES INTEGER RPARENTHESES
    (132) float -> . FLOAT DOT FLOOR LPARENTHESES RPARENTHESES
    (133) float -> . FLOAT DOT FLOOR LPARENTHESES INTEGER RPARENTHESES
    (134) float -> . FLOAT DOT ABS
    (45) tiposvariables -> . VAR
    (46) tiposvariables -> . LOCALVAR
    (47) tiposvariables -> . CONSTANT
    (57) hash -> . LCURLYBRACKET elementoHash RCURLYBRACKET
    (91) array -> . LBRACKET RBRACKET
    (92) array -> . LBRACKET datosarray RBRACKET
    (147) set -> . SET LBRACKET elementoSet RBRACKET

    END             reduce using rule 30 (cuerpo -> .)
    LOCALVAR        shift and go to state 18
    FOR             shift and go to state 20
    IF              shift and go to state 24
    UNLESS          shift and go to state 25
    PUTS            shift and go to state 26
    PRINT           shift and go to state 27
    STRING          shift and go to state 30
    INTEGERW        shift and go to state 31
    INTEGER         shift and go to state 29
    FLOAT           shift and go to state 32
    VAR             shift and go to state 33
    CONSTANT        shift and go to state 34
    LCURLYBRACKET   shift and go to state 35
    LBRACKET        shift and go to state 28
    SET             shift and go to state 36

    cuerpo                         shift and go to state 271
    declaracion                    shift and go to state 4
    asignacion                     shift and go to state 5
    loop                           shift and go to state 6
    estructurasDatos               shift and go to state 7
    if                             shift and go to state 8
    unless                         shift and go to state 9
    impresion                      shift and go to state 10
    operacionSet                   shift and go to state 11
    operacionarray                 shift and go to state 12
    operacionHash                  shift and go to state 13
    string                         shift and go to state 14
    integer                        shift and go to state 15
    float                          shift and go to state 16
    tiposvariables                 shift and go to state 19
    hash                           shift and go to state 21
    array                          shift and go to state 22
    set                            shift and go to state 23

state 220

    (142) boolean -> boolean operadorBinario boolean .
    (142) boolean -> boolean . operadorBinario boolean
    (138) operadorBinario -> . DOUBLEAMPERSAND
    (139) operadorBinario -> . DOUBLEPIPE

  ! shift/reduce conflict for DOUBLEAMPERSAND resolved as shift
  ! shift/reduce conflict for DOUBLEPIPE resolved as shift
    LOCALVAR        reduce using rule 142 (boolean -> boolean operadorBinario boolean .)
    FOR             reduce using rule 142 (boolean -> boolean operadorBinario boolean .)
    IF              reduce using rule 142 (boolean -> boolean operadorBinario boolean .)
    UNLESS          reduce using rule 142 (boolean -> boolean operadorBinario boolean .)
    PUTS            reduce using rule 142 (boolean -> boolean operadorBinario boolean .)
    PRINT           reduce using rule 142 (boolean -> boolean operadorBinario boolean .)
    STRING          reduce using rule 142 (boolean -> boolean operadorBinario boolean .)
    INTEGERW        reduce using rule 142 (boolean -> boolean operadorBinario boolean .)
    INTEGER         reduce using rule 142 (boolean -> boolean operadorBinario boolean .)
    FLOAT           reduce using rule 142 (boolean -> boolean operadorBinario boolean .)
    VAR             reduce using rule 142 (boolean -> boolean operadorBinario boolean .)
    CONSTANT        reduce using rule 142 (boolean -> boolean operadorBinario boolean .)
    LCURLYBRACKET   reduce using rule 142 (boolean -> boolean operadorBinario boolean .)
    LBRACKET        reduce using rule 142 (boolean -> boolean operadorBinario boolean .)
    SET             reduce using rule 142 (boolean -> boolean operadorBinario boolean .)
    ELSE            reduce using rule 142 (boolean -> boolean operadorBinario boolean .)
    RPARENTHESES    reduce using rule 142 (boolean -> boolean operadorBinario boolean .)
    DOUBLEAMPERSAND shift and go to state 157
    DOUBLEPIPE      shift and go to state 158

  ! DOUBLEAMPERSAND [ reduce using rule 142 (boolean -> boolean operadorBinario boolean .) ]
  ! DOUBLEPIPE      [ reduce using rule 142 (boolean -> boolean operadorBinario boolean .) ]

    operadorBinario                shift and go to state 156

state 221

    (141) boolean -> EXCLAMATION . LPARENTHESES condiciones RPARENTHESES

    LPARENTHESES    shift and go to state 272


state 222

    (137) expresionCondicional -> EXCLAMATION LPARENTHESES boolean . RPARENTHESES
    (142) boolean -> boolean . operadorBinario boolean
    (138) operadorBinario -> . DOUBLEAMPERSAND
    (139) operadorBinario -> . DOUBLEPIPE

    RPARENTHESES    shift and go to state 273
    DOUBLEAMPERSAND shift and go to state 157
    DOUBLEPIPE      shift and go to state 158

    operadorBinario                shift and go to state 156

state 223

    (141) boolean -> EXCLAMATION LPARENTHESES condiciones . RPARENTHESES
    (140) boolean -> condiciones .

  ! shift/reduce conflict for RPARENTHESES resolved as shift
    RPARENTHESES    shift and go to state 274
    DOUBLEAMPERSAND reduce using rule 140 (boolean -> condiciones .)
    DOUBLEPIPE      reduce using rule 140 (boolean -> condiciones .)

  ! RPARENTHESES    [ reduce using rule 140 (boolean -> condiciones .) ]


state 224

    (143) condiciones -> tiposvariables operadores tiposvariables .

    DOUBLEAMPERSAND reduce using rule 143 (condiciones -> tiposvariables operadores tiposvariables .)
    DOUBLEPIPE      reduce using rule 143 (condiciones -> tiposvariables operadores tiposvariables .)
    LOCALVAR        reduce using rule 143 (condiciones -> tiposvariables operadores tiposvariables .)
    FOR             reduce using rule 143 (condiciones -> tiposvariables operadores tiposvariables .)
    IF              reduce using rule 143 (condiciones -> tiposvariables operadores tiposvariables .)
    UNLESS          reduce using rule 143 (condiciones -> tiposvariables operadores tiposvariables .)
    PUTS            reduce using rule 143 (condiciones -> tiposvariables operadores tiposvariables .)
    PRINT           reduce using rule 143 (condiciones -> tiposvariables operadores tiposvariables .)
    STRING          reduce using rule 143 (condiciones -> tiposvariables operadores tiposvariables .)
    INTEGERW        reduce using rule 143 (condiciones -> tiposvariables operadores tiposvariables .)
    INTEGER         reduce using rule 143 (condiciones -> tiposvariables operadores tiposvariables .)
    FLOAT           reduce using rule 143 (condiciones -> tiposvariables operadores tiposvariables .)
    VAR             reduce using rule 143 (condiciones -> tiposvariables operadores tiposvariables .)
    CONSTANT        reduce using rule 143 (condiciones -> tiposvariables operadores tiposvariables .)
    LCURLYBRACKET   reduce using rule 143 (condiciones -> tiposvariables operadores tiposvariables .)
    LBRACKET        reduce using rule 143 (condiciones -> tiposvariables operadores tiposvariables .)
    SET             reduce using rule 143 (condiciones -> tiposvariables operadores tiposvariables .)
    ELSE            reduce using rule 143 (condiciones -> tiposvariables operadores tiposvariables .)
    RPARENTHESES    reduce using rule 143 (condiciones -> tiposvariables operadores tiposvariables .)


state 225

    (145) condiciones -> tiposvariables operadores datos .

    DOUBLEAMPERSAND reduce using rule 145 (condiciones -> tiposvariables operadores datos .)
    DOUBLEPIPE      reduce using rule 145 (condiciones -> tiposvariables operadores datos .)
    LOCALVAR        reduce using rule 145 (condiciones -> tiposvariables operadores datos .)
    FOR             reduce using rule 145 (condiciones -> tiposvariables operadores datos .)
    IF              reduce using rule 145 (condiciones -> tiposvariables operadores datos .)
    UNLESS          reduce using rule 145 (condiciones -> tiposvariables operadores datos .)
    PUTS            reduce using rule 145 (condiciones -> tiposvariables operadores datos .)
    PRINT           reduce using rule 145 (condiciones -> tiposvariables operadores datos .)
    STRING          reduce using rule 145 (condiciones -> tiposvariables operadores datos .)
    INTEGERW        reduce using rule 145 (condiciones -> tiposvariables operadores datos .)
    INTEGER         reduce using rule 145 (condiciones -> tiposvariables operadores datos .)
    FLOAT           reduce using rule 145 (condiciones -> tiposvariables operadores datos .)
    VAR             reduce using rule 145 (condiciones -> tiposvariables operadores datos .)
    CONSTANT        reduce using rule 145 (condiciones -> tiposvariables operadores datos .)
    LCURLYBRACKET   reduce using rule 145 (condiciones -> tiposvariables operadores datos .)
    LBRACKET        reduce using rule 145 (condiciones -> tiposvariables operadores datos .)
    SET             reduce using rule 145 (condiciones -> tiposvariables operadores datos .)
    ELSE            reduce using rule 145 (condiciones -> tiposvariables operadores datos .)
    RPARENTHESES    reduce using rule 145 (condiciones -> tiposvariables operadores datos .)


state 226

    (144) condiciones -> datos operadores datos .

    DOUBLEAMPERSAND reduce using rule 144 (condiciones -> datos operadores datos .)
    DOUBLEPIPE      reduce using rule 144 (condiciones -> datos operadores datos .)
    LOCALVAR        reduce using rule 144 (condiciones -> datos operadores datos .)
    FOR             reduce using rule 144 (condiciones -> datos operadores datos .)
    IF              reduce using rule 144 (condiciones -> datos operadores datos .)
    UNLESS          reduce using rule 144 (condiciones -> datos operadores datos .)
    PUTS            reduce using rule 144 (condiciones -> datos operadores datos .)
    PRINT           reduce using rule 144 (condiciones -> datos operadores datos .)
    STRING          reduce using rule 144 (condiciones -> datos operadores datos .)
    INTEGERW        reduce using rule 144 (condiciones -> datos operadores datos .)
    INTEGER         reduce using rule 144 (condiciones -> datos operadores datos .)
    FLOAT           reduce using rule 144 (condiciones -> datos operadores datos .)
    VAR             reduce using rule 144 (condiciones -> datos operadores datos .)
    CONSTANT        reduce using rule 144 (condiciones -> datos operadores datos .)
    LCURLYBRACKET   reduce using rule 144 (condiciones -> datos operadores datos .)
    LBRACKET        reduce using rule 144 (condiciones -> datos operadores datos .)
    SET             reduce using rule 144 (condiciones -> datos operadores datos .)
    ELSE            reduce using rule 144 (condiciones -> datos operadores datos .)
    RPARENTHESES    reduce using rule 144 (condiciones -> datos operadores datos .)


state 227

    (146) condiciones -> datos operadores tiposvariables .

    DOUBLEAMPERSAND reduce using rule 146 (condiciones -> datos operadores tiposvariables .)
    DOUBLEPIPE      reduce using rule 146 (condiciones -> datos operadores tiposvariables .)
    LOCALVAR        reduce using rule 146 (condiciones -> datos operadores tiposvariables .)
    FOR             reduce using rule 146 (condiciones -> datos operadores tiposvariables .)
    IF              reduce using rule 146 (condiciones -> datos operadores tiposvariables .)
    UNLESS          reduce using rule 146 (condiciones -> datos operadores tiposvariables .)
    PUTS            reduce using rule 146 (condiciones -> datos operadores tiposvariables .)
    PRINT           reduce using rule 146 (condiciones -> datos operadores tiposvariables .)
    STRING          reduce using rule 146 (condiciones -> datos operadores tiposvariables .)
    INTEGERW        reduce using rule 146 (condiciones -> datos operadores tiposvariables .)
    INTEGER         reduce using rule 146 (condiciones -> datos operadores tiposvariables .)
    FLOAT           reduce using rule 146 (condiciones -> datos operadores tiposvariables .)
    VAR             reduce using rule 146 (condiciones -> datos operadores tiposvariables .)
    CONSTANT        reduce using rule 146 (condiciones -> datos operadores tiposvariables .)
    LCURLYBRACKET   reduce using rule 146 (condiciones -> datos operadores tiposvariables .)
    LBRACKET        reduce using rule 146 (condiciones -> datos operadores tiposvariables .)
    SET             reduce using rule 146 (condiciones -> datos operadores tiposvariables .)
    ELSE            reduce using rule 146 (condiciones -> datos operadores tiposvariables .)
    RPARENTHESES    reduce using rule 146 (condiciones -> datos operadores tiposvariables .)


state 228

    (98) datosarray -> datosarray COMMA datosvarios .

    RBRACKET        reduce using rule 98 (datosarray -> datosarray COMMA datosvarios .)
    COMMA           reduce using rule 98 (datosarray -> datosarray COMMA datosvarios .)


state 229

    (125) integer -> INTEGER DOT CEIL LPARENTHESES . RPARENTHESES
    (126) integer -> INTEGER DOT CEIL LPARENTHESES . INTEGER RPARENTHESES

    RPARENTHESES    shift and go to state 276
    INTEGER         shift and go to state 275


state 230

    (127) integer -> INTEGER DOT FLOOR LPARENTHESES . RPARENTHESES
    (128) integer -> INTEGER DOT FLOOR LPARENTHESES . INTEGER RPARENTHESES

    RPARENTHESES    shift and go to state 278
    INTEGER         shift and go to state 277


state 231

    (165) stringOpt -> INSERT LPARENTHESES . INTEGER COMMA STRING RPARENTHESES

    INTEGER         shift and go to state 279


state 232

    (124) integer -> INTEGERW DOT SQRT LPARENTHESES . INTEGER RPARENTHESES

    INTEGER         shift and go to state 280


state 233

    (130) float -> FLOAT DOT CEIL LPARENTHESES . RPARENTHESES
    (131) float -> FLOAT DOT CEIL LPARENTHESES . INTEGER RPARENTHESES

    RPARENTHESES    shift and go to state 281
    INTEGER         shift and go to state 282


state 234

    (132) float -> FLOAT DOT FLOOR LPARENTHESES . RPARENTHESES
    (133) float -> FLOAT DOT FLOOR LPARENTHESES . INTEGER RPARENTHESES

    RPARENTHESES    shift and go to state 283
    INTEGER         shift and go to state 284


state 235

    (58) elementoHash -> datos EQUAL GREATERTHAN . datos maselementos
    (48) datos -> . INTEGER
    (49) datos -> . FLOAT
    (50) datos -> . STRING
    (51) datos -> . booleanos
    (52) booleanos -> . TRUE
    (53) booleanos -> . FALSE

    INTEGER         shift and go to state 84
    FLOAT           shift and go to state 85
    STRING          shift and go to state 73
    TRUE            shift and go to state 75
    FALSE           shift and go to state 76

    datos                          shift and go to state 285
    booleanos                      shift and go to state 74

state 236

    (147) set -> SET LBRACKET elementoSet RBRACKET .

    DOT             reduce using rule 147 (set -> SET LBRACKET elementoSet RBRACKET .)
    LOCALVAR        reduce using rule 147 (set -> SET LBRACKET elementoSet RBRACKET .)
    FOR             reduce using rule 147 (set -> SET LBRACKET elementoSet RBRACKET .)
    IF              reduce using rule 147 (set -> SET LBRACKET elementoSet RBRACKET .)
    UNLESS          reduce using rule 147 (set -> SET LBRACKET elementoSet RBRACKET .)
    PUTS            reduce using rule 147 (set -> SET LBRACKET elementoSet RBRACKET .)
    PRINT           reduce using rule 147 (set -> SET LBRACKET elementoSet RBRACKET .)
    STRING          reduce using rule 147 (set -> SET LBRACKET elementoSet RBRACKET .)
    INTEGERW        reduce using rule 147 (set -> SET LBRACKET elementoSet RBRACKET .)
    INTEGER         reduce using rule 147 (set -> SET LBRACKET elementoSet RBRACKET .)
    FLOAT           reduce using rule 147 (set -> SET LBRACKET elementoSet RBRACKET .)
    VAR             reduce using rule 147 (set -> SET LBRACKET elementoSet RBRACKET .)
    CONSTANT        reduce using rule 147 (set -> SET LBRACKET elementoSet RBRACKET .)
    LCURLYBRACKET   reduce using rule 147 (set -> SET LBRACKET elementoSet RBRACKET .)
    LBRACKET        reduce using rule 147 (set -> SET LBRACKET elementoSet RBRACKET .)
    SET             reduce using rule 147 (set -> SET LBRACKET elementoSet RBRACKET .)
    $end            reduce using rule 147 (set -> SET LBRACKET elementoSet RBRACKET .)
    ELSE            reduce using rule 147 (set -> SET LBRACKET elementoSet RBRACKET .)
    END             reduce using rule 147 (set -> SET LBRACKET elementoSet RBRACKET .)
    RETURN          reduce using rule 147 (set -> SET LBRACKET elementoSet RBRACKET .)


state 237

    (150) elementoSet -> datos otroElemento .

    RBRACKET        reduce using rule 150 (elementoSet -> datos otroElemento .)
    COMMA           reduce using rule 150 (elementoSet -> datos otroElemento .)


state 238

    (152) otroElemento -> COMMA . elementoSet otroElemento
    (148) elementoSet -> .
    (149) elementoSet -> . datos
    (150) elementoSet -> . datos otroElemento
    (48) datos -> . INTEGER
    (49) datos -> . FLOAT
    (50) datos -> . STRING
    (51) datos -> . booleanos
    (52) booleanos -> . TRUE
    (53) booleanos -> . FALSE

    RBRACKET        reduce using rule 148 (elementoSet -> .)
    COMMA           reduce using rule 148 (elementoSet -> .)
    INTEGER         shift and go to state 84
    FLOAT           shift and go to state 85
    STRING          shift and go to state 73
    TRUE            shift and go to state 75
    FALSE           shift and go to state 76

    elementoSet                    shift and go to state 286
    datos                          shift and go to state 182
    booleanos                      shift and go to state 74

state 239

    (8) argumentos -> LOCALVAR EQUAL . LCURLYBRACKET RCURLYBRACKET
    (11) variosargumentos -> LOCALVAR EQUAL . datos
    (13) variosargumentos -> LOCALVAR EQUAL . datos masargumentos
    (48) datos -> . INTEGER
    (49) datos -> . FLOAT
    (50) datos -> . STRING
    (51) datos -> . booleanos
    (52) booleanos -> . TRUE
    (53) booleanos -> . FALSE

    LCURLYBRACKET   shift and go to state 287
    INTEGER         shift and go to state 84
    FLOAT           shift and go to state 85
    STRING          shift and go to state 73
    TRUE            shift and go to state 75
    FALSE           shift and go to state 76

    datos                          shift and go to state 288
    booleanos                      shift and go to state 74

state 240

    (9) argumentos -> LOCALVAR TWOPOINTS . datos
    (48) datos -> . INTEGER
    (49) datos -> . FLOAT
    (50) datos -> . STRING
    (51) datos -> . booleanos
    (52) booleanos -> . TRUE
    (53) booleanos -> . FALSE

    INTEGER         shift and go to state 84
    FLOAT           shift and go to state 85
    STRING          shift and go to state 73
    TRUE            shift and go to state 75
    FALSE           shift and go to state 76

    datos                          shift and go to state 289
    booleanos                      shift and go to state 74

state 241

    (12) variosargumentos -> LOCALVAR masargumentos .

    RPARENTHESES    reduce using rule 12 (variosargumentos -> LOCALVAR masargumentos .)


state 242

    (14) masargumentos -> COMMA . variosargumentos
    (10) variosargumentos -> . LOCALVAR
    (11) variosargumentos -> . LOCALVAR EQUAL datos
    (12) variosargumentos -> . LOCALVAR masargumentos
    (13) variosargumentos -> . LOCALVAR EQUAL datos masargumentos

    LOCALVAR        shift and go to state 291

    variosargumentos               shift and go to state 290

state 243

    (3) funcion -> DEF LOCALVAR LPARENTHESES argumentos RPARENTHESES . cuerpo END
    (4) funcion -> DEF LOCALVAR LPARENTHESES argumentos RPARENTHESES . cuerpo retornar END
    (17) cuerpo -> . declaracion cuerpo
    (18) cuerpo -> . asignacion cuerpo
    (19) cuerpo -> . loop cuerpo
    (20) cuerpo -> . estructurasDatos cuerpo
    (21) cuerpo -> . if cuerpo
    (22) cuerpo -> . unless cuerpo
    (23) cuerpo -> . impresion cuerpo
    (24) cuerpo -> . operacionSet cuerpo
    (25) cuerpo -> . operacionarray cuerpo
    (26) cuerpo -> . operacionHash cuerpo
    (27) cuerpo -> . string cuerpo
    (28) cuerpo -> . integer cuerpo
    (29) cuerpo -> . float cuerpo
    (30) cuerpo -> .
    (32) declaracion -> . tiposvariables EQUAL datos
    (33) declaracion -> . tiposvariables EQUAL estructurasDatos
    (34) declaracion -> . tiposvariables EQUAL expresion
    (35) declaracion -> . tiposvariables EQUAL declaracion
    (36) declaracion -> . tiposvariables EQUAL casting
    (37) asignacion -> . LOCALVAR PLUSASSIGN datosAsignacion
    (38) asignacion -> . LOCALVAR MINASSIGN datosAsignacion
    (39) asignacion -> . LOCALVAR DIVASSIGN datosAsignacion
    (40) asignacion -> . LOCALVAR TIMESASSIGN datosAsignacion
    (41) asignacion -> . LOCALVAR MODASSIGN datosAsignacion
    (42) asignacion -> . LOCALVAR EXPASSIGN datosAsignacion
    (31) loop -> . FOR LOCALVAR IN rango cuerpo END
    (54) estructurasDatos -> . hash
    (55) estructurasDatos -> . array
    (56) estructurasDatos -> . set
    (114) if -> . IF datoscompletos operadores datoscompletos cuerpo END
    (115) if -> . IF datoscompletos operadores datoscompletos cuerpo else
    (135) unless -> . UNLESS expresionCondicional cuerpo ELSE cuerpo END
    (72) impresion -> . PUTS datos
    (73) impresion -> . PUTS LOCALVAR
    (74) impresion -> . PRINT datos
    (75) impresion -> . PRINT LOCALVAR
    (153) operacionSet -> . set DOT ADD LPARENTHESES datos RPARENTHESES
    (154) operacionSet -> . set DOT ADD LPARENTHESES tiposvariables RPARENTHESES
    (155) operacionSet -> . set DOT CLEAR
    (156) operacionSet -> . set DOT DELETE LPARENTHESES datos RPARENTHESES
    (157) operacionSet -> . set DOT DELETE LPARENTHESES tiposvariables RPARENTHESES
    (99) operacionarray -> . array LBRACKET INTEGER RBRACKET
    (100) operacionarray -> . array DOT TAKE LPARENTHESES INTEGER RPARENTHESES
    (101) operacionarray -> . array DOT DROP LPARENTHESES INTEGER RPARENTHESES
    (102) operacionarray -> . array DOT push maspush
    (107) operacionarray -> . array DOT POP
    (108) operacionarray -> . array DOT POP LPARENTHESES INTEGER RPARENTHESES
    (109) operacionarray -> . array DOT DELETE LPARENTHESES INTEGER RPARENTHESES
    (110) operacionarray -> . array DOT LENGTH LPARENTHESES RPARENTHESES
    (111) operacionarray -> . array DOT EMPTY QUESTIONMARK
    (62) operacionHash -> . hash LBRACKET datos RBRACKET
    (63) operacionHash -> . hash LBRACKET datos RBRACKET EQUAL datos
    (64) operacionHash -> . hash DOT INCLUDE QUESTIONMARK LPARENTHESES datos RPARENTHESES
    (65) operacionHash -> . hash DOT DELETE LPARENTHESES datos RPARENTHESES
    (66) operacionHash -> . hash DOT KEYS
    (67) operacionHash -> . hash DOT EMPTY QUESTIONMARK
    (68) operacionHash -> . hash DOT SIZE
    (69) operacionHash -> . hash DOT LENGTH
    (158) string -> . STRING PLUS STRING
    (159) string -> . STRING MULTIPLY INTEGER
    (160) string -> . STRING DOT stringOpt
    (124) integer -> . INTEGERW DOT SQRT LPARENTHESES INTEGER RPARENTHESES
    (125) integer -> . INTEGER DOT CEIL LPARENTHESES RPARENTHESES
    (126) integer -> . INTEGER DOT CEIL LPARENTHESES INTEGER RPARENTHESES
    (127) integer -> . INTEGER DOT FLOOR LPARENTHESES RPARENTHESES
    (128) integer -> . INTEGER DOT FLOOR LPARENTHESES INTEGER RPARENTHESES
    (129) integer -> . INTEGER DOT ABS
    (130) float -> . FLOAT DOT CEIL LPARENTHESES RPARENTHESES
    (131) float -> . FLOAT DOT CEIL LPARENTHESES INTEGER RPARENTHESES
    (132) float -> . FLOAT DOT FLOOR LPARENTHESES RPARENTHESES
    (133) float -> . FLOAT DOT FLOOR LPARENTHESES INTEGER RPARENTHESES
    (134) float -> . FLOAT DOT ABS
    (45) tiposvariables -> . VAR
    (46) tiposvariables -> . LOCALVAR
    (47) tiposvariables -> . CONSTANT
    (57) hash -> . LCURLYBRACKET elementoHash RCURLYBRACKET
    (91) array -> . LBRACKET RBRACKET
    (92) array -> . LBRACKET datosarray RBRACKET
    (147) set -> . SET LBRACKET elementoSet RBRACKET

    END             reduce using rule 30 (cuerpo -> .)
    RETURN          reduce using rule 30 (cuerpo -> .)
    LOCALVAR        shift and go to state 18
    FOR             shift and go to state 20
    IF              shift and go to state 24
    UNLESS          shift and go to state 25
    PUTS            shift and go to state 26
    PRINT           shift and go to state 27
    STRING          shift and go to state 30
    INTEGERW        shift and go to state 31
    INTEGER         shift and go to state 29
    FLOAT           shift and go to state 32
    VAR             shift and go to state 33
    CONSTANT        shift and go to state 34
    LCURLYBRACKET   shift and go to state 35
    LBRACKET        shift and go to state 28
    SET             shift and go to state 36

    cuerpo                         shift and go to state 292
    declaracion                    shift and go to state 4
    asignacion                     shift and go to state 5
    loop                           shift and go to state 6
    estructurasDatos               shift and go to state 7
    if                             shift and go to state 8
    unless                         shift and go to state 9
    impresion                      shift and go to state 10
    operacionSet                   shift and go to state 11
    operacionarray                 shift and go to state 12
    operacionHash                  shift and go to state 13
    string                         shift and go to state 14
    integer                        shift and go to state 15
    float                          shift and go to state 16
    tiposvariables                 shift and go to state 19
    hash                           shift and go to state 21
    array                          shift and go to state 22
    set                            shift and go to state 23

state 244

    (6) argumentos -> MULTIPLY LOCALVAR .

    RPARENTHESES    reduce using rule 6 (argumentos -> MULTIPLY LOCALVAR .)


state 245

    (7) argumentos -> TWOSTARS LOCALVAR .

    RPARENTHESES    reduce using rule 7 (argumentos -> TWOSTARS LOCALVAR .)


state 246

    (166) casting -> STRING DOT TO_I .

    LOCALVAR        reduce using rule 166 (casting -> STRING DOT TO_I .)
    FOR             reduce using rule 166 (casting -> STRING DOT TO_I .)
    IF              reduce using rule 166 (casting -> STRING DOT TO_I .)
    UNLESS          reduce using rule 166 (casting -> STRING DOT TO_I .)
    PUTS            reduce using rule 166 (casting -> STRING DOT TO_I .)
    PRINT           reduce using rule 166 (casting -> STRING DOT TO_I .)
    STRING          reduce using rule 166 (casting -> STRING DOT TO_I .)
    INTEGERW        reduce using rule 166 (casting -> STRING DOT TO_I .)
    INTEGER         reduce using rule 166 (casting -> STRING DOT TO_I .)
    FLOAT           reduce using rule 166 (casting -> STRING DOT TO_I .)
    VAR             reduce using rule 166 (casting -> STRING DOT TO_I .)
    CONSTANT        reduce using rule 166 (casting -> STRING DOT TO_I .)
    LCURLYBRACKET   reduce using rule 166 (casting -> STRING DOT TO_I .)
    LBRACKET        reduce using rule 166 (casting -> STRING DOT TO_I .)
    SET             reduce using rule 166 (casting -> STRING DOT TO_I .)
    $end            reduce using rule 166 (casting -> STRING DOT TO_I .)
    ELSE            reduce using rule 166 (casting -> STRING DOT TO_I .)
    END             reduce using rule 166 (casting -> STRING DOT TO_I .)
    RETURN          reduce using rule 166 (casting -> STRING DOT TO_I .)


state 247

    (167) casting -> STRING DOT TO_F .

    LOCALVAR        reduce using rule 167 (casting -> STRING DOT TO_F .)
    FOR             reduce using rule 167 (casting -> STRING DOT TO_F .)
    IF              reduce using rule 167 (casting -> STRING DOT TO_F .)
    UNLESS          reduce using rule 167 (casting -> STRING DOT TO_F .)
    PUTS            reduce using rule 167 (casting -> STRING DOT TO_F .)
    PRINT           reduce using rule 167 (casting -> STRING DOT TO_F .)
    STRING          reduce using rule 167 (casting -> STRING DOT TO_F .)
    INTEGERW        reduce using rule 167 (casting -> STRING DOT TO_F .)
    INTEGER         reduce using rule 167 (casting -> STRING DOT TO_F .)
    FLOAT           reduce using rule 167 (casting -> STRING DOT TO_F .)
    VAR             reduce using rule 167 (casting -> STRING DOT TO_F .)
    CONSTANT        reduce using rule 167 (casting -> STRING DOT TO_F .)
    LCURLYBRACKET   reduce using rule 167 (casting -> STRING DOT TO_F .)
    LBRACKET        reduce using rule 167 (casting -> STRING DOT TO_F .)
    SET             reduce using rule 167 (casting -> STRING DOT TO_F .)
    $end            reduce using rule 167 (casting -> STRING DOT TO_F .)
    ELSE            reduce using rule 167 (casting -> STRING DOT TO_F .)
    END             reduce using rule 167 (casting -> STRING DOT TO_F .)
    RETURN          reduce using rule 167 (casting -> STRING DOT TO_F .)


state 248

    (83) masoperaciones -> operador expresion . masoperaciones
    (85) masoperaciones -> operador expresion .
    (83) masoperaciones -> . operador expresion masoperaciones
    (84) masoperaciones -> . operador number
    (85) masoperaciones -> . operador expresion
    (86) operador -> . PLUS
    (87) operador -> . MINUS
    (88) operador -> . MULTIPLY
    (89) operador -> . DIVIDE
    (90) operador -> . PERCENTAGE

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for PERCENTAGE resolved as shift
    LOCALVAR        reduce using rule 85 (masoperaciones -> operador expresion .)
    FOR             reduce using rule 85 (masoperaciones -> operador expresion .)
    IF              reduce using rule 85 (masoperaciones -> operador expresion .)
    UNLESS          reduce using rule 85 (masoperaciones -> operador expresion .)
    PUTS            reduce using rule 85 (masoperaciones -> operador expresion .)
    PRINT           reduce using rule 85 (masoperaciones -> operador expresion .)
    STRING          reduce using rule 85 (masoperaciones -> operador expresion .)
    INTEGERW        reduce using rule 85 (masoperaciones -> operador expresion .)
    INTEGER         reduce using rule 85 (masoperaciones -> operador expresion .)
    FLOAT           reduce using rule 85 (masoperaciones -> operador expresion .)
    VAR             reduce using rule 85 (masoperaciones -> operador expresion .)
    CONSTANT        reduce using rule 85 (masoperaciones -> operador expresion .)
    LCURLYBRACKET   reduce using rule 85 (masoperaciones -> operador expresion .)
    LBRACKET        reduce using rule 85 (masoperaciones -> operador expresion .)
    SET             reduce using rule 85 (masoperaciones -> operador expresion .)
    $end            reduce using rule 85 (masoperaciones -> operador expresion .)
    ELSE            reduce using rule 85 (masoperaciones -> operador expresion .)
    END             reduce using rule 85 (masoperaciones -> operador expresion .)
    RETURN          reduce using rule 85 (masoperaciones -> operador expresion .)
    RPARENTHESES    reduce using rule 85 (masoperaciones -> operador expresion .)
    PLUS            shift and go to state 191
    MINUS           shift and go to state 192
    MULTIPLY        shift and go to state 193
    DIVIDE          shift and go to state 194
    PERCENTAGE      shift and go to state 195

  ! PLUS            [ reduce using rule 85 (masoperaciones -> operador expresion .) ]
  ! MINUS           [ reduce using rule 85 (masoperaciones -> operador expresion .) ]
  ! MULTIPLY        [ reduce using rule 85 (masoperaciones -> operador expresion .) ]
  ! DIVIDE          [ reduce using rule 85 (masoperaciones -> operador expresion .) ]
  ! PERCENTAGE      [ reduce using rule 85 (masoperaciones -> operador expresion .) ]

    operador                       shift and go to state 190
    masoperaciones                 shift and go to state 293

state 249

    (84) masoperaciones -> operador number .
    (81) operacion -> number . operador number
    (86) operador -> . PLUS
    (87) operador -> . MINUS
    (88) operador -> . MULTIPLY
    (89) operador -> . DIVIDE
    (90) operador -> . PERCENTAGE

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for PERCENTAGE resolved as shift
    LOCALVAR        reduce using rule 84 (masoperaciones -> operador number .)
    FOR             reduce using rule 84 (masoperaciones -> operador number .)
    IF              reduce using rule 84 (masoperaciones -> operador number .)
    UNLESS          reduce using rule 84 (masoperaciones -> operador number .)
    PUTS            reduce using rule 84 (masoperaciones -> operador number .)
    PRINT           reduce using rule 84 (masoperaciones -> operador number .)
    STRING          reduce using rule 84 (masoperaciones -> operador number .)
    INTEGERW        reduce using rule 84 (masoperaciones -> operador number .)
    INTEGER         reduce using rule 84 (masoperaciones -> operador number .)
    FLOAT           reduce using rule 84 (masoperaciones -> operador number .)
    VAR             reduce using rule 84 (masoperaciones -> operador number .)
    CONSTANT        reduce using rule 84 (masoperaciones -> operador number .)
    LCURLYBRACKET   reduce using rule 84 (masoperaciones -> operador number .)
    LBRACKET        reduce using rule 84 (masoperaciones -> operador number .)
    SET             reduce using rule 84 (masoperaciones -> operador number .)
    $end            reduce using rule 84 (masoperaciones -> operador number .)
    ELSE            reduce using rule 84 (masoperaciones -> operador number .)
    END             reduce using rule 84 (masoperaciones -> operador number .)
    RETURN          reduce using rule 84 (masoperaciones -> operador number .)
    RPARENTHESES    reduce using rule 84 (masoperaciones -> operador number .)
    PLUS            shift and go to state 191
    MINUS           shift and go to state 192
    MULTIPLY        shift and go to state 193
    DIVIDE          shift and go to state 194
    PERCENTAGE      shift and go to state 195

  ! PLUS            [ reduce using rule 84 (masoperaciones -> operador number .) ]
  ! MINUS           [ reduce using rule 84 (masoperaciones -> operador number .) ]
  ! MULTIPLY        [ reduce using rule 84 (masoperaciones -> operador number .) ]
  ! DIVIDE          [ reduce using rule 84 (masoperaciones -> operador number .) ]
  ! PERCENTAGE      [ reduce using rule 84 (masoperaciones -> operador number .) ]

    operador                       shift and go to state 199

state 250

    (79) expresion -> LPARENTHESES operacion RPARENTHESES .
    (80) expresion -> LPARENTHESES operacion RPARENTHESES . masoperaciones
    (83) masoperaciones -> . operador expresion masoperaciones
    (84) masoperaciones -> . operador number
    (85) masoperaciones -> . operador expresion
    (86) operador -> . PLUS
    (87) operador -> . MINUS
    (88) operador -> . MULTIPLY
    (89) operador -> . DIVIDE
    (90) operador -> . PERCENTAGE

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for PERCENTAGE resolved as shift
    LOCALVAR        reduce using rule 79 (expresion -> LPARENTHESES operacion RPARENTHESES .)
    FOR             reduce using rule 79 (expresion -> LPARENTHESES operacion RPARENTHESES .)
    IF              reduce using rule 79 (expresion -> LPARENTHESES operacion RPARENTHESES .)
    UNLESS          reduce using rule 79 (expresion -> LPARENTHESES operacion RPARENTHESES .)
    PUTS            reduce using rule 79 (expresion -> LPARENTHESES operacion RPARENTHESES .)
    PRINT           reduce using rule 79 (expresion -> LPARENTHESES operacion RPARENTHESES .)
    STRING          reduce using rule 79 (expresion -> LPARENTHESES operacion RPARENTHESES .)
    INTEGERW        reduce using rule 79 (expresion -> LPARENTHESES operacion RPARENTHESES .)
    INTEGER         reduce using rule 79 (expresion -> LPARENTHESES operacion RPARENTHESES .)
    FLOAT           reduce using rule 79 (expresion -> LPARENTHESES operacion RPARENTHESES .)
    VAR             reduce using rule 79 (expresion -> LPARENTHESES operacion RPARENTHESES .)
    CONSTANT        reduce using rule 79 (expresion -> LPARENTHESES operacion RPARENTHESES .)
    LCURLYBRACKET   reduce using rule 79 (expresion -> LPARENTHESES operacion RPARENTHESES .)
    LBRACKET        reduce using rule 79 (expresion -> LPARENTHESES operacion RPARENTHESES .)
    SET             reduce using rule 79 (expresion -> LPARENTHESES operacion RPARENTHESES .)
    $end            reduce using rule 79 (expresion -> LPARENTHESES operacion RPARENTHESES .)
    ELSE            reduce using rule 79 (expresion -> LPARENTHESES operacion RPARENTHESES .)
    END             reduce using rule 79 (expresion -> LPARENTHESES operacion RPARENTHESES .)
    RETURN          reduce using rule 79 (expresion -> LPARENTHESES operacion RPARENTHESES .)
    RPARENTHESES    reduce using rule 79 (expresion -> LPARENTHESES operacion RPARENTHESES .)
    PLUS            shift and go to state 191
    MINUS           shift and go to state 192
    MULTIPLY        shift and go to state 193
    DIVIDE          shift and go to state 194
    PERCENTAGE      shift and go to state 195

  ! PLUS            [ reduce using rule 79 (expresion -> LPARENTHESES operacion RPARENTHESES .) ]
  ! MINUS           [ reduce using rule 79 (expresion -> LPARENTHESES operacion RPARENTHESES .) ]
  ! MULTIPLY        [ reduce using rule 79 (expresion -> LPARENTHESES operacion RPARENTHESES .) ]
  ! DIVIDE          [ reduce using rule 79 (expresion -> LPARENTHESES operacion RPARENTHESES .) ]
  ! PERCENTAGE      [ reduce using rule 79 (expresion -> LPARENTHESES operacion RPARENTHESES .) ]

    masoperaciones                 shift and go to state 294
    operador                       shift and go to state 190

state 251

    (168) casting -> number DOT TO_S .

    LOCALVAR        reduce using rule 168 (casting -> number DOT TO_S .)
    FOR             reduce using rule 168 (casting -> number DOT TO_S .)
    IF              reduce using rule 168 (casting -> number DOT TO_S .)
    UNLESS          reduce using rule 168 (casting -> number DOT TO_S .)
    PUTS            reduce using rule 168 (casting -> number DOT TO_S .)
    PRINT           reduce using rule 168 (casting -> number DOT TO_S .)
    STRING          reduce using rule 168 (casting -> number DOT TO_S .)
    INTEGERW        reduce using rule 168 (casting -> number DOT TO_S .)
    INTEGER         reduce using rule 168 (casting -> number DOT TO_S .)
    FLOAT           reduce using rule 168 (casting -> number DOT TO_S .)
    VAR             reduce using rule 168 (casting -> number DOT TO_S .)
    CONSTANT        reduce using rule 168 (casting -> number DOT TO_S .)
    LCURLYBRACKET   reduce using rule 168 (casting -> number DOT TO_S .)
    LBRACKET        reduce using rule 168 (casting -> number DOT TO_S .)
    SET             reduce using rule 168 (casting -> number DOT TO_S .)
    $end            reduce using rule 168 (casting -> number DOT TO_S .)
    ELSE            reduce using rule 168 (casting -> number DOT TO_S .)
    END             reduce using rule 168 (casting -> number DOT TO_S .)
    RETURN          reduce using rule 168 (casting -> number DOT TO_S .)


state 252

    (81) operacion -> number operador number .

    PLUS            reduce using rule 81 (operacion -> number operador number .)
    MINUS           reduce using rule 81 (operacion -> number operador number .)
    MULTIPLY        reduce using rule 81 (operacion -> number operador number .)
    DIVIDE          reduce using rule 81 (operacion -> number operador number .)
    PERCENTAGE      reduce using rule 81 (operacion -> number operador number .)
    LOCALVAR        reduce using rule 81 (operacion -> number operador number .)
    FOR             reduce using rule 81 (operacion -> number operador number .)
    IF              reduce using rule 81 (operacion -> number operador number .)
    UNLESS          reduce using rule 81 (operacion -> number operador number .)
    PUTS            reduce using rule 81 (operacion -> number operador number .)
    PRINT           reduce using rule 81 (operacion -> number operador number .)
    STRING          reduce using rule 81 (operacion -> number operador number .)
    INTEGERW        reduce using rule 81 (operacion -> number operador number .)
    INTEGER         reduce using rule 81 (operacion -> number operador number .)
    FLOAT           reduce using rule 81 (operacion -> number operador number .)
    VAR             reduce using rule 81 (operacion -> number operador number .)
    CONSTANT        reduce using rule 81 (operacion -> number operador number .)
    LCURLYBRACKET   reduce using rule 81 (operacion -> number operador number .)
    LBRACKET        reduce using rule 81 (operacion -> number operador number .)
    SET             reduce using rule 81 (operacion -> number operador number .)
    $end            reduce using rule 81 (operacion -> number operador number .)
    ELSE            reduce using rule 81 (operacion -> number operador number .)
    END             reduce using rule 81 (operacion -> number operador number .)
    RETURN          reduce using rule 81 (operacion -> number operador number .)
    RPARENTHESES    reduce using rule 81 (operacion -> number operador number .)


state 253

    (31) loop -> FOR LOCALVAR IN rango cuerpo . END

    END             shift and go to state 295


state 254

    (70) rango -> INTEGER RANGEINCLUSIVE . INTEGER

    INTEGER         shift and go to state 296


state 255

    (71) rango -> INTEGER RANGEXCLUSIVE . INTEGER

    INTEGER         shift and go to state 297


state 256

    (63) operacionHash -> hash LBRACKET datos RBRACKET EQUAL . datos
    (48) datos -> . INTEGER
    (49) datos -> . FLOAT
    (50) datos -> . STRING
    (51) datos -> . booleanos
    (52) booleanos -> . TRUE
    (53) booleanos -> . FALSE

    INTEGER         shift and go to state 84
    FLOAT           shift and go to state 85
    STRING          shift and go to state 73
    TRUE            shift and go to state 75
    FALSE           shift and go to state 76

    datos                          shift and go to state 298
    booleanos                      shift and go to state 74

state 257

    (64) operacionHash -> hash DOT INCLUDE QUESTIONMARK LPARENTHESES . datos RPARENTHESES
    (48) datos -> . INTEGER
    (49) datos -> . FLOAT
    (50) datos -> . STRING
    (51) datos -> . booleanos
    (52) booleanos -> . TRUE
    (53) booleanos -> . FALSE

    INTEGER         shift and go to state 84
    FLOAT           shift and go to state 85
    STRING          shift and go to state 73
    TRUE            shift and go to state 75
    FALSE           shift and go to state 76

    datos                          shift and go to state 299
    booleanos                      shift and go to state 74

state 258

    (65) operacionHash -> hash DOT DELETE LPARENTHESES datos . RPARENTHESES

    RPARENTHESES    shift and go to state 300


state 259

    (100) operacionarray -> array DOT TAKE LPARENTHESES INTEGER . RPARENTHESES

    RPARENTHESES    shift and go to state 301


state 260

    (101) operacionarray -> array DOT DROP LPARENTHESES INTEGER . RPARENTHESES

    RPARENTHESES    shift and go to state 302


state 261

    (106) maspush -> DOT push . maspush
    (105) maspush -> .
    (106) maspush -> . DOT push maspush

    LOCALVAR        reduce using rule 105 (maspush -> .)
    FOR             reduce using rule 105 (maspush -> .)
    IF              reduce using rule 105 (maspush -> .)
    UNLESS          reduce using rule 105 (maspush -> .)
    PUTS            reduce using rule 105 (maspush -> .)
    PRINT           reduce using rule 105 (maspush -> .)
    STRING          reduce using rule 105 (maspush -> .)
    INTEGERW        reduce using rule 105 (maspush -> .)
    INTEGER         reduce using rule 105 (maspush -> .)
    FLOAT           reduce using rule 105 (maspush -> .)
    VAR             reduce using rule 105 (maspush -> .)
    CONSTANT        reduce using rule 105 (maspush -> .)
    LCURLYBRACKET   reduce using rule 105 (maspush -> .)
    LBRACKET        reduce using rule 105 (maspush -> .)
    SET             reduce using rule 105 (maspush -> .)
    $end            reduce using rule 105 (maspush -> .)
    ELSE            reduce using rule 105 (maspush -> .)
    END             reduce using rule 105 (maspush -> .)
    RETURN          reduce using rule 105 (maspush -> .)
    DOT             shift and go to state 209

    maspush                        shift and go to state 303

state 262

    (108) operacionarray -> array DOT POP LPARENTHESES INTEGER . RPARENTHESES

    RPARENTHESES    shift and go to state 304


state 263

    (109) operacionarray -> array DOT DELETE LPARENTHESES INTEGER . RPARENTHESES

    RPARENTHESES    shift and go to state 305


state 264

    (110) operacionarray -> array DOT LENGTH LPARENTHESES RPARENTHESES .

    LOCALVAR        reduce using rule 110 (operacionarray -> array DOT LENGTH LPARENTHESES RPARENTHESES .)
    FOR             reduce using rule 110 (operacionarray -> array DOT LENGTH LPARENTHESES RPARENTHESES .)
    IF              reduce using rule 110 (operacionarray -> array DOT LENGTH LPARENTHESES RPARENTHESES .)
    UNLESS          reduce using rule 110 (operacionarray -> array DOT LENGTH LPARENTHESES RPARENTHESES .)
    PUTS            reduce using rule 110 (operacionarray -> array DOT LENGTH LPARENTHESES RPARENTHESES .)
    PRINT           reduce using rule 110 (operacionarray -> array DOT LENGTH LPARENTHESES RPARENTHESES .)
    STRING          reduce using rule 110 (operacionarray -> array DOT LENGTH LPARENTHESES RPARENTHESES .)
    INTEGERW        reduce using rule 110 (operacionarray -> array DOT LENGTH LPARENTHESES RPARENTHESES .)
    INTEGER         reduce using rule 110 (operacionarray -> array DOT LENGTH LPARENTHESES RPARENTHESES .)
    FLOAT           reduce using rule 110 (operacionarray -> array DOT LENGTH LPARENTHESES RPARENTHESES .)
    VAR             reduce using rule 110 (operacionarray -> array DOT LENGTH LPARENTHESES RPARENTHESES .)
    CONSTANT        reduce using rule 110 (operacionarray -> array DOT LENGTH LPARENTHESES RPARENTHESES .)
    LCURLYBRACKET   reduce using rule 110 (operacionarray -> array DOT LENGTH LPARENTHESES RPARENTHESES .)
    LBRACKET        reduce using rule 110 (operacionarray -> array DOT LENGTH LPARENTHESES RPARENTHESES .)
    SET             reduce using rule 110 (operacionarray -> array DOT LENGTH LPARENTHESES RPARENTHESES .)
    $end            reduce using rule 110 (operacionarray -> array DOT LENGTH LPARENTHESES RPARENTHESES .)
    ELSE            reduce using rule 110 (operacionarray -> array DOT LENGTH LPARENTHESES RPARENTHESES .)
    END             reduce using rule 110 (operacionarray -> array DOT LENGTH LPARENTHESES RPARENTHESES .)
    RETURN          reduce using rule 110 (operacionarray -> array DOT LENGTH LPARENTHESES RPARENTHESES .)


state 265

    (103) push -> PUSH LPARENTHESES datosvarios . RPARENTHESES

    RPARENTHESES    shift and go to state 306


state 266

    (153) operacionSet -> set DOT ADD LPARENTHESES datos . RPARENTHESES

    RPARENTHESES    shift and go to state 307


state 267

    (154) operacionSet -> set DOT ADD LPARENTHESES tiposvariables . RPARENTHESES

    RPARENTHESES    shift and go to state 308


state 268

    (156) operacionSet -> set DOT DELETE LPARENTHESES datos . RPARENTHESES

    RPARENTHESES    shift and go to state 309


state 269

    (157) operacionSet -> set DOT DELETE LPARENTHESES tiposvariables . RPARENTHESES

    RPARENTHESES    shift and go to state 310


state 270

    (114) if -> IF datoscompletos operadores datoscompletos cuerpo . END
    (115) if -> IF datoscompletos operadores datoscompletos cuerpo . else
    (116) else -> . ELSE cuerpo END

    END             shift and go to state 311
    ELSE            shift and go to state 313

    else                           shift and go to state 312

state 271

    (135) unless -> UNLESS expresionCondicional cuerpo ELSE cuerpo . END

    END             shift and go to state 314


state 272

    (141) boolean -> EXCLAMATION LPARENTHESES . condiciones RPARENTHESES
    (143) condiciones -> . tiposvariables operadores tiposvariables
    (144) condiciones -> . datos operadores datos
    (145) condiciones -> . tiposvariables operadores datos
    (146) condiciones -> . datos operadores tiposvariables
    (45) tiposvariables -> . VAR
    (46) tiposvariables -> . LOCALVAR
    (47) tiposvariables -> . CONSTANT
    (48) datos -> . INTEGER
    (49) datos -> . FLOAT
    (50) datos -> . STRING
    (51) datos -> . booleanos
    (52) booleanos -> . TRUE
    (53) booleanos -> . FALSE

    VAR             shift and go to state 33
    LOCALVAR        shift and go to state 83
    CONSTANT        shift and go to state 34
    INTEGER         shift and go to state 84
    FLOAT           shift and go to state 85
    STRING          shift and go to state 73
    TRUE            shift and go to state 75
    FALSE           shift and go to state 76

    condiciones                    shift and go to state 315
    tiposvariables                 shift and go to state 81
    datos                          shift and go to state 82
    booleanos                      shift and go to state 74

state 273

    (137) expresionCondicional -> EXCLAMATION LPARENTHESES boolean RPARENTHESES .

    LOCALVAR        reduce using rule 137 (expresionCondicional -> EXCLAMATION LPARENTHESES boolean RPARENTHESES .)
    FOR             reduce using rule 137 (expresionCondicional -> EXCLAMATION LPARENTHESES boolean RPARENTHESES .)
    IF              reduce using rule 137 (expresionCondicional -> EXCLAMATION LPARENTHESES boolean RPARENTHESES .)
    UNLESS          reduce using rule 137 (expresionCondicional -> EXCLAMATION LPARENTHESES boolean RPARENTHESES .)
    PUTS            reduce using rule 137 (expresionCondicional -> EXCLAMATION LPARENTHESES boolean RPARENTHESES .)
    PRINT           reduce using rule 137 (expresionCondicional -> EXCLAMATION LPARENTHESES boolean RPARENTHESES .)
    STRING          reduce using rule 137 (expresionCondicional -> EXCLAMATION LPARENTHESES boolean RPARENTHESES .)
    INTEGERW        reduce using rule 137 (expresionCondicional -> EXCLAMATION LPARENTHESES boolean RPARENTHESES .)
    INTEGER         reduce using rule 137 (expresionCondicional -> EXCLAMATION LPARENTHESES boolean RPARENTHESES .)
    FLOAT           reduce using rule 137 (expresionCondicional -> EXCLAMATION LPARENTHESES boolean RPARENTHESES .)
    VAR             reduce using rule 137 (expresionCondicional -> EXCLAMATION LPARENTHESES boolean RPARENTHESES .)
    CONSTANT        reduce using rule 137 (expresionCondicional -> EXCLAMATION LPARENTHESES boolean RPARENTHESES .)
    LCURLYBRACKET   reduce using rule 137 (expresionCondicional -> EXCLAMATION LPARENTHESES boolean RPARENTHESES .)
    LBRACKET        reduce using rule 137 (expresionCondicional -> EXCLAMATION LPARENTHESES boolean RPARENTHESES .)
    SET             reduce using rule 137 (expresionCondicional -> EXCLAMATION LPARENTHESES boolean RPARENTHESES .)
    ELSE            reduce using rule 137 (expresionCondicional -> EXCLAMATION LPARENTHESES boolean RPARENTHESES .)


state 274

    (141) boolean -> EXCLAMATION LPARENTHESES condiciones RPARENTHESES .

    DOUBLEAMPERSAND reduce using rule 141 (boolean -> EXCLAMATION LPARENTHESES condiciones RPARENTHESES .)
    DOUBLEPIPE      reduce using rule 141 (boolean -> EXCLAMATION LPARENTHESES condiciones RPARENTHESES .)
    LOCALVAR        reduce using rule 141 (boolean -> EXCLAMATION LPARENTHESES condiciones RPARENTHESES .)
    FOR             reduce using rule 141 (boolean -> EXCLAMATION LPARENTHESES condiciones RPARENTHESES .)
    IF              reduce using rule 141 (boolean -> EXCLAMATION LPARENTHESES condiciones RPARENTHESES .)
    UNLESS          reduce using rule 141 (boolean -> EXCLAMATION LPARENTHESES condiciones RPARENTHESES .)
    PUTS            reduce using rule 141 (boolean -> EXCLAMATION LPARENTHESES condiciones RPARENTHESES .)
    PRINT           reduce using rule 141 (boolean -> EXCLAMATION LPARENTHESES condiciones RPARENTHESES .)
    STRING          reduce using rule 141 (boolean -> EXCLAMATION LPARENTHESES condiciones RPARENTHESES .)
    INTEGERW        reduce using rule 141 (boolean -> EXCLAMATION LPARENTHESES condiciones RPARENTHESES .)
    INTEGER         reduce using rule 141 (boolean -> EXCLAMATION LPARENTHESES condiciones RPARENTHESES .)
    FLOAT           reduce using rule 141 (boolean -> EXCLAMATION LPARENTHESES condiciones RPARENTHESES .)
    VAR             reduce using rule 141 (boolean -> EXCLAMATION LPARENTHESES condiciones RPARENTHESES .)
    CONSTANT        reduce using rule 141 (boolean -> EXCLAMATION LPARENTHESES condiciones RPARENTHESES .)
    LCURLYBRACKET   reduce using rule 141 (boolean -> EXCLAMATION LPARENTHESES condiciones RPARENTHESES .)
    LBRACKET        reduce using rule 141 (boolean -> EXCLAMATION LPARENTHESES condiciones RPARENTHESES .)
    SET             reduce using rule 141 (boolean -> EXCLAMATION LPARENTHESES condiciones RPARENTHESES .)
    ELSE            reduce using rule 141 (boolean -> EXCLAMATION LPARENTHESES condiciones RPARENTHESES .)
    RPARENTHESES    reduce using rule 141 (boolean -> EXCLAMATION LPARENTHESES condiciones RPARENTHESES .)


state 275

    (126) integer -> INTEGER DOT CEIL LPARENTHESES INTEGER . RPARENTHESES

    RPARENTHESES    shift and go to state 316


state 276

    (125) integer -> INTEGER DOT CEIL LPARENTHESES RPARENTHESES .

    LOCALVAR        reduce using rule 125 (integer -> INTEGER DOT CEIL LPARENTHESES RPARENTHESES .)
    FOR             reduce using rule 125 (integer -> INTEGER DOT CEIL LPARENTHESES RPARENTHESES .)
    IF              reduce using rule 125 (integer -> INTEGER DOT CEIL LPARENTHESES RPARENTHESES .)
    UNLESS          reduce using rule 125 (integer -> INTEGER DOT CEIL LPARENTHESES RPARENTHESES .)
    PUTS            reduce using rule 125 (integer -> INTEGER DOT CEIL LPARENTHESES RPARENTHESES .)
    PRINT           reduce using rule 125 (integer -> INTEGER DOT CEIL LPARENTHESES RPARENTHESES .)
    STRING          reduce using rule 125 (integer -> INTEGER DOT CEIL LPARENTHESES RPARENTHESES .)
    INTEGERW        reduce using rule 125 (integer -> INTEGER DOT CEIL LPARENTHESES RPARENTHESES .)
    INTEGER         reduce using rule 125 (integer -> INTEGER DOT CEIL LPARENTHESES RPARENTHESES .)
    FLOAT           reduce using rule 125 (integer -> INTEGER DOT CEIL LPARENTHESES RPARENTHESES .)
    VAR             reduce using rule 125 (integer -> INTEGER DOT CEIL LPARENTHESES RPARENTHESES .)
    CONSTANT        reduce using rule 125 (integer -> INTEGER DOT CEIL LPARENTHESES RPARENTHESES .)
    LCURLYBRACKET   reduce using rule 125 (integer -> INTEGER DOT CEIL LPARENTHESES RPARENTHESES .)
    LBRACKET        reduce using rule 125 (integer -> INTEGER DOT CEIL LPARENTHESES RPARENTHESES .)
    SET             reduce using rule 125 (integer -> INTEGER DOT CEIL LPARENTHESES RPARENTHESES .)
    $end            reduce using rule 125 (integer -> INTEGER DOT CEIL LPARENTHESES RPARENTHESES .)
    ELSE            reduce using rule 125 (integer -> INTEGER DOT CEIL LPARENTHESES RPARENTHESES .)
    END             reduce using rule 125 (integer -> INTEGER DOT CEIL LPARENTHESES RPARENTHESES .)
    RETURN          reduce using rule 125 (integer -> INTEGER DOT CEIL LPARENTHESES RPARENTHESES .)


state 277

    (128) integer -> INTEGER DOT FLOOR LPARENTHESES INTEGER . RPARENTHESES

    RPARENTHESES    shift and go to state 317


state 278

    (127) integer -> INTEGER DOT FLOOR LPARENTHESES RPARENTHESES .

    LOCALVAR        reduce using rule 127 (integer -> INTEGER DOT FLOOR LPARENTHESES RPARENTHESES .)
    FOR             reduce using rule 127 (integer -> INTEGER DOT FLOOR LPARENTHESES RPARENTHESES .)
    IF              reduce using rule 127 (integer -> INTEGER DOT FLOOR LPARENTHESES RPARENTHESES .)
    UNLESS          reduce using rule 127 (integer -> INTEGER DOT FLOOR LPARENTHESES RPARENTHESES .)
    PUTS            reduce using rule 127 (integer -> INTEGER DOT FLOOR LPARENTHESES RPARENTHESES .)
    PRINT           reduce using rule 127 (integer -> INTEGER DOT FLOOR LPARENTHESES RPARENTHESES .)
    STRING          reduce using rule 127 (integer -> INTEGER DOT FLOOR LPARENTHESES RPARENTHESES .)
    INTEGERW        reduce using rule 127 (integer -> INTEGER DOT FLOOR LPARENTHESES RPARENTHESES .)
    INTEGER         reduce using rule 127 (integer -> INTEGER DOT FLOOR LPARENTHESES RPARENTHESES .)
    FLOAT           reduce using rule 127 (integer -> INTEGER DOT FLOOR LPARENTHESES RPARENTHESES .)
    VAR             reduce using rule 127 (integer -> INTEGER DOT FLOOR LPARENTHESES RPARENTHESES .)
    CONSTANT        reduce using rule 127 (integer -> INTEGER DOT FLOOR LPARENTHESES RPARENTHESES .)
    LCURLYBRACKET   reduce using rule 127 (integer -> INTEGER DOT FLOOR LPARENTHESES RPARENTHESES .)
    LBRACKET        reduce using rule 127 (integer -> INTEGER DOT FLOOR LPARENTHESES RPARENTHESES .)
    SET             reduce using rule 127 (integer -> INTEGER DOT FLOOR LPARENTHESES RPARENTHESES .)
    $end            reduce using rule 127 (integer -> INTEGER DOT FLOOR LPARENTHESES RPARENTHESES .)
    ELSE            reduce using rule 127 (integer -> INTEGER DOT FLOOR LPARENTHESES RPARENTHESES .)
    END             reduce using rule 127 (integer -> INTEGER DOT FLOOR LPARENTHESES RPARENTHESES .)
    RETURN          reduce using rule 127 (integer -> INTEGER DOT FLOOR LPARENTHESES RPARENTHESES .)


state 279

    (165) stringOpt -> INSERT LPARENTHESES INTEGER . COMMA STRING RPARENTHESES

    COMMA           shift and go to state 318


state 280

    (124) integer -> INTEGERW DOT SQRT LPARENTHESES INTEGER . RPARENTHESES

    RPARENTHESES    shift and go to state 319


state 281

    (130) float -> FLOAT DOT CEIL LPARENTHESES RPARENTHESES .

    LOCALVAR        reduce using rule 130 (float -> FLOAT DOT CEIL LPARENTHESES RPARENTHESES .)
    FOR             reduce using rule 130 (float -> FLOAT DOT CEIL LPARENTHESES RPARENTHESES .)
    IF              reduce using rule 130 (float -> FLOAT DOT CEIL LPARENTHESES RPARENTHESES .)
    UNLESS          reduce using rule 130 (float -> FLOAT DOT CEIL LPARENTHESES RPARENTHESES .)
    PUTS            reduce using rule 130 (float -> FLOAT DOT CEIL LPARENTHESES RPARENTHESES .)
    PRINT           reduce using rule 130 (float -> FLOAT DOT CEIL LPARENTHESES RPARENTHESES .)
    STRING          reduce using rule 130 (float -> FLOAT DOT CEIL LPARENTHESES RPARENTHESES .)
    INTEGERW        reduce using rule 130 (float -> FLOAT DOT CEIL LPARENTHESES RPARENTHESES .)
    INTEGER         reduce using rule 130 (float -> FLOAT DOT CEIL LPARENTHESES RPARENTHESES .)
    FLOAT           reduce using rule 130 (float -> FLOAT DOT CEIL LPARENTHESES RPARENTHESES .)
    VAR             reduce using rule 130 (float -> FLOAT DOT CEIL LPARENTHESES RPARENTHESES .)
    CONSTANT        reduce using rule 130 (float -> FLOAT DOT CEIL LPARENTHESES RPARENTHESES .)
    LCURLYBRACKET   reduce using rule 130 (float -> FLOAT DOT CEIL LPARENTHESES RPARENTHESES .)
    LBRACKET        reduce using rule 130 (float -> FLOAT DOT CEIL LPARENTHESES RPARENTHESES .)
    SET             reduce using rule 130 (float -> FLOAT DOT CEIL LPARENTHESES RPARENTHESES .)
    $end            reduce using rule 130 (float -> FLOAT DOT CEIL LPARENTHESES RPARENTHESES .)
    ELSE            reduce using rule 130 (float -> FLOAT DOT CEIL LPARENTHESES RPARENTHESES .)
    END             reduce using rule 130 (float -> FLOAT DOT CEIL LPARENTHESES RPARENTHESES .)
    RETURN          reduce using rule 130 (float -> FLOAT DOT CEIL LPARENTHESES RPARENTHESES .)


state 282

    (131) float -> FLOAT DOT CEIL LPARENTHESES INTEGER . RPARENTHESES

    RPARENTHESES    shift and go to state 320


state 283

    (132) float -> FLOAT DOT FLOOR LPARENTHESES RPARENTHESES .

    LOCALVAR        reduce using rule 132 (float -> FLOAT DOT FLOOR LPARENTHESES RPARENTHESES .)
    FOR             reduce using rule 132 (float -> FLOAT DOT FLOOR LPARENTHESES RPARENTHESES .)
    IF              reduce using rule 132 (float -> FLOAT DOT FLOOR LPARENTHESES RPARENTHESES .)
    UNLESS          reduce using rule 132 (float -> FLOAT DOT FLOOR LPARENTHESES RPARENTHESES .)
    PUTS            reduce using rule 132 (float -> FLOAT DOT FLOOR LPARENTHESES RPARENTHESES .)
    PRINT           reduce using rule 132 (float -> FLOAT DOT FLOOR LPARENTHESES RPARENTHESES .)
    STRING          reduce using rule 132 (float -> FLOAT DOT FLOOR LPARENTHESES RPARENTHESES .)
    INTEGERW        reduce using rule 132 (float -> FLOAT DOT FLOOR LPARENTHESES RPARENTHESES .)
    INTEGER         reduce using rule 132 (float -> FLOAT DOT FLOOR LPARENTHESES RPARENTHESES .)
    FLOAT           reduce using rule 132 (float -> FLOAT DOT FLOOR LPARENTHESES RPARENTHESES .)
    VAR             reduce using rule 132 (float -> FLOAT DOT FLOOR LPARENTHESES RPARENTHESES .)
    CONSTANT        reduce using rule 132 (float -> FLOAT DOT FLOOR LPARENTHESES RPARENTHESES .)
    LCURLYBRACKET   reduce using rule 132 (float -> FLOAT DOT FLOOR LPARENTHESES RPARENTHESES .)
    LBRACKET        reduce using rule 132 (float -> FLOAT DOT FLOOR LPARENTHESES RPARENTHESES .)
    SET             reduce using rule 132 (float -> FLOAT DOT FLOOR LPARENTHESES RPARENTHESES .)
    $end            reduce using rule 132 (float -> FLOAT DOT FLOOR LPARENTHESES RPARENTHESES .)
    ELSE            reduce using rule 132 (float -> FLOAT DOT FLOOR LPARENTHESES RPARENTHESES .)
    END             reduce using rule 132 (float -> FLOAT DOT FLOOR LPARENTHESES RPARENTHESES .)
    RETURN          reduce using rule 132 (float -> FLOAT DOT FLOOR LPARENTHESES RPARENTHESES .)


state 284

    (133) float -> FLOAT DOT FLOOR LPARENTHESES INTEGER . RPARENTHESES

    RPARENTHESES    shift and go to state 321


state 285

    (58) elementoHash -> datos EQUAL GREATERTHAN datos . maselementos
    (60) maselementos -> .
    (61) maselementos -> . COMMA elementoHash maselementos

  ! shift/reduce conflict for COMMA resolved as shift
    RCURLYBRACKET   reduce using rule 60 (maselementos -> .)
    COMMA           shift and go to state 323

  ! COMMA           [ reduce using rule 60 (maselementos -> .) ]

    maselementos                   shift and go to state 322

state 286

    (152) otroElemento -> COMMA elementoSet . otroElemento
    (151) otroElemento -> .
    (152) otroElemento -> . COMMA elementoSet otroElemento

  ! shift/reduce conflict for COMMA resolved as shift
    RBRACKET        reduce using rule 151 (otroElemento -> .)
    COMMA           shift and go to state 238

  ! COMMA           [ reduce using rule 151 (otroElemento -> .) ]

    otroElemento                   shift and go to state 324

state 287

    (8) argumentos -> LOCALVAR EQUAL LCURLYBRACKET . RCURLYBRACKET

    RCURLYBRACKET   shift and go to state 325


state 288

    (11) variosargumentos -> LOCALVAR EQUAL datos .
    (13) variosargumentos -> LOCALVAR EQUAL datos . masargumentos
    (14) masargumentos -> . COMMA variosargumentos

    RPARENTHESES    reduce using rule 11 (variosargumentos -> LOCALVAR EQUAL datos .)
    COMMA           shift and go to state 242

    masargumentos                  shift and go to state 326

state 289

    (9) argumentos -> LOCALVAR TWOPOINTS datos .

    RPARENTHESES    reduce using rule 9 (argumentos -> LOCALVAR TWOPOINTS datos .)


state 290

    (14) masargumentos -> COMMA variosargumentos .

    RPARENTHESES    reduce using rule 14 (masargumentos -> COMMA variosargumentos .)


state 291

    (10) variosargumentos -> LOCALVAR .
    (11) variosargumentos -> LOCALVAR . EQUAL datos
    (12) variosargumentos -> LOCALVAR . masargumentos
    (13) variosargumentos -> LOCALVAR . EQUAL datos masargumentos
    (14) masargumentos -> . COMMA variosargumentos

    RPARENTHESES    reduce using rule 10 (variosargumentos -> LOCALVAR .)
    EQUAL           shift and go to state 327
    COMMA           shift and go to state 242

    masargumentos                  shift and go to state 241

state 292

    (3) funcion -> DEF LOCALVAR LPARENTHESES argumentos RPARENTHESES cuerpo . END
    (4) funcion -> DEF LOCALVAR LPARENTHESES argumentos RPARENTHESES cuerpo . retornar END
    (15) retornar -> . RETURN LOCALVAR
    (16) retornar -> . RETURN datos

    END             shift and go to state 328
    RETURN          shift and go to state 330

    retornar                       shift and go to state 329

state 293

    (83) masoperaciones -> operador expresion masoperaciones .

    PLUS            reduce using rule 83 (masoperaciones -> operador expresion masoperaciones .)
    MINUS           reduce using rule 83 (masoperaciones -> operador expresion masoperaciones .)
    MULTIPLY        reduce using rule 83 (masoperaciones -> operador expresion masoperaciones .)
    DIVIDE          reduce using rule 83 (masoperaciones -> operador expresion masoperaciones .)
    PERCENTAGE      reduce using rule 83 (masoperaciones -> operador expresion masoperaciones .)
    LOCALVAR        reduce using rule 83 (masoperaciones -> operador expresion masoperaciones .)
    FOR             reduce using rule 83 (masoperaciones -> operador expresion masoperaciones .)
    IF              reduce using rule 83 (masoperaciones -> operador expresion masoperaciones .)
    UNLESS          reduce using rule 83 (masoperaciones -> operador expresion masoperaciones .)
    PUTS            reduce using rule 83 (masoperaciones -> operador expresion masoperaciones .)
    PRINT           reduce using rule 83 (masoperaciones -> operador expresion masoperaciones .)
    STRING          reduce using rule 83 (masoperaciones -> operador expresion masoperaciones .)
    INTEGERW        reduce using rule 83 (masoperaciones -> operador expresion masoperaciones .)
    INTEGER         reduce using rule 83 (masoperaciones -> operador expresion masoperaciones .)
    FLOAT           reduce using rule 83 (masoperaciones -> operador expresion masoperaciones .)
    VAR             reduce using rule 83 (masoperaciones -> operador expresion masoperaciones .)
    CONSTANT        reduce using rule 83 (masoperaciones -> operador expresion masoperaciones .)
    LCURLYBRACKET   reduce using rule 83 (masoperaciones -> operador expresion masoperaciones .)
    LBRACKET        reduce using rule 83 (masoperaciones -> operador expresion masoperaciones .)
    SET             reduce using rule 83 (masoperaciones -> operador expresion masoperaciones .)
    $end            reduce using rule 83 (masoperaciones -> operador expresion masoperaciones .)
    ELSE            reduce using rule 83 (masoperaciones -> operador expresion masoperaciones .)
    END             reduce using rule 83 (masoperaciones -> operador expresion masoperaciones .)
    RETURN          reduce using rule 83 (masoperaciones -> operador expresion masoperaciones .)
    RPARENTHESES    reduce using rule 83 (masoperaciones -> operador expresion masoperaciones .)


state 294

    (80) expresion -> LPARENTHESES operacion RPARENTHESES masoperaciones .

    LOCALVAR        reduce using rule 80 (expresion -> LPARENTHESES operacion RPARENTHESES masoperaciones .)
    FOR             reduce using rule 80 (expresion -> LPARENTHESES operacion RPARENTHESES masoperaciones .)
    IF              reduce using rule 80 (expresion -> LPARENTHESES operacion RPARENTHESES masoperaciones .)
    UNLESS          reduce using rule 80 (expresion -> LPARENTHESES operacion RPARENTHESES masoperaciones .)
    PUTS            reduce using rule 80 (expresion -> LPARENTHESES operacion RPARENTHESES masoperaciones .)
    PRINT           reduce using rule 80 (expresion -> LPARENTHESES operacion RPARENTHESES masoperaciones .)
    STRING          reduce using rule 80 (expresion -> LPARENTHESES operacion RPARENTHESES masoperaciones .)
    INTEGERW        reduce using rule 80 (expresion -> LPARENTHESES operacion RPARENTHESES masoperaciones .)
    INTEGER         reduce using rule 80 (expresion -> LPARENTHESES operacion RPARENTHESES masoperaciones .)
    FLOAT           reduce using rule 80 (expresion -> LPARENTHESES operacion RPARENTHESES masoperaciones .)
    VAR             reduce using rule 80 (expresion -> LPARENTHESES operacion RPARENTHESES masoperaciones .)
    CONSTANT        reduce using rule 80 (expresion -> LPARENTHESES operacion RPARENTHESES masoperaciones .)
    LCURLYBRACKET   reduce using rule 80 (expresion -> LPARENTHESES operacion RPARENTHESES masoperaciones .)
    LBRACKET        reduce using rule 80 (expresion -> LPARENTHESES operacion RPARENTHESES masoperaciones .)
    SET             reduce using rule 80 (expresion -> LPARENTHESES operacion RPARENTHESES masoperaciones .)
    $end            reduce using rule 80 (expresion -> LPARENTHESES operacion RPARENTHESES masoperaciones .)
    ELSE            reduce using rule 80 (expresion -> LPARENTHESES operacion RPARENTHESES masoperaciones .)
    END             reduce using rule 80 (expresion -> LPARENTHESES operacion RPARENTHESES masoperaciones .)
    RETURN          reduce using rule 80 (expresion -> LPARENTHESES operacion RPARENTHESES masoperaciones .)
    PLUS            reduce using rule 80 (expresion -> LPARENTHESES operacion RPARENTHESES masoperaciones .)
    MINUS           reduce using rule 80 (expresion -> LPARENTHESES operacion RPARENTHESES masoperaciones .)
    MULTIPLY        reduce using rule 80 (expresion -> LPARENTHESES operacion RPARENTHESES masoperaciones .)
    DIVIDE          reduce using rule 80 (expresion -> LPARENTHESES operacion RPARENTHESES masoperaciones .)
    PERCENTAGE      reduce using rule 80 (expresion -> LPARENTHESES operacion RPARENTHESES masoperaciones .)
    RPARENTHESES    reduce using rule 80 (expresion -> LPARENTHESES operacion RPARENTHESES masoperaciones .)


state 295

    (31) loop -> FOR LOCALVAR IN rango cuerpo END .

    LOCALVAR        reduce using rule 31 (loop -> FOR LOCALVAR IN rango cuerpo END .)
    FOR             reduce using rule 31 (loop -> FOR LOCALVAR IN rango cuerpo END .)
    IF              reduce using rule 31 (loop -> FOR LOCALVAR IN rango cuerpo END .)
    UNLESS          reduce using rule 31 (loop -> FOR LOCALVAR IN rango cuerpo END .)
    PUTS            reduce using rule 31 (loop -> FOR LOCALVAR IN rango cuerpo END .)
    PRINT           reduce using rule 31 (loop -> FOR LOCALVAR IN rango cuerpo END .)
    STRING          reduce using rule 31 (loop -> FOR LOCALVAR IN rango cuerpo END .)
    INTEGERW        reduce using rule 31 (loop -> FOR LOCALVAR IN rango cuerpo END .)
    INTEGER         reduce using rule 31 (loop -> FOR LOCALVAR IN rango cuerpo END .)
    FLOAT           reduce using rule 31 (loop -> FOR LOCALVAR IN rango cuerpo END .)
    VAR             reduce using rule 31 (loop -> FOR LOCALVAR IN rango cuerpo END .)
    CONSTANT        reduce using rule 31 (loop -> FOR LOCALVAR IN rango cuerpo END .)
    LCURLYBRACKET   reduce using rule 31 (loop -> FOR LOCALVAR IN rango cuerpo END .)
    LBRACKET        reduce using rule 31 (loop -> FOR LOCALVAR IN rango cuerpo END .)
    SET             reduce using rule 31 (loop -> FOR LOCALVAR IN rango cuerpo END .)
    $end            reduce using rule 31 (loop -> FOR LOCALVAR IN rango cuerpo END .)
    ELSE            reduce using rule 31 (loop -> FOR LOCALVAR IN rango cuerpo END .)
    END             reduce using rule 31 (loop -> FOR LOCALVAR IN rango cuerpo END .)
    RETURN          reduce using rule 31 (loop -> FOR LOCALVAR IN rango cuerpo END .)


state 296

    (70) rango -> INTEGER RANGEINCLUSIVE INTEGER .

    LOCALVAR        reduce using rule 70 (rango -> INTEGER RANGEINCLUSIVE INTEGER .)
    FOR             reduce using rule 70 (rango -> INTEGER RANGEINCLUSIVE INTEGER .)
    IF              reduce using rule 70 (rango -> INTEGER RANGEINCLUSIVE INTEGER .)
    UNLESS          reduce using rule 70 (rango -> INTEGER RANGEINCLUSIVE INTEGER .)
    PUTS            reduce using rule 70 (rango -> INTEGER RANGEINCLUSIVE INTEGER .)
    PRINT           reduce using rule 70 (rango -> INTEGER RANGEINCLUSIVE INTEGER .)
    STRING          reduce using rule 70 (rango -> INTEGER RANGEINCLUSIVE INTEGER .)
    INTEGERW        reduce using rule 70 (rango -> INTEGER RANGEINCLUSIVE INTEGER .)
    INTEGER         reduce using rule 70 (rango -> INTEGER RANGEINCLUSIVE INTEGER .)
    FLOAT           reduce using rule 70 (rango -> INTEGER RANGEINCLUSIVE INTEGER .)
    VAR             reduce using rule 70 (rango -> INTEGER RANGEINCLUSIVE INTEGER .)
    CONSTANT        reduce using rule 70 (rango -> INTEGER RANGEINCLUSIVE INTEGER .)
    LCURLYBRACKET   reduce using rule 70 (rango -> INTEGER RANGEINCLUSIVE INTEGER .)
    LBRACKET        reduce using rule 70 (rango -> INTEGER RANGEINCLUSIVE INTEGER .)
    SET             reduce using rule 70 (rango -> INTEGER RANGEINCLUSIVE INTEGER .)
    END             reduce using rule 70 (rango -> INTEGER RANGEINCLUSIVE INTEGER .)


state 297

    (71) rango -> INTEGER RANGEXCLUSIVE INTEGER .

    LOCALVAR        reduce using rule 71 (rango -> INTEGER RANGEXCLUSIVE INTEGER .)
    FOR             reduce using rule 71 (rango -> INTEGER RANGEXCLUSIVE INTEGER .)
    IF              reduce using rule 71 (rango -> INTEGER RANGEXCLUSIVE INTEGER .)
    UNLESS          reduce using rule 71 (rango -> INTEGER RANGEXCLUSIVE INTEGER .)
    PUTS            reduce using rule 71 (rango -> INTEGER RANGEXCLUSIVE INTEGER .)
    PRINT           reduce using rule 71 (rango -> INTEGER RANGEXCLUSIVE INTEGER .)
    STRING          reduce using rule 71 (rango -> INTEGER RANGEXCLUSIVE INTEGER .)
    INTEGERW        reduce using rule 71 (rango -> INTEGER RANGEXCLUSIVE INTEGER .)
    INTEGER         reduce using rule 71 (rango -> INTEGER RANGEXCLUSIVE INTEGER .)
    FLOAT           reduce using rule 71 (rango -> INTEGER RANGEXCLUSIVE INTEGER .)
    VAR             reduce using rule 71 (rango -> INTEGER RANGEXCLUSIVE INTEGER .)
    CONSTANT        reduce using rule 71 (rango -> INTEGER RANGEXCLUSIVE INTEGER .)
    LCURLYBRACKET   reduce using rule 71 (rango -> INTEGER RANGEXCLUSIVE INTEGER .)
    LBRACKET        reduce using rule 71 (rango -> INTEGER RANGEXCLUSIVE INTEGER .)
    SET             reduce using rule 71 (rango -> INTEGER RANGEXCLUSIVE INTEGER .)
    END             reduce using rule 71 (rango -> INTEGER RANGEXCLUSIVE INTEGER .)


state 298

    (63) operacionHash -> hash LBRACKET datos RBRACKET EQUAL datos .

    LOCALVAR        reduce using rule 63 (operacionHash -> hash LBRACKET datos RBRACKET EQUAL datos .)
    FOR             reduce using rule 63 (operacionHash -> hash LBRACKET datos RBRACKET EQUAL datos .)
    IF              reduce using rule 63 (operacionHash -> hash LBRACKET datos RBRACKET EQUAL datos .)
    UNLESS          reduce using rule 63 (operacionHash -> hash LBRACKET datos RBRACKET EQUAL datos .)
    PUTS            reduce using rule 63 (operacionHash -> hash LBRACKET datos RBRACKET EQUAL datos .)
    PRINT           reduce using rule 63 (operacionHash -> hash LBRACKET datos RBRACKET EQUAL datos .)
    STRING          reduce using rule 63 (operacionHash -> hash LBRACKET datos RBRACKET EQUAL datos .)
    INTEGERW        reduce using rule 63 (operacionHash -> hash LBRACKET datos RBRACKET EQUAL datos .)
    INTEGER         reduce using rule 63 (operacionHash -> hash LBRACKET datos RBRACKET EQUAL datos .)
    FLOAT           reduce using rule 63 (operacionHash -> hash LBRACKET datos RBRACKET EQUAL datos .)
    VAR             reduce using rule 63 (operacionHash -> hash LBRACKET datos RBRACKET EQUAL datos .)
    CONSTANT        reduce using rule 63 (operacionHash -> hash LBRACKET datos RBRACKET EQUAL datos .)
    LCURLYBRACKET   reduce using rule 63 (operacionHash -> hash LBRACKET datos RBRACKET EQUAL datos .)
    LBRACKET        reduce using rule 63 (operacionHash -> hash LBRACKET datos RBRACKET EQUAL datos .)
    SET             reduce using rule 63 (operacionHash -> hash LBRACKET datos RBRACKET EQUAL datos .)
    $end            reduce using rule 63 (operacionHash -> hash LBRACKET datos RBRACKET EQUAL datos .)
    ELSE            reduce using rule 63 (operacionHash -> hash LBRACKET datos RBRACKET EQUAL datos .)
    END             reduce using rule 63 (operacionHash -> hash LBRACKET datos RBRACKET EQUAL datos .)
    RETURN          reduce using rule 63 (operacionHash -> hash LBRACKET datos RBRACKET EQUAL datos .)


state 299

    (64) operacionHash -> hash DOT INCLUDE QUESTIONMARK LPARENTHESES datos . RPARENTHESES

    RPARENTHESES    shift and go to state 331


state 300

    (65) operacionHash -> hash DOT DELETE LPARENTHESES datos RPARENTHESES .

    LOCALVAR        reduce using rule 65 (operacionHash -> hash DOT DELETE LPARENTHESES datos RPARENTHESES .)
    FOR             reduce using rule 65 (operacionHash -> hash DOT DELETE LPARENTHESES datos RPARENTHESES .)
    IF              reduce using rule 65 (operacionHash -> hash DOT DELETE LPARENTHESES datos RPARENTHESES .)
    UNLESS          reduce using rule 65 (operacionHash -> hash DOT DELETE LPARENTHESES datos RPARENTHESES .)
    PUTS            reduce using rule 65 (operacionHash -> hash DOT DELETE LPARENTHESES datos RPARENTHESES .)
    PRINT           reduce using rule 65 (operacionHash -> hash DOT DELETE LPARENTHESES datos RPARENTHESES .)
    STRING          reduce using rule 65 (operacionHash -> hash DOT DELETE LPARENTHESES datos RPARENTHESES .)
    INTEGERW        reduce using rule 65 (operacionHash -> hash DOT DELETE LPARENTHESES datos RPARENTHESES .)
    INTEGER         reduce using rule 65 (operacionHash -> hash DOT DELETE LPARENTHESES datos RPARENTHESES .)
    FLOAT           reduce using rule 65 (operacionHash -> hash DOT DELETE LPARENTHESES datos RPARENTHESES .)
    VAR             reduce using rule 65 (operacionHash -> hash DOT DELETE LPARENTHESES datos RPARENTHESES .)
    CONSTANT        reduce using rule 65 (operacionHash -> hash DOT DELETE LPARENTHESES datos RPARENTHESES .)
    LCURLYBRACKET   reduce using rule 65 (operacionHash -> hash DOT DELETE LPARENTHESES datos RPARENTHESES .)
    LBRACKET        reduce using rule 65 (operacionHash -> hash DOT DELETE LPARENTHESES datos RPARENTHESES .)
    SET             reduce using rule 65 (operacionHash -> hash DOT DELETE LPARENTHESES datos RPARENTHESES .)
    $end            reduce using rule 65 (operacionHash -> hash DOT DELETE LPARENTHESES datos RPARENTHESES .)
    ELSE            reduce using rule 65 (operacionHash -> hash DOT DELETE LPARENTHESES datos RPARENTHESES .)
    END             reduce using rule 65 (operacionHash -> hash DOT DELETE LPARENTHESES datos RPARENTHESES .)
    RETURN          reduce using rule 65 (operacionHash -> hash DOT DELETE LPARENTHESES datos RPARENTHESES .)


state 301

    (100) operacionarray -> array DOT TAKE LPARENTHESES INTEGER RPARENTHESES .

    LOCALVAR        reduce using rule 100 (operacionarray -> array DOT TAKE LPARENTHESES INTEGER RPARENTHESES .)
    FOR             reduce using rule 100 (operacionarray -> array DOT TAKE LPARENTHESES INTEGER RPARENTHESES .)
    IF              reduce using rule 100 (operacionarray -> array DOT TAKE LPARENTHESES INTEGER RPARENTHESES .)
    UNLESS          reduce using rule 100 (operacionarray -> array DOT TAKE LPARENTHESES INTEGER RPARENTHESES .)
    PUTS            reduce using rule 100 (operacionarray -> array DOT TAKE LPARENTHESES INTEGER RPARENTHESES .)
    PRINT           reduce using rule 100 (operacionarray -> array DOT TAKE LPARENTHESES INTEGER RPARENTHESES .)
    STRING          reduce using rule 100 (operacionarray -> array DOT TAKE LPARENTHESES INTEGER RPARENTHESES .)
    INTEGERW        reduce using rule 100 (operacionarray -> array DOT TAKE LPARENTHESES INTEGER RPARENTHESES .)
    INTEGER         reduce using rule 100 (operacionarray -> array DOT TAKE LPARENTHESES INTEGER RPARENTHESES .)
    FLOAT           reduce using rule 100 (operacionarray -> array DOT TAKE LPARENTHESES INTEGER RPARENTHESES .)
    VAR             reduce using rule 100 (operacionarray -> array DOT TAKE LPARENTHESES INTEGER RPARENTHESES .)
    CONSTANT        reduce using rule 100 (operacionarray -> array DOT TAKE LPARENTHESES INTEGER RPARENTHESES .)
    LCURLYBRACKET   reduce using rule 100 (operacionarray -> array DOT TAKE LPARENTHESES INTEGER RPARENTHESES .)
    LBRACKET        reduce using rule 100 (operacionarray -> array DOT TAKE LPARENTHESES INTEGER RPARENTHESES .)
    SET             reduce using rule 100 (operacionarray -> array DOT TAKE LPARENTHESES INTEGER RPARENTHESES .)
    $end            reduce using rule 100 (operacionarray -> array DOT TAKE LPARENTHESES INTEGER RPARENTHESES .)
    ELSE            reduce using rule 100 (operacionarray -> array DOT TAKE LPARENTHESES INTEGER RPARENTHESES .)
    END             reduce using rule 100 (operacionarray -> array DOT TAKE LPARENTHESES INTEGER RPARENTHESES .)
    RETURN          reduce using rule 100 (operacionarray -> array DOT TAKE LPARENTHESES INTEGER RPARENTHESES .)


state 302

    (101) operacionarray -> array DOT DROP LPARENTHESES INTEGER RPARENTHESES .

    LOCALVAR        reduce using rule 101 (operacionarray -> array DOT DROP LPARENTHESES INTEGER RPARENTHESES .)
    FOR             reduce using rule 101 (operacionarray -> array DOT DROP LPARENTHESES INTEGER RPARENTHESES .)
    IF              reduce using rule 101 (operacionarray -> array DOT DROP LPARENTHESES INTEGER RPARENTHESES .)
    UNLESS          reduce using rule 101 (operacionarray -> array DOT DROP LPARENTHESES INTEGER RPARENTHESES .)
    PUTS            reduce using rule 101 (operacionarray -> array DOT DROP LPARENTHESES INTEGER RPARENTHESES .)
    PRINT           reduce using rule 101 (operacionarray -> array DOT DROP LPARENTHESES INTEGER RPARENTHESES .)
    STRING          reduce using rule 101 (operacionarray -> array DOT DROP LPARENTHESES INTEGER RPARENTHESES .)
    INTEGERW        reduce using rule 101 (operacionarray -> array DOT DROP LPARENTHESES INTEGER RPARENTHESES .)
    INTEGER         reduce using rule 101 (operacionarray -> array DOT DROP LPARENTHESES INTEGER RPARENTHESES .)
    FLOAT           reduce using rule 101 (operacionarray -> array DOT DROP LPARENTHESES INTEGER RPARENTHESES .)
    VAR             reduce using rule 101 (operacionarray -> array DOT DROP LPARENTHESES INTEGER RPARENTHESES .)
    CONSTANT        reduce using rule 101 (operacionarray -> array DOT DROP LPARENTHESES INTEGER RPARENTHESES .)
    LCURLYBRACKET   reduce using rule 101 (operacionarray -> array DOT DROP LPARENTHESES INTEGER RPARENTHESES .)
    LBRACKET        reduce using rule 101 (operacionarray -> array DOT DROP LPARENTHESES INTEGER RPARENTHESES .)
    SET             reduce using rule 101 (operacionarray -> array DOT DROP LPARENTHESES INTEGER RPARENTHESES .)
    $end            reduce using rule 101 (operacionarray -> array DOT DROP LPARENTHESES INTEGER RPARENTHESES .)
    ELSE            reduce using rule 101 (operacionarray -> array DOT DROP LPARENTHESES INTEGER RPARENTHESES .)
    END             reduce using rule 101 (operacionarray -> array DOT DROP LPARENTHESES INTEGER RPARENTHESES .)
    RETURN          reduce using rule 101 (operacionarray -> array DOT DROP LPARENTHESES INTEGER RPARENTHESES .)


state 303

    (106) maspush -> DOT push maspush .

    LOCALVAR        reduce using rule 106 (maspush -> DOT push maspush .)
    FOR             reduce using rule 106 (maspush -> DOT push maspush .)
    IF              reduce using rule 106 (maspush -> DOT push maspush .)
    UNLESS          reduce using rule 106 (maspush -> DOT push maspush .)
    PUTS            reduce using rule 106 (maspush -> DOT push maspush .)
    PRINT           reduce using rule 106 (maspush -> DOT push maspush .)
    STRING          reduce using rule 106 (maspush -> DOT push maspush .)
    INTEGERW        reduce using rule 106 (maspush -> DOT push maspush .)
    INTEGER         reduce using rule 106 (maspush -> DOT push maspush .)
    FLOAT           reduce using rule 106 (maspush -> DOT push maspush .)
    VAR             reduce using rule 106 (maspush -> DOT push maspush .)
    CONSTANT        reduce using rule 106 (maspush -> DOT push maspush .)
    LCURLYBRACKET   reduce using rule 106 (maspush -> DOT push maspush .)
    LBRACKET        reduce using rule 106 (maspush -> DOT push maspush .)
    SET             reduce using rule 106 (maspush -> DOT push maspush .)
    $end            reduce using rule 106 (maspush -> DOT push maspush .)
    ELSE            reduce using rule 106 (maspush -> DOT push maspush .)
    END             reduce using rule 106 (maspush -> DOT push maspush .)
    RETURN          reduce using rule 106 (maspush -> DOT push maspush .)


state 304

    (108) operacionarray -> array DOT POP LPARENTHESES INTEGER RPARENTHESES .

    LOCALVAR        reduce using rule 108 (operacionarray -> array DOT POP LPARENTHESES INTEGER RPARENTHESES .)
    FOR             reduce using rule 108 (operacionarray -> array DOT POP LPARENTHESES INTEGER RPARENTHESES .)
    IF              reduce using rule 108 (operacionarray -> array DOT POP LPARENTHESES INTEGER RPARENTHESES .)
    UNLESS          reduce using rule 108 (operacionarray -> array DOT POP LPARENTHESES INTEGER RPARENTHESES .)
    PUTS            reduce using rule 108 (operacionarray -> array DOT POP LPARENTHESES INTEGER RPARENTHESES .)
    PRINT           reduce using rule 108 (operacionarray -> array DOT POP LPARENTHESES INTEGER RPARENTHESES .)
    STRING          reduce using rule 108 (operacionarray -> array DOT POP LPARENTHESES INTEGER RPARENTHESES .)
    INTEGERW        reduce using rule 108 (operacionarray -> array DOT POP LPARENTHESES INTEGER RPARENTHESES .)
    INTEGER         reduce using rule 108 (operacionarray -> array DOT POP LPARENTHESES INTEGER RPARENTHESES .)
    FLOAT           reduce using rule 108 (operacionarray -> array DOT POP LPARENTHESES INTEGER RPARENTHESES .)
    VAR             reduce using rule 108 (operacionarray -> array DOT POP LPARENTHESES INTEGER RPARENTHESES .)
    CONSTANT        reduce using rule 108 (operacionarray -> array DOT POP LPARENTHESES INTEGER RPARENTHESES .)
    LCURLYBRACKET   reduce using rule 108 (operacionarray -> array DOT POP LPARENTHESES INTEGER RPARENTHESES .)
    LBRACKET        reduce using rule 108 (operacionarray -> array DOT POP LPARENTHESES INTEGER RPARENTHESES .)
    SET             reduce using rule 108 (operacionarray -> array DOT POP LPARENTHESES INTEGER RPARENTHESES .)
    $end            reduce using rule 108 (operacionarray -> array DOT POP LPARENTHESES INTEGER RPARENTHESES .)
    ELSE            reduce using rule 108 (operacionarray -> array DOT POP LPARENTHESES INTEGER RPARENTHESES .)
    END             reduce using rule 108 (operacionarray -> array DOT POP LPARENTHESES INTEGER RPARENTHESES .)
    RETURN          reduce using rule 108 (operacionarray -> array DOT POP LPARENTHESES INTEGER RPARENTHESES .)


state 305

    (109) operacionarray -> array DOT DELETE LPARENTHESES INTEGER RPARENTHESES .

    LOCALVAR        reduce using rule 109 (operacionarray -> array DOT DELETE LPARENTHESES INTEGER RPARENTHESES .)
    FOR             reduce using rule 109 (operacionarray -> array DOT DELETE LPARENTHESES INTEGER RPARENTHESES .)
    IF              reduce using rule 109 (operacionarray -> array DOT DELETE LPARENTHESES INTEGER RPARENTHESES .)
    UNLESS          reduce using rule 109 (operacionarray -> array DOT DELETE LPARENTHESES INTEGER RPARENTHESES .)
    PUTS            reduce using rule 109 (operacionarray -> array DOT DELETE LPARENTHESES INTEGER RPARENTHESES .)
    PRINT           reduce using rule 109 (operacionarray -> array DOT DELETE LPARENTHESES INTEGER RPARENTHESES .)
    STRING          reduce using rule 109 (operacionarray -> array DOT DELETE LPARENTHESES INTEGER RPARENTHESES .)
    INTEGERW        reduce using rule 109 (operacionarray -> array DOT DELETE LPARENTHESES INTEGER RPARENTHESES .)
    INTEGER         reduce using rule 109 (operacionarray -> array DOT DELETE LPARENTHESES INTEGER RPARENTHESES .)
    FLOAT           reduce using rule 109 (operacionarray -> array DOT DELETE LPARENTHESES INTEGER RPARENTHESES .)
    VAR             reduce using rule 109 (operacionarray -> array DOT DELETE LPARENTHESES INTEGER RPARENTHESES .)
    CONSTANT        reduce using rule 109 (operacionarray -> array DOT DELETE LPARENTHESES INTEGER RPARENTHESES .)
    LCURLYBRACKET   reduce using rule 109 (operacionarray -> array DOT DELETE LPARENTHESES INTEGER RPARENTHESES .)
    LBRACKET        reduce using rule 109 (operacionarray -> array DOT DELETE LPARENTHESES INTEGER RPARENTHESES .)
    SET             reduce using rule 109 (operacionarray -> array DOT DELETE LPARENTHESES INTEGER RPARENTHESES .)
    $end            reduce using rule 109 (operacionarray -> array DOT DELETE LPARENTHESES INTEGER RPARENTHESES .)
    ELSE            reduce using rule 109 (operacionarray -> array DOT DELETE LPARENTHESES INTEGER RPARENTHESES .)
    END             reduce using rule 109 (operacionarray -> array DOT DELETE LPARENTHESES INTEGER RPARENTHESES .)
    RETURN          reduce using rule 109 (operacionarray -> array DOT DELETE LPARENTHESES INTEGER RPARENTHESES .)


state 306

    (103) push -> PUSH LPARENTHESES datosvarios RPARENTHESES .

    DOT             reduce using rule 103 (push -> PUSH LPARENTHESES datosvarios RPARENTHESES .)
    LOCALVAR        reduce using rule 103 (push -> PUSH LPARENTHESES datosvarios RPARENTHESES .)
    FOR             reduce using rule 103 (push -> PUSH LPARENTHESES datosvarios RPARENTHESES .)
    IF              reduce using rule 103 (push -> PUSH LPARENTHESES datosvarios RPARENTHESES .)
    UNLESS          reduce using rule 103 (push -> PUSH LPARENTHESES datosvarios RPARENTHESES .)
    PUTS            reduce using rule 103 (push -> PUSH LPARENTHESES datosvarios RPARENTHESES .)
    PRINT           reduce using rule 103 (push -> PUSH LPARENTHESES datosvarios RPARENTHESES .)
    STRING          reduce using rule 103 (push -> PUSH LPARENTHESES datosvarios RPARENTHESES .)
    INTEGERW        reduce using rule 103 (push -> PUSH LPARENTHESES datosvarios RPARENTHESES .)
    INTEGER         reduce using rule 103 (push -> PUSH LPARENTHESES datosvarios RPARENTHESES .)
    FLOAT           reduce using rule 103 (push -> PUSH LPARENTHESES datosvarios RPARENTHESES .)
    VAR             reduce using rule 103 (push -> PUSH LPARENTHESES datosvarios RPARENTHESES .)
    CONSTANT        reduce using rule 103 (push -> PUSH LPARENTHESES datosvarios RPARENTHESES .)
    LCURLYBRACKET   reduce using rule 103 (push -> PUSH LPARENTHESES datosvarios RPARENTHESES .)
    LBRACKET        reduce using rule 103 (push -> PUSH LPARENTHESES datosvarios RPARENTHESES .)
    SET             reduce using rule 103 (push -> PUSH LPARENTHESES datosvarios RPARENTHESES .)
    $end            reduce using rule 103 (push -> PUSH LPARENTHESES datosvarios RPARENTHESES .)
    ELSE            reduce using rule 103 (push -> PUSH LPARENTHESES datosvarios RPARENTHESES .)
    END             reduce using rule 103 (push -> PUSH LPARENTHESES datosvarios RPARENTHESES .)
    RETURN          reduce using rule 103 (push -> PUSH LPARENTHESES datosvarios RPARENTHESES .)


state 307

    (153) operacionSet -> set DOT ADD LPARENTHESES datos RPARENTHESES .

    LOCALVAR        reduce using rule 153 (operacionSet -> set DOT ADD LPARENTHESES datos RPARENTHESES .)
    FOR             reduce using rule 153 (operacionSet -> set DOT ADD LPARENTHESES datos RPARENTHESES .)
    IF              reduce using rule 153 (operacionSet -> set DOT ADD LPARENTHESES datos RPARENTHESES .)
    UNLESS          reduce using rule 153 (operacionSet -> set DOT ADD LPARENTHESES datos RPARENTHESES .)
    PUTS            reduce using rule 153 (operacionSet -> set DOT ADD LPARENTHESES datos RPARENTHESES .)
    PRINT           reduce using rule 153 (operacionSet -> set DOT ADD LPARENTHESES datos RPARENTHESES .)
    STRING          reduce using rule 153 (operacionSet -> set DOT ADD LPARENTHESES datos RPARENTHESES .)
    INTEGERW        reduce using rule 153 (operacionSet -> set DOT ADD LPARENTHESES datos RPARENTHESES .)
    INTEGER         reduce using rule 153 (operacionSet -> set DOT ADD LPARENTHESES datos RPARENTHESES .)
    FLOAT           reduce using rule 153 (operacionSet -> set DOT ADD LPARENTHESES datos RPARENTHESES .)
    VAR             reduce using rule 153 (operacionSet -> set DOT ADD LPARENTHESES datos RPARENTHESES .)
    CONSTANT        reduce using rule 153 (operacionSet -> set DOT ADD LPARENTHESES datos RPARENTHESES .)
    LCURLYBRACKET   reduce using rule 153 (operacionSet -> set DOT ADD LPARENTHESES datos RPARENTHESES .)
    LBRACKET        reduce using rule 153 (operacionSet -> set DOT ADD LPARENTHESES datos RPARENTHESES .)
    SET             reduce using rule 153 (operacionSet -> set DOT ADD LPARENTHESES datos RPARENTHESES .)
    $end            reduce using rule 153 (operacionSet -> set DOT ADD LPARENTHESES datos RPARENTHESES .)
    ELSE            reduce using rule 153 (operacionSet -> set DOT ADD LPARENTHESES datos RPARENTHESES .)
    END             reduce using rule 153 (operacionSet -> set DOT ADD LPARENTHESES datos RPARENTHESES .)
    RETURN          reduce using rule 153 (operacionSet -> set DOT ADD LPARENTHESES datos RPARENTHESES .)


state 308

    (154) operacionSet -> set DOT ADD LPARENTHESES tiposvariables RPARENTHESES .

    LOCALVAR        reduce using rule 154 (operacionSet -> set DOT ADD LPARENTHESES tiposvariables RPARENTHESES .)
    FOR             reduce using rule 154 (operacionSet -> set DOT ADD LPARENTHESES tiposvariables RPARENTHESES .)
    IF              reduce using rule 154 (operacionSet -> set DOT ADD LPARENTHESES tiposvariables RPARENTHESES .)
    UNLESS          reduce using rule 154 (operacionSet -> set DOT ADD LPARENTHESES tiposvariables RPARENTHESES .)
    PUTS            reduce using rule 154 (operacionSet -> set DOT ADD LPARENTHESES tiposvariables RPARENTHESES .)
    PRINT           reduce using rule 154 (operacionSet -> set DOT ADD LPARENTHESES tiposvariables RPARENTHESES .)
    STRING          reduce using rule 154 (operacionSet -> set DOT ADD LPARENTHESES tiposvariables RPARENTHESES .)
    INTEGERW        reduce using rule 154 (operacionSet -> set DOT ADD LPARENTHESES tiposvariables RPARENTHESES .)
    INTEGER         reduce using rule 154 (operacionSet -> set DOT ADD LPARENTHESES tiposvariables RPARENTHESES .)
    FLOAT           reduce using rule 154 (operacionSet -> set DOT ADD LPARENTHESES tiposvariables RPARENTHESES .)
    VAR             reduce using rule 154 (operacionSet -> set DOT ADD LPARENTHESES tiposvariables RPARENTHESES .)
    CONSTANT        reduce using rule 154 (operacionSet -> set DOT ADD LPARENTHESES tiposvariables RPARENTHESES .)
    LCURLYBRACKET   reduce using rule 154 (operacionSet -> set DOT ADD LPARENTHESES tiposvariables RPARENTHESES .)
    LBRACKET        reduce using rule 154 (operacionSet -> set DOT ADD LPARENTHESES tiposvariables RPARENTHESES .)
    SET             reduce using rule 154 (operacionSet -> set DOT ADD LPARENTHESES tiposvariables RPARENTHESES .)
    $end            reduce using rule 154 (operacionSet -> set DOT ADD LPARENTHESES tiposvariables RPARENTHESES .)
    ELSE            reduce using rule 154 (operacionSet -> set DOT ADD LPARENTHESES tiposvariables RPARENTHESES .)
    END             reduce using rule 154 (operacionSet -> set DOT ADD LPARENTHESES tiposvariables RPARENTHESES .)
    RETURN          reduce using rule 154 (operacionSet -> set DOT ADD LPARENTHESES tiposvariables RPARENTHESES .)


state 309

    (156) operacionSet -> set DOT DELETE LPARENTHESES datos RPARENTHESES .

    LOCALVAR        reduce using rule 156 (operacionSet -> set DOT DELETE LPARENTHESES datos RPARENTHESES .)
    FOR             reduce using rule 156 (operacionSet -> set DOT DELETE LPARENTHESES datos RPARENTHESES .)
    IF              reduce using rule 156 (operacionSet -> set DOT DELETE LPARENTHESES datos RPARENTHESES .)
    UNLESS          reduce using rule 156 (operacionSet -> set DOT DELETE LPARENTHESES datos RPARENTHESES .)
    PUTS            reduce using rule 156 (operacionSet -> set DOT DELETE LPARENTHESES datos RPARENTHESES .)
    PRINT           reduce using rule 156 (operacionSet -> set DOT DELETE LPARENTHESES datos RPARENTHESES .)
    STRING          reduce using rule 156 (operacionSet -> set DOT DELETE LPARENTHESES datos RPARENTHESES .)
    INTEGERW        reduce using rule 156 (operacionSet -> set DOT DELETE LPARENTHESES datos RPARENTHESES .)
    INTEGER         reduce using rule 156 (operacionSet -> set DOT DELETE LPARENTHESES datos RPARENTHESES .)
    FLOAT           reduce using rule 156 (operacionSet -> set DOT DELETE LPARENTHESES datos RPARENTHESES .)
    VAR             reduce using rule 156 (operacionSet -> set DOT DELETE LPARENTHESES datos RPARENTHESES .)
    CONSTANT        reduce using rule 156 (operacionSet -> set DOT DELETE LPARENTHESES datos RPARENTHESES .)
    LCURLYBRACKET   reduce using rule 156 (operacionSet -> set DOT DELETE LPARENTHESES datos RPARENTHESES .)
    LBRACKET        reduce using rule 156 (operacionSet -> set DOT DELETE LPARENTHESES datos RPARENTHESES .)
    SET             reduce using rule 156 (operacionSet -> set DOT DELETE LPARENTHESES datos RPARENTHESES .)
    $end            reduce using rule 156 (operacionSet -> set DOT DELETE LPARENTHESES datos RPARENTHESES .)
    ELSE            reduce using rule 156 (operacionSet -> set DOT DELETE LPARENTHESES datos RPARENTHESES .)
    END             reduce using rule 156 (operacionSet -> set DOT DELETE LPARENTHESES datos RPARENTHESES .)
    RETURN          reduce using rule 156 (operacionSet -> set DOT DELETE LPARENTHESES datos RPARENTHESES .)


state 310

    (157) operacionSet -> set DOT DELETE LPARENTHESES tiposvariables RPARENTHESES .

    LOCALVAR        reduce using rule 157 (operacionSet -> set DOT DELETE LPARENTHESES tiposvariables RPARENTHESES .)
    FOR             reduce using rule 157 (operacionSet -> set DOT DELETE LPARENTHESES tiposvariables RPARENTHESES .)
    IF              reduce using rule 157 (operacionSet -> set DOT DELETE LPARENTHESES tiposvariables RPARENTHESES .)
    UNLESS          reduce using rule 157 (operacionSet -> set DOT DELETE LPARENTHESES tiposvariables RPARENTHESES .)
    PUTS            reduce using rule 157 (operacionSet -> set DOT DELETE LPARENTHESES tiposvariables RPARENTHESES .)
    PRINT           reduce using rule 157 (operacionSet -> set DOT DELETE LPARENTHESES tiposvariables RPARENTHESES .)
    STRING          reduce using rule 157 (operacionSet -> set DOT DELETE LPARENTHESES tiposvariables RPARENTHESES .)
    INTEGERW        reduce using rule 157 (operacionSet -> set DOT DELETE LPARENTHESES tiposvariables RPARENTHESES .)
    INTEGER         reduce using rule 157 (operacionSet -> set DOT DELETE LPARENTHESES tiposvariables RPARENTHESES .)
    FLOAT           reduce using rule 157 (operacionSet -> set DOT DELETE LPARENTHESES tiposvariables RPARENTHESES .)
    VAR             reduce using rule 157 (operacionSet -> set DOT DELETE LPARENTHESES tiposvariables RPARENTHESES .)
    CONSTANT        reduce using rule 157 (operacionSet -> set DOT DELETE LPARENTHESES tiposvariables RPARENTHESES .)
    LCURLYBRACKET   reduce using rule 157 (operacionSet -> set DOT DELETE LPARENTHESES tiposvariables RPARENTHESES .)
    LBRACKET        reduce using rule 157 (operacionSet -> set DOT DELETE LPARENTHESES tiposvariables RPARENTHESES .)
    SET             reduce using rule 157 (operacionSet -> set DOT DELETE LPARENTHESES tiposvariables RPARENTHESES .)
    $end            reduce using rule 157 (operacionSet -> set DOT DELETE LPARENTHESES tiposvariables RPARENTHESES .)
    ELSE            reduce using rule 157 (operacionSet -> set DOT DELETE LPARENTHESES tiposvariables RPARENTHESES .)
    END             reduce using rule 157 (operacionSet -> set DOT DELETE LPARENTHESES tiposvariables RPARENTHESES .)
    RETURN          reduce using rule 157 (operacionSet -> set DOT DELETE LPARENTHESES tiposvariables RPARENTHESES .)


state 311

    (114) if -> IF datoscompletos operadores datoscompletos cuerpo END .

    LOCALVAR        reduce using rule 114 (if -> IF datoscompletos operadores datoscompletos cuerpo END .)
    FOR             reduce using rule 114 (if -> IF datoscompletos operadores datoscompletos cuerpo END .)
    IF              reduce using rule 114 (if -> IF datoscompletos operadores datoscompletos cuerpo END .)
    UNLESS          reduce using rule 114 (if -> IF datoscompletos operadores datoscompletos cuerpo END .)
    PUTS            reduce using rule 114 (if -> IF datoscompletos operadores datoscompletos cuerpo END .)
    PRINT           reduce using rule 114 (if -> IF datoscompletos operadores datoscompletos cuerpo END .)
    STRING          reduce using rule 114 (if -> IF datoscompletos operadores datoscompletos cuerpo END .)
    INTEGERW        reduce using rule 114 (if -> IF datoscompletos operadores datoscompletos cuerpo END .)
    INTEGER         reduce using rule 114 (if -> IF datoscompletos operadores datoscompletos cuerpo END .)
    FLOAT           reduce using rule 114 (if -> IF datoscompletos operadores datoscompletos cuerpo END .)
    VAR             reduce using rule 114 (if -> IF datoscompletos operadores datoscompletos cuerpo END .)
    CONSTANT        reduce using rule 114 (if -> IF datoscompletos operadores datoscompletos cuerpo END .)
    LCURLYBRACKET   reduce using rule 114 (if -> IF datoscompletos operadores datoscompletos cuerpo END .)
    LBRACKET        reduce using rule 114 (if -> IF datoscompletos operadores datoscompletos cuerpo END .)
    SET             reduce using rule 114 (if -> IF datoscompletos operadores datoscompletos cuerpo END .)
    $end            reduce using rule 114 (if -> IF datoscompletos operadores datoscompletos cuerpo END .)
    ELSE            reduce using rule 114 (if -> IF datoscompletos operadores datoscompletos cuerpo END .)
    END             reduce using rule 114 (if -> IF datoscompletos operadores datoscompletos cuerpo END .)
    RETURN          reduce using rule 114 (if -> IF datoscompletos operadores datoscompletos cuerpo END .)


state 312

    (115) if -> IF datoscompletos operadores datoscompletos cuerpo else .

    LOCALVAR        reduce using rule 115 (if -> IF datoscompletos operadores datoscompletos cuerpo else .)
    FOR             reduce using rule 115 (if -> IF datoscompletos operadores datoscompletos cuerpo else .)
    IF              reduce using rule 115 (if -> IF datoscompletos operadores datoscompletos cuerpo else .)
    UNLESS          reduce using rule 115 (if -> IF datoscompletos operadores datoscompletos cuerpo else .)
    PUTS            reduce using rule 115 (if -> IF datoscompletos operadores datoscompletos cuerpo else .)
    PRINT           reduce using rule 115 (if -> IF datoscompletos operadores datoscompletos cuerpo else .)
    STRING          reduce using rule 115 (if -> IF datoscompletos operadores datoscompletos cuerpo else .)
    INTEGERW        reduce using rule 115 (if -> IF datoscompletos operadores datoscompletos cuerpo else .)
    INTEGER         reduce using rule 115 (if -> IF datoscompletos operadores datoscompletos cuerpo else .)
    FLOAT           reduce using rule 115 (if -> IF datoscompletos operadores datoscompletos cuerpo else .)
    VAR             reduce using rule 115 (if -> IF datoscompletos operadores datoscompletos cuerpo else .)
    CONSTANT        reduce using rule 115 (if -> IF datoscompletos operadores datoscompletos cuerpo else .)
    LCURLYBRACKET   reduce using rule 115 (if -> IF datoscompletos operadores datoscompletos cuerpo else .)
    LBRACKET        reduce using rule 115 (if -> IF datoscompletos operadores datoscompletos cuerpo else .)
    SET             reduce using rule 115 (if -> IF datoscompletos operadores datoscompletos cuerpo else .)
    $end            reduce using rule 115 (if -> IF datoscompletos operadores datoscompletos cuerpo else .)
    ELSE            reduce using rule 115 (if -> IF datoscompletos operadores datoscompletos cuerpo else .)
    END             reduce using rule 115 (if -> IF datoscompletos operadores datoscompletos cuerpo else .)
    RETURN          reduce using rule 115 (if -> IF datoscompletos operadores datoscompletos cuerpo else .)


state 313

    (116) else -> ELSE . cuerpo END
    (17) cuerpo -> . declaracion cuerpo
    (18) cuerpo -> . asignacion cuerpo
    (19) cuerpo -> . loop cuerpo
    (20) cuerpo -> . estructurasDatos cuerpo
    (21) cuerpo -> . if cuerpo
    (22) cuerpo -> . unless cuerpo
    (23) cuerpo -> . impresion cuerpo
    (24) cuerpo -> . operacionSet cuerpo
    (25) cuerpo -> . operacionarray cuerpo
    (26) cuerpo -> . operacionHash cuerpo
    (27) cuerpo -> . string cuerpo
    (28) cuerpo -> . integer cuerpo
    (29) cuerpo -> . float cuerpo
    (30) cuerpo -> .
    (32) declaracion -> . tiposvariables EQUAL datos
    (33) declaracion -> . tiposvariables EQUAL estructurasDatos
    (34) declaracion -> . tiposvariables EQUAL expresion
    (35) declaracion -> . tiposvariables EQUAL declaracion
    (36) declaracion -> . tiposvariables EQUAL casting
    (37) asignacion -> . LOCALVAR PLUSASSIGN datosAsignacion
    (38) asignacion -> . LOCALVAR MINASSIGN datosAsignacion
    (39) asignacion -> . LOCALVAR DIVASSIGN datosAsignacion
    (40) asignacion -> . LOCALVAR TIMESASSIGN datosAsignacion
    (41) asignacion -> . LOCALVAR MODASSIGN datosAsignacion
    (42) asignacion -> . LOCALVAR EXPASSIGN datosAsignacion
    (31) loop -> . FOR LOCALVAR IN rango cuerpo END
    (54) estructurasDatos -> . hash
    (55) estructurasDatos -> . array
    (56) estructurasDatos -> . set
    (114) if -> . IF datoscompletos operadores datoscompletos cuerpo END
    (115) if -> . IF datoscompletos operadores datoscompletos cuerpo else
    (135) unless -> . UNLESS expresionCondicional cuerpo ELSE cuerpo END
    (72) impresion -> . PUTS datos
    (73) impresion -> . PUTS LOCALVAR
    (74) impresion -> . PRINT datos
    (75) impresion -> . PRINT LOCALVAR
    (153) operacionSet -> . set DOT ADD LPARENTHESES datos RPARENTHESES
    (154) operacionSet -> . set DOT ADD LPARENTHESES tiposvariables RPARENTHESES
    (155) operacionSet -> . set DOT CLEAR
    (156) operacionSet -> . set DOT DELETE LPARENTHESES datos RPARENTHESES
    (157) operacionSet -> . set DOT DELETE LPARENTHESES tiposvariables RPARENTHESES
    (99) operacionarray -> . array LBRACKET INTEGER RBRACKET
    (100) operacionarray -> . array DOT TAKE LPARENTHESES INTEGER RPARENTHESES
    (101) operacionarray -> . array DOT DROP LPARENTHESES INTEGER RPARENTHESES
    (102) operacionarray -> . array DOT push maspush
    (107) operacionarray -> . array DOT POP
    (108) operacionarray -> . array DOT POP LPARENTHESES INTEGER RPARENTHESES
    (109) operacionarray -> . array DOT DELETE LPARENTHESES INTEGER RPARENTHESES
    (110) operacionarray -> . array DOT LENGTH LPARENTHESES RPARENTHESES
    (111) operacionarray -> . array DOT EMPTY QUESTIONMARK
    (62) operacionHash -> . hash LBRACKET datos RBRACKET
    (63) operacionHash -> . hash LBRACKET datos RBRACKET EQUAL datos
    (64) operacionHash -> . hash DOT INCLUDE QUESTIONMARK LPARENTHESES datos RPARENTHESES
    (65) operacionHash -> . hash DOT DELETE LPARENTHESES datos RPARENTHESES
    (66) operacionHash -> . hash DOT KEYS
    (67) operacionHash -> . hash DOT EMPTY QUESTIONMARK
    (68) operacionHash -> . hash DOT SIZE
    (69) operacionHash -> . hash DOT LENGTH
    (158) string -> . STRING PLUS STRING
    (159) string -> . STRING MULTIPLY INTEGER
    (160) string -> . STRING DOT stringOpt
    (124) integer -> . INTEGERW DOT SQRT LPARENTHESES INTEGER RPARENTHESES
    (125) integer -> . INTEGER DOT CEIL LPARENTHESES RPARENTHESES
    (126) integer -> . INTEGER DOT CEIL LPARENTHESES INTEGER RPARENTHESES
    (127) integer -> . INTEGER DOT FLOOR LPARENTHESES RPARENTHESES
    (128) integer -> . INTEGER DOT FLOOR LPARENTHESES INTEGER RPARENTHESES
    (129) integer -> . INTEGER DOT ABS
    (130) float -> . FLOAT DOT CEIL LPARENTHESES RPARENTHESES
    (131) float -> . FLOAT DOT CEIL LPARENTHESES INTEGER RPARENTHESES
    (132) float -> . FLOAT DOT FLOOR LPARENTHESES RPARENTHESES
    (133) float -> . FLOAT DOT FLOOR LPARENTHESES INTEGER RPARENTHESES
    (134) float -> . FLOAT DOT ABS
    (45) tiposvariables -> . VAR
    (46) tiposvariables -> . LOCALVAR
    (47) tiposvariables -> . CONSTANT
    (57) hash -> . LCURLYBRACKET elementoHash RCURLYBRACKET
    (91) array -> . LBRACKET RBRACKET
    (92) array -> . LBRACKET datosarray RBRACKET
    (147) set -> . SET LBRACKET elementoSet RBRACKET

    END             reduce using rule 30 (cuerpo -> .)
    LOCALVAR        shift and go to state 18
    FOR             shift and go to state 20
    IF              shift and go to state 24
    UNLESS          shift and go to state 25
    PUTS            shift and go to state 26
    PRINT           shift and go to state 27
    STRING          shift and go to state 30
    INTEGERW        shift and go to state 31
    INTEGER         shift and go to state 29
    FLOAT           shift and go to state 32
    VAR             shift and go to state 33
    CONSTANT        shift and go to state 34
    LCURLYBRACKET   shift and go to state 35
    LBRACKET        shift and go to state 28
    SET             shift and go to state 36

    cuerpo                         shift and go to state 332
    declaracion                    shift and go to state 4
    asignacion                     shift and go to state 5
    loop                           shift and go to state 6
    estructurasDatos               shift and go to state 7
    if                             shift and go to state 8
    unless                         shift and go to state 9
    impresion                      shift and go to state 10
    operacionSet                   shift and go to state 11
    operacionarray                 shift and go to state 12
    operacionHash                  shift and go to state 13
    string                         shift and go to state 14
    integer                        shift and go to state 15
    float                          shift and go to state 16
    tiposvariables                 shift and go to state 19
    hash                           shift and go to state 21
    array                          shift and go to state 22
    set                            shift and go to state 23

state 314

    (135) unless -> UNLESS expresionCondicional cuerpo ELSE cuerpo END .

    LOCALVAR        reduce using rule 135 (unless -> UNLESS expresionCondicional cuerpo ELSE cuerpo END .)
    FOR             reduce using rule 135 (unless -> UNLESS expresionCondicional cuerpo ELSE cuerpo END .)
    IF              reduce using rule 135 (unless -> UNLESS expresionCondicional cuerpo ELSE cuerpo END .)
    UNLESS          reduce using rule 135 (unless -> UNLESS expresionCondicional cuerpo ELSE cuerpo END .)
    PUTS            reduce using rule 135 (unless -> UNLESS expresionCondicional cuerpo ELSE cuerpo END .)
    PRINT           reduce using rule 135 (unless -> UNLESS expresionCondicional cuerpo ELSE cuerpo END .)
    STRING          reduce using rule 135 (unless -> UNLESS expresionCondicional cuerpo ELSE cuerpo END .)
    INTEGERW        reduce using rule 135 (unless -> UNLESS expresionCondicional cuerpo ELSE cuerpo END .)
    INTEGER         reduce using rule 135 (unless -> UNLESS expresionCondicional cuerpo ELSE cuerpo END .)
    FLOAT           reduce using rule 135 (unless -> UNLESS expresionCondicional cuerpo ELSE cuerpo END .)
    VAR             reduce using rule 135 (unless -> UNLESS expresionCondicional cuerpo ELSE cuerpo END .)
    CONSTANT        reduce using rule 135 (unless -> UNLESS expresionCondicional cuerpo ELSE cuerpo END .)
    LCURLYBRACKET   reduce using rule 135 (unless -> UNLESS expresionCondicional cuerpo ELSE cuerpo END .)
    LBRACKET        reduce using rule 135 (unless -> UNLESS expresionCondicional cuerpo ELSE cuerpo END .)
    SET             reduce using rule 135 (unless -> UNLESS expresionCondicional cuerpo ELSE cuerpo END .)
    $end            reduce using rule 135 (unless -> UNLESS expresionCondicional cuerpo ELSE cuerpo END .)
    ELSE            reduce using rule 135 (unless -> UNLESS expresionCondicional cuerpo ELSE cuerpo END .)
    END             reduce using rule 135 (unless -> UNLESS expresionCondicional cuerpo ELSE cuerpo END .)
    RETURN          reduce using rule 135 (unless -> UNLESS expresionCondicional cuerpo ELSE cuerpo END .)


state 315

    (141) boolean -> EXCLAMATION LPARENTHESES condiciones . RPARENTHESES

    RPARENTHESES    shift and go to state 274


state 316

    (126) integer -> INTEGER DOT CEIL LPARENTHESES INTEGER RPARENTHESES .

    LOCALVAR        reduce using rule 126 (integer -> INTEGER DOT CEIL LPARENTHESES INTEGER RPARENTHESES .)
    FOR             reduce using rule 126 (integer -> INTEGER DOT CEIL LPARENTHESES INTEGER RPARENTHESES .)
    IF              reduce using rule 126 (integer -> INTEGER DOT CEIL LPARENTHESES INTEGER RPARENTHESES .)
    UNLESS          reduce using rule 126 (integer -> INTEGER DOT CEIL LPARENTHESES INTEGER RPARENTHESES .)
    PUTS            reduce using rule 126 (integer -> INTEGER DOT CEIL LPARENTHESES INTEGER RPARENTHESES .)
    PRINT           reduce using rule 126 (integer -> INTEGER DOT CEIL LPARENTHESES INTEGER RPARENTHESES .)
    STRING          reduce using rule 126 (integer -> INTEGER DOT CEIL LPARENTHESES INTEGER RPARENTHESES .)
    INTEGERW        reduce using rule 126 (integer -> INTEGER DOT CEIL LPARENTHESES INTEGER RPARENTHESES .)
    INTEGER         reduce using rule 126 (integer -> INTEGER DOT CEIL LPARENTHESES INTEGER RPARENTHESES .)
    FLOAT           reduce using rule 126 (integer -> INTEGER DOT CEIL LPARENTHESES INTEGER RPARENTHESES .)
    VAR             reduce using rule 126 (integer -> INTEGER DOT CEIL LPARENTHESES INTEGER RPARENTHESES .)
    CONSTANT        reduce using rule 126 (integer -> INTEGER DOT CEIL LPARENTHESES INTEGER RPARENTHESES .)
    LCURLYBRACKET   reduce using rule 126 (integer -> INTEGER DOT CEIL LPARENTHESES INTEGER RPARENTHESES .)
    LBRACKET        reduce using rule 126 (integer -> INTEGER DOT CEIL LPARENTHESES INTEGER RPARENTHESES .)
    SET             reduce using rule 126 (integer -> INTEGER DOT CEIL LPARENTHESES INTEGER RPARENTHESES .)
    $end            reduce using rule 126 (integer -> INTEGER DOT CEIL LPARENTHESES INTEGER RPARENTHESES .)
    ELSE            reduce using rule 126 (integer -> INTEGER DOT CEIL LPARENTHESES INTEGER RPARENTHESES .)
    END             reduce using rule 126 (integer -> INTEGER DOT CEIL LPARENTHESES INTEGER RPARENTHESES .)
    RETURN          reduce using rule 126 (integer -> INTEGER DOT CEIL LPARENTHESES INTEGER RPARENTHESES .)


state 317

    (128) integer -> INTEGER DOT FLOOR LPARENTHESES INTEGER RPARENTHESES .

    LOCALVAR        reduce using rule 128 (integer -> INTEGER DOT FLOOR LPARENTHESES INTEGER RPARENTHESES .)
    FOR             reduce using rule 128 (integer -> INTEGER DOT FLOOR LPARENTHESES INTEGER RPARENTHESES .)
    IF              reduce using rule 128 (integer -> INTEGER DOT FLOOR LPARENTHESES INTEGER RPARENTHESES .)
    UNLESS          reduce using rule 128 (integer -> INTEGER DOT FLOOR LPARENTHESES INTEGER RPARENTHESES .)
    PUTS            reduce using rule 128 (integer -> INTEGER DOT FLOOR LPARENTHESES INTEGER RPARENTHESES .)
    PRINT           reduce using rule 128 (integer -> INTEGER DOT FLOOR LPARENTHESES INTEGER RPARENTHESES .)
    STRING          reduce using rule 128 (integer -> INTEGER DOT FLOOR LPARENTHESES INTEGER RPARENTHESES .)
    INTEGERW        reduce using rule 128 (integer -> INTEGER DOT FLOOR LPARENTHESES INTEGER RPARENTHESES .)
    INTEGER         reduce using rule 128 (integer -> INTEGER DOT FLOOR LPARENTHESES INTEGER RPARENTHESES .)
    FLOAT           reduce using rule 128 (integer -> INTEGER DOT FLOOR LPARENTHESES INTEGER RPARENTHESES .)
    VAR             reduce using rule 128 (integer -> INTEGER DOT FLOOR LPARENTHESES INTEGER RPARENTHESES .)
    CONSTANT        reduce using rule 128 (integer -> INTEGER DOT FLOOR LPARENTHESES INTEGER RPARENTHESES .)
    LCURLYBRACKET   reduce using rule 128 (integer -> INTEGER DOT FLOOR LPARENTHESES INTEGER RPARENTHESES .)
    LBRACKET        reduce using rule 128 (integer -> INTEGER DOT FLOOR LPARENTHESES INTEGER RPARENTHESES .)
    SET             reduce using rule 128 (integer -> INTEGER DOT FLOOR LPARENTHESES INTEGER RPARENTHESES .)
    $end            reduce using rule 128 (integer -> INTEGER DOT FLOOR LPARENTHESES INTEGER RPARENTHESES .)
    ELSE            reduce using rule 128 (integer -> INTEGER DOT FLOOR LPARENTHESES INTEGER RPARENTHESES .)
    END             reduce using rule 128 (integer -> INTEGER DOT FLOOR LPARENTHESES INTEGER RPARENTHESES .)
    RETURN          reduce using rule 128 (integer -> INTEGER DOT FLOOR LPARENTHESES INTEGER RPARENTHESES .)


state 318

    (165) stringOpt -> INSERT LPARENTHESES INTEGER COMMA . STRING RPARENTHESES

    STRING          shift and go to state 333


state 319

    (124) integer -> INTEGERW DOT SQRT LPARENTHESES INTEGER RPARENTHESES .

    LOCALVAR        reduce using rule 124 (integer -> INTEGERW DOT SQRT LPARENTHESES INTEGER RPARENTHESES .)
    FOR             reduce using rule 124 (integer -> INTEGERW DOT SQRT LPARENTHESES INTEGER RPARENTHESES .)
    IF              reduce using rule 124 (integer -> INTEGERW DOT SQRT LPARENTHESES INTEGER RPARENTHESES .)
    UNLESS          reduce using rule 124 (integer -> INTEGERW DOT SQRT LPARENTHESES INTEGER RPARENTHESES .)
    PUTS            reduce using rule 124 (integer -> INTEGERW DOT SQRT LPARENTHESES INTEGER RPARENTHESES .)
    PRINT           reduce using rule 124 (integer -> INTEGERW DOT SQRT LPARENTHESES INTEGER RPARENTHESES .)
    STRING          reduce using rule 124 (integer -> INTEGERW DOT SQRT LPARENTHESES INTEGER RPARENTHESES .)
    INTEGERW        reduce using rule 124 (integer -> INTEGERW DOT SQRT LPARENTHESES INTEGER RPARENTHESES .)
    INTEGER         reduce using rule 124 (integer -> INTEGERW DOT SQRT LPARENTHESES INTEGER RPARENTHESES .)
    FLOAT           reduce using rule 124 (integer -> INTEGERW DOT SQRT LPARENTHESES INTEGER RPARENTHESES .)
    VAR             reduce using rule 124 (integer -> INTEGERW DOT SQRT LPARENTHESES INTEGER RPARENTHESES .)
    CONSTANT        reduce using rule 124 (integer -> INTEGERW DOT SQRT LPARENTHESES INTEGER RPARENTHESES .)
    LCURLYBRACKET   reduce using rule 124 (integer -> INTEGERW DOT SQRT LPARENTHESES INTEGER RPARENTHESES .)
    LBRACKET        reduce using rule 124 (integer -> INTEGERW DOT SQRT LPARENTHESES INTEGER RPARENTHESES .)
    SET             reduce using rule 124 (integer -> INTEGERW DOT SQRT LPARENTHESES INTEGER RPARENTHESES .)
    $end            reduce using rule 124 (integer -> INTEGERW DOT SQRT LPARENTHESES INTEGER RPARENTHESES .)
    ELSE            reduce using rule 124 (integer -> INTEGERW DOT SQRT LPARENTHESES INTEGER RPARENTHESES .)
    END             reduce using rule 124 (integer -> INTEGERW DOT SQRT LPARENTHESES INTEGER RPARENTHESES .)
    RETURN          reduce using rule 124 (integer -> INTEGERW DOT SQRT LPARENTHESES INTEGER RPARENTHESES .)


state 320

    (131) float -> FLOAT DOT CEIL LPARENTHESES INTEGER RPARENTHESES .

    LOCALVAR        reduce using rule 131 (float -> FLOAT DOT CEIL LPARENTHESES INTEGER RPARENTHESES .)
    FOR             reduce using rule 131 (float -> FLOAT DOT CEIL LPARENTHESES INTEGER RPARENTHESES .)
    IF              reduce using rule 131 (float -> FLOAT DOT CEIL LPARENTHESES INTEGER RPARENTHESES .)
    UNLESS          reduce using rule 131 (float -> FLOAT DOT CEIL LPARENTHESES INTEGER RPARENTHESES .)
    PUTS            reduce using rule 131 (float -> FLOAT DOT CEIL LPARENTHESES INTEGER RPARENTHESES .)
    PRINT           reduce using rule 131 (float -> FLOAT DOT CEIL LPARENTHESES INTEGER RPARENTHESES .)
    STRING          reduce using rule 131 (float -> FLOAT DOT CEIL LPARENTHESES INTEGER RPARENTHESES .)
    INTEGERW        reduce using rule 131 (float -> FLOAT DOT CEIL LPARENTHESES INTEGER RPARENTHESES .)
    INTEGER         reduce using rule 131 (float -> FLOAT DOT CEIL LPARENTHESES INTEGER RPARENTHESES .)
    FLOAT           reduce using rule 131 (float -> FLOAT DOT CEIL LPARENTHESES INTEGER RPARENTHESES .)
    VAR             reduce using rule 131 (float -> FLOAT DOT CEIL LPARENTHESES INTEGER RPARENTHESES .)
    CONSTANT        reduce using rule 131 (float -> FLOAT DOT CEIL LPARENTHESES INTEGER RPARENTHESES .)
    LCURLYBRACKET   reduce using rule 131 (float -> FLOAT DOT CEIL LPARENTHESES INTEGER RPARENTHESES .)
    LBRACKET        reduce using rule 131 (float -> FLOAT DOT CEIL LPARENTHESES INTEGER RPARENTHESES .)
    SET             reduce using rule 131 (float -> FLOAT DOT CEIL LPARENTHESES INTEGER RPARENTHESES .)
    $end            reduce using rule 131 (float -> FLOAT DOT CEIL LPARENTHESES INTEGER RPARENTHESES .)
    ELSE            reduce using rule 131 (float -> FLOAT DOT CEIL LPARENTHESES INTEGER RPARENTHESES .)
    END             reduce using rule 131 (float -> FLOAT DOT CEIL LPARENTHESES INTEGER RPARENTHESES .)
    RETURN          reduce using rule 131 (float -> FLOAT DOT CEIL LPARENTHESES INTEGER RPARENTHESES .)


state 321

    (133) float -> FLOAT DOT FLOOR LPARENTHESES INTEGER RPARENTHESES .

    LOCALVAR        reduce using rule 133 (float -> FLOAT DOT FLOOR LPARENTHESES INTEGER RPARENTHESES .)
    FOR             reduce using rule 133 (float -> FLOAT DOT FLOOR LPARENTHESES INTEGER RPARENTHESES .)
    IF              reduce using rule 133 (float -> FLOAT DOT FLOOR LPARENTHESES INTEGER RPARENTHESES .)
    UNLESS          reduce using rule 133 (float -> FLOAT DOT FLOOR LPARENTHESES INTEGER RPARENTHESES .)
    PUTS            reduce using rule 133 (float -> FLOAT DOT FLOOR LPARENTHESES INTEGER RPARENTHESES .)
    PRINT           reduce using rule 133 (float -> FLOAT DOT FLOOR LPARENTHESES INTEGER RPARENTHESES .)
    STRING          reduce using rule 133 (float -> FLOAT DOT FLOOR LPARENTHESES INTEGER RPARENTHESES .)
    INTEGERW        reduce using rule 133 (float -> FLOAT DOT FLOOR LPARENTHESES INTEGER RPARENTHESES .)
    INTEGER         reduce using rule 133 (float -> FLOAT DOT FLOOR LPARENTHESES INTEGER RPARENTHESES .)
    FLOAT           reduce using rule 133 (float -> FLOAT DOT FLOOR LPARENTHESES INTEGER RPARENTHESES .)
    VAR             reduce using rule 133 (float -> FLOAT DOT FLOOR LPARENTHESES INTEGER RPARENTHESES .)
    CONSTANT        reduce using rule 133 (float -> FLOAT DOT FLOOR LPARENTHESES INTEGER RPARENTHESES .)
    LCURLYBRACKET   reduce using rule 133 (float -> FLOAT DOT FLOOR LPARENTHESES INTEGER RPARENTHESES .)
    LBRACKET        reduce using rule 133 (float -> FLOAT DOT FLOOR LPARENTHESES INTEGER RPARENTHESES .)
    SET             reduce using rule 133 (float -> FLOAT DOT FLOOR LPARENTHESES INTEGER RPARENTHESES .)
    $end            reduce using rule 133 (float -> FLOAT DOT FLOOR LPARENTHESES INTEGER RPARENTHESES .)
    ELSE            reduce using rule 133 (float -> FLOAT DOT FLOOR LPARENTHESES INTEGER RPARENTHESES .)
    END             reduce using rule 133 (float -> FLOAT DOT FLOOR LPARENTHESES INTEGER RPARENTHESES .)
    RETURN          reduce using rule 133 (float -> FLOAT DOT FLOOR LPARENTHESES INTEGER RPARENTHESES .)


state 322

    (58) elementoHash -> datos EQUAL GREATERTHAN datos maselementos .

    RCURLYBRACKET   reduce using rule 58 (elementoHash -> datos EQUAL GREATERTHAN datos maselementos .)
    COMMA           reduce using rule 58 (elementoHash -> datos EQUAL GREATERTHAN datos maselementos .)


state 323

    (61) maselementos -> COMMA . elementoHash maselementos
    (58) elementoHash -> . datos EQUAL GREATERTHAN datos maselementos
    (59) elementoHash -> .
    (48) datos -> . INTEGER
    (49) datos -> . FLOAT
    (50) datos -> . STRING
    (51) datos -> . booleanos
    (52) booleanos -> . TRUE
    (53) booleanos -> . FALSE

    COMMA           reduce using rule 59 (elementoHash -> .)
    RCURLYBRACKET   reduce using rule 59 (elementoHash -> .)
    INTEGER         shift and go to state 84
    FLOAT           shift and go to state 85
    STRING          shift and go to state 73
    TRUE            shift and go to state 75
    FALSE           shift and go to state 76

    elementoHash                   shift and go to state 334
    datos                          shift and go to state 102
    booleanos                      shift and go to state 74

state 324

    (152) otroElemento -> COMMA elementoSet otroElemento .

    RBRACKET        reduce using rule 152 (otroElemento -> COMMA elementoSet otroElemento .)
    COMMA           reduce using rule 152 (otroElemento -> COMMA elementoSet otroElemento .)


state 325

    (8) argumentos -> LOCALVAR EQUAL LCURLYBRACKET RCURLYBRACKET .

    RPARENTHESES    reduce using rule 8 (argumentos -> LOCALVAR EQUAL LCURLYBRACKET RCURLYBRACKET .)


state 326

    (13) variosargumentos -> LOCALVAR EQUAL datos masargumentos .

    RPARENTHESES    reduce using rule 13 (variosargumentos -> LOCALVAR EQUAL datos masargumentos .)


state 327

    (11) variosargumentos -> LOCALVAR EQUAL . datos
    (13) variosargumentos -> LOCALVAR EQUAL . datos masargumentos
    (48) datos -> . INTEGER
    (49) datos -> . FLOAT
    (50) datos -> . STRING
    (51) datos -> . booleanos
    (52) booleanos -> . TRUE
    (53) booleanos -> . FALSE

    INTEGER         shift and go to state 84
    FLOAT           shift and go to state 85
    STRING          shift and go to state 73
    TRUE            shift and go to state 75
    FALSE           shift and go to state 76

    datos                          shift and go to state 288
    booleanos                      shift and go to state 74

state 328

    (3) funcion -> DEF LOCALVAR LPARENTHESES argumentos RPARENTHESES cuerpo END .

    $end            reduce using rule 3 (funcion -> DEF LOCALVAR LPARENTHESES argumentos RPARENTHESES cuerpo END .)


state 329

    (4) funcion -> DEF LOCALVAR LPARENTHESES argumentos RPARENTHESES cuerpo retornar . END

    END             shift and go to state 335


state 330

    (15) retornar -> RETURN . LOCALVAR
    (16) retornar -> RETURN . datos
    (48) datos -> . INTEGER
    (49) datos -> . FLOAT
    (50) datos -> . STRING
    (51) datos -> . booleanos
    (52) booleanos -> . TRUE
    (53) booleanos -> . FALSE

    LOCALVAR        shift and go to state 336
    INTEGER         shift and go to state 84
    FLOAT           shift and go to state 85
    STRING          shift and go to state 73
    TRUE            shift and go to state 75
    FALSE           shift and go to state 76

    datos                          shift and go to state 337
    booleanos                      shift and go to state 74

state 331

    (64) operacionHash -> hash DOT INCLUDE QUESTIONMARK LPARENTHESES datos RPARENTHESES .

    LOCALVAR        reduce using rule 64 (operacionHash -> hash DOT INCLUDE QUESTIONMARK LPARENTHESES datos RPARENTHESES .)
    FOR             reduce using rule 64 (operacionHash -> hash DOT INCLUDE QUESTIONMARK LPARENTHESES datos RPARENTHESES .)
    IF              reduce using rule 64 (operacionHash -> hash DOT INCLUDE QUESTIONMARK LPARENTHESES datos RPARENTHESES .)
    UNLESS          reduce using rule 64 (operacionHash -> hash DOT INCLUDE QUESTIONMARK LPARENTHESES datos RPARENTHESES .)
    PUTS            reduce using rule 64 (operacionHash -> hash DOT INCLUDE QUESTIONMARK LPARENTHESES datos RPARENTHESES .)
    PRINT           reduce using rule 64 (operacionHash -> hash DOT INCLUDE QUESTIONMARK LPARENTHESES datos RPARENTHESES .)
    STRING          reduce using rule 64 (operacionHash -> hash DOT INCLUDE QUESTIONMARK LPARENTHESES datos RPARENTHESES .)
    INTEGERW        reduce using rule 64 (operacionHash -> hash DOT INCLUDE QUESTIONMARK LPARENTHESES datos RPARENTHESES .)
    INTEGER         reduce using rule 64 (operacionHash -> hash DOT INCLUDE QUESTIONMARK LPARENTHESES datos RPARENTHESES .)
    FLOAT           reduce using rule 64 (operacionHash -> hash DOT INCLUDE QUESTIONMARK LPARENTHESES datos RPARENTHESES .)
    VAR             reduce using rule 64 (operacionHash -> hash DOT INCLUDE QUESTIONMARK LPARENTHESES datos RPARENTHESES .)
    CONSTANT        reduce using rule 64 (operacionHash -> hash DOT INCLUDE QUESTIONMARK LPARENTHESES datos RPARENTHESES .)
    LCURLYBRACKET   reduce using rule 64 (operacionHash -> hash DOT INCLUDE QUESTIONMARK LPARENTHESES datos RPARENTHESES .)
    LBRACKET        reduce using rule 64 (operacionHash -> hash DOT INCLUDE QUESTIONMARK LPARENTHESES datos RPARENTHESES .)
    SET             reduce using rule 64 (operacionHash -> hash DOT INCLUDE QUESTIONMARK LPARENTHESES datos RPARENTHESES .)
    $end            reduce using rule 64 (operacionHash -> hash DOT INCLUDE QUESTIONMARK LPARENTHESES datos RPARENTHESES .)
    ELSE            reduce using rule 64 (operacionHash -> hash DOT INCLUDE QUESTIONMARK LPARENTHESES datos RPARENTHESES .)
    END             reduce using rule 64 (operacionHash -> hash DOT INCLUDE QUESTIONMARK LPARENTHESES datos RPARENTHESES .)
    RETURN          reduce using rule 64 (operacionHash -> hash DOT INCLUDE QUESTIONMARK LPARENTHESES datos RPARENTHESES .)


state 332

    (116) else -> ELSE cuerpo . END

    END             shift and go to state 338


state 333

    (165) stringOpt -> INSERT LPARENTHESES INTEGER COMMA STRING . RPARENTHESES

    RPARENTHESES    shift and go to state 339


state 334

    (61) maselementos -> COMMA elementoHash . maselementos
    (60) maselementos -> .
    (61) maselementos -> . COMMA elementoHash maselementos

  ! shift/reduce conflict for COMMA resolved as shift
    RCURLYBRACKET   reduce using rule 60 (maselementos -> .)
    COMMA           shift and go to state 323

  ! COMMA           [ reduce using rule 60 (maselementos -> .) ]

    maselementos                   shift and go to state 340

state 335

    (4) funcion -> DEF LOCALVAR LPARENTHESES argumentos RPARENTHESES cuerpo retornar END .

    $end            reduce using rule 4 (funcion -> DEF LOCALVAR LPARENTHESES argumentos RPARENTHESES cuerpo retornar END .)


state 336

    (15) retornar -> RETURN LOCALVAR .

    END             reduce using rule 15 (retornar -> RETURN LOCALVAR .)


state 337

    (16) retornar -> RETURN datos .

    END             reduce using rule 16 (retornar -> RETURN datos .)


state 338

    (116) else -> ELSE cuerpo END .

    LOCALVAR        reduce using rule 116 (else -> ELSE cuerpo END .)
    FOR             reduce using rule 116 (else -> ELSE cuerpo END .)
    IF              reduce using rule 116 (else -> ELSE cuerpo END .)
    UNLESS          reduce using rule 116 (else -> ELSE cuerpo END .)
    PUTS            reduce using rule 116 (else -> ELSE cuerpo END .)
    PRINT           reduce using rule 116 (else -> ELSE cuerpo END .)
    STRING          reduce using rule 116 (else -> ELSE cuerpo END .)
    INTEGERW        reduce using rule 116 (else -> ELSE cuerpo END .)
    INTEGER         reduce using rule 116 (else -> ELSE cuerpo END .)
    FLOAT           reduce using rule 116 (else -> ELSE cuerpo END .)
    VAR             reduce using rule 116 (else -> ELSE cuerpo END .)
    CONSTANT        reduce using rule 116 (else -> ELSE cuerpo END .)
    LCURLYBRACKET   reduce using rule 116 (else -> ELSE cuerpo END .)
    LBRACKET        reduce using rule 116 (else -> ELSE cuerpo END .)
    SET             reduce using rule 116 (else -> ELSE cuerpo END .)
    $end            reduce using rule 116 (else -> ELSE cuerpo END .)
    ELSE            reduce using rule 116 (else -> ELSE cuerpo END .)
    END             reduce using rule 116 (else -> ELSE cuerpo END .)
    RETURN          reduce using rule 116 (else -> ELSE cuerpo END .)


state 339

    (165) stringOpt -> INSERT LPARENTHESES INTEGER COMMA STRING RPARENTHESES .

    LOCALVAR        reduce using rule 165 (stringOpt -> INSERT LPARENTHESES INTEGER COMMA STRING RPARENTHESES .)
    FOR             reduce using rule 165 (stringOpt -> INSERT LPARENTHESES INTEGER COMMA STRING RPARENTHESES .)
    IF              reduce using rule 165 (stringOpt -> INSERT LPARENTHESES INTEGER COMMA STRING RPARENTHESES .)
    UNLESS          reduce using rule 165 (stringOpt -> INSERT LPARENTHESES INTEGER COMMA STRING RPARENTHESES .)
    PUTS            reduce using rule 165 (stringOpt -> INSERT LPARENTHESES INTEGER COMMA STRING RPARENTHESES .)
    PRINT           reduce using rule 165 (stringOpt -> INSERT LPARENTHESES INTEGER COMMA STRING RPARENTHESES .)
    STRING          reduce using rule 165 (stringOpt -> INSERT LPARENTHESES INTEGER COMMA STRING RPARENTHESES .)
    INTEGERW        reduce using rule 165 (stringOpt -> INSERT LPARENTHESES INTEGER COMMA STRING RPARENTHESES .)
    INTEGER         reduce using rule 165 (stringOpt -> INSERT LPARENTHESES INTEGER COMMA STRING RPARENTHESES .)
    FLOAT           reduce using rule 165 (stringOpt -> INSERT LPARENTHESES INTEGER COMMA STRING RPARENTHESES .)
    VAR             reduce using rule 165 (stringOpt -> INSERT LPARENTHESES INTEGER COMMA STRING RPARENTHESES .)
    CONSTANT        reduce using rule 165 (stringOpt -> INSERT LPARENTHESES INTEGER COMMA STRING RPARENTHESES .)
    LCURLYBRACKET   reduce using rule 165 (stringOpt -> INSERT LPARENTHESES INTEGER COMMA STRING RPARENTHESES .)
    LBRACKET        reduce using rule 165 (stringOpt -> INSERT LPARENTHESES INTEGER COMMA STRING RPARENTHESES .)
    SET             reduce using rule 165 (stringOpt -> INSERT LPARENTHESES INTEGER COMMA STRING RPARENTHESES .)
    $end            reduce using rule 165 (stringOpt -> INSERT LPARENTHESES INTEGER COMMA STRING RPARENTHESES .)
    ELSE            reduce using rule 165 (stringOpt -> INSERT LPARENTHESES INTEGER COMMA STRING RPARENTHESES .)
    END             reduce using rule 165 (stringOpt -> INSERT LPARENTHESES INTEGER COMMA STRING RPARENTHESES .)
    RETURN          reduce using rule 165 (stringOpt -> INSERT LPARENTHESES INTEGER COMMA STRING RPARENTHESES .)


state 340

    (61) maselementos -> COMMA elementoHash maselementos .

    COMMA           reduce using rule 61 (maselementos -> COMMA elementoHash maselementos .)
    RCURLYBRACKET   reduce using rule 61 (maselementos -> COMMA elementoHash maselementos .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for LBRACKET in state 21 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 22 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 124 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 124 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 124 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 124 resolved as shift
WARNING: shift/reduce conflict for PERCENTAGE in state 124 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 182 resolved as shift
WARNING: shift/reduce conflict for DOUBLEAMPERSAND in state 220 resolved as shift
WARNING: shift/reduce conflict for DOUBLEPIPE in state 220 resolved as shift
WARNING: shift/reduce conflict for RPARENTHESES in state 223 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 248 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 248 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 248 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 248 resolved as shift
WARNING: shift/reduce conflict for PERCENTAGE in state 248 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 249 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 249 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 249 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 249 resolved as shift
WARNING: shift/reduce conflict for PERCENTAGE in state 249 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 250 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 250 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 250 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 250 resolved as shift
WARNING: shift/reduce conflict for PERCENTAGE in state 250 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 285 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 286 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 334 resolved as shift
WARNING: reduce/reduce conflict in state 69 resolved using rule (tiposvariables -> VAR)
WARNING: rejected rule (datosvarios -> VAR) in state 69
WARNING: reduce/reduce conflict in state 70 resolved using rule (tiposvariables -> LOCALVAR)
WARNING: rejected rule (datosvarios -> LOCALVAR) in state 70
WARNING: reduce/reduce conflict in state 71 resolved using rule (datos -> INTEGER)
WARNING: rejected rule (number -> INTEGER) in state 71
WARNING: reduce/reduce conflict in state 72 resolved using rule (datos -> FLOAT)
WARNING: rejected rule (number -> FLOAT) in state 72
WARNING: reduce/reduce conflict in state 182 resolved using rule (elementoSet -> datos)
WARNING: rejected rule (otroElemento -> <empty>) in state 182
