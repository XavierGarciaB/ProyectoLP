Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ALERT
    AMPERSAND
    BARRA
    BEGIN
    BEGIN_M
    BOOLEAN
    CIRCUMFLEX
    COLON
    COMBCOMP
    COMMENT
    DIVASSIGN
    DIVIDE
    DOBLEQUOTE
    DOUBLEAMPERSAND
    DOUBLELESSTHAN
    DOUBLEPIPE
    ELSEIF
    END_M
    EXCLAMATION
    EXPASSIGN
    FALSE
    GETS
    MINASSIGN
    MINUS
    MODASSIGN
    NIL
    NOT
    OR
    PERCENTAGE
    PLUS
    PLUSASSIGN
    QUESTIONMARKPERIOD
    SEMICOLON
    SINGLEQUOTE
    TIMESASSIGN
    TRUE
    TWOGREATERTHAN
    UNTIL
    WAVE

Grammar

Rule 0     S' -> inicio
Rule 1     inicio -> declaracion
Rule 2     inicio -> loop
Rule 3     inicio -> impresion
Rule 4     inicio -> funcion
Rule 5     inicio -> if
Rule 6     inicio -> array
Rule 7     inicio -> operacionarray
Rule 8     inicio -> unless
Rule 9     inicio -> set
Rule 10    inicio -> operacionSet
Rule 11    funcion -> DEF LOCALVAR LPARENTHESES argumentos RPARENTHESES cuerpo END
Rule 12    funcion -> DEF LOCALVAR LPARENTHESES argumentos RPARENTHESES cuerpo retornar END
Rule 13    argumentos -> variosargumentos
Rule 14    argumentos -> MULTIPLY LOCALVAR
Rule 15    argumentos -> TWOSTARS LOCALVAR
Rule 16    argumentos -> LOCALVAR EQUAL LCURLYBRACKET RCURLYBRACKET
Rule 17    argumentos -> LOCALVAR TWOPOINTS datos
Rule 18    variosargumentos -> LOCALVAR
Rule 19    variosargumentos -> LOCALVAR EQUAL datos
Rule 20    variosargumentos -> LOCALVAR masargumentos
Rule 21    variosargumentos -> LOCALVAR EQUAL datos masargumentos
Rule 22    masargumentos -> COMMA variosargumentos
Rule 23    retornar -> RETURN LOCALVAR
Rule 24    retornar -> RETURN datos
Rule 25    loop -> FOR LOCALVAR IN rango cuerpo END
Rule 26    declaracion -> tiposvariables EQUAL datos
Rule 27    declaracion -> tiposvariables EQUAL estructuras
Rule 28    tiposvariables -> VAR
Rule 29    tiposvariables -> LOCALVAR
Rule 30    tiposvariables -> CONSTANT
Rule 31    datos -> NUMBER
Rule 32    datos -> FLOAT
Rule 33    datos -> STRING
Rule 34    estructuras -> hash
Rule 35    estructuras -> set
Rule 36    cuerpo -> declaracion
Rule 37    cuerpo -> loop
Rule 38    cuerpo -> impresion
Rule 39    hash -> LCURLYBRACKET elementoHash RCURLYBRACKET masopciones
Rule 40    elementoHash -> datos EQUAL GREATERTHAN datos maselementos
Rule 41    maselementos -> <empty>
Rule 42    maselementos -> COMMA elementoHash maselementos
Rule 43    masopciones -> <empty>
Rule 44    masopciones -> LOCALVAR DOT funcionesHash masopciones
Rule 45    funcionesHash -> INCLUDE QUESTIONMARK LPARENTHESES datos RPARENTHESES
Rule 46    funcionesHash -> DELETE LPARENTHESES datos RPARENTHESES
Rule 47    funcionesHash -> KEYS
Rule 48    rango -> NUMBER RANGEINCLUSIVE NUMBER
Rule 49    rango -> NUMBER RANGEXCLUSIVE NUMBER
Rule 50    impresion -> PUTS datos
Rule 51    impresion -> PUTS LOCALVAR
Rule 52    impresion -> PUTS masopciones
Rule 53    impresion -> PRINT datos
Rule 54    impresion -> PRINT LOCALVAR
Rule 55    impresion -> PRINT masopciones
Rule 56    array -> tiposvariables EQUAL LBRACKET datosarray RBRACKET
Rule 57    array -> tiposvariables EQUAL LBRACKET RBRACKET
Rule 58    if -> IF datosvarios operadores datosvarios cuerpo END
Rule 59    if -> IF datosvarios operadores datosvarios cuerpo else
Rule 60    else -> ELSE cuerpo END
Rule 61    operadores -> DOUBLEEQUAL
Rule 62    operadores -> TRIPLEEQUAL
Rule 63    operadores -> GREATERTHAN
Rule 64    operadores -> NOTEQUAL
Rule 65    operadores -> LESSTHAN
Rule 66    operadores -> GREQUAL
Rule 67    operadores -> LEQUAL
Rule 68    datosvarios -> datos
Rule 69    datosvarios -> tiposvariables
Rule 70    datosarray -> datosvarios
Rule 71    datosarray -> datosarray COMMA datosvarios
Rule 72    operacionarray -> tiposvariables LBRACKET NUMBER RBRACKET
Rule 73    operacionarray -> tiposvariables DOT TAKE LPARENTHESES NUMBER RPARENTHESES
Rule 74    operacionarray -> tiposvariables DOT DROP LPARENTHESES NUMBER RPARENTHESES
Rule 75    unless -> UNLESS condiciones cuerpo ELSE cuerpo END
Rule 76    condiciones -> VAR operadores VAR
Rule 77    condiciones -> datos operadores datos
Rule 78    condiciones -> VAR operadores datos
Rule 79    condiciones -> datos operadores VAR
Rule 80    set -> SET LBRACKET elementoSet RBRACKET
Rule 81    elementoSet -> <empty>
Rule 82    elementoSet -> datos
Rule 83    elementoSet -> tiposvariables
Rule 84    elementoSet -> datos otroElemento
Rule 85    elementoSet -> tiposvariables otroElemento
Rule 86    otroElemento -> <empty>
Rule 87    otroElemento -> COMMA elementoSet otroElemento
Rule 88    operacionSet -> set DOT ADD LPARENTHESES datos RPARENTHESES
Rule 89    operacionSet -> set DOT ADD LPARENTHESES tiposvariables RPARENTHESES
Rule 90    operacionSet -> set DOT CLEAR
Rule 91    operacionSet -> set DOT DELETE LPARENTHESES datos RPARENTHESES
Rule 92    operacionSet -> set DOT DELETE LPARENTHESES tiposvariables RPARENTHESES

Terminals, with rules where they appear

ADD                  : 88 89
ALERT                : 
AMPERSAND            : 
BARRA                : 
BEGIN                : 
BEGIN_M              : 
BOOLEAN              : 
CIRCUMFLEX           : 
CLEAR                : 90
COLON                : 
COMBCOMP             : 
COMMA                : 22 42 71 87
COMMENT              : 
CONSTANT             : 30
DEF                  : 11 12
DELETE               : 46 91 92
DIVASSIGN            : 
DIVIDE               : 
DOBLEQUOTE           : 
DOT                  : 44 73 74 88 89 90 91 92
DOUBLEAMPERSAND      : 
DOUBLEEQUAL          : 61
DOUBLELESSTHAN       : 
DOUBLEPIPE           : 
DROP                 : 74
ELSE                 : 60 75
ELSEIF               : 
END                  : 11 12 25 58 60 75
END_M                : 
EQUAL                : 16 19 21 26 27 40 56 57
EXCLAMATION          : 
EXPASSIGN            : 
FALSE                : 
FLOAT                : 32
FOR                  : 25
GETS                 : 
GREATERTHAN          : 40 63
GREQUAL              : 66
IF                   : 58 59
IN                   : 25
INCLUDE              : 45
KEYS                 : 47
LBRACKET             : 56 57 72 80
LCURLYBRACKET        : 16 39
LEQUAL               : 67
LESSTHAN             : 65
LOCALVAR             : 11 12 14 15 16 17 18 19 20 21 23 25 29 44 51 54
LPARENTHESES         : 11 12 45 46 73 74 88 89 91 92
MINASSIGN            : 
MINUS                : 
MODASSIGN            : 
MULTIPLY             : 14
NIL                  : 
NOT                  : 
NOTEQUAL             : 64
NUMBER               : 31 48 48 49 49 72 73 74
OR                   : 
PERCENTAGE           : 
PLUS                 : 
PLUSASSIGN           : 
PRINT                : 53 54 55
PUTS                 : 50 51 52
QUESTIONMARK         : 45
QUESTIONMARKPERIOD   : 
RANGEINCLUSIVE       : 48
RANGEXCLUSIVE        : 49
RBRACKET             : 56 57 72 80
RCURLYBRACKET        : 16 39
RETURN               : 23 24
RPARENTHESES         : 11 12 45 46 73 74 88 89 91 92
SEMICOLON            : 
SET                  : 80
SINGLEQUOTE          : 
STRING               : 33
TAKE                 : 73
TIMESASSIGN          : 
TRIPLEEQUAL          : 62
TRUE                 : 
TWOGREATERTHAN       : 
TWOPOINTS            : 17
TWOSTARS             : 15
UNLESS               : 75
UNTIL                : 
VAR                  : 28 76 76 78 79
WAVE                 : 
error                : 

Nonterminals, with rules where they appear

argumentos           : 11 12
array                : 6
condiciones          : 75
cuerpo               : 11 12 25 58 59 60 75 75
datos                : 17 19 21 24 26 40 40 45 46 50 53 68 77 77 78 79 82 84 88 91
datosarray           : 56 71
datosvarios          : 58 58 59 59 70 71
declaracion          : 1 36
elementoHash         : 39 42
elementoSet          : 80 87
else                 : 59
estructuras          : 27
funcion              : 4
funcionesHash        : 44
hash                 : 34
if                   : 5
impresion            : 3 38
inicio               : 0
loop                 : 2 37
masargumentos        : 20 21
maselementos         : 40 42
masopciones          : 39 44 52 55
operacionSet         : 10
operacionarray       : 7
operadores           : 58 59 76 77 78 79
otroElemento         : 84 85 87
rango                : 25
retornar             : 12
set                  : 9 35 88 89 90 91 92
tiposvariables       : 26 27 56 57 69 72 73 74 83 85 89 92
unless               : 8
variosargumentos     : 13 22

Parsing method: LALR

state 0

    (0) S' -> . inicio
    (1) inicio -> . declaracion
    (2) inicio -> . loop
    (3) inicio -> . impresion
    (4) inicio -> . funcion
    (5) inicio -> . if
    (6) inicio -> . array
    (7) inicio -> . operacionarray
    (8) inicio -> . unless
    (9) inicio -> . set
    (10) inicio -> . operacionSet
    (26) declaracion -> . tiposvariables EQUAL datos
    (27) declaracion -> . tiposvariables EQUAL estructuras
    (25) loop -> . FOR LOCALVAR IN rango cuerpo END
    (50) impresion -> . PUTS datos
    (51) impresion -> . PUTS LOCALVAR
    (52) impresion -> . PUTS masopciones
    (53) impresion -> . PRINT datos
    (54) impresion -> . PRINT LOCALVAR
    (55) impresion -> . PRINT masopciones
    (11) funcion -> . DEF LOCALVAR LPARENTHESES argumentos RPARENTHESES cuerpo END
    (12) funcion -> . DEF LOCALVAR LPARENTHESES argumentos RPARENTHESES cuerpo retornar END
    (58) if -> . IF datosvarios operadores datosvarios cuerpo END
    (59) if -> . IF datosvarios operadores datosvarios cuerpo else
    (56) array -> . tiposvariables EQUAL LBRACKET datosarray RBRACKET
    (57) array -> . tiposvariables EQUAL LBRACKET RBRACKET
    (72) operacionarray -> . tiposvariables LBRACKET NUMBER RBRACKET
    (73) operacionarray -> . tiposvariables DOT TAKE LPARENTHESES NUMBER RPARENTHESES
    (74) operacionarray -> . tiposvariables DOT DROP LPARENTHESES NUMBER RPARENTHESES
    (75) unless -> . UNLESS condiciones cuerpo ELSE cuerpo END
    (80) set -> . SET LBRACKET elementoSet RBRACKET
    (88) operacionSet -> . set DOT ADD LPARENTHESES datos RPARENTHESES
    (89) operacionSet -> . set DOT ADD LPARENTHESES tiposvariables RPARENTHESES
    (90) operacionSet -> . set DOT CLEAR
    (91) operacionSet -> . set DOT DELETE LPARENTHESES datos RPARENTHESES
    (92) operacionSet -> . set DOT DELETE LPARENTHESES tiposvariables RPARENTHESES
    (28) tiposvariables -> . VAR
    (29) tiposvariables -> . LOCALVAR
    (30) tiposvariables -> . CONSTANT

    FOR             shift and go to state 13
    PUTS            shift and go to state 15
    PRINT           shift and go to state 16
    DEF             shift and go to state 17
    IF              shift and go to state 18
    UNLESS          shift and go to state 19
    SET             shift and go to state 20
    VAR             shift and go to state 21
    LOCALVAR        shift and go to state 14
    CONSTANT        shift and go to state 22

    inicio                         shift and go to state 1
    declaracion                    shift and go to state 2
    loop                           shift and go to state 3
    impresion                      shift and go to state 4
    funcion                        shift and go to state 5
    if                             shift and go to state 6
    array                          shift and go to state 7
    operacionarray                 shift and go to state 8
    unless                         shift and go to state 9
    set                            shift and go to state 10
    operacionSet                   shift and go to state 11
    tiposvariables                 shift and go to state 12

state 1

    (0) S' -> inicio .



state 2

    (1) inicio -> declaracion .

    $end            reduce using rule 1 (inicio -> declaracion .)


state 3

    (2) inicio -> loop .

    $end            reduce using rule 2 (inicio -> loop .)


state 4

    (3) inicio -> impresion .

    $end            reduce using rule 3 (inicio -> impresion .)


state 5

    (4) inicio -> funcion .

    $end            reduce using rule 4 (inicio -> funcion .)


state 6

    (5) inicio -> if .

    $end            reduce using rule 5 (inicio -> if .)


state 7

    (6) inicio -> array .

    $end            reduce using rule 6 (inicio -> array .)


state 8

    (7) inicio -> operacionarray .

    $end            reduce using rule 7 (inicio -> operacionarray .)


state 9

    (8) inicio -> unless .

    $end            reduce using rule 8 (inicio -> unless .)


state 10

    (9) inicio -> set .
    (88) operacionSet -> set . DOT ADD LPARENTHESES datos RPARENTHESES
    (89) operacionSet -> set . DOT ADD LPARENTHESES tiposvariables RPARENTHESES
    (90) operacionSet -> set . DOT CLEAR
    (91) operacionSet -> set . DOT DELETE LPARENTHESES datos RPARENTHESES
    (92) operacionSet -> set . DOT DELETE LPARENTHESES tiposvariables RPARENTHESES

    $end            reduce using rule 9 (inicio -> set .)
    DOT             shift and go to state 23


state 11

    (10) inicio -> operacionSet .

    $end            reduce using rule 10 (inicio -> operacionSet .)


state 12

    (26) declaracion -> tiposvariables . EQUAL datos
    (27) declaracion -> tiposvariables . EQUAL estructuras
    (56) array -> tiposvariables . EQUAL LBRACKET datosarray RBRACKET
    (57) array -> tiposvariables . EQUAL LBRACKET RBRACKET
    (72) operacionarray -> tiposvariables . LBRACKET NUMBER RBRACKET
    (73) operacionarray -> tiposvariables . DOT TAKE LPARENTHESES NUMBER RPARENTHESES
    (74) operacionarray -> tiposvariables . DOT DROP LPARENTHESES NUMBER RPARENTHESES

    EQUAL           shift and go to state 24
    LBRACKET        shift and go to state 25
    DOT             shift and go to state 26


state 13

    (25) loop -> FOR . LOCALVAR IN rango cuerpo END

    LOCALVAR        shift and go to state 27


state 14

    (29) tiposvariables -> LOCALVAR .

    EQUAL           reduce using rule 29 (tiposvariables -> LOCALVAR .)
    LBRACKET        reduce using rule 29 (tiposvariables -> LOCALVAR .)
    DOT             reduce using rule 29 (tiposvariables -> LOCALVAR .)
    DOUBLEEQUAL     reduce using rule 29 (tiposvariables -> LOCALVAR .)
    TRIPLEEQUAL     reduce using rule 29 (tiposvariables -> LOCALVAR .)
    GREATERTHAN     reduce using rule 29 (tiposvariables -> LOCALVAR .)
    NOTEQUAL        reduce using rule 29 (tiposvariables -> LOCALVAR .)
    LESSTHAN        reduce using rule 29 (tiposvariables -> LOCALVAR .)
    GREQUAL         reduce using rule 29 (tiposvariables -> LOCALVAR .)
    LEQUAL          reduce using rule 29 (tiposvariables -> LOCALVAR .)
    COMMA           reduce using rule 29 (tiposvariables -> LOCALVAR .)
    RBRACKET        reduce using rule 29 (tiposvariables -> LOCALVAR .)
    FOR             reduce using rule 29 (tiposvariables -> LOCALVAR .)
    PUTS            reduce using rule 29 (tiposvariables -> LOCALVAR .)
    PRINT           reduce using rule 29 (tiposvariables -> LOCALVAR .)
    VAR             reduce using rule 29 (tiposvariables -> LOCALVAR .)
    LOCALVAR        reduce using rule 29 (tiposvariables -> LOCALVAR .)
    CONSTANT        reduce using rule 29 (tiposvariables -> LOCALVAR .)
    RPARENTHESES    reduce using rule 29 (tiposvariables -> LOCALVAR .)


state 15

    (50) impresion -> PUTS . datos
    (51) impresion -> PUTS . LOCALVAR
    (52) impresion -> PUTS . masopciones
    (31) datos -> . NUMBER
    (32) datos -> . FLOAT
    (33) datos -> . STRING
    (43) masopciones -> .
    (44) masopciones -> . LOCALVAR DOT funcionesHash masopciones

    LOCALVAR        shift and go to state 29
    NUMBER          shift and go to state 31
    FLOAT           shift and go to state 32
    STRING          shift and go to state 33
    $end            reduce using rule 43 (masopciones -> .)
    ELSE            reduce using rule 43 (masopciones -> .)
    END             reduce using rule 43 (masopciones -> .)
    RETURN          reduce using rule 43 (masopciones -> .)

    datos                          shift and go to state 28
    masopciones                    shift and go to state 30

state 16

    (53) impresion -> PRINT . datos
    (54) impresion -> PRINT . LOCALVAR
    (55) impresion -> PRINT . masopciones
    (31) datos -> . NUMBER
    (32) datos -> . FLOAT
    (33) datos -> . STRING
    (43) masopciones -> .
    (44) masopciones -> . LOCALVAR DOT funcionesHash masopciones

    LOCALVAR        shift and go to state 35
    NUMBER          shift and go to state 31
    FLOAT           shift and go to state 32
    STRING          shift and go to state 33
    $end            reduce using rule 43 (masopciones -> .)
    ELSE            reduce using rule 43 (masopciones -> .)
    END             reduce using rule 43 (masopciones -> .)
    RETURN          reduce using rule 43 (masopciones -> .)

    datos                          shift and go to state 34
    masopciones                    shift and go to state 36

state 17

    (11) funcion -> DEF . LOCALVAR LPARENTHESES argumentos RPARENTHESES cuerpo END
    (12) funcion -> DEF . LOCALVAR LPARENTHESES argumentos RPARENTHESES cuerpo retornar END

    LOCALVAR        shift and go to state 37


state 18

    (58) if -> IF . datosvarios operadores datosvarios cuerpo END
    (59) if -> IF . datosvarios operadores datosvarios cuerpo else
    (68) datosvarios -> . datos
    (69) datosvarios -> . tiposvariables
    (31) datos -> . NUMBER
    (32) datos -> . FLOAT
    (33) datos -> . STRING
    (28) tiposvariables -> . VAR
    (29) tiposvariables -> . LOCALVAR
    (30) tiposvariables -> . CONSTANT

    NUMBER          shift and go to state 31
    FLOAT           shift and go to state 32
    STRING          shift and go to state 33
    VAR             shift and go to state 21
    LOCALVAR        shift and go to state 14
    CONSTANT        shift and go to state 22

    datosvarios                    shift and go to state 38
    datos                          shift and go to state 39
    tiposvariables                 shift and go to state 40

state 19

    (75) unless -> UNLESS . condiciones cuerpo ELSE cuerpo END
    (76) condiciones -> . VAR operadores VAR
    (77) condiciones -> . datos operadores datos
    (78) condiciones -> . VAR operadores datos
    (79) condiciones -> . datos operadores VAR
    (31) datos -> . NUMBER
    (32) datos -> . FLOAT
    (33) datos -> . STRING

    VAR             shift and go to state 42
    NUMBER          shift and go to state 31
    FLOAT           shift and go to state 32
    STRING          shift and go to state 33

    condiciones                    shift and go to state 41
    datos                          shift and go to state 43

state 20

    (80) set -> SET . LBRACKET elementoSet RBRACKET

    LBRACKET        shift and go to state 44


state 21

    (28) tiposvariables -> VAR .

    EQUAL           reduce using rule 28 (tiposvariables -> VAR .)
    LBRACKET        reduce using rule 28 (tiposvariables -> VAR .)
    DOT             reduce using rule 28 (tiposvariables -> VAR .)
    DOUBLEEQUAL     reduce using rule 28 (tiposvariables -> VAR .)
    TRIPLEEQUAL     reduce using rule 28 (tiposvariables -> VAR .)
    GREATERTHAN     reduce using rule 28 (tiposvariables -> VAR .)
    NOTEQUAL        reduce using rule 28 (tiposvariables -> VAR .)
    LESSTHAN        reduce using rule 28 (tiposvariables -> VAR .)
    GREQUAL         reduce using rule 28 (tiposvariables -> VAR .)
    LEQUAL          reduce using rule 28 (tiposvariables -> VAR .)
    COMMA           reduce using rule 28 (tiposvariables -> VAR .)
    RBRACKET        reduce using rule 28 (tiposvariables -> VAR .)
    FOR             reduce using rule 28 (tiposvariables -> VAR .)
    PUTS            reduce using rule 28 (tiposvariables -> VAR .)
    PRINT           reduce using rule 28 (tiposvariables -> VAR .)
    VAR             reduce using rule 28 (tiposvariables -> VAR .)
    LOCALVAR        reduce using rule 28 (tiposvariables -> VAR .)
    CONSTANT        reduce using rule 28 (tiposvariables -> VAR .)
    RPARENTHESES    reduce using rule 28 (tiposvariables -> VAR .)


state 22

    (30) tiposvariables -> CONSTANT .

    EQUAL           reduce using rule 30 (tiposvariables -> CONSTANT .)
    LBRACKET        reduce using rule 30 (tiposvariables -> CONSTANT .)
    DOT             reduce using rule 30 (tiposvariables -> CONSTANT .)
    DOUBLEEQUAL     reduce using rule 30 (tiposvariables -> CONSTANT .)
    TRIPLEEQUAL     reduce using rule 30 (tiposvariables -> CONSTANT .)
    GREATERTHAN     reduce using rule 30 (tiposvariables -> CONSTANT .)
    NOTEQUAL        reduce using rule 30 (tiposvariables -> CONSTANT .)
    LESSTHAN        reduce using rule 30 (tiposvariables -> CONSTANT .)
    GREQUAL         reduce using rule 30 (tiposvariables -> CONSTANT .)
    LEQUAL          reduce using rule 30 (tiposvariables -> CONSTANT .)
    COMMA           reduce using rule 30 (tiposvariables -> CONSTANT .)
    RBRACKET        reduce using rule 30 (tiposvariables -> CONSTANT .)
    FOR             reduce using rule 30 (tiposvariables -> CONSTANT .)
    PUTS            reduce using rule 30 (tiposvariables -> CONSTANT .)
    PRINT           reduce using rule 30 (tiposvariables -> CONSTANT .)
    VAR             reduce using rule 30 (tiposvariables -> CONSTANT .)
    LOCALVAR        reduce using rule 30 (tiposvariables -> CONSTANT .)
    CONSTANT        reduce using rule 30 (tiposvariables -> CONSTANT .)
    RPARENTHESES    reduce using rule 30 (tiposvariables -> CONSTANT .)


state 23

    (88) operacionSet -> set DOT . ADD LPARENTHESES datos RPARENTHESES
    (89) operacionSet -> set DOT . ADD LPARENTHESES tiposvariables RPARENTHESES
    (90) operacionSet -> set DOT . CLEAR
    (91) operacionSet -> set DOT . DELETE LPARENTHESES datos RPARENTHESES
    (92) operacionSet -> set DOT . DELETE LPARENTHESES tiposvariables RPARENTHESES

    ADD             shift and go to state 45
    CLEAR           shift and go to state 46
    DELETE          shift and go to state 47


state 24

    (26) declaracion -> tiposvariables EQUAL . datos
    (27) declaracion -> tiposvariables EQUAL . estructuras
    (56) array -> tiposvariables EQUAL . LBRACKET datosarray RBRACKET
    (57) array -> tiposvariables EQUAL . LBRACKET RBRACKET
    (31) datos -> . NUMBER
    (32) datos -> . FLOAT
    (33) datos -> . STRING
    (34) estructuras -> . hash
    (35) estructuras -> . set
    (39) hash -> . LCURLYBRACKET elementoHash RCURLYBRACKET masopciones
    (80) set -> . SET LBRACKET elementoSet RBRACKET

    LBRACKET        shift and go to state 50
    NUMBER          shift and go to state 31
    FLOAT           shift and go to state 32
    STRING          shift and go to state 33
    LCURLYBRACKET   shift and go to state 53
    SET             shift and go to state 20

    datos                          shift and go to state 48
    estructuras                    shift and go to state 49
    hash                           shift and go to state 51
    set                            shift and go to state 52

state 25

    (72) operacionarray -> tiposvariables LBRACKET . NUMBER RBRACKET

    NUMBER          shift and go to state 54


state 26

    (73) operacionarray -> tiposvariables DOT . TAKE LPARENTHESES NUMBER RPARENTHESES
    (74) operacionarray -> tiposvariables DOT . DROP LPARENTHESES NUMBER RPARENTHESES

    TAKE            shift and go to state 55
    DROP            shift and go to state 56


state 27

    (25) loop -> FOR LOCALVAR . IN rango cuerpo END

    IN              shift and go to state 57


state 28

    (50) impresion -> PUTS datos .

    $end            reduce using rule 50 (impresion -> PUTS datos .)
    ELSE            reduce using rule 50 (impresion -> PUTS datos .)
    END             reduce using rule 50 (impresion -> PUTS datos .)
    RETURN          reduce using rule 50 (impresion -> PUTS datos .)


state 29

    (51) impresion -> PUTS LOCALVAR .
    (44) masopciones -> LOCALVAR . DOT funcionesHash masopciones

    $end            reduce using rule 51 (impresion -> PUTS LOCALVAR .)
    ELSE            reduce using rule 51 (impresion -> PUTS LOCALVAR .)
    END             reduce using rule 51 (impresion -> PUTS LOCALVAR .)
    RETURN          reduce using rule 51 (impresion -> PUTS LOCALVAR .)
    DOT             shift and go to state 58


state 30

    (52) impresion -> PUTS masopciones .

    $end            reduce using rule 52 (impresion -> PUTS masopciones .)
    ELSE            reduce using rule 52 (impresion -> PUTS masopciones .)
    END             reduce using rule 52 (impresion -> PUTS masopciones .)
    RETURN          reduce using rule 52 (impresion -> PUTS masopciones .)


state 31

    (31) datos -> NUMBER .

    $end            reduce using rule 31 (datos -> NUMBER .)
    ELSE            reduce using rule 31 (datos -> NUMBER .)
    END             reduce using rule 31 (datos -> NUMBER .)
    RETURN          reduce using rule 31 (datos -> NUMBER .)
    DOUBLEEQUAL     reduce using rule 31 (datos -> NUMBER .)
    TRIPLEEQUAL     reduce using rule 31 (datos -> NUMBER .)
    GREATERTHAN     reduce using rule 31 (datos -> NUMBER .)
    NOTEQUAL        reduce using rule 31 (datos -> NUMBER .)
    LESSTHAN        reduce using rule 31 (datos -> NUMBER .)
    GREQUAL         reduce using rule 31 (datos -> NUMBER .)
    LEQUAL          reduce using rule 31 (datos -> NUMBER .)
    COMMA           reduce using rule 31 (datos -> NUMBER .)
    RBRACKET        reduce using rule 31 (datos -> NUMBER .)
    EQUAL           reduce using rule 31 (datos -> NUMBER .)
    FOR             reduce using rule 31 (datos -> NUMBER .)
    PUTS            reduce using rule 31 (datos -> NUMBER .)
    PRINT           reduce using rule 31 (datos -> NUMBER .)
    VAR             reduce using rule 31 (datos -> NUMBER .)
    LOCALVAR        reduce using rule 31 (datos -> NUMBER .)
    CONSTANT        reduce using rule 31 (datos -> NUMBER .)
    RPARENTHESES    reduce using rule 31 (datos -> NUMBER .)
    RCURLYBRACKET   reduce using rule 31 (datos -> NUMBER .)


state 32

    (32) datos -> FLOAT .

    $end            reduce using rule 32 (datos -> FLOAT .)
    ELSE            reduce using rule 32 (datos -> FLOAT .)
    END             reduce using rule 32 (datos -> FLOAT .)
    RETURN          reduce using rule 32 (datos -> FLOAT .)
    DOUBLEEQUAL     reduce using rule 32 (datos -> FLOAT .)
    TRIPLEEQUAL     reduce using rule 32 (datos -> FLOAT .)
    GREATERTHAN     reduce using rule 32 (datos -> FLOAT .)
    NOTEQUAL        reduce using rule 32 (datos -> FLOAT .)
    LESSTHAN        reduce using rule 32 (datos -> FLOAT .)
    GREQUAL         reduce using rule 32 (datos -> FLOAT .)
    LEQUAL          reduce using rule 32 (datos -> FLOAT .)
    COMMA           reduce using rule 32 (datos -> FLOAT .)
    RBRACKET        reduce using rule 32 (datos -> FLOAT .)
    EQUAL           reduce using rule 32 (datos -> FLOAT .)
    FOR             reduce using rule 32 (datos -> FLOAT .)
    PUTS            reduce using rule 32 (datos -> FLOAT .)
    PRINT           reduce using rule 32 (datos -> FLOAT .)
    VAR             reduce using rule 32 (datos -> FLOAT .)
    LOCALVAR        reduce using rule 32 (datos -> FLOAT .)
    CONSTANT        reduce using rule 32 (datos -> FLOAT .)
    RPARENTHESES    reduce using rule 32 (datos -> FLOAT .)
    RCURLYBRACKET   reduce using rule 32 (datos -> FLOAT .)


state 33

    (33) datos -> STRING .

    $end            reduce using rule 33 (datos -> STRING .)
    ELSE            reduce using rule 33 (datos -> STRING .)
    END             reduce using rule 33 (datos -> STRING .)
    RETURN          reduce using rule 33 (datos -> STRING .)
    DOUBLEEQUAL     reduce using rule 33 (datos -> STRING .)
    TRIPLEEQUAL     reduce using rule 33 (datos -> STRING .)
    GREATERTHAN     reduce using rule 33 (datos -> STRING .)
    NOTEQUAL        reduce using rule 33 (datos -> STRING .)
    LESSTHAN        reduce using rule 33 (datos -> STRING .)
    GREQUAL         reduce using rule 33 (datos -> STRING .)
    LEQUAL          reduce using rule 33 (datos -> STRING .)
    COMMA           reduce using rule 33 (datos -> STRING .)
    RBRACKET        reduce using rule 33 (datos -> STRING .)
    EQUAL           reduce using rule 33 (datos -> STRING .)
    FOR             reduce using rule 33 (datos -> STRING .)
    PUTS            reduce using rule 33 (datos -> STRING .)
    PRINT           reduce using rule 33 (datos -> STRING .)
    VAR             reduce using rule 33 (datos -> STRING .)
    LOCALVAR        reduce using rule 33 (datos -> STRING .)
    CONSTANT        reduce using rule 33 (datos -> STRING .)
    RPARENTHESES    reduce using rule 33 (datos -> STRING .)
    RCURLYBRACKET   reduce using rule 33 (datos -> STRING .)


state 34

    (53) impresion -> PRINT datos .

    $end            reduce using rule 53 (impresion -> PRINT datos .)
    ELSE            reduce using rule 53 (impresion -> PRINT datos .)
    END             reduce using rule 53 (impresion -> PRINT datos .)
    RETURN          reduce using rule 53 (impresion -> PRINT datos .)


state 35

    (54) impresion -> PRINT LOCALVAR .
    (44) masopciones -> LOCALVAR . DOT funcionesHash masopciones

    $end            reduce using rule 54 (impresion -> PRINT LOCALVAR .)
    ELSE            reduce using rule 54 (impresion -> PRINT LOCALVAR .)
    END             reduce using rule 54 (impresion -> PRINT LOCALVAR .)
    RETURN          reduce using rule 54 (impresion -> PRINT LOCALVAR .)
    DOT             shift and go to state 58


state 36

    (55) impresion -> PRINT masopciones .

    $end            reduce using rule 55 (impresion -> PRINT masopciones .)
    ELSE            reduce using rule 55 (impresion -> PRINT masopciones .)
    END             reduce using rule 55 (impresion -> PRINT masopciones .)
    RETURN          reduce using rule 55 (impresion -> PRINT masopciones .)


state 37

    (11) funcion -> DEF LOCALVAR . LPARENTHESES argumentos RPARENTHESES cuerpo END
    (12) funcion -> DEF LOCALVAR . LPARENTHESES argumentos RPARENTHESES cuerpo retornar END

    LPARENTHESES    shift and go to state 59


state 38

    (58) if -> IF datosvarios . operadores datosvarios cuerpo END
    (59) if -> IF datosvarios . operadores datosvarios cuerpo else
    (61) operadores -> . DOUBLEEQUAL
    (62) operadores -> . TRIPLEEQUAL
    (63) operadores -> . GREATERTHAN
    (64) operadores -> . NOTEQUAL
    (65) operadores -> . LESSTHAN
    (66) operadores -> . GREQUAL
    (67) operadores -> . LEQUAL

    DOUBLEEQUAL     shift and go to state 61
    TRIPLEEQUAL     shift and go to state 62
    GREATERTHAN     shift and go to state 63
    NOTEQUAL        shift and go to state 64
    LESSTHAN        shift and go to state 65
    GREQUAL         shift and go to state 66
    LEQUAL          shift and go to state 67

    operadores                     shift and go to state 60

state 39

    (68) datosvarios -> datos .

    DOUBLEEQUAL     reduce using rule 68 (datosvarios -> datos .)
    TRIPLEEQUAL     reduce using rule 68 (datosvarios -> datos .)
    GREATERTHAN     reduce using rule 68 (datosvarios -> datos .)
    NOTEQUAL        reduce using rule 68 (datosvarios -> datos .)
    LESSTHAN        reduce using rule 68 (datosvarios -> datos .)
    GREQUAL         reduce using rule 68 (datosvarios -> datos .)
    LEQUAL          reduce using rule 68 (datosvarios -> datos .)
    RBRACKET        reduce using rule 68 (datosvarios -> datos .)
    COMMA           reduce using rule 68 (datosvarios -> datos .)
    FOR             reduce using rule 68 (datosvarios -> datos .)
    PUTS            reduce using rule 68 (datosvarios -> datos .)
    PRINT           reduce using rule 68 (datosvarios -> datos .)
    VAR             reduce using rule 68 (datosvarios -> datos .)
    LOCALVAR        reduce using rule 68 (datosvarios -> datos .)
    CONSTANT        reduce using rule 68 (datosvarios -> datos .)


state 40

    (69) datosvarios -> tiposvariables .

    DOUBLEEQUAL     reduce using rule 69 (datosvarios -> tiposvariables .)
    TRIPLEEQUAL     reduce using rule 69 (datosvarios -> tiposvariables .)
    GREATERTHAN     reduce using rule 69 (datosvarios -> tiposvariables .)
    NOTEQUAL        reduce using rule 69 (datosvarios -> tiposvariables .)
    LESSTHAN        reduce using rule 69 (datosvarios -> tiposvariables .)
    GREQUAL         reduce using rule 69 (datosvarios -> tiposvariables .)
    LEQUAL          reduce using rule 69 (datosvarios -> tiposvariables .)
    RBRACKET        reduce using rule 69 (datosvarios -> tiposvariables .)
    COMMA           reduce using rule 69 (datosvarios -> tiposvariables .)
    FOR             reduce using rule 69 (datosvarios -> tiposvariables .)
    PUTS            reduce using rule 69 (datosvarios -> tiposvariables .)
    PRINT           reduce using rule 69 (datosvarios -> tiposvariables .)
    VAR             reduce using rule 69 (datosvarios -> tiposvariables .)
    LOCALVAR        reduce using rule 69 (datosvarios -> tiposvariables .)
    CONSTANT        reduce using rule 69 (datosvarios -> tiposvariables .)


state 41

    (75) unless -> UNLESS condiciones . cuerpo ELSE cuerpo END
    (36) cuerpo -> . declaracion
    (37) cuerpo -> . loop
    (38) cuerpo -> . impresion
    (26) declaracion -> . tiposvariables EQUAL datos
    (27) declaracion -> . tiposvariables EQUAL estructuras
    (25) loop -> . FOR LOCALVAR IN rango cuerpo END
    (50) impresion -> . PUTS datos
    (51) impresion -> . PUTS LOCALVAR
    (52) impresion -> . PUTS masopciones
    (53) impresion -> . PRINT datos
    (54) impresion -> . PRINT LOCALVAR
    (55) impresion -> . PRINT masopciones
    (28) tiposvariables -> . VAR
    (29) tiposvariables -> . LOCALVAR
    (30) tiposvariables -> . CONSTANT

    FOR             shift and go to state 13
    PUTS            shift and go to state 15
    PRINT           shift and go to state 16
    VAR             shift and go to state 21
    LOCALVAR        shift and go to state 14
    CONSTANT        shift and go to state 22

    cuerpo                         shift and go to state 68
    declaracion                    shift and go to state 69
    loop                           shift and go to state 70
    impresion                      shift and go to state 71
    tiposvariables                 shift and go to state 72

state 42

    (76) condiciones -> VAR . operadores VAR
    (78) condiciones -> VAR . operadores datos
    (61) operadores -> . DOUBLEEQUAL
    (62) operadores -> . TRIPLEEQUAL
    (63) operadores -> . GREATERTHAN
    (64) operadores -> . NOTEQUAL
    (65) operadores -> . LESSTHAN
    (66) operadores -> . GREQUAL
    (67) operadores -> . LEQUAL

    DOUBLEEQUAL     shift and go to state 61
    TRIPLEEQUAL     shift and go to state 62
    GREATERTHAN     shift and go to state 63
    NOTEQUAL        shift and go to state 64
    LESSTHAN        shift and go to state 65
    GREQUAL         shift and go to state 66
    LEQUAL          shift and go to state 67

    operadores                     shift and go to state 73

state 43

    (77) condiciones -> datos . operadores datos
    (79) condiciones -> datos . operadores VAR
    (61) operadores -> . DOUBLEEQUAL
    (62) operadores -> . TRIPLEEQUAL
    (63) operadores -> . GREATERTHAN
    (64) operadores -> . NOTEQUAL
    (65) operadores -> . LESSTHAN
    (66) operadores -> . GREQUAL
    (67) operadores -> . LEQUAL

    DOUBLEEQUAL     shift and go to state 61
    TRIPLEEQUAL     shift and go to state 62
    GREATERTHAN     shift and go to state 63
    NOTEQUAL        shift and go to state 64
    LESSTHAN        shift and go to state 65
    GREQUAL         shift and go to state 66
    LEQUAL          shift and go to state 67

    operadores                     shift and go to state 74

state 44

    (80) set -> SET LBRACKET . elementoSet RBRACKET
    (81) elementoSet -> .
    (82) elementoSet -> . datos
    (83) elementoSet -> . tiposvariables
    (84) elementoSet -> . datos otroElemento
    (85) elementoSet -> . tiposvariables otroElemento
    (31) datos -> . NUMBER
    (32) datos -> . FLOAT
    (33) datos -> . STRING
    (28) tiposvariables -> . VAR
    (29) tiposvariables -> . LOCALVAR
    (30) tiposvariables -> . CONSTANT

    RBRACKET        reduce using rule 81 (elementoSet -> .)
    NUMBER          shift and go to state 31
    FLOAT           shift and go to state 32
    STRING          shift and go to state 33
    VAR             shift and go to state 21
    LOCALVAR        shift and go to state 14
    CONSTANT        shift and go to state 22

    elementoSet                    shift and go to state 75
    datos                          shift and go to state 76
    tiposvariables                 shift and go to state 77

state 45

    (88) operacionSet -> set DOT ADD . LPARENTHESES datos RPARENTHESES
    (89) operacionSet -> set DOT ADD . LPARENTHESES tiposvariables RPARENTHESES

    LPARENTHESES    shift and go to state 78


state 46

    (90) operacionSet -> set DOT CLEAR .

    $end            reduce using rule 90 (operacionSet -> set DOT CLEAR .)


state 47

    (91) operacionSet -> set DOT DELETE . LPARENTHESES datos RPARENTHESES
    (92) operacionSet -> set DOT DELETE . LPARENTHESES tiposvariables RPARENTHESES

    LPARENTHESES    shift and go to state 79


state 48

    (26) declaracion -> tiposvariables EQUAL datos .

    $end            reduce using rule 26 (declaracion -> tiposvariables EQUAL datos .)
    ELSE            reduce using rule 26 (declaracion -> tiposvariables EQUAL datos .)
    END             reduce using rule 26 (declaracion -> tiposvariables EQUAL datos .)
    RETURN          reduce using rule 26 (declaracion -> tiposvariables EQUAL datos .)


state 49

    (27) declaracion -> tiposvariables EQUAL estructuras .

    $end            reduce using rule 27 (declaracion -> tiposvariables EQUAL estructuras .)
    ELSE            reduce using rule 27 (declaracion -> tiposvariables EQUAL estructuras .)
    END             reduce using rule 27 (declaracion -> tiposvariables EQUAL estructuras .)
    RETURN          reduce using rule 27 (declaracion -> tiposvariables EQUAL estructuras .)


state 50

    (56) array -> tiposvariables EQUAL LBRACKET . datosarray RBRACKET
    (57) array -> tiposvariables EQUAL LBRACKET . RBRACKET
    (70) datosarray -> . datosvarios
    (71) datosarray -> . datosarray COMMA datosvarios
    (68) datosvarios -> . datos
    (69) datosvarios -> . tiposvariables
    (31) datos -> . NUMBER
    (32) datos -> . FLOAT
    (33) datos -> . STRING
    (28) tiposvariables -> . VAR
    (29) tiposvariables -> . LOCALVAR
    (30) tiposvariables -> . CONSTANT

    RBRACKET        shift and go to state 81
    NUMBER          shift and go to state 31
    FLOAT           shift and go to state 32
    STRING          shift and go to state 33
    VAR             shift and go to state 21
    LOCALVAR        shift and go to state 14
    CONSTANT        shift and go to state 22

    tiposvariables                 shift and go to state 40
    datosarray                     shift and go to state 80
    datosvarios                    shift and go to state 82
    datos                          shift and go to state 39

state 51

    (34) estructuras -> hash .

    $end            reduce using rule 34 (estructuras -> hash .)
    ELSE            reduce using rule 34 (estructuras -> hash .)
    END             reduce using rule 34 (estructuras -> hash .)
    RETURN          reduce using rule 34 (estructuras -> hash .)


state 52

    (35) estructuras -> set .

    $end            reduce using rule 35 (estructuras -> set .)
    ELSE            reduce using rule 35 (estructuras -> set .)
    END             reduce using rule 35 (estructuras -> set .)
    RETURN          reduce using rule 35 (estructuras -> set .)


state 53

    (39) hash -> LCURLYBRACKET . elementoHash RCURLYBRACKET masopciones
    (40) elementoHash -> . datos EQUAL GREATERTHAN datos maselementos
    (31) datos -> . NUMBER
    (32) datos -> . FLOAT
    (33) datos -> . STRING

    NUMBER          shift and go to state 31
    FLOAT           shift and go to state 32
    STRING          shift and go to state 33

    elementoHash                   shift and go to state 83
    datos                          shift and go to state 84

state 54

    (72) operacionarray -> tiposvariables LBRACKET NUMBER . RBRACKET

    RBRACKET        shift and go to state 85


state 55

    (73) operacionarray -> tiposvariables DOT TAKE . LPARENTHESES NUMBER RPARENTHESES

    LPARENTHESES    shift and go to state 86


state 56

    (74) operacionarray -> tiposvariables DOT DROP . LPARENTHESES NUMBER RPARENTHESES

    LPARENTHESES    shift and go to state 87


state 57

    (25) loop -> FOR LOCALVAR IN . rango cuerpo END
    (48) rango -> . NUMBER RANGEINCLUSIVE NUMBER
    (49) rango -> . NUMBER RANGEXCLUSIVE NUMBER

    NUMBER          shift and go to state 89

    rango                          shift and go to state 88

state 58

    (44) masopciones -> LOCALVAR DOT . funcionesHash masopciones
    (45) funcionesHash -> . INCLUDE QUESTIONMARK LPARENTHESES datos RPARENTHESES
    (46) funcionesHash -> . DELETE LPARENTHESES datos RPARENTHESES
    (47) funcionesHash -> . KEYS

    INCLUDE         shift and go to state 91
    DELETE          shift and go to state 92
    KEYS            shift and go to state 93

    funcionesHash                  shift and go to state 90

state 59

    (11) funcion -> DEF LOCALVAR LPARENTHESES . argumentos RPARENTHESES cuerpo END
    (12) funcion -> DEF LOCALVAR LPARENTHESES . argumentos RPARENTHESES cuerpo retornar END
    (13) argumentos -> . variosargumentos
    (14) argumentos -> . MULTIPLY LOCALVAR
    (15) argumentos -> . TWOSTARS LOCALVAR
    (16) argumentos -> . LOCALVAR EQUAL LCURLYBRACKET RCURLYBRACKET
    (17) argumentos -> . LOCALVAR TWOPOINTS datos
    (18) variosargumentos -> . LOCALVAR
    (19) variosargumentos -> . LOCALVAR EQUAL datos
    (20) variosargumentos -> . LOCALVAR masargumentos
    (21) variosargumentos -> . LOCALVAR EQUAL datos masargumentos

    MULTIPLY        shift and go to state 97
    TWOSTARS        shift and go to state 98
    LOCALVAR        shift and go to state 94

    argumentos                     shift and go to state 95
    variosargumentos               shift and go to state 96

state 60

    (58) if -> IF datosvarios operadores . datosvarios cuerpo END
    (59) if -> IF datosvarios operadores . datosvarios cuerpo else
    (68) datosvarios -> . datos
    (69) datosvarios -> . tiposvariables
    (31) datos -> . NUMBER
    (32) datos -> . FLOAT
    (33) datos -> . STRING
    (28) tiposvariables -> . VAR
    (29) tiposvariables -> . LOCALVAR
    (30) tiposvariables -> . CONSTANT

    NUMBER          shift and go to state 31
    FLOAT           shift and go to state 32
    STRING          shift and go to state 33
    VAR             shift and go to state 21
    LOCALVAR        shift and go to state 14
    CONSTANT        shift and go to state 22

    datosvarios                    shift and go to state 99
    datos                          shift and go to state 39
    tiposvariables                 shift and go to state 40

state 61

    (61) operadores -> DOUBLEEQUAL .

    NUMBER          reduce using rule 61 (operadores -> DOUBLEEQUAL .)
    FLOAT           reduce using rule 61 (operadores -> DOUBLEEQUAL .)
    STRING          reduce using rule 61 (operadores -> DOUBLEEQUAL .)
    VAR             reduce using rule 61 (operadores -> DOUBLEEQUAL .)
    LOCALVAR        reduce using rule 61 (operadores -> DOUBLEEQUAL .)
    CONSTANT        reduce using rule 61 (operadores -> DOUBLEEQUAL .)


state 62

    (62) operadores -> TRIPLEEQUAL .

    NUMBER          reduce using rule 62 (operadores -> TRIPLEEQUAL .)
    FLOAT           reduce using rule 62 (operadores -> TRIPLEEQUAL .)
    STRING          reduce using rule 62 (operadores -> TRIPLEEQUAL .)
    VAR             reduce using rule 62 (operadores -> TRIPLEEQUAL .)
    LOCALVAR        reduce using rule 62 (operadores -> TRIPLEEQUAL .)
    CONSTANT        reduce using rule 62 (operadores -> TRIPLEEQUAL .)


state 63

    (63) operadores -> GREATERTHAN .

    NUMBER          reduce using rule 63 (operadores -> GREATERTHAN .)
    FLOAT           reduce using rule 63 (operadores -> GREATERTHAN .)
    STRING          reduce using rule 63 (operadores -> GREATERTHAN .)
    VAR             reduce using rule 63 (operadores -> GREATERTHAN .)
    LOCALVAR        reduce using rule 63 (operadores -> GREATERTHAN .)
    CONSTANT        reduce using rule 63 (operadores -> GREATERTHAN .)


state 64

    (64) operadores -> NOTEQUAL .

    NUMBER          reduce using rule 64 (operadores -> NOTEQUAL .)
    FLOAT           reduce using rule 64 (operadores -> NOTEQUAL .)
    STRING          reduce using rule 64 (operadores -> NOTEQUAL .)
    VAR             reduce using rule 64 (operadores -> NOTEQUAL .)
    LOCALVAR        reduce using rule 64 (operadores -> NOTEQUAL .)
    CONSTANT        reduce using rule 64 (operadores -> NOTEQUAL .)


state 65

    (65) operadores -> LESSTHAN .

    NUMBER          reduce using rule 65 (operadores -> LESSTHAN .)
    FLOAT           reduce using rule 65 (operadores -> LESSTHAN .)
    STRING          reduce using rule 65 (operadores -> LESSTHAN .)
    VAR             reduce using rule 65 (operadores -> LESSTHAN .)
    LOCALVAR        reduce using rule 65 (operadores -> LESSTHAN .)
    CONSTANT        reduce using rule 65 (operadores -> LESSTHAN .)


state 66

    (66) operadores -> GREQUAL .

    NUMBER          reduce using rule 66 (operadores -> GREQUAL .)
    FLOAT           reduce using rule 66 (operadores -> GREQUAL .)
    STRING          reduce using rule 66 (operadores -> GREQUAL .)
    VAR             reduce using rule 66 (operadores -> GREQUAL .)
    LOCALVAR        reduce using rule 66 (operadores -> GREQUAL .)
    CONSTANT        reduce using rule 66 (operadores -> GREQUAL .)


state 67

    (67) operadores -> LEQUAL .

    NUMBER          reduce using rule 67 (operadores -> LEQUAL .)
    FLOAT           reduce using rule 67 (operadores -> LEQUAL .)
    STRING          reduce using rule 67 (operadores -> LEQUAL .)
    VAR             reduce using rule 67 (operadores -> LEQUAL .)
    LOCALVAR        reduce using rule 67 (operadores -> LEQUAL .)
    CONSTANT        reduce using rule 67 (operadores -> LEQUAL .)


state 68

    (75) unless -> UNLESS condiciones cuerpo . ELSE cuerpo END

    ELSE            shift and go to state 100


state 69

    (36) cuerpo -> declaracion .

    ELSE            reduce using rule 36 (cuerpo -> declaracion .)
    END             reduce using rule 36 (cuerpo -> declaracion .)
    RETURN          reduce using rule 36 (cuerpo -> declaracion .)


state 70

    (37) cuerpo -> loop .

    ELSE            reduce using rule 37 (cuerpo -> loop .)
    END             reduce using rule 37 (cuerpo -> loop .)
    RETURN          reduce using rule 37 (cuerpo -> loop .)


state 71

    (38) cuerpo -> impresion .

    ELSE            reduce using rule 38 (cuerpo -> impresion .)
    END             reduce using rule 38 (cuerpo -> impresion .)
    RETURN          reduce using rule 38 (cuerpo -> impresion .)


state 72

    (26) declaracion -> tiposvariables . EQUAL datos
    (27) declaracion -> tiposvariables . EQUAL estructuras

    EQUAL           shift and go to state 101


state 73

    (76) condiciones -> VAR operadores . VAR
    (78) condiciones -> VAR operadores . datos
    (31) datos -> . NUMBER
    (32) datos -> . FLOAT
    (33) datos -> . STRING

    VAR             shift and go to state 102
    NUMBER          shift and go to state 31
    FLOAT           shift and go to state 32
    STRING          shift and go to state 33

    datos                          shift and go to state 103

state 74

    (77) condiciones -> datos operadores . datos
    (79) condiciones -> datos operadores . VAR
    (31) datos -> . NUMBER
    (32) datos -> . FLOAT
    (33) datos -> . STRING

    VAR             shift and go to state 105
    NUMBER          shift and go to state 31
    FLOAT           shift and go to state 32
    STRING          shift and go to state 33

    datos                          shift and go to state 104

state 75

    (80) set -> SET LBRACKET elementoSet . RBRACKET

    RBRACKET        shift and go to state 106


state 76

    (82) elementoSet -> datos .
    (84) elementoSet -> datos . otroElemento
    (86) otroElemento -> .
    (87) otroElemento -> . COMMA elementoSet otroElemento

  ! reduce/reduce conflict for RBRACKET resolved using rule 82 (elementoSet -> datos .)
  ! reduce/reduce conflict for COMMA resolved using rule 82 (elementoSet -> datos .)
  ! shift/reduce conflict for COMMA resolved as shift
    RBRACKET        reduce using rule 82 (elementoSet -> datos .)
    COMMA           shift and go to state 108

  ! COMMA           [ reduce using rule 82 (elementoSet -> datos .) ]
  ! RBRACKET        [ reduce using rule 86 (otroElemento -> .) ]
  ! COMMA           [ reduce using rule 86 (otroElemento -> .) ]

    otroElemento                   shift and go to state 107

state 77

    (83) elementoSet -> tiposvariables .
    (85) elementoSet -> tiposvariables . otroElemento
    (86) otroElemento -> .
    (87) otroElemento -> . COMMA elementoSet otroElemento

  ! reduce/reduce conflict for RBRACKET resolved using rule 83 (elementoSet -> tiposvariables .)
  ! reduce/reduce conflict for COMMA resolved using rule 83 (elementoSet -> tiposvariables .)
  ! shift/reduce conflict for COMMA resolved as shift
    RBRACKET        reduce using rule 83 (elementoSet -> tiposvariables .)
    COMMA           shift and go to state 108

  ! COMMA           [ reduce using rule 83 (elementoSet -> tiposvariables .) ]
  ! RBRACKET        [ reduce using rule 86 (otroElemento -> .) ]
  ! COMMA           [ reduce using rule 86 (otroElemento -> .) ]

    otroElemento                   shift and go to state 109

state 78

    (88) operacionSet -> set DOT ADD LPARENTHESES . datos RPARENTHESES
    (89) operacionSet -> set DOT ADD LPARENTHESES . tiposvariables RPARENTHESES
    (31) datos -> . NUMBER
    (32) datos -> . FLOAT
    (33) datos -> . STRING
    (28) tiposvariables -> . VAR
    (29) tiposvariables -> . LOCALVAR
    (30) tiposvariables -> . CONSTANT

    NUMBER          shift and go to state 31
    FLOAT           shift and go to state 32
    STRING          shift and go to state 33
    VAR             shift and go to state 21
    LOCALVAR        shift and go to state 14
    CONSTANT        shift and go to state 22

    datos                          shift and go to state 110
    tiposvariables                 shift and go to state 111

state 79

    (91) operacionSet -> set DOT DELETE LPARENTHESES . datos RPARENTHESES
    (92) operacionSet -> set DOT DELETE LPARENTHESES . tiposvariables RPARENTHESES
    (31) datos -> . NUMBER
    (32) datos -> . FLOAT
    (33) datos -> . STRING
    (28) tiposvariables -> . VAR
    (29) tiposvariables -> . LOCALVAR
    (30) tiposvariables -> . CONSTANT

    NUMBER          shift and go to state 31
    FLOAT           shift and go to state 32
    STRING          shift and go to state 33
    VAR             shift and go to state 21
    LOCALVAR        shift and go to state 14
    CONSTANT        shift and go to state 22

    datos                          shift and go to state 112
    tiposvariables                 shift and go to state 113

state 80

    (56) array -> tiposvariables EQUAL LBRACKET datosarray . RBRACKET
    (71) datosarray -> datosarray . COMMA datosvarios

    RBRACKET        shift and go to state 114
    COMMA           shift and go to state 115


state 81

    (57) array -> tiposvariables EQUAL LBRACKET RBRACKET .

    $end            reduce using rule 57 (array -> tiposvariables EQUAL LBRACKET RBRACKET .)


state 82

    (70) datosarray -> datosvarios .

    RBRACKET        reduce using rule 70 (datosarray -> datosvarios .)
    COMMA           reduce using rule 70 (datosarray -> datosvarios .)


state 83

    (39) hash -> LCURLYBRACKET elementoHash . RCURLYBRACKET masopciones

    RCURLYBRACKET   shift and go to state 116


state 84

    (40) elementoHash -> datos . EQUAL GREATERTHAN datos maselementos

    EQUAL           shift and go to state 117


state 85

    (72) operacionarray -> tiposvariables LBRACKET NUMBER RBRACKET .

    $end            reduce using rule 72 (operacionarray -> tiposvariables LBRACKET NUMBER RBRACKET .)


state 86

    (73) operacionarray -> tiposvariables DOT TAKE LPARENTHESES . NUMBER RPARENTHESES

    NUMBER          shift and go to state 118


state 87

    (74) operacionarray -> tiposvariables DOT DROP LPARENTHESES . NUMBER RPARENTHESES

    NUMBER          shift and go to state 119


state 88

    (25) loop -> FOR LOCALVAR IN rango . cuerpo END
    (36) cuerpo -> . declaracion
    (37) cuerpo -> . loop
    (38) cuerpo -> . impresion
    (26) declaracion -> . tiposvariables EQUAL datos
    (27) declaracion -> . tiposvariables EQUAL estructuras
    (25) loop -> . FOR LOCALVAR IN rango cuerpo END
    (50) impresion -> . PUTS datos
    (51) impresion -> . PUTS LOCALVAR
    (52) impresion -> . PUTS masopciones
    (53) impresion -> . PRINT datos
    (54) impresion -> . PRINT LOCALVAR
    (55) impresion -> . PRINT masopciones
    (28) tiposvariables -> . VAR
    (29) tiposvariables -> . LOCALVAR
    (30) tiposvariables -> . CONSTANT

    FOR             shift and go to state 13
    PUTS            shift and go to state 15
    PRINT           shift and go to state 16
    VAR             shift and go to state 21
    LOCALVAR        shift and go to state 14
    CONSTANT        shift and go to state 22

    cuerpo                         shift and go to state 120
    declaracion                    shift and go to state 69
    loop                           shift and go to state 70
    impresion                      shift and go to state 71
    tiposvariables                 shift and go to state 72

state 89

    (48) rango -> NUMBER . RANGEINCLUSIVE NUMBER
    (49) rango -> NUMBER . RANGEXCLUSIVE NUMBER

    RANGEINCLUSIVE  shift and go to state 121
    RANGEXCLUSIVE   shift and go to state 122


state 90

    (44) masopciones -> LOCALVAR DOT funcionesHash . masopciones
    (43) masopciones -> .
    (44) masopciones -> . LOCALVAR DOT funcionesHash masopciones

    $end            reduce using rule 43 (masopciones -> .)
    ELSE            reduce using rule 43 (masopciones -> .)
    END             reduce using rule 43 (masopciones -> .)
    RETURN          reduce using rule 43 (masopciones -> .)
    LOCALVAR        shift and go to state 123

    masopciones                    shift and go to state 124

state 91

    (45) funcionesHash -> INCLUDE . QUESTIONMARK LPARENTHESES datos RPARENTHESES

    QUESTIONMARK    shift and go to state 125


state 92

    (46) funcionesHash -> DELETE . LPARENTHESES datos RPARENTHESES

    LPARENTHESES    shift and go to state 126


state 93

    (47) funcionesHash -> KEYS .

    LOCALVAR        reduce using rule 47 (funcionesHash -> KEYS .)
    $end            reduce using rule 47 (funcionesHash -> KEYS .)
    ELSE            reduce using rule 47 (funcionesHash -> KEYS .)
    END             reduce using rule 47 (funcionesHash -> KEYS .)
    RETURN          reduce using rule 47 (funcionesHash -> KEYS .)


state 94

    (16) argumentos -> LOCALVAR . EQUAL LCURLYBRACKET RCURLYBRACKET
    (17) argumentos -> LOCALVAR . TWOPOINTS datos
    (18) variosargumentos -> LOCALVAR .
    (19) variosargumentos -> LOCALVAR . EQUAL datos
    (20) variosargumentos -> LOCALVAR . masargumentos
    (21) variosargumentos -> LOCALVAR . EQUAL datos masargumentos
    (22) masargumentos -> . COMMA variosargumentos

    EQUAL           shift and go to state 127
    TWOPOINTS       shift and go to state 128
    RPARENTHESES    reduce using rule 18 (variosargumentos -> LOCALVAR .)
    COMMA           shift and go to state 130

    masargumentos                  shift and go to state 129

state 95

    (11) funcion -> DEF LOCALVAR LPARENTHESES argumentos . RPARENTHESES cuerpo END
    (12) funcion -> DEF LOCALVAR LPARENTHESES argumentos . RPARENTHESES cuerpo retornar END

    RPARENTHESES    shift and go to state 131


state 96

    (13) argumentos -> variosargumentos .

    RPARENTHESES    reduce using rule 13 (argumentos -> variosargumentos .)


state 97

    (14) argumentos -> MULTIPLY . LOCALVAR

    LOCALVAR        shift and go to state 132


state 98

    (15) argumentos -> TWOSTARS . LOCALVAR

    LOCALVAR        shift and go to state 133


state 99

    (58) if -> IF datosvarios operadores datosvarios . cuerpo END
    (59) if -> IF datosvarios operadores datosvarios . cuerpo else
    (36) cuerpo -> . declaracion
    (37) cuerpo -> . loop
    (38) cuerpo -> . impresion
    (26) declaracion -> . tiposvariables EQUAL datos
    (27) declaracion -> . tiposvariables EQUAL estructuras
    (25) loop -> . FOR LOCALVAR IN rango cuerpo END
    (50) impresion -> . PUTS datos
    (51) impresion -> . PUTS LOCALVAR
    (52) impresion -> . PUTS masopciones
    (53) impresion -> . PRINT datos
    (54) impresion -> . PRINT LOCALVAR
    (55) impresion -> . PRINT masopciones
    (28) tiposvariables -> . VAR
    (29) tiposvariables -> . LOCALVAR
    (30) tiposvariables -> . CONSTANT

    FOR             shift and go to state 13
    PUTS            shift and go to state 15
    PRINT           shift and go to state 16
    VAR             shift and go to state 21
    LOCALVAR        shift and go to state 14
    CONSTANT        shift and go to state 22

    cuerpo                         shift and go to state 134
    declaracion                    shift and go to state 69
    loop                           shift and go to state 70
    impresion                      shift and go to state 71
    tiposvariables                 shift and go to state 72

state 100

    (75) unless -> UNLESS condiciones cuerpo ELSE . cuerpo END
    (36) cuerpo -> . declaracion
    (37) cuerpo -> . loop
    (38) cuerpo -> . impresion
    (26) declaracion -> . tiposvariables EQUAL datos
    (27) declaracion -> . tiposvariables EQUAL estructuras
    (25) loop -> . FOR LOCALVAR IN rango cuerpo END
    (50) impresion -> . PUTS datos
    (51) impresion -> . PUTS LOCALVAR
    (52) impresion -> . PUTS masopciones
    (53) impresion -> . PRINT datos
    (54) impresion -> . PRINT LOCALVAR
    (55) impresion -> . PRINT masopciones
    (28) tiposvariables -> . VAR
    (29) tiposvariables -> . LOCALVAR
    (30) tiposvariables -> . CONSTANT

    FOR             shift and go to state 13
    PUTS            shift and go to state 15
    PRINT           shift and go to state 16
    VAR             shift and go to state 21
    LOCALVAR        shift and go to state 14
    CONSTANT        shift and go to state 22

    cuerpo                         shift and go to state 135
    declaracion                    shift and go to state 69
    loop                           shift and go to state 70
    impresion                      shift and go to state 71
    tiposvariables                 shift and go to state 72

state 101

    (26) declaracion -> tiposvariables EQUAL . datos
    (27) declaracion -> tiposvariables EQUAL . estructuras
    (31) datos -> . NUMBER
    (32) datos -> . FLOAT
    (33) datos -> . STRING
    (34) estructuras -> . hash
    (35) estructuras -> . set
    (39) hash -> . LCURLYBRACKET elementoHash RCURLYBRACKET masopciones
    (80) set -> . SET LBRACKET elementoSet RBRACKET

    NUMBER          shift and go to state 31
    FLOAT           shift and go to state 32
    STRING          shift and go to state 33
    LCURLYBRACKET   shift and go to state 53
    SET             shift and go to state 20

    datos                          shift and go to state 48
    estructuras                    shift and go to state 49
    hash                           shift and go to state 51
    set                            shift and go to state 52

state 102

    (76) condiciones -> VAR operadores VAR .

    FOR             reduce using rule 76 (condiciones -> VAR operadores VAR .)
    PUTS            reduce using rule 76 (condiciones -> VAR operadores VAR .)
    PRINT           reduce using rule 76 (condiciones -> VAR operadores VAR .)
    VAR             reduce using rule 76 (condiciones -> VAR operadores VAR .)
    LOCALVAR        reduce using rule 76 (condiciones -> VAR operadores VAR .)
    CONSTANT        reduce using rule 76 (condiciones -> VAR operadores VAR .)


state 103

    (78) condiciones -> VAR operadores datos .

    FOR             reduce using rule 78 (condiciones -> VAR operadores datos .)
    PUTS            reduce using rule 78 (condiciones -> VAR operadores datos .)
    PRINT           reduce using rule 78 (condiciones -> VAR operadores datos .)
    VAR             reduce using rule 78 (condiciones -> VAR operadores datos .)
    LOCALVAR        reduce using rule 78 (condiciones -> VAR operadores datos .)
    CONSTANT        reduce using rule 78 (condiciones -> VAR operadores datos .)


state 104

    (77) condiciones -> datos operadores datos .

    FOR             reduce using rule 77 (condiciones -> datos operadores datos .)
    PUTS            reduce using rule 77 (condiciones -> datos operadores datos .)
    PRINT           reduce using rule 77 (condiciones -> datos operadores datos .)
    VAR             reduce using rule 77 (condiciones -> datos operadores datos .)
    LOCALVAR        reduce using rule 77 (condiciones -> datos operadores datos .)
    CONSTANT        reduce using rule 77 (condiciones -> datos operadores datos .)


state 105

    (79) condiciones -> datos operadores VAR .

    FOR             reduce using rule 79 (condiciones -> datos operadores VAR .)
    PUTS            reduce using rule 79 (condiciones -> datos operadores VAR .)
    PRINT           reduce using rule 79 (condiciones -> datos operadores VAR .)
    VAR             reduce using rule 79 (condiciones -> datos operadores VAR .)
    LOCALVAR        reduce using rule 79 (condiciones -> datos operadores VAR .)
    CONSTANT        reduce using rule 79 (condiciones -> datos operadores VAR .)


state 106

    (80) set -> SET LBRACKET elementoSet RBRACKET .

    DOT             reduce using rule 80 (set -> SET LBRACKET elementoSet RBRACKET .)
    $end            reduce using rule 80 (set -> SET LBRACKET elementoSet RBRACKET .)
    ELSE            reduce using rule 80 (set -> SET LBRACKET elementoSet RBRACKET .)
    END             reduce using rule 80 (set -> SET LBRACKET elementoSet RBRACKET .)
    RETURN          reduce using rule 80 (set -> SET LBRACKET elementoSet RBRACKET .)


state 107

    (84) elementoSet -> datos otroElemento .

    RBRACKET        reduce using rule 84 (elementoSet -> datos otroElemento .)
    COMMA           reduce using rule 84 (elementoSet -> datos otroElemento .)


state 108

    (87) otroElemento -> COMMA . elementoSet otroElemento
    (81) elementoSet -> .
    (82) elementoSet -> . datos
    (83) elementoSet -> . tiposvariables
    (84) elementoSet -> . datos otroElemento
    (85) elementoSet -> . tiposvariables otroElemento
    (31) datos -> . NUMBER
    (32) datos -> . FLOAT
    (33) datos -> . STRING
    (28) tiposvariables -> . VAR
    (29) tiposvariables -> . LOCALVAR
    (30) tiposvariables -> . CONSTANT

    RBRACKET        reduce using rule 81 (elementoSet -> .)
    COMMA           reduce using rule 81 (elementoSet -> .)
    NUMBER          shift and go to state 31
    FLOAT           shift and go to state 32
    STRING          shift and go to state 33
    VAR             shift and go to state 21
    LOCALVAR        shift and go to state 14
    CONSTANT        shift and go to state 22

    elementoSet                    shift and go to state 136
    datos                          shift and go to state 76
    tiposvariables                 shift and go to state 77

state 109

    (85) elementoSet -> tiposvariables otroElemento .

    RBRACKET        reduce using rule 85 (elementoSet -> tiposvariables otroElemento .)
    COMMA           reduce using rule 85 (elementoSet -> tiposvariables otroElemento .)


state 110

    (88) operacionSet -> set DOT ADD LPARENTHESES datos . RPARENTHESES

    RPARENTHESES    shift and go to state 137


state 111

    (89) operacionSet -> set DOT ADD LPARENTHESES tiposvariables . RPARENTHESES

    RPARENTHESES    shift and go to state 138


state 112

    (91) operacionSet -> set DOT DELETE LPARENTHESES datos . RPARENTHESES

    RPARENTHESES    shift and go to state 139


state 113

    (92) operacionSet -> set DOT DELETE LPARENTHESES tiposvariables . RPARENTHESES

    RPARENTHESES    shift and go to state 140


state 114

    (56) array -> tiposvariables EQUAL LBRACKET datosarray RBRACKET .

    $end            reduce using rule 56 (array -> tiposvariables EQUAL LBRACKET datosarray RBRACKET .)


state 115

    (71) datosarray -> datosarray COMMA . datosvarios
    (68) datosvarios -> . datos
    (69) datosvarios -> . tiposvariables
    (31) datos -> . NUMBER
    (32) datos -> . FLOAT
    (33) datos -> . STRING
    (28) tiposvariables -> . VAR
    (29) tiposvariables -> . LOCALVAR
    (30) tiposvariables -> . CONSTANT

    NUMBER          shift and go to state 31
    FLOAT           shift and go to state 32
    STRING          shift and go to state 33
    VAR             shift and go to state 21
    LOCALVAR        shift and go to state 14
    CONSTANT        shift and go to state 22

    datosvarios                    shift and go to state 141
    datos                          shift and go to state 39
    tiposvariables                 shift and go to state 40

state 116

    (39) hash -> LCURLYBRACKET elementoHash RCURLYBRACKET . masopciones
    (43) masopciones -> .
    (44) masopciones -> . LOCALVAR DOT funcionesHash masopciones

    $end            reduce using rule 43 (masopciones -> .)
    ELSE            reduce using rule 43 (masopciones -> .)
    END             reduce using rule 43 (masopciones -> .)
    RETURN          reduce using rule 43 (masopciones -> .)
    LOCALVAR        shift and go to state 123

    masopciones                    shift and go to state 142

state 117

    (40) elementoHash -> datos EQUAL . GREATERTHAN datos maselementos

    GREATERTHAN     shift and go to state 143


state 118

    (73) operacionarray -> tiposvariables DOT TAKE LPARENTHESES NUMBER . RPARENTHESES

    RPARENTHESES    shift and go to state 144


state 119

    (74) operacionarray -> tiposvariables DOT DROP LPARENTHESES NUMBER . RPARENTHESES

    RPARENTHESES    shift and go to state 145


state 120

    (25) loop -> FOR LOCALVAR IN rango cuerpo . END

    END             shift and go to state 146


state 121

    (48) rango -> NUMBER RANGEINCLUSIVE . NUMBER

    NUMBER          shift and go to state 147


state 122

    (49) rango -> NUMBER RANGEXCLUSIVE . NUMBER

    NUMBER          shift and go to state 148


state 123

    (44) masopciones -> LOCALVAR . DOT funcionesHash masopciones

    DOT             shift and go to state 58


state 124

    (44) masopciones -> LOCALVAR DOT funcionesHash masopciones .

    $end            reduce using rule 44 (masopciones -> LOCALVAR DOT funcionesHash masopciones .)
    ELSE            reduce using rule 44 (masopciones -> LOCALVAR DOT funcionesHash masopciones .)
    END             reduce using rule 44 (masopciones -> LOCALVAR DOT funcionesHash masopciones .)
    RETURN          reduce using rule 44 (masopciones -> LOCALVAR DOT funcionesHash masopciones .)


state 125

    (45) funcionesHash -> INCLUDE QUESTIONMARK . LPARENTHESES datos RPARENTHESES

    LPARENTHESES    shift and go to state 149


state 126

    (46) funcionesHash -> DELETE LPARENTHESES . datos RPARENTHESES
    (31) datos -> . NUMBER
    (32) datos -> . FLOAT
    (33) datos -> . STRING

    NUMBER          shift and go to state 31
    FLOAT           shift and go to state 32
    STRING          shift and go to state 33

    datos                          shift and go to state 150

state 127

    (16) argumentos -> LOCALVAR EQUAL . LCURLYBRACKET RCURLYBRACKET
    (19) variosargumentos -> LOCALVAR EQUAL . datos
    (21) variosargumentos -> LOCALVAR EQUAL . datos masargumentos
    (31) datos -> . NUMBER
    (32) datos -> . FLOAT
    (33) datos -> . STRING

    LCURLYBRACKET   shift and go to state 151
    NUMBER          shift and go to state 31
    FLOAT           shift and go to state 32
    STRING          shift and go to state 33

    datos                          shift and go to state 152

state 128

    (17) argumentos -> LOCALVAR TWOPOINTS . datos
    (31) datos -> . NUMBER
    (32) datos -> . FLOAT
    (33) datos -> . STRING

    NUMBER          shift and go to state 31
    FLOAT           shift and go to state 32
    STRING          shift and go to state 33

    datos                          shift and go to state 153

state 129

    (20) variosargumentos -> LOCALVAR masargumentos .

    RPARENTHESES    reduce using rule 20 (variosargumentos -> LOCALVAR masargumentos .)


state 130

    (22) masargumentos -> COMMA . variosargumentos
    (18) variosargumentos -> . LOCALVAR
    (19) variosargumentos -> . LOCALVAR EQUAL datos
    (20) variosargumentos -> . LOCALVAR masargumentos
    (21) variosargumentos -> . LOCALVAR EQUAL datos masargumentos

    LOCALVAR        shift and go to state 155

    variosargumentos               shift and go to state 154

state 131

    (11) funcion -> DEF LOCALVAR LPARENTHESES argumentos RPARENTHESES . cuerpo END
    (12) funcion -> DEF LOCALVAR LPARENTHESES argumentos RPARENTHESES . cuerpo retornar END
    (36) cuerpo -> . declaracion
    (37) cuerpo -> . loop
    (38) cuerpo -> . impresion
    (26) declaracion -> . tiposvariables EQUAL datos
    (27) declaracion -> . tiposvariables EQUAL estructuras
    (25) loop -> . FOR LOCALVAR IN rango cuerpo END
    (50) impresion -> . PUTS datos
    (51) impresion -> . PUTS LOCALVAR
    (52) impresion -> . PUTS masopciones
    (53) impresion -> . PRINT datos
    (54) impresion -> . PRINT LOCALVAR
    (55) impresion -> . PRINT masopciones
    (28) tiposvariables -> . VAR
    (29) tiposvariables -> . LOCALVAR
    (30) tiposvariables -> . CONSTANT

    FOR             shift and go to state 13
    PUTS            shift and go to state 15
    PRINT           shift and go to state 16
    VAR             shift and go to state 21
    LOCALVAR        shift and go to state 14
    CONSTANT        shift and go to state 22

    cuerpo                         shift and go to state 156
    declaracion                    shift and go to state 69
    loop                           shift and go to state 70
    impresion                      shift and go to state 71
    tiposvariables                 shift and go to state 72

state 132

    (14) argumentos -> MULTIPLY LOCALVAR .

    RPARENTHESES    reduce using rule 14 (argumentos -> MULTIPLY LOCALVAR .)


state 133

    (15) argumentos -> TWOSTARS LOCALVAR .

    RPARENTHESES    reduce using rule 15 (argumentos -> TWOSTARS LOCALVAR .)


state 134

    (58) if -> IF datosvarios operadores datosvarios cuerpo . END
    (59) if -> IF datosvarios operadores datosvarios cuerpo . else
    (60) else -> . ELSE cuerpo END

    END             shift and go to state 157
    ELSE            shift and go to state 159

    else                           shift and go to state 158

state 135

    (75) unless -> UNLESS condiciones cuerpo ELSE cuerpo . END

    END             shift and go to state 160


state 136

    (87) otroElemento -> COMMA elementoSet . otroElemento
    (86) otroElemento -> .
    (87) otroElemento -> . COMMA elementoSet otroElemento

  ! shift/reduce conflict for COMMA resolved as shift
    RBRACKET        reduce using rule 86 (otroElemento -> .)
    COMMA           shift and go to state 108

  ! COMMA           [ reduce using rule 86 (otroElemento -> .) ]

    otroElemento                   shift and go to state 161

state 137

    (88) operacionSet -> set DOT ADD LPARENTHESES datos RPARENTHESES .

    $end            reduce using rule 88 (operacionSet -> set DOT ADD LPARENTHESES datos RPARENTHESES .)


state 138

    (89) operacionSet -> set DOT ADD LPARENTHESES tiposvariables RPARENTHESES .

    $end            reduce using rule 89 (operacionSet -> set DOT ADD LPARENTHESES tiposvariables RPARENTHESES .)


state 139

    (91) operacionSet -> set DOT DELETE LPARENTHESES datos RPARENTHESES .

    $end            reduce using rule 91 (operacionSet -> set DOT DELETE LPARENTHESES datos RPARENTHESES .)


state 140

    (92) operacionSet -> set DOT DELETE LPARENTHESES tiposvariables RPARENTHESES .

    $end            reduce using rule 92 (operacionSet -> set DOT DELETE LPARENTHESES tiposvariables RPARENTHESES .)


state 141

    (71) datosarray -> datosarray COMMA datosvarios .

    RBRACKET        reduce using rule 71 (datosarray -> datosarray COMMA datosvarios .)
    COMMA           reduce using rule 71 (datosarray -> datosarray COMMA datosvarios .)


state 142

    (39) hash -> LCURLYBRACKET elementoHash RCURLYBRACKET masopciones .

    $end            reduce using rule 39 (hash -> LCURLYBRACKET elementoHash RCURLYBRACKET masopciones .)
    ELSE            reduce using rule 39 (hash -> LCURLYBRACKET elementoHash RCURLYBRACKET masopciones .)
    END             reduce using rule 39 (hash -> LCURLYBRACKET elementoHash RCURLYBRACKET masopciones .)
    RETURN          reduce using rule 39 (hash -> LCURLYBRACKET elementoHash RCURLYBRACKET masopciones .)


state 143

    (40) elementoHash -> datos EQUAL GREATERTHAN . datos maselementos
    (31) datos -> . NUMBER
    (32) datos -> . FLOAT
    (33) datos -> . STRING

    NUMBER          shift and go to state 31
    FLOAT           shift and go to state 32
    STRING          shift and go to state 33

    datos                          shift and go to state 162

state 144

    (73) operacionarray -> tiposvariables DOT TAKE LPARENTHESES NUMBER RPARENTHESES .

    $end            reduce using rule 73 (operacionarray -> tiposvariables DOT TAKE LPARENTHESES NUMBER RPARENTHESES .)


state 145

    (74) operacionarray -> tiposvariables DOT DROP LPARENTHESES NUMBER RPARENTHESES .

    $end            reduce using rule 74 (operacionarray -> tiposvariables DOT DROP LPARENTHESES NUMBER RPARENTHESES .)


state 146

    (25) loop -> FOR LOCALVAR IN rango cuerpo END .

    $end            reduce using rule 25 (loop -> FOR LOCALVAR IN rango cuerpo END .)
    ELSE            reduce using rule 25 (loop -> FOR LOCALVAR IN rango cuerpo END .)
    END             reduce using rule 25 (loop -> FOR LOCALVAR IN rango cuerpo END .)
    RETURN          reduce using rule 25 (loop -> FOR LOCALVAR IN rango cuerpo END .)


state 147

    (48) rango -> NUMBER RANGEINCLUSIVE NUMBER .

    FOR             reduce using rule 48 (rango -> NUMBER RANGEINCLUSIVE NUMBER .)
    PUTS            reduce using rule 48 (rango -> NUMBER RANGEINCLUSIVE NUMBER .)
    PRINT           reduce using rule 48 (rango -> NUMBER RANGEINCLUSIVE NUMBER .)
    VAR             reduce using rule 48 (rango -> NUMBER RANGEINCLUSIVE NUMBER .)
    LOCALVAR        reduce using rule 48 (rango -> NUMBER RANGEINCLUSIVE NUMBER .)
    CONSTANT        reduce using rule 48 (rango -> NUMBER RANGEINCLUSIVE NUMBER .)


state 148

    (49) rango -> NUMBER RANGEXCLUSIVE NUMBER .

    FOR             reduce using rule 49 (rango -> NUMBER RANGEXCLUSIVE NUMBER .)
    PUTS            reduce using rule 49 (rango -> NUMBER RANGEXCLUSIVE NUMBER .)
    PRINT           reduce using rule 49 (rango -> NUMBER RANGEXCLUSIVE NUMBER .)
    VAR             reduce using rule 49 (rango -> NUMBER RANGEXCLUSIVE NUMBER .)
    LOCALVAR        reduce using rule 49 (rango -> NUMBER RANGEXCLUSIVE NUMBER .)
    CONSTANT        reduce using rule 49 (rango -> NUMBER RANGEXCLUSIVE NUMBER .)


state 149

    (45) funcionesHash -> INCLUDE QUESTIONMARK LPARENTHESES . datos RPARENTHESES
    (31) datos -> . NUMBER
    (32) datos -> . FLOAT
    (33) datos -> . STRING

    NUMBER          shift and go to state 31
    FLOAT           shift and go to state 32
    STRING          shift and go to state 33

    datos                          shift and go to state 163

state 150

    (46) funcionesHash -> DELETE LPARENTHESES datos . RPARENTHESES

    RPARENTHESES    shift and go to state 164


state 151

    (16) argumentos -> LOCALVAR EQUAL LCURLYBRACKET . RCURLYBRACKET

    RCURLYBRACKET   shift and go to state 165


state 152

    (19) variosargumentos -> LOCALVAR EQUAL datos .
    (21) variosargumentos -> LOCALVAR EQUAL datos . masargumentos
    (22) masargumentos -> . COMMA variosargumentos

    RPARENTHESES    reduce using rule 19 (variosargumentos -> LOCALVAR EQUAL datos .)
    COMMA           shift and go to state 130

    masargumentos                  shift and go to state 166

state 153

    (17) argumentos -> LOCALVAR TWOPOINTS datos .

    RPARENTHESES    reduce using rule 17 (argumentos -> LOCALVAR TWOPOINTS datos .)


state 154

    (22) masargumentos -> COMMA variosargumentos .

    RPARENTHESES    reduce using rule 22 (masargumentos -> COMMA variosargumentos .)


state 155

    (18) variosargumentos -> LOCALVAR .
    (19) variosargumentos -> LOCALVAR . EQUAL datos
    (20) variosargumentos -> LOCALVAR . masargumentos
    (21) variosargumentos -> LOCALVAR . EQUAL datos masargumentos
    (22) masargumentos -> . COMMA variosargumentos

    RPARENTHESES    reduce using rule 18 (variosargumentos -> LOCALVAR .)
    EQUAL           shift and go to state 167
    COMMA           shift and go to state 130

    masargumentos                  shift and go to state 129

state 156

    (11) funcion -> DEF LOCALVAR LPARENTHESES argumentos RPARENTHESES cuerpo . END
    (12) funcion -> DEF LOCALVAR LPARENTHESES argumentos RPARENTHESES cuerpo . retornar END
    (23) retornar -> . RETURN LOCALVAR
    (24) retornar -> . RETURN datos

    END             shift and go to state 168
    RETURN          shift and go to state 170

    retornar                       shift and go to state 169

state 157

    (58) if -> IF datosvarios operadores datosvarios cuerpo END .

    $end            reduce using rule 58 (if -> IF datosvarios operadores datosvarios cuerpo END .)


state 158

    (59) if -> IF datosvarios operadores datosvarios cuerpo else .

    $end            reduce using rule 59 (if -> IF datosvarios operadores datosvarios cuerpo else .)


state 159

    (60) else -> ELSE . cuerpo END
    (36) cuerpo -> . declaracion
    (37) cuerpo -> . loop
    (38) cuerpo -> . impresion
    (26) declaracion -> . tiposvariables EQUAL datos
    (27) declaracion -> . tiposvariables EQUAL estructuras
    (25) loop -> . FOR LOCALVAR IN rango cuerpo END
    (50) impresion -> . PUTS datos
    (51) impresion -> . PUTS LOCALVAR
    (52) impresion -> . PUTS masopciones
    (53) impresion -> . PRINT datos
    (54) impresion -> . PRINT LOCALVAR
    (55) impresion -> . PRINT masopciones
    (28) tiposvariables -> . VAR
    (29) tiposvariables -> . LOCALVAR
    (30) tiposvariables -> . CONSTANT

    FOR             shift and go to state 13
    PUTS            shift and go to state 15
    PRINT           shift and go to state 16
    VAR             shift and go to state 21
    LOCALVAR        shift and go to state 14
    CONSTANT        shift and go to state 22

    cuerpo                         shift and go to state 171
    declaracion                    shift and go to state 69
    loop                           shift and go to state 70
    impresion                      shift and go to state 71
    tiposvariables                 shift and go to state 72

state 160

    (75) unless -> UNLESS condiciones cuerpo ELSE cuerpo END .

    $end            reduce using rule 75 (unless -> UNLESS condiciones cuerpo ELSE cuerpo END .)


state 161

    (87) otroElemento -> COMMA elementoSet otroElemento .

    RBRACKET        reduce using rule 87 (otroElemento -> COMMA elementoSet otroElemento .)
    COMMA           reduce using rule 87 (otroElemento -> COMMA elementoSet otroElemento .)


state 162

    (40) elementoHash -> datos EQUAL GREATERTHAN datos . maselementos
    (41) maselementos -> .
    (42) maselementos -> . COMMA elementoHash maselementos

  ! shift/reduce conflict for COMMA resolved as shift
    RCURLYBRACKET   reduce using rule 41 (maselementos -> .)
    COMMA           shift and go to state 173

  ! COMMA           [ reduce using rule 41 (maselementos -> .) ]

    maselementos                   shift and go to state 172

state 163

    (45) funcionesHash -> INCLUDE QUESTIONMARK LPARENTHESES datos . RPARENTHESES

    RPARENTHESES    shift and go to state 174


state 164

    (46) funcionesHash -> DELETE LPARENTHESES datos RPARENTHESES .

    LOCALVAR        reduce using rule 46 (funcionesHash -> DELETE LPARENTHESES datos RPARENTHESES .)
    $end            reduce using rule 46 (funcionesHash -> DELETE LPARENTHESES datos RPARENTHESES .)
    ELSE            reduce using rule 46 (funcionesHash -> DELETE LPARENTHESES datos RPARENTHESES .)
    END             reduce using rule 46 (funcionesHash -> DELETE LPARENTHESES datos RPARENTHESES .)
    RETURN          reduce using rule 46 (funcionesHash -> DELETE LPARENTHESES datos RPARENTHESES .)


state 165

    (16) argumentos -> LOCALVAR EQUAL LCURLYBRACKET RCURLYBRACKET .

    RPARENTHESES    reduce using rule 16 (argumentos -> LOCALVAR EQUAL LCURLYBRACKET RCURLYBRACKET .)


state 166

    (21) variosargumentos -> LOCALVAR EQUAL datos masargumentos .

    RPARENTHESES    reduce using rule 21 (variosargumentos -> LOCALVAR EQUAL datos masargumentos .)


state 167

    (19) variosargumentos -> LOCALVAR EQUAL . datos
    (21) variosargumentos -> LOCALVAR EQUAL . datos masargumentos
    (31) datos -> . NUMBER
    (32) datos -> . FLOAT
    (33) datos -> . STRING

    NUMBER          shift and go to state 31
    FLOAT           shift and go to state 32
    STRING          shift and go to state 33

    datos                          shift and go to state 152

state 168

    (11) funcion -> DEF LOCALVAR LPARENTHESES argumentos RPARENTHESES cuerpo END .

    $end            reduce using rule 11 (funcion -> DEF LOCALVAR LPARENTHESES argumentos RPARENTHESES cuerpo END .)


state 169

    (12) funcion -> DEF LOCALVAR LPARENTHESES argumentos RPARENTHESES cuerpo retornar . END

    END             shift and go to state 175


state 170

    (23) retornar -> RETURN . LOCALVAR
    (24) retornar -> RETURN . datos
    (31) datos -> . NUMBER
    (32) datos -> . FLOAT
    (33) datos -> . STRING

    LOCALVAR        shift and go to state 176
    NUMBER          shift and go to state 31
    FLOAT           shift and go to state 32
    STRING          shift and go to state 33

    datos                          shift and go to state 177

state 171

    (60) else -> ELSE cuerpo . END

    END             shift and go to state 178


state 172

    (40) elementoHash -> datos EQUAL GREATERTHAN datos maselementos .

    RCURLYBRACKET   reduce using rule 40 (elementoHash -> datos EQUAL GREATERTHAN datos maselementos .)
    COMMA           reduce using rule 40 (elementoHash -> datos EQUAL GREATERTHAN datos maselementos .)


state 173

    (42) maselementos -> COMMA . elementoHash maselementos
    (40) elementoHash -> . datos EQUAL GREATERTHAN datos maselementos
    (31) datos -> . NUMBER
    (32) datos -> . FLOAT
    (33) datos -> . STRING

    NUMBER          shift and go to state 31
    FLOAT           shift and go to state 32
    STRING          shift and go to state 33

    elementoHash                   shift and go to state 179
    datos                          shift and go to state 84

state 174

    (45) funcionesHash -> INCLUDE QUESTIONMARK LPARENTHESES datos RPARENTHESES .

    LOCALVAR        reduce using rule 45 (funcionesHash -> INCLUDE QUESTIONMARK LPARENTHESES datos RPARENTHESES .)
    $end            reduce using rule 45 (funcionesHash -> INCLUDE QUESTIONMARK LPARENTHESES datos RPARENTHESES .)
    ELSE            reduce using rule 45 (funcionesHash -> INCLUDE QUESTIONMARK LPARENTHESES datos RPARENTHESES .)
    END             reduce using rule 45 (funcionesHash -> INCLUDE QUESTIONMARK LPARENTHESES datos RPARENTHESES .)
    RETURN          reduce using rule 45 (funcionesHash -> INCLUDE QUESTIONMARK LPARENTHESES datos RPARENTHESES .)


state 175

    (12) funcion -> DEF LOCALVAR LPARENTHESES argumentos RPARENTHESES cuerpo retornar END .

    $end            reduce using rule 12 (funcion -> DEF LOCALVAR LPARENTHESES argumentos RPARENTHESES cuerpo retornar END .)


state 176

    (23) retornar -> RETURN LOCALVAR .

    END             reduce using rule 23 (retornar -> RETURN LOCALVAR .)


state 177

    (24) retornar -> RETURN datos .

    END             reduce using rule 24 (retornar -> RETURN datos .)


state 178

    (60) else -> ELSE cuerpo END .

    $end            reduce using rule 60 (else -> ELSE cuerpo END .)


state 179

    (42) maselementos -> COMMA elementoHash . maselementos
    (41) maselementos -> .
    (42) maselementos -> . COMMA elementoHash maselementos

  ! shift/reduce conflict for COMMA resolved as shift
    RCURLYBRACKET   reduce using rule 41 (maselementos -> .)
    COMMA           shift and go to state 173

  ! COMMA           [ reduce using rule 41 (maselementos -> .) ]

    maselementos                   shift and go to state 180

state 180

    (42) maselementos -> COMMA elementoHash maselementos .

    COMMA           reduce using rule 42 (maselementos -> COMMA elementoHash maselementos .)
    RCURLYBRACKET   reduce using rule 42 (maselementos -> COMMA elementoHash maselementos .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for COMMA in state 76 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 77 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 136 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 162 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 179 resolved as shift
WARNING: reduce/reduce conflict in state 76 resolved using rule (elementoSet -> datos)
WARNING: rejected rule (otroElemento -> <empty>) in state 76
WARNING: reduce/reduce conflict in state 77 resolved using rule (elementoSet -> tiposvariables)
WARNING: rejected rule (otroElemento -> <empty>) in state 77
