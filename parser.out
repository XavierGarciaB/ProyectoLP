Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ALERT
    AMPERSAND
    BARRA
    BEGIN
    BEGIN_M
    BOOLEAN
    CIRCUMFLEX
    COLON
    COMBCOMP
    COMMENT
    DIVASSIGN
    DIVIDE
    DOBLEQUOTE
    DOUBLEAMPERSAND
    DOUBLELESSTHAN
    DOUBLEPIPE
    ELSEIF
    END_M
    EXPASSIGN
    FALSE
    GETS
    MINASSIGN
    MINUS
    MODASSIGN
    NIL
    NOT
    NOTEQUAL
    OR
    PERCENTAGE
    PLUS
    PLUSASSIGN
    QUESTIONMARKPERIOD
    SEMICOLON
    SINGLEQUOTE
    TIMESASSIGN
    TRUE
    TWOGREATERTHAN
    UNTIL
    WAVE

Grammar

Rule 0     S' -> inicio
Rule 1     inicio -> declaracion
Rule 2     inicio -> loop
Rule 3     inicio -> impresion
Rule 4     inicio -> funcion
Rule 5     inicio -> if
Rule 6     inicio -> array
Rule 7     inicio -> accederarray
Rule 8     funcion -> DEF LOCALVAR LPARENTHESES argumentos RPARENTHESES cuerpo END
Rule 9     funcion -> DEF LOCALVAR LPARENTHESES argumentos RPARENTHESES cuerpo retornar END
Rule 10    argumentos -> variosargumentos
Rule 11    argumentos -> MULTIPLY LOCALVAR
Rule 12    argumentos -> TWOSTARS LOCALVAR
Rule 13    argumentos -> LOCALVAR EQUAL LCURLYBRACKET RCURLYBRACKET
Rule 14    argumentos -> LOCALVAR TWOPOINTS datos
Rule 15    variosargumentos -> LOCALVAR
Rule 16    variosargumentos -> LOCALVAR EQUAL datos
Rule 17    variosargumentos -> LOCALVAR masargumentos
Rule 18    variosargumentos -> LOCALVAR EQUAL datos masargumentos
Rule 19    masargumentos -> COMMA variosargumentos
Rule 20    retornar -> RETURN LOCALVAR
Rule 21    retornar -> RETURN datos
Rule 22    loop -> FOR LOCALVAR IN rango cuerpo END
Rule 23    declaracion -> tiposvariables EQUAL datos
Rule 24    declaracion -> tiposvariables EQUAL estructuras
Rule 25    tiposvariables -> VAR
Rule 26    tiposvariables -> LOCALVAR
Rule 27    tiposvariables -> CONSTANT
Rule 28    datos -> NUMBER
Rule 29    datos -> FLOAT
Rule 30    datos -> STRING
Rule 31    estructuras -> hash
Rule 32    cuerpo -> declaracion
Rule 33    cuerpo -> loop
Rule 34    cuerpo -> impresion
Rule 35    hash -> LCURLYBRACKET elementoHash RCURLYBRACKET masopciones
Rule 36    elementoHash -> datos EQUAL GREATERTHAN datos maselementos
Rule 37    maselementos -> <empty>
Rule 38    maselementos -> COMMA elementoHash maselementos
Rule 39    masopciones -> <empty>
Rule 40    masopciones -> LOCALVAR DOT funcionesHash masopciones
Rule 41    funcionesHash -> INCLUDE QUESTIONMARK LPARENTHESES datos RPARENTHESES
Rule 42    funcionesHash -> DELETE LPARENTHESES datos RPARENTHESES
Rule 43    funcionesHash -> KEYS
Rule 44    rango -> NUMBER RANGEINCLUSIVE NUMBER
Rule 45    rango -> NUMBER RANGEXCLUSIVE NUMBER
Rule 46    impresion -> PUTS datos
Rule 47    impresion -> PRINT datos
Rule 48    impresion -> PUTS LOCALVAR
Rule 49    impresion -> PRINT LOCALVAR
Rule 50    impresion -> PUTS masopciones
Rule 51    impresion -> PRINT masopciones
Rule 52    array -> tiposvariables EQUAL LBRACKET datosarray RBRACKET
Rule 53    array -> tiposvariables EQUAL LBRACKET RBRACKET
Rule 54    if -> IF datosvarios operadores datosvarios cuerpo END
Rule 55    if -> IF datosvarios operadores datosvarios cuerpo else
Rule 56    else -> ELSE cuerpo END
Rule 57    operadores -> DOUBLEEQUAL
Rule 58    operadores -> TRIPLEEQUAL
Rule 59    operadores -> GREATERTHAN
Rule 60    operadores -> EXCLAMATION EQUAL
Rule 61    operadores -> LESSTHAN
Rule 62    operadores -> GREQUAL
Rule 63    operadores -> LEQUAL
Rule 64    datosvarios -> datos
Rule 65    datosvarios -> tiposvariables
Rule 66    datosarray -> datosvarios
Rule 67    datosarray -> datosarray COMMA datosvarios
Rule 68    accederarray -> tiposvariables LBRACKET NUMBER RBRACKET

Terminals, with rules where they appear

ALERT                : 
AMPERSAND            : 
BARRA                : 
BEGIN                : 
BEGIN_M              : 
BOOLEAN              : 
CIRCUMFLEX           : 
COLON                : 
COMBCOMP             : 
COMMA                : 19 38 67
COMMENT              : 
CONSTANT             : 27
DEF                  : 8 9
DELETE               : 42
DIVASSIGN            : 
DIVIDE               : 
DOBLEQUOTE           : 
DOT                  : 40
DOUBLEAMPERSAND      : 
DOUBLEEQUAL          : 57
DOUBLELESSTHAN       : 
DOUBLEPIPE           : 
ELSE                 : 56
ELSEIF               : 
END                  : 8 9 22 54 56
END_M                : 
EQUAL                : 13 16 18 23 24 36 52 53 60
EXCLAMATION          : 60
EXPASSIGN            : 
FALSE                : 
FLOAT                : 29
FOR                  : 22
GETS                 : 
GREATERTHAN          : 36 59
GREQUAL              : 62
IF                   : 54 55
IN                   : 22
INCLUDE              : 41
KEYS                 : 43
LBRACKET             : 52 53 68
LCURLYBRACKET        : 13 35
LEQUAL               : 63
LESSTHAN             : 61
LOCALVAR             : 8 9 11 12 13 14 15 16 17 18 20 22 26 40 48 49
LPARENTHESES         : 8 9 41 42
MINASSIGN            : 
MINUS                : 
MODASSIGN            : 
MULTIPLY             : 11
NIL                  : 
NOT                  : 
NOTEQUAL             : 
NUMBER               : 28 44 44 45 45 68
OR                   : 
PERCENTAGE           : 
PLUS                 : 
PLUSASSIGN           : 
PRINT                : 47 49 51
PUTS                 : 46 48 50
QUESTIONMARK         : 41
QUESTIONMARKPERIOD   : 
RANGEINCLUSIVE       : 44
RANGEXCLUSIVE        : 45
RBRACKET             : 52 53 68
RCURLYBRACKET        : 13 35
RETURN               : 20 21
RPARENTHESES         : 8 9 41 42
SEMICOLON            : 
SINGLEQUOTE          : 
STRING               : 30
TIMESASSIGN          : 
TRIPLEEQUAL          : 58
TRUE                 : 
TWOGREATERTHAN       : 
TWOPOINTS            : 14
TWOSTARS             : 12
UNTIL                : 
VAR                  : 25
WAVE                 : 
error                : 

Nonterminals, with rules where they appear

accederarray         : 7
argumentos           : 8 9
array                : 6
cuerpo               : 8 9 22 54 55 56
datos                : 14 16 18 21 23 36 36 41 42 46 47 64
datosarray           : 52 67
datosvarios          : 54 54 55 55 66 67
declaracion          : 1 32
elementoHash         : 35 38
else                 : 55
estructuras          : 24
funcion              : 4
funcionesHash        : 40
hash                 : 31
if                   : 5
impresion            : 3 34
inicio               : 0
loop                 : 2 33
masargumentos        : 17 18
maselementos         : 36 38
masopciones          : 35 40 50 51
operadores           : 54 55
rango                : 22
retornar             : 9
tiposvariables       : 23 24 52 53 65 68
variosargumentos     : 10 19

Parsing method: LALR

state 0

    (0) S' -> . inicio
    (1) inicio -> . declaracion
    (2) inicio -> . loop
    (3) inicio -> . impresion
    (4) inicio -> . funcion
    (5) inicio -> . if
    (6) inicio -> . array
    (7) inicio -> . accederarray
    (23) declaracion -> . tiposvariables EQUAL datos
    (24) declaracion -> . tiposvariables EQUAL estructuras
    (22) loop -> . FOR LOCALVAR IN rango cuerpo END
    (46) impresion -> . PUTS datos
    (47) impresion -> . PRINT datos
    (48) impresion -> . PUTS LOCALVAR
    (49) impresion -> . PRINT LOCALVAR
    (50) impresion -> . PUTS masopciones
    (51) impresion -> . PRINT masopciones
    (8) funcion -> . DEF LOCALVAR LPARENTHESES argumentos RPARENTHESES cuerpo END
    (9) funcion -> . DEF LOCALVAR LPARENTHESES argumentos RPARENTHESES cuerpo retornar END
    (54) if -> . IF datosvarios operadores datosvarios cuerpo END
    (55) if -> . IF datosvarios operadores datosvarios cuerpo else
    (52) array -> . tiposvariables EQUAL LBRACKET datosarray RBRACKET
    (53) array -> . tiposvariables EQUAL LBRACKET RBRACKET
    (68) accederarray -> . tiposvariables LBRACKET NUMBER RBRACKET
    (25) tiposvariables -> . VAR
    (26) tiposvariables -> . LOCALVAR
    (27) tiposvariables -> . CONSTANT

    FOR             shift and go to state 10
    PUTS            shift and go to state 12
    PRINT           shift and go to state 13
    DEF             shift and go to state 14
    IF              shift and go to state 15
    VAR             shift and go to state 16
    LOCALVAR        shift and go to state 11
    CONSTANT        shift and go to state 17

    inicio                         shift and go to state 1
    declaracion                    shift and go to state 2
    loop                           shift and go to state 3
    impresion                      shift and go to state 4
    funcion                        shift and go to state 5
    if                             shift and go to state 6
    array                          shift and go to state 7
    accederarray                   shift and go to state 8
    tiposvariables                 shift and go to state 9

state 1

    (0) S' -> inicio .



state 2

    (1) inicio -> declaracion .

    $end            reduce using rule 1 (inicio -> declaracion .)


state 3

    (2) inicio -> loop .

    $end            reduce using rule 2 (inicio -> loop .)


state 4

    (3) inicio -> impresion .

    $end            reduce using rule 3 (inicio -> impresion .)


state 5

    (4) inicio -> funcion .

    $end            reduce using rule 4 (inicio -> funcion .)


state 6

    (5) inicio -> if .

    $end            reduce using rule 5 (inicio -> if .)


state 7

    (6) inicio -> array .

    $end            reduce using rule 6 (inicio -> array .)


state 8

    (7) inicio -> accederarray .

    $end            reduce using rule 7 (inicio -> accederarray .)


state 9

    (23) declaracion -> tiposvariables . EQUAL datos
    (24) declaracion -> tiposvariables . EQUAL estructuras
    (52) array -> tiposvariables . EQUAL LBRACKET datosarray RBRACKET
    (53) array -> tiposvariables . EQUAL LBRACKET RBRACKET
    (68) accederarray -> tiposvariables . LBRACKET NUMBER RBRACKET

    EQUAL           shift and go to state 18
    LBRACKET        shift and go to state 19


state 10

    (22) loop -> FOR . LOCALVAR IN rango cuerpo END

    LOCALVAR        shift and go to state 20


state 11

    (26) tiposvariables -> LOCALVAR .

    EQUAL           reduce using rule 26 (tiposvariables -> LOCALVAR .)
    LBRACKET        reduce using rule 26 (tiposvariables -> LOCALVAR .)
    DOUBLEEQUAL     reduce using rule 26 (tiposvariables -> LOCALVAR .)
    TRIPLEEQUAL     reduce using rule 26 (tiposvariables -> LOCALVAR .)
    GREATERTHAN     reduce using rule 26 (tiposvariables -> LOCALVAR .)
    EXCLAMATION     reduce using rule 26 (tiposvariables -> LOCALVAR .)
    LESSTHAN        reduce using rule 26 (tiposvariables -> LOCALVAR .)
    GREQUAL         reduce using rule 26 (tiposvariables -> LOCALVAR .)
    LEQUAL          reduce using rule 26 (tiposvariables -> LOCALVAR .)
    RBRACKET        reduce using rule 26 (tiposvariables -> LOCALVAR .)
    COMMA           reduce using rule 26 (tiposvariables -> LOCALVAR .)
    FOR             reduce using rule 26 (tiposvariables -> LOCALVAR .)
    PUTS            reduce using rule 26 (tiposvariables -> LOCALVAR .)
    PRINT           reduce using rule 26 (tiposvariables -> LOCALVAR .)
    VAR             reduce using rule 26 (tiposvariables -> LOCALVAR .)
    LOCALVAR        reduce using rule 26 (tiposvariables -> LOCALVAR .)
    CONSTANT        reduce using rule 26 (tiposvariables -> LOCALVAR .)


state 12

    (46) impresion -> PUTS . datos
    (48) impresion -> PUTS . LOCALVAR
    (50) impresion -> PUTS . masopciones
    (28) datos -> . NUMBER
    (29) datos -> . FLOAT
    (30) datos -> . STRING
    (39) masopciones -> .
    (40) masopciones -> . LOCALVAR DOT funcionesHash masopciones

    LOCALVAR        shift and go to state 22
    NUMBER          shift and go to state 24
    FLOAT           shift and go to state 25
    STRING          shift and go to state 26
    $end            reduce using rule 39 (masopciones -> .)
    END             reduce using rule 39 (masopciones -> .)
    ELSE            reduce using rule 39 (masopciones -> .)
    RETURN          reduce using rule 39 (masopciones -> .)

    datos                          shift and go to state 21
    masopciones                    shift and go to state 23

state 13

    (47) impresion -> PRINT . datos
    (49) impresion -> PRINT . LOCALVAR
    (51) impresion -> PRINT . masopciones
    (28) datos -> . NUMBER
    (29) datos -> . FLOAT
    (30) datos -> . STRING
    (39) masopciones -> .
    (40) masopciones -> . LOCALVAR DOT funcionesHash masopciones

    LOCALVAR        shift and go to state 28
    NUMBER          shift and go to state 24
    FLOAT           shift and go to state 25
    STRING          shift and go to state 26
    $end            reduce using rule 39 (masopciones -> .)
    END             reduce using rule 39 (masopciones -> .)
    ELSE            reduce using rule 39 (masopciones -> .)
    RETURN          reduce using rule 39 (masopciones -> .)

    datos                          shift and go to state 27
    masopciones                    shift and go to state 29

state 14

    (8) funcion -> DEF . LOCALVAR LPARENTHESES argumentos RPARENTHESES cuerpo END
    (9) funcion -> DEF . LOCALVAR LPARENTHESES argumentos RPARENTHESES cuerpo retornar END

    LOCALVAR        shift and go to state 30


state 15

    (54) if -> IF . datosvarios operadores datosvarios cuerpo END
    (55) if -> IF . datosvarios operadores datosvarios cuerpo else
    (64) datosvarios -> . datos
    (65) datosvarios -> . tiposvariables
    (28) datos -> . NUMBER
    (29) datos -> . FLOAT
    (30) datos -> . STRING
    (25) tiposvariables -> . VAR
    (26) tiposvariables -> . LOCALVAR
    (27) tiposvariables -> . CONSTANT

    NUMBER          shift and go to state 24
    FLOAT           shift and go to state 25
    STRING          shift and go to state 26
    VAR             shift and go to state 16
    LOCALVAR        shift and go to state 11
    CONSTANT        shift and go to state 17

    datosvarios                    shift and go to state 31
    datos                          shift and go to state 32
    tiposvariables                 shift and go to state 33

state 16

    (25) tiposvariables -> VAR .

    EQUAL           reduce using rule 25 (tiposvariables -> VAR .)
    LBRACKET        reduce using rule 25 (tiposvariables -> VAR .)
    DOUBLEEQUAL     reduce using rule 25 (tiposvariables -> VAR .)
    TRIPLEEQUAL     reduce using rule 25 (tiposvariables -> VAR .)
    GREATERTHAN     reduce using rule 25 (tiposvariables -> VAR .)
    EXCLAMATION     reduce using rule 25 (tiposvariables -> VAR .)
    LESSTHAN        reduce using rule 25 (tiposvariables -> VAR .)
    GREQUAL         reduce using rule 25 (tiposvariables -> VAR .)
    LEQUAL          reduce using rule 25 (tiposvariables -> VAR .)
    RBRACKET        reduce using rule 25 (tiposvariables -> VAR .)
    COMMA           reduce using rule 25 (tiposvariables -> VAR .)
    FOR             reduce using rule 25 (tiposvariables -> VAR .)
    PUTS            reduce using rule 25 (tiposvariables -> VAR .)
    PRINT           reduce using rule 25 (tiposvariables -> VAR .)
    VAR             reduce using rule 25 (tiposvariables -> VAR .)
    LOCALVAR        reduce using rule 25 (tiposvariables -> VAR .)
    CONSTANT        reduce using rule 25 (tiposvariables -> VAR .)


state 17

    (27) tiposvariables -> CONSTANT .

    EQUAL           reduce using rule 27 (tiposvariables -> CONSTANT .)
    LBRACKET        reduce using rule 27 (tiposvariables -> CONSTANT .)
    DOUBLEEQUAL     reduce using rule 27 (tiposvariables -> CONSTANT .)
    TRIPLEEQUAL     reduce using rule 27 (tiposvariables -> CONSTANT .)
    GREATERTHAN     reduce using rule 27 (tiposvariables -> CONSTANT .)
    EXCLAMATION     reduce using rule 27 (tiposvariables -> CONSTANT .)
    LESSTHAN        reduce using rule 27 (tiposvariables -> CONSTANT .)
    GREQUAL         reduce using rule 27 (tiposvariables -> CONSTANT .)
    LEQUAL          reduce using rule 27 (tiposvariables -> CONSTANT .)
    RBRACKET        reduce using rule 27 (tiposvariables -> CONSTANT .)
    COMMA           reduce using rule 27 (tiposvariables -> CONSTANT .)
    FOR             reduce using rule 27 (tiposvariables -> CONSTANT .)
    PUTS            reduce using rule 27 (tiposvariables -> CONSTANT .)
    PRINT           reduce using rule 27 (tiposvariables -> CONSTANT .)
    VAR             reduce using rule 27 (tiposvariables -> CONSTANT .)
    LOCALVAR        reduce using rule 27 (tiposvariables -> CONSTANT .)
    CONSTANT        reduce using rule 27 (tiposvariables -> CONSTANT .)


state 18

    (23) declaracion -> tiposvariables EQUAL . datos
    (24) declaracion -> tiposvariables EQUAL . estructuras
    (52) array -> tiposvariables EQUAL . LBRACKET datosarray RBRACKET
    (53) array -> tiposvariables EQUAL . LBRACKET RBRACKET
    (28) datos -> . NUMBER
    (29) datos -> . FLOAT
    (30) datos -> . STRING
    (31) estructuras -> . hash
    (35) hash -> . LCURLYBRACKET elementoHash RCURLYBRACKET masopciones

    LBRACKET        shift and go to state 36
    NUMBER          shift and go to state 24
    FLOAT           shift and go to state 25
    STRING          shift and go to state 26
    LCURLYBRACKET   shift and go to state 38

    datos                          shift and go to state 34
    estructuras                    shift and go to state 35
    hash                           shift and go to state 37

state 19

    (68) accederarray -> tiposvariables LBRACKET . NUMBER RBRACKET

    NUMBER          shift and go to state 39


state 20

    (22) loop -> FOR LOCALVAR . IN rango cuerpo END

    IN              shift and go to state 40


state 21

    (46) impresion -> PUTS datos .

    $end            reduce using rule 46 (impresion -> PUTS datos .)
    END             reduce using rule 46 (impresion -> PUTS datos .)
    ELSE            reduce using rule 46 (impresion -> PUTS datos .)
    RETURN          reduce using rule 46 (impresion -> PUTS datos .)


state 22

    (48) impresion -> PUTS LOCALVAR .
    (40) masopciones -> LOCALVAR . DOT funcionesHash masopciones

    $end            reduce using rule 48 (impresion -> PUTS LOCALVAR .)
    END             reduce using rule 48 (impresion -> PUTS LOCALVAR .)
    ELSE            reduce using rule 48 (impresion -> PUTS LOCALVAR .)
    RETURN          reduce using rule 48 (impresion -> PUTS LOCALVAR .)
    DOT             shift and go to state 41


state 23

    (50) impresion -> PUTS masopciones .

    $end            reduce using rule 50 (impresion -> PUTS masopciones .)
    END             reduce using rule 50 (impresion -> PUTS masopciones .)
    ELSE            reduce using rule 50 (impresion -> PUTS masopciones .)
    RETURN          reduce using rule 50 (impresion -> PUTS masopciones .)


state 24

    (28) datos -> NUMBER .

    $end            reduce using rule 28 (datos -> NUMBER .)
    END             reduce using rule 28 (datos -> NUMBER .)
    ELSE            reduce using rule 28 (datos -> NUMBER .)
    RETURN          reduce using rule 28 (datos -> NUMBER .)
    DOUBLEEQUAL     reduce using rule 28 (datos -> NUMBER .)
    TRIPLEEQUAL     reduce using rule 28 (datos -> NUMBER .)
    GREATERTHAN     reduce using rule 28 (datos -> NUMBER .)
    EXCLAMATION     reduce using rule 28 (datos -> NUMBER .)
    LESSTHAN        reduce using rule 28 (datos -> NUMBER .)
    GREQUAL         reduce using rule 28 (datos -> NUMBER .)
    LEQUAL          reduce using rule 28 (datos -> NUMBER .)
    RBRACKET        reduce using rule 28 (datos -> NUMBER .)
    COMMA           reduce using rule 28 (datos -> NUMBER .)
    EQUAL           reduce using rule 28 (datos -> NUMBER .)
    FOR             reduce using rule 28 (datos -> NUMBER .)
    PUTS            reduce using rule 28 (datos -> NUMBER .)
    PRINT           reduce using rule 28 (datos -> NUMBER .)
    VAR             reduce using rule 28 (datos -> NUMBER .)
    LOCALVAR        reduce using rule 28 (datos -> NUMBER .)
    CONSTANT        reduce using rule 28 (datos -> NUMBER .)
    RPARENTHESES    reduce using rule 28 (datos -> NUMBER .)
    RCURLYBRACKET   reduce using rule 28 (datos -> NUMBER .)


state 25

    (29) datos -> FLOAT .

    $end            reduce using rule 29 (datos -> FLOAT .)
    END             reduce using rule 29 (datos -> FLOAT .)
    ELSE            reduce using rule 29 (datos -> FLOAT .)
    RETURN          reduce using rule 29 (datos -> FLOAT .)
    DOUBLEEQUAL     reduce using rule 29 (datos -> FLOAT .)
    TRIPLEEQUAL     reduce using rule 29 (datos -> FLOAT .)
    GREATERTHAN     reduce using rule 29 (datos -> FLOAT .)
    EXCLAMATION     reduce using rule 29 (datos -> FLOAT .)
    LESSTHAN        reduce using rule 29 (datos -> FLOAT .)
    GREQUAL         reduce using rule 29 (datos -> FLOAT .)
    LEQUAL          reduce using rule 29 (datos -> FLOAT .)
    RBRACKET        reduce using rule 29 (datos -> FLOAT .)
    COMMA           reduce using rule 29 (datos -> FLOAT .)
    EQUAL           reduce using rule 29 (datos -> FLOAT .)
    FOR             reduce using rule 29 (datos -> FLOAT .)
    PUTS            reduce using rule 29 (datos -> FLOAT .)
    PRINT           reduce using rule 29 (datos -> FLOAT .)
    VAR             reduce using rule 29 (datos -> FLOAT .)
    LOCALVAR        reduce using rule 29 (datos -> FLOAT .)
    CONSTANT        reduce using rule 29 (datos -> FLOAT .)
    RPARENTHESES    reduce using rule 29 (datos -> FLOAT .)
    RCURLYBRACKET   reduce using rule 29 (datos -> FLOAT .)


state 26

    (30) datos -> STRING .

    $end            reduce using rule 30 (datos -> STRING .)
    END             reduce using rule 30 (datos -> STRING .)
    ELSE            reduce using rule 30 (datos -> STRING .)
    RETURN          reduce using rule 30 (datos -> STRING .)
    DOUBLEEQUAL     reduce using rule 30 (datos -> STRING .)
    TRIPLEEQUAL     reduce using rule 30 (datos -> STRING .)
    GREATERTHAN     reduce using rule 30 (datos -> STRING .)
    EXCLAMATION     reduce using rule 30 (datos -> STRING .)
    LESSTHAN        reduce using rule 30 (datos -> STRING .)
    GREQUAL         reduce using rule 30 (datos -> STRING .)
    LEQUAL          reduce using rule 30 (datos -> STRING .)
    RBRACKET        reduce using rule 30 (datos -> STRING .)
    COMMA           reduce using rule 30 (datos -> STRING .)
    EQUAL           reduce using rule 30 (datos -> STRING .)
    FOR             reduce using rule 30 (datos -> STRING .)
    PUTS            reduce using rule 30 (datos -> STRING .)
    PRINT           reduce using rule 30 (datos -> STRING .)
    VAR             reduce using rule 30 (datos -> STRING .)
    LOCALVAR        reduce using rule 30 (datos -> STRING .)
    CONSTANT        reduce using rule 30 (datos -> STRING .)
    RPARENTHESES    reduce using rule 30 (datos -> STRING .)
    RCURLYBRACKET   reduce using rule 30 (datos -> STRING .)


state 27

    (47) impresion -> PRINT datos .

    $end            reduce using rule 47 (impresion -> PRINT datos .)
    END             reduce using rule 47 (impresion -> PRINT datos .)
    ELSE            reduce using rule 47 (impresion -> PRINT datos .)
    RETURN          reduce using rule 47 (impresion -> PRINT datos .)


state 28

    (49) impresion -> PRINT LOCALVAR .
    (40) masopciones -> LOCALVAR . DOT funcionesHash masopciones

    $end            reduce using rule 49 (impresion -> PRINT LOCALVAR .)
    END             reduce using rule 49 (impresion -> PRINT LOCALVAR .)
    ELSE            reduce using rule 49 (impresion -> PRINT LOCALVAR .)
    RETURN          reduce using rule 49 (impresion -> PRINT LOCALVAR .)
    DOT             shift and go to state 41


state 29

    (51) impresion -> PRINT masopciones .

    $end            reduce using rule 51 (impresion -> PRINT masopciones .)
    END             reduce using rule 51 (impresion -> PRINT masopciones .)
    ELSE            reduce using rule 51 (impresion -> PRINT masopciones .)
    RETURN          reduce using rule 51 (impresion -> PRINT masopciones .)


state 30

    (8) funcion -> DEF LOCALVAR . LPARENTHESES argumentos RPARENTHESES cuerpo END
    (9) funcion -> DEF LOCALVAR . LPARENTHESES argumentos RPARENTHESES cuerpo retornar END

    LPARENTHESES    shift and go to state 42


state 31

    (54) if -> IF datosvarios . operadores datosvarios cuerpo END
    (55) if -> IF datosvarios . operadores datosvarios cuerpo else
    (57) operadores -> . DOUBLEEQUAL
    (58) operadores -> . TRIPLEEQUAL
    (59) operadores -> . GREATERTHAN
    (60) operadores -> . EXCLAMATION EQUAL
    (61) operadores -> . LESSTHAN
    (62) operadores -> . GREQUAL
    (63) operadores -> . LEQUAL

    DOUBLEEQUAL     shift and go to state 44
    TRIPLEEQUAL     shift and go to state 45
    GREATERTHAN     shift and go to state 46
    EXCLAMATION     shift and go to state 47
    LESSTHAN        shift and go to state 48
    GREQUAL         shift and go to state 49
    LEQUAL          shift and go to state 50

    operadores                     shift and go to state 43

state 32

    (64) datosvarios -> datos .

    DOUBLEEQUAL     reduce using rule 64 (datosvarios -> datos .)
    TRIPLEEQUAL     reduce using rule 64 (datosvarios -> datos .)
    GREATERTHAN     reduce using rule 64 (datosvarios -> datos .)
    EXCLAMATION     reduce using rule 64 (datosvarios -> datos .)
    LESSTHAN        reduce using rule 64 (datosvarios -> datos .)
    GREQUAL         reduce using rule 64 (datosvarios -> datos .)
    LEQUAL          reduce using rule 64 (datosvarios -> datos .)
    RBRACKET        reduce using rule 64 (datosvarios -> datos .)
    COMMA           reduce using rule 64 (datosvarios -> datos .)
    FOR             reduce using rule 64 (datosvarios -> datos .)
    PUTS            reduce using rule 64 (datosvarios -> datos .)
    PRINT           reduce using rule 64 (datosvarios -> datos .)
    VAR             reduce using rule 64 (datosvarios -> datos .)
    LOCALVAR        reduce using rule 64 (datosvarios -> datos .)
    CONSTANT        reduce using rule 64 (datosvarios -> datos .)


state 33

    (65) datosvarios -> tiposvariables .

    DOUBLEEQUAL     reduce using rule 65 (datosvarios -> tiposvariables .)
    TRIPLEEQUAL     reduce using rule 65 (datosvarios -> tiposvariables .)
    GREATERTHAN     reduce using rule 65 (datosvarios -> tiposvariables .)
    EXCLAMATION     reduce using rule 65 (datosvarios -> tiposvariables .)
    LESSTHAN        reduce using rule 65 (datosvarios -> tiposvariables .)
    GREQUAL         reduce using rule 65 (datosvarios -> tiposvariables .)
    LEQUAL          reduce using rule 65 (datosvarios -> tiposvariables .)
    RBRACKET        reduce using rule 65 (datosvarios -> tiposvariables .)
    COMMA           reduce using rule 65 (datosvarios -> tiposvariables .)
    FOR             reduce using rule 65 (datosvarios -> tiposvariables .)
    PUTS            reduce using rule 65 (datosvarios -> tiposvariables .)
    PRINT           reduce using rule 65 (datosvarios -> tiposvariables .)
    VAR             reduce using rule 65 (datosvarios -> tiposvariables .)
    LOCALVAR        reduce using rule 65 (datosvarios -> tiposvariables .)
    CONSTANT        reduce using rule 65 (datosvarios -> tiposvariables .)


state 34

    (23) declaracion -> tiposvariables EQUAL datos .

    $end            reduce using rule 23 (declaracion -> tiposvariables EQUAL datos .)
    END             reduce using rule 23 (declaracion -> tiposvariables EQUAL datos .)
    ELSE            reduce using rule 23 (declaracion -> tiposvariables EQUAL datos .)
    RETURN          reduce using rule 23 (declaracion -> tiposvariables EQUAL datos .)


state 35

    (24) declaracion -> tiposvariables EQUAL estructuras .

    $end            reduce using rule 24 (declaracion -> tiposvariables EQUAL estructuras .)
    END             reduce using rule 24 (declaracion -> tiposvariables EQUAL estructuras .)
    ELSE            reduce using rule 24 (declaracion -> tiposvariables EQUAL estructuras .)
    RETURN          reduce using rule 24 (declaracion -> tiposvariables EQUAL estructuras .)


state 36

    (52) array -> tiposvariables EQUAL LBRACKET . datosarray RBRACKET
    (53) array -> tiposvariables EQUAL LBRACKET . RBRACKET
    (66) datosarray -> . datosvarios
    (67) datosarray -> . datosarray COMMA datosvarios
    (64) datosvarios -> . datos
    (65) datosvarios -> . tiposvariables
    (28) datos -> . NUMBER
    (29) datos -> . FLOAT
    (30) datos -> . STRING
    (25) tiposvariables -> . VAR
    (26) tiposvariables -> . LOCALVAR
    (27) tiposvariables -> . CONSTANT

    RBRACKET        shift and go to state 52
    NUMBER          shift and go to state 24
    FLOAT           shift and go to state 25
    STRING          shift and go to state 26
    VAR             shift and go to state 16
    LOCALVAR        shift and go to state 11
    CONSTANT        shift and go to state 17

    tiposvariables                 shift and go to state 33
    datosarray                     shift and go to state 51
    datosvarios                    shift and go to state 53
    datos                          shift and go to state 32

state 37

    (31) estructuras -> hash .

    $end            reduce using rule 31 (estructuras -> hash .)
    END             reduce using rule 31 (estructuras -> hash .)
    ELSE            reduce using rule 31 (estructuras -> hash .)
    RETURN          reduce using rule 31 (estructuras -> hash .)


state 38

    (35) hash -> LCURLYBRACKET . elementoHash RCURLYBRACKET masopciones
    (36) elementoHash -> . datos EQUAL GREATERTHAN datos maselementos
    (28) datos -> . NUMBER
    (29) datos -> . FLOAT
    (30) datos -> . STRING

    NUMBER          shift and go to state 24
    FLOAT           shift and go to state 25
    STRING          shift and go to state 26

    elementoHash                   shift and go to state 54
    datos                          shift and go to state 55

state 39

    (68) accederarray -> tiposvariables LBRACKET NUMBER . RBRACKET

    RBRACKET        shift and go to state 56


state 40

    (22) loop -> FOR LOCALVAR IN . rango cuerpo END
    (44) rango -> . NUMBER RANGEINCLUSIVE NUMBER
    (45) rango -> . NUMBER RANGEXCLUSIVE NUMBER

    NUMBER          shift and go to state 58

    rango                          shift and go to state 57

state 41

    (40) masopciones -> LOCALVAR DOT . funcionesHash masopciones
    (41) funcionesHash -> . INCLUDE QUESTIONMARK LPARENTHESES datos RPARENTHESES
    (42) funcionesHash -> . DELETE LPARENTHESES datos RPARENTHESES
    (43) funcionesHash -> . KEYS

    INCLUDE         shift and go to state 60
    DELETE          shift and go to state 61
    KEYS            shift and go to state 62

    funcionesHash                  shift and go to state 59

state 42

    (8) funcion -> DEF LOCALVAR LPARENTHESES . argumentos RPARENTHESES cuerpo END
    (9) funcion -> DEF LOCALVAR LPARENTHESES . argumentos RPARENTHESES cuerpo retornar END
    (10) argumentos -> . variosargumentos
    (11) argumentos -> . MULTIPLY LOCALVAR
    (12) argumentos -> . TWOSTARS LOCALVAR
    (13) argumentos -> . LOCALVAR EQUAL LCURLYBRACKET RCURLYBRACKET
    (14) argumentos -> . LOCALVAR TWOPOINTS datos
    (15) variosargumentos -> . LOCALVAR
    (16) variosargumentos -> . LOCALVAR EQUAL datos
    (17) variosargumentos -> . LOCALVAR masargumentos
    (18) variosargumentos -> . LOCALVAR EQUAL datos masargumentos

    MULTIPLY        shift and go to state 66
    TWOSTARS        shift and go to state 67
    LOCALVAR        shift and go to state 63

    argumentos                     shift and go to state 64
    variosargumentos               shift and go to state 65

state 43

    (54) if -> IF datosvarios operadores . datosvarios cuerpo END
    (55) if -> IF datosvarios operadores . datosvarios cuerpo else
    (64) datosvarios -> . datos
    (65) datosvarios -> . tiposvariables
    (28) datos -> . NUMBER
    (29) datos -> . FLOAT
    (30) datos -> . STRING
    (25) tiposvariables -> . VAR
    (26) tiposvariables -> . LOCALVAR
    (27) tiposvariables -> . CONSTANT

    NUMBER          shift and go to state 24
    FLOAT           shift and go to state 25
    STRING          shift and go to state 26
    VAR             shift and go to state 16
    LOCALVAR        shift and go to state 11
    CONSTANT        shift and go to state 17

    datosvarios                    shift and go to state 68
    datos                          shift and go to state 32
    tiposvariables                 shift and go to state 33

state 44

    (57) operadores -> DOUBLEEQUAL .

    NUMBER          reduce using rule 57 (operadores -> DOUBLEEQUAL .)
    FLOAT           reduce using rule 57 (operadores -> DOUBLEEQUAL .)
    STRING          reduce using rule 57 (operadores -> DOUBLEEQUAL .)
    VAR             reduce using rule 57 (operadores -> DOUBLEEQUAL .)
    LOCALVAR        reduce using rule 57 (operadores -> DOUBLEEQUAL .)
    CONSTANT        reduce using rule 57 (operadores -> DOUBLEEQUAL .)


state 45

    (58) operadores -> TRIPLEEQUAL .

    NUMBER          reduce using rule 58 (operadores -> TRIPLEEQUAL .)
    FLOAT           reduce using rule 58 (operadores -> TRIPLEEQUAL .)
    STRING          reduce using rule 58 (operadores -> TRIPLEEQUAL .)
    VAR             reduce using rule 58 (operadores -> TRIPLEEQUAL .)
    LOCALVAR        reduce using rule 58 (operadores -> TRIPLEEQUAL .)
    CONSTANT        reduce using rule 58 (operadores -> TRIPLEEQUAL .)


state 46

    (59) operadores -> GREATERTHAN .

    NUMBER          reduce using rule 59 (operadores -> GREATERTHAN .)
    FLOAT           reduce using rule 59 (operadores -> GREATERTHAN .)
    STRING          reduce using rule 59 (operadores -> GREATERTHAN .)
    VAR             reduce using rule 59 (operadores -> GREATERTHAN .)
    LOCALVAR        reduce using rule 59 (operadores -> GREATERTHAN .)
    CONSTANT        reduce using rule 59 (operadores -> GREATERTHAN .)


state 47

    (60) operadores -> EXCLAMATION . EQUAL

    EQUAL           shift and go to state 69


state 48

    (61) operadores -> LESSTHAN .

    NUMBER          reduce using rule 61 (operadores -> LESSTHAN .)
    FLOAT           reduce using rule 61 (operadores -> LESSTHAN .)
    STRING          reduce using rule 61 (operadores -> LESSTHAN .)
    VAR             reduce using rule 61 (operadores -> LESSTHAN .)
    LOCALVAR        reduce using rule 61 (operadores -> LESSTHAN .)
    CONSTANT        reduce using rule 61 (operadores -> LESSTHAN .)


state 49

    (62) operadores -> GREQUAL .

    NUMBER          reduce using rule 62 (operadores -> GREQUAL .)
    FLOAT           reduce using rule 62 (operadores -> GREQUAL .)
    STRING          reduce using rule 62 (operadores -> GREQUAL .)
    VAR             reduce using rule 62 (operadores -> GREQUAL .)
    LOCALVAR        reduce using rule 62 (operadores -> GREQUAL .)
    CONSTANT        reduce using rule 62 (operadores -> GREQUAL .)


state 50

    (63) operadores -> LEQUAL .

    NUMBER          reduce using rule 63 (operadores -> LEQUAL .)
    FLOAT           reduce using rule 63 (operadores -> LEQUAL .)
    STRING          reduce using rule 63 (operadores -> LEQUAL .)
    VAR             reduce using rule 63 (operadores -> LEQUAL .)
    LOCALVAR        reduce using rule 63 (operadores -> LEQUAL .)
    CONSTANT        reduce using rule 63 (operadores -> LEQUAL .)


state 51

    (52) array -> tiposvariables EQUAL LBRACKET datosarray . RBRACKET
    (67) datosarray -> datosarray . COMMA datosvarios

    RBRACKET        shift and go to state 70
    COMMA           shift and go to state 71


state 52

    (53) array -> tiposvariables EQUAL LBRACKET RBRACKET .

    $end            reduce using rule 53 (array -> tiposvariables EQUAL LBRACKET RBRACKET .)


state 53

    (66) datosarray -> datosvarios .

    RBRACKET        reduce using rule 66 (datosarray -> datosvarios .)
    COMMA           reduce using rule 66 (datosarray -> datosvarios .)


state 54

    (35) hash -> LCURLYBRACKET elementoHash . RCURLYBRACKET masopciones

    RCURLYBRACKET   shift and go to state 72


state 55

    (36) elementoHash -> datos . EQUAL GREATERTHAN datos maselementos

    EQUAL           shift and go to state 73


state 56

    (68) accederarray -> tiposvariables LBRACKET NUMBER RBRACKET .

    $end            reduce using rule 68 (accederarray -> tiposvariables LBRACKET NUMBER RBRACKET .)


state 57

    (22) loop -> FOR LOCALVAR IN rango . cuerpo END
    (32) cuerpo -> . declaracion
    (33) cuerpo -> . loop
    (34) cuerpo -> . impresion
    (23) declaracion -> . tiposvariables EQUAL datos
    (24) declaracion -> . tiposvariables EQUAL estructuras
    (22) loop -> . FOR LOCALVAR IN rango cuerpo END
    (46) impresion -> . PUTS datos
    (47) impresion -> . PRINT datos
    (48) impresion -> . PUTS LOCALVAR
    (49) impresion -> . PRINT LOCALVAR
    (50) impresion -> . PUTS masopciones
    (51) impresion -> . PRINT masopciones
    (25) tiposvariables -> . VAR
    (26) tiposvariables -> . LOCALVAR
    (27) tiposvariables -> . CONSTANT

    FOR             shift and go to state 10
    PUTS            shift and go to state 12
    PRINT           shift and go to state 13
    VAR             shift and go to state 16
    LOCALVAR        shift and go to state 11
    CONSTANT        shift and go to state 17

    cuerpo                         shift and go to state 74
    declaracion                    shift and go to state 75
    loop                           shift and go to state 76
    impresion                      shift and go to state 77
    tiposvariables                 shift and go to state 78

state 58

    (44) rango -> NUMBER . RANGEINCLUSIVE NUMBER
    (45) rango -> NUMBER . RANGEXCLUSIVE NUMBER

    RANGEINCLUSIVE  shift and go to state 79
    RANGEXCLUSIVE   shift and go to state 80


state 59

    (40) masopciones -> LOCALVAR DOT funcionesHash . masopciones
    (39) masopciones -> .
    (40) masopciones -> . LOCALVAR DOT funcionesHash masopciones

    $end            reduce using rule 39 (masopciones -> .)
    END             reduce using rule 39 (masopciones -> .)
    ELSE            reduce using rule 39 (masopciones -> .)
    RETURN          reduce using rule 39 (masopciones -> .)
    LOCALVAR        shift and go to state 81

    masopciones                    shift and go to state 82

state 60

    (41) funcionesHash -> INCLUDE . QUESTIONMARK LPARENTHESES datos RPARENTHESES

    QUESTIONMARK    shift and go to state 83


state 61

    (42) funcionesHash -> DELETE . LPARENTHESES datos RPARENTHESES

    LPARENTHESES    shift and go to state 84


state 62

    (43) funcionesHash -> KEYS .

    LOCALVAR        reduce using rule 43 (funcionesHash -> KEYS .)
    $end            reduce using rule 43 (funcionesHash -> KEYS .)
    END             reduce using rule 43 (funcionesHash -> KEYS .)
    ELSE            reduce using rule 43 (funcionesHash -> KEYS .)
    RETURN          reduce using rule 43 (funcionesHash -> KEYS .)


state 63

    (13) argumentos -> LOCALVAR . EQUAL LCURLYBRACKET RCURLYBRACKET
    (14) argumentos -> LOCALVAR . TWOPOINTS datos
    (15) variosargumentos -> LOCALVAR .
    (16) variosargumentos -> LOCALVAR . EQUAL datos
    (17) variosargumentos -> LOCALVAR . masargumentos
    (18) variosargumentos -> LOCALVAR . EQUAL datos masargumentos
    (19) masargumentos -> . COMMA variosargumentos

    EQUAL           shift and go to state 85
    TWOPOINTS       shift and go to state 86
    RPARENTHESES    reduce using rule 15 (variosargumentos -> LOCALVAR .)
    COMMA           shift and go to state 88

    masargumentos                  shift and go to state 87

state 64

    (8) funcion -> DEF LOCALVAR LPARENTHESES argumentos . RPARENTHESES cuerpo END
    (9) funcion -> DEF LOCALVAR LPARENTHESES argumentos . RPARENTHESES cuerpo retornar END

    RPARENTHESES    shift and go to state 89


state 65

    (10) argumentos -> variosargumentos .

    RPARENTHESES    reduce using rule 10 (argumentos -> variosargumentos .)


state 66

    (11) argumentos -> MULTIPLY . LOCALVAR

    LOCALVAR        shift and go to state 90


state 67

    (12) argumentos -> TWOSTARS . LOCALVAR

    LOCALVAR        shift and go to state 91


state 68

    (54) if -> IF datosvarios operadores datosvarios . cuerpo END
    (55) if -> IF datosvarios operadores datosvarios . cuerpo else
    (32) cuerpo -> . declaracion
    (33) cuerpo -> . loop
    (34) cuerpo -> . impresion
    (23) declaracion -> . tiposvariables EQUAL datos
    (24) declaracion -> . tiposvariables EQUAL estructuras
    (22) loop -> . FOR LOCALVAR IN rango cuerpo END
    (46) impresion -> . PUTS datos
    (47) impresion -> . PRINT datos
    (48) impresion -> . PUTS LOCALVAR
    (49) impresion -> . PRINT LOCALVAR
    (50) impresion -> . PUTS masopciones
    (51) impresion -> . PRINT masopciones
    (25) tiposvariables -> . VAR
    (26) tiposvariables -> . LOCALVAR
    (27) tiposvariables -> . CONSTANT

    FOR             shift and go to state 10
    PUTS            shift and go to state 12
    PRINT           shift and go to state 13
    VAR             shift and go to state 16
    LOCALVAR        shift and go to state 11
    CONSTANT        shift and go to state 17

    cuerpo                         shift and go to state 92
    declaracion                    shift and go to state 75
    loop                           shift and go to state 76
    impresion                      shift and go to state 77
    tiposvariables                 shift and go to state 78

state 69

    (60) operadores -> EXCLAMATION EQUAL .

    NUMBER          reduce using rule 60 (operadores -> EXCLAMATION EQUAL .)
    FLOAT           reduce using rule 60 (operadores -> EXCLAMATION EQUAL .)
    STRING          reduce using rule 60 (operadores -> EXCLAMATION EQUAL .)
    VAR             reduce using rule 60 (operadores -> EXCLAMATION EQUAL .)
    LOCALVAR        reduce using rule 60 (operadores -> EXCLAMATION EQUAL .)
    CONSTANT        reduce using rule 60 (operadores -> EXCLAMATION EQUAL .)


state 70

    (52) array -> tiposvariables EQUAL LBRACKET datosarray RBRACKET .

    $end            reduce using rule 52 (array -> tiposvariables EQUAL LBRACKET datosarray RBRACKET .)


state 71

    (67) datosarray -> datosarray COMMA . datosvarios
    (64) datosvarios -> . datos
    (65) datosvarios -> . tiposvariables
    (28) datos -> . NUMBER
    (29) datos -> . FLOAT
    (30) datos -> . STRING
    (25) tiposvariables -> . VAR
    (26) tiposvariables -> . LOCALVAR
    (27) tiposvariables -> . CONSTANT

    NUMBER          shift and go to state 24
    FLOAT           shift and go to state 25
    STRING          shift and go to state 26
    VAR             shift and go to state 16
    LOCALVAR        shift and go to state 11
    CONSTANT        shift and go to state 17

    datosvarios                    shift and go to state 93
    datos                          shift and go to state 32
    tiposvariables                 shift and go to state 33

state 72

    (35) hash -> LCURLYBRACKET elementoHash RCURLYBRACKET . masopciones
    (39) masopciones -> .
    (40) masopciones -> . LOCALVAR DOT funcionesHash masopciones

    $end            reduce using rule 39 (masopciones -> .)
    END             reduce using rule 39 (masopciones -> .)
    ELSE            reduce using rule 39 (masopciones -> .)
    RETURN          reduce using rule 39 (masopciones -> .)
    LOCALVAR        shift and go to state 81

    masopciones                    shift and go to state 94

state 73

    (36) elementoHash -> datos EQUAL . GREATERTHAN datos maselementos

    GREATERTHAN     shift and go to state 95


state 74

    (22) loop -> FOR LOCALVAR IN rango cuerpo . END

    END             shift and go to state 96


state 75

    (32) cuerpo -> declaracion .

    END             reduce using rule 32 (cuerpo -> declaracion .)
    ELSE            reduce using rule 32 (cuerpo -> declaracion .)
    RETURN          reduce using rule 32 (cuerpo -> declaracion .)


state 76

    (33) cuerpo -> loop .

    END             reduce using rule 33 (cuerpo -> loop .)
    ELSE            reduce using rule 33 (cuerpo -> loop .)
    RETURN          reduce using rule 33 (cuerpo -> loop .)


state 77

    (34) cuerpo -> impresion .

    END             reduce using rule 34 (cuerpo -> impresion .)
    ELSE            reduce using rule 34 (cuerpo -> impresion .)
    RETURN          reduce using rule 34 (cuerpo -> impresion .)


state 78

    (23) declaracion -> tiposvariables . EQUAL datos
    (24) declaracion -> tiposvariables . EQUAL estructuras

    EQUAL           shift and go to state 97


state 79

    (44) rango -> NUMBER RANGEINCLUSIVE . NUMBER

    NUMBER          shift and go to state 98


state 80

    (45) rango -> NUMBER RANGEXCLUSIVE . NUMBER

    NUMBER          shift and go to state 99


state 81

    (40) masopciones -> LOCALVAR . DOT funcionesHash masopciones

    DOT             shift and go to state 41


state 82

    (40) masopciones -> LOCALVAR DOT funcionesHash masopciones .

    $end            reduce using rule 40 (masopciones -> LOCALVAR DOT funcionesHash masopciones .)
    END             reduce using rule 40 (masopciones -> LOCALVAR DOT funcionesHash masopciones .)
    ELSE            reduce using rule 40 (masopciones -> LOCALVAR DOT funcionesHash masopciones .)
    RETURN          reduce using rule 40 (masopciones -> LOCALVAR DOT funcionesHash masopciones .)


state 83

    (41) funcionesHash -> INCLUDE QUESTIONMARK . LPARENTHESES datos RPARENTHESES

    LPARENTHESES    shift and go to state 100


state 84

    (42) funcionesHash -> DELETE LPARENTHESES . datos RPARENTHESES
    (28) datos -> . NUMBER
    (29) datos -> . FLOAT
    (30) datos -> . STRING

    NUMBER          shift and go to state 24
    FLOAT           shift and go to state 25
    STRING          shift and go to state 26

    datos                          shift and go to state 101

state 85

    (13) argumentos -> LOCALVAR EQUAL . LCURLYBRACKET RCURLYBRACKET
    (16) variosargumentos -> LOCALVAR EQUAL . datos
    (18) variosargumentos -> LOCALVAR EQUAL . datos masargumentos
    (28) datos -> . NUMBER
    (29) datos -> . FLOAT
    (30) datos -> . STRING

    LCURLYBRACKET   shift and go to state 102
    NUMBER          shift and go to state 24
    FLOAT           shift and go to state 25
    STRING          shift and go to state 26

    datos                          shift and go to state 103

state 86

    (14) argumentos -> LOCALVAR TWOPOINTS . datos
    (28) datos -> . NUMBER
    (29) datos -> . FLOAT
    (30) datos -> . STRING

    NUMBER          shift and go to state 24
    FLOAT           shift and go to state 25
    STRING          shift and go to state 26

    datos                          shift and go to state 104

state 87

    (17) variosargumentos -> LOCALVAR masargumentos .

    RPARENTHESES    reduce using rule 17 (variosargumentos -> LOCALVAR masargumentos .)


state 88

    (19) masargumentos -> COMMA . variosargumentos
    (15) variosargumentos -> . LOCALVAR
    (16) variosargumentos -> . LOCALVAR EQUAL datos
    (17) variosargumentos -> . LOCALVAR masargumentos
    (18) variosargumentos -> . LOCALVAR EQUAL datos masargumentos

    LOCALVAR        shift and go to state 106

    variosargumentos               shift and go to state 105

state 89

    (8) funcion -> DEF LOCALVAR LPARENTHESES argumentos RPARENTHESES . cuerpo END
    (9) funcion -> DEF LOCALVAR LPARENTHESES argumentos RPARENTHESES . cuerpo retornar END
    (32) cuerpo -> . declaracion
    (33) cuerpo -> . loop
    (34) cuerpo -> . impresion
    (23) declaracion -> . tiposvariables EQUAL datos
    (24) declaracion -> . tiposvariables EQUAL estructuras
    (22) loop -> . FOR LOCALVAR IN rango cuerpo END
    (46) impresion -> . PUTS datos
    (47) impresion -> . PRINT datos
    (48) impresion -> . PUTS LOCALVAR
    (49) impresion -> . PRINT LOCALVAR
    (50) impresion -> . PUTS masopciones
    (51) impresion -> . PRINT masopciones
    (25) tiposvariables -> . VAR
    (26) tiposvariables -> . LOCALVAR
    (27) tiposvariables -> . CONSTANT

    FOR             shift and go to state 10
    PUTS            shift and go to state 12
    PRINT           shift and go to state 13
    VAR             shift and go to state 16
    LOCALVAR        shift and go to state 11
    CONSTANT        shift and go to state 17

    cuerpo                         shift and go to state 107
    declaracion                    shift and go to state 75
    loop                           shift and go to state 76
    impresion                      shift and go to state 77
    tiposvariables                 shift and go to state 78

state 90

    (11) argumentos -> MULTIPLY LOCALVAR .

    RPARENTHESES    reduce using rule 11 (argumentos -> MULTIPLY LOCALVAR .)


state 91

    (12) argumentos -> TWOSTARS LOCALVAR .

    RPARENTHESES    reduce using rule 12 (argumentos -> TWOSTARS LOCALVAR .)


state 92

    (54) if -> IF datosvarios operadores datosvarios cuerpo . END
    (55) if -> IF datosvarios operadores datosvarios cuerpo . else
    (56) else -> . ELSE cuerpo END

    END             shift and go to state 108
    ELSE            shift and go to state 110

    else                           shift and go to state 109

state 93

    (67) datosarray -> datosarray COMMA datosvarios .

    RBRACKET        reduce using rule 67 (datosarray -> datosarray COMMA datosvarios .)
    COMMA           reduce using rule 67 (datosarray -> datosarray COMMA datosvarios .)


state 94

    (35) hash -> LCURLYBRACKET elementoHash RCURLYBRACKET masopciones .

    $end            reduce using rule 35 (hash -> LCURLYBRACKET elementoHash RCURLYBRACKET masopciones .)
    END             reduce using rule 35 (hash -> LCURLYBRACKET elementoHash RCURLYBRACKET masopciones .)
    ELSE            reduce using rule 35 (hash -> LCURLYBRACKET elementoHash RCURLYBRACKET masopciones .)
    RETURN          reduce using rule 35 (hash -> LCURLYBRACKET elementoHash RCURLYBRACKET masopciones .)


state 95

    (36) elementoHash -> datos EQUAL GREATERTHAN . datos maselementos
    (28) datos -> . NUMBER
    (29) datos -> . FLOAT
    (30) datos -> . STRING

    NUMBER          shift and go to state 24
    FLOAT           shift and go to state 25
    STRING          shift and go to state 26

    datos                          shift and go to state 111

state 96

    (22) loop -> FOR LOCALVAR IN rango cuerpo END .

    $end            reduce using rule 22 (loop -> FOR LOCALVAR IN rango cuerpo END .)
    END             reduce using rule 22 (loop -> FOR LOCALVAR IN rango cuerpo END .)
    ELSE            reduce using rule 22 (loop -> FOR LOCALVAR IN rango cuerpo END .)
    RETURN          reduce using rule 22 (loop -> FOR LOCALVAR IN rango cuerpo END .)


state 97

    (23) declaracion -> tiposvariables EQUAL . datos
    (24) declaracion -> tiposvariables EQUAL . estructuras
    (28) datos -> . NUMBER
    (29) datos -> . FLOAT
    (30) datos -> . STRING
    (31) estructuras -> . hash
    (35) hash -> . LCURLYBRACKET elementoHash RCURLYBRACKET masopciones

    NUMBER          shift and go to state 24
    FLOAT           shift and go to state 25
    STRING          shift and go to state 26
    LCURLYBRACKET   shift and go to state 38

    datos                          shift and go to state 34
    estructuras                    shift and go to state 35
    hash                           shift and go to state 37

state 98

    (44) rango -> NUMBER RANGEINCLUSIVE NUMBER .

    FOR             reduce using rule 44 (rango -> NUMBER RANGEINCLUSIVE NUMBER .)
    PUTS            reduce using rule 44 (rango -> NUMBER RANGEINCLUSIVE NUMBER .)
    PRINT           reduce using rule 44 (rango -> NUMBER RANGEINCLUSIVE NUMBER .)
    VAR             reduce using rule 44 (rango -> NUMBER RANGEINCLUSIVE NUMBER .)
    LOCALVAR        reduce using rule 44 (rango -> NUMBER RANGEINCLUSIVE NUMBER .)
    CONSTANT        reduce using rule 44 (rango -> NUMBER RANGEINCLUSIVE NUMBER .)


state 99

    (45) rango -> NUMBER RANGEXCLUSIVE NUMBER .

    FOR             reduce using rule 45 (rango -> NUMBER RANGEXCLUSIVE NUMBER .)
    PUTS            reduce using rule 45 (rango -> NUMBER RANGEXCLUSIVE NUMBER .)
    PRINT           reduce using rule 45 (rango -> NUMBER RANGEXCLUSIVE NUMBER .)
    VAR             reduce using rule 45 (rango -> NUMBER RANGEXCLUSIVE NUMBER .)
    LOCALVAR        reduce using rule 45 (rango -> NUMBER RANGEXCLUSIVE NUMBER .)
    CONSTANT        reduce using rule 45 (rango -> NUMBER RANGEXCLUSIVE NUMBER .)


state 100

    (41) funcionesHash -> INCLUDE QUESTIONMARK LPARENTHESES . datos RPARENTHESES
    (28) datos -> . NUMBER
    (29) datos -> . FLOAT
    (30) datos -> . STRING

    NUMBER          shift and go to state 24
    FLOAT           shift and go to state 25
    STRING          shift and go to state 26

    datos                          shift and go to state 112

state 101

    (42) funcionesHash -> DELETE LPARENTHESES datos . RPARENTHESES

    RPARENTHESES    shift and go to state 113


state 102

    (13) argumentos -> LOCALVAR EQUAL LCURLYBRACKET . RCURLYBRACKET

    RCURLYBRACKET   shift and go to state 114


state 103

    (16) variosargumentos -> LOCALVAR EQUAL datos .
    (18) variosargumentos -> LOCALVAR EQUAL datos . masargumentos
    (19) masargumentos -> . COMMA variosargumentos

    RPARENTHESES    reduce using rule 16 (variosargumentos -> LOCALVAR EQUAL datos .)
    COMMA           shift and go to state 88

    masargumentos                  shift and go to state 115

state 104

    (14) argumentos -> LOCALVAR TWOPOINTS datos .

    RPARENTHESES    reduce using rule 14 (argumentos -> LOCALVAR TWOPOINTS datos .)


state 105

    (19) masargumentos -> COMMA variosargumentos .

    RPARENTHESES    reduce using rule 19 (masargumentos -> COMMA variosargumentos .)


state 106

    (15) variosargumentos -> LOCALVAR .
    (16) variosargumentos -> LOCALVAR . EQUAL datos
    (17) variosargumentos -> LOCALVAR . masargumentos
    (18) variosargumentos -> LOCALVAR . EQUAL datos masargumentos
    (19) masargumentos -> . COMMA variosargumentos

    RPARENTHESES    reduce using rule 15 (variosargumentos -> LOCALVAR .)
    EQUAL           shift and go to state 116
    COMMA           shift and go to state 88

    masargumentos                  shift and go to state 87

state 107

    (8) funcion -> DEF LOCALVAR LPARENTHESES argumentos RPARENTHESES cuerpo . END
    (9) funcion -> DEF LOCALVAR LPARENTHESES argumentos RPARENTHESES cuerpo . retornar END
    (20) retornar -> . RETURN LOCALVAR
    (21) retornar -> . RETURN datos

    END             shift and go to state 117
    RETURN          shift and go to state 119

    retornar                       shift and go to state 118

state 108

    (54) if -> IF datosvarios operadores datosvarios cuerpo END .

    $end            reduce using rule 54 (if -> IF datosvarios operadores datosvarios cuerpo END .)


state 109

    (55) if -> IF datosvarios operadores datosvarios cuerpo else .

    $end            reduce using rule 55 (if -> IF datosvarios operadores datosvarios cuerpo else .)


state 110

    (56) else -> ELSE . cuerpo END
    (32) cuerpo -> . declaracion
    (33) cuerpo -> . loop
    (34) cuerpo -> . impresion
    (23) declaracion -> . tiposvariables EQUAL datos
    (24) declaracion -> . tiposvariables EQUAL estructuras
    (22) loop -> . FOR LOCALVAR IN rango cuerpo END
    (46) impresion -> . PUTS datos
    (47) impresion -> . PRINT datos
    (48) impresion -> . PUTS LOCALVAR
    (49) impresion -> . PRINT LOCALVAR
    (50) impresion -> . PUTS masopciones
    (51) impresion -> . PRINT masopciones
    (25) tiposvariables -> . VAR
    (26) tiposvariables -> . LOCALVAR
    (27) tiposvariables -> . CONSTANT

    FOR             shift and go to state 10
    PUTS            shift and go to state 12
    PRINT           shift and go to state 13
    VAR             shift and go to state 16
    LOCALVAR        shift and go to state 11
    CONSTANT        shift and go to state 17

    cuerpo                         shift and go to state 120
    declaracion                    shift and go to state 75
    loop                           shift and go to state 76
    impresion                      shift and go to state 77
    tiposvariables                 shift and go to state 78

state 111

    (36) elementoHash -> datos EQUAL GREATERTHAN datos . maselementos
    (37) maselementos -> .
    (38) maselementos -> . COMMA elementoHash maselementos

  ! shift/reduce conflict for COMMA resolved as shift
    RCURLYBRACKET   reduce using rule 37 (maselementos -> .)
    COMMA           shift and go to state 122

  ! COMMA           [ reduce using rule 37 (maselementos -> .) ]

    maselementos                   shift and go to state 121

state 112

    (41) funcionesHash -> INCLUDE QUESTIONMARK LPARENTHESES datos . RPARENTHESES

    RPARENTHESES    shift and go to state 123


state 113

    (42) funcionesHash -> DELETE LPARENTHESES datos RPARENTHESES .

    LOCALVAR        reduce using rule 42 (funcionesHash -> DELETE LPARENTHESES datos RPARENTHESES .)
    $end            reduce using rule 42 (funcionesHash -> DELETE LPARENTHESES datos RPARENTHESES .)
    END             reduce using rule 42 (funcionesHash -> DELETE LPARENTHESES datos RPARENTHESES .)
    ELSE            reduce using rule 42 (funcionesHash -> DELETE LPARENTHESES datos RPARENTHESES .)
    RETURN          reduce using rule 42 (funcionesHash -> DELETE LPARENTHESES datos RPARENTHESES .)


state 114

    (13) argumentos -> LOCALVAR EQUAL LCURLYBRACKET RCURLYBRACKET .

    RPARENTHESES    reduce using rule 13 (argumentos -> LOCALVAR EQUAL LCURLYBRACKET RCURLYBRACKET .)


state 115

    (18) variosargumentos -> LOCALVAR EQUAL datos masargumentos .

    RPARENTHESES    reduce using rule 18 (variosargumentos -> LOCALVAR EQUAL datos masargumentos .)


state 116

    (16) variosargumentos -> LOCALVAR EQUAL . datos
    (18) variosargumentos -> LOCALVAR EQUAL . datos masargumentos
    (28) datos -> . NUMBER
    (29) datos -> . FLOAT
    (30) datos -> . STRING

    NUMBER          shift and go to state 24
    FLOAT           shift and go to state 25
    STRING          shift and go to state 26

    datos                          shift and go to state 103

state 117

    (8) funcion -> DEF LOCALVAR LPARENTHESES argumentos RPARENTHESES cuerpo END .

    $end            reduce using rule 8 (funcion -> DEF LOCALVAR LPARENTHESES argumentos RPARENTHESES cuerpo END .)


state 118

    (9) funcion -> DEF LOCALVAR LPARENTHESES argumentos RPARENTHESES cuerpo retornar . END

    END             shift and go to state 124


state 119

    (20) retornar -> RETURN . LOCALVAR
    (21) retornar -> RETURN . datos
    (28) datos -> . NUMBER
    (29) datos -> . FLOAT
    (30) datos -> . STRING

    LOCALVAR        shift and go to state 125
    NUMBER          shift and go to state 24
    FLOAT           shift and go to state 25
    STRING          shift and go to state 26

    datos                          shift and go to state 126

state 120

    (56) else -> ELSE cuerpo . END

    END             shift and go to state 127


state 121

    (36) elementoHash -> datos EQUAL GREATERTHAN datos maselementos .

    RCURLYBRACKET   reduce using rule 36 (elementoHash -> datos EQUAL GREATERTHAN datos maselementos .)
    COMMA           reduce using rule 36 (elementoHash -> datos EQUAL GREATERTHAN datos maselementos .)


state 122

    (38) maselementos -> COMMA . elementoHash maselementos
    (36) elementoHash -> . datos EQUAL GREATERTHAN datos maselementos
    (28) datos -> . NUMBER
    (29) datos -> . FLOAT
    (30) datos -> . STRING

    NUMBER          shift and go to state 24
    FLOAT           shift and go to state 25
    STRING          shift and go to state 26

    elementoHash                   shift and go to state 128
    datos                          shift and go to state 55

state 123

    (41) funcionesHash -> INCLUDE QUESTIONMARK LPARENTHESES datos RPARENTHESES .

    LOCALVAR        reduce using rule 41 (funcionesHash -> INCLUDE QUESTIONMARK LPARENTHESES datos RPARENTHESES .)
    $end            reduce using rule 41 (funcionesHash -> INCLUDE QUESTIONMARK LPARENTHESES datos RPARENTHESES .)
    END             reduce using rule 41 (funcionesHash -> INCLUDE QUESTIONMARK LPARENTHESES datos RPARENTHESES .)
    ELSE            reduce using rule 41 (funcionesHash -> INCLUDE QUESTIONMARK LPARENTHESES datos RPARENTHESES .)
    RETURN          reduce using rule 41 (funcionesHash -> INCLUDE QUESTIONMARK LPARENTHESES datos RPARENTHESES .)


state 124

    (9) funcion -> DEF LOCALVAR LPARENTHESES argumentos RPARENTHESES cuerpo retornar END .

    $end            reduce using rule 9 (funcion -> DEF LOCALVAR LPARENTHESES argumentos RPARENTHESES cuerpo retornar END .)


state 125

    (20) retornar -> RETURN LOCALVAR .

    END             reduce using rule 20 (retornar -> RETURN LOCALVAR .)


state 126

    (21) retornar -> RETURN datos .

    END             reduce using rule 21 (retornar -> RETURN datos .)


state 127

    (56) else -> ELSE cuerpo END .

    $end            reduce using rule 56 (else -> ELSE cuerpo END .)


state 128

    (38) maselementos -> COMMA elementoHash . maselementos
    (37) maselementos -> .
    (38) maselementos -> . COMMA elementoHash maselementos

  ! shift/reduce conflict for COMMA resolved as shift
    RCURLYBRACKET   reduce using rule 37 (maselementos -> .)
    COMMA           shift and go to state 122

  ! COMMA           [ reduce using rule 37 (maselementos -> .) ]

    maselementos                   shift and go to state 129

state 129

    (38) maselementos -> COMMA elementoHash maselementos .

    COMMA           reduce using rule 38 (maselementos -> COMMA elementoHash maselementos .)
    RCURLYBRACKET   reduce using rule 38 (maselementos -> COMMA elementoHash maselementos .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for COMMA in state 111 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 128 resolved as shift
