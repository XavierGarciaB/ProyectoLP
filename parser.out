Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ALERT
    AMPERSAND
    BARRA
    BEGIN
    BEGIN_M
    BOOLEAN
    CIRCUMFLEX
    COLON
    COMBCOMP
    COMMENT
    DOBLEQUOTE
    DOUBLEAMPERSAND
    DOUBLELESSTHAN
    DOUBLEPIPE
    ELSEIF
    END_M
    EXCLAMATION
    FALSE
    GETS
    NIL
    NOT
    OR
    QUESTIONMARKPERIOD
    SEMICOLON
    SINGLEQUOTE
    TRUE
    TWOGREATERTHAN
    UNTIL
    WAVE

Grammar

Rule 0     S' -> inicio
Rule 1     inicio -> cuerpo
Rule 2     inicio -> funcion
Rule 3     funcion -> DEF LOCALVAR LPARENTHESES argumentos RPARENTHESES cuerpo END
Rule 4     funcion -> DEF LOCALVAR LPARENTHESES argumentos RPARENTHESES cuerpo retornar END
Rule 5     argumentos -> variosargumentos
Rule 6     argumentos -> MULTIPLY LOCALVAR
Rule 7     argumentos -> TWOSTARS LOCALVAR
Rule 8     argumentos -> LOCALVAR EQUAL LCURLYBRACKET RCURLYBRACKET
Rule 9     argumentos -> LOCALVAR TWOPOINTS datos
Rule 10    variosargumentos -> LOCALVAR
Rule 11    variosargumentos -> LOCALVAR EQUAL datos
Rule 12    variosargumentos -> LOCALVAR masargumentos
Rule 13    variosargumentos -> LOCALVAR EQUAL datos masargumentos
Rule 14    masargumentos -> COMMA variosargumentos
Rule 15    retornar -> RETURN LOCALVAR
Rule 16    retornar -> RETURN datos
Rule 17    cuerpo -> declaracion cuerpo
Rule 18    cuerpo -> asignacion cuerpo
Rule 19    cuerpo -> loop cuerpo
Rule 20    cuerpo -> estructurasDatos cuerpo
Rule 21    cuerpo -> if cuerpo
Rule 22    cuerpo -> unless cuerpo
Rule 23    cuerpo -> impresion cuerpo
Rule 24    cuerpo -> operacionSet cuerpo
Rule 25    cuerpo -> operacionarray cuerpo
Rule 26    cuerpo -> operacionHash cuerpo
Rule 27    cuerpo -> <empty>
Rule 28    loop -> FOR LOCALVAR IN rango cuerpo END
Rule 29    declaracion -> tiposvariables EQUAL datos
Rule 30    declaracion -> tiposvariables EQUAL estructurasDatos
Rule 31    declaracion -> tiposvariables EQUAL expresion
Rule 32    declaracion -> tiposvariables EQUAL declaracion
Rule 33    asignacion -> LOCALVAR PLUSASSIGN datosAsignacion
Rule 34    asignacion -> LOCALVAR MINASSIGN datosAsignacion
Rule 35    asignacion -> LOCALVAR DIVASSIGN datosAsignacion
Rule 36    asignacion -> LOCALVAR TIMESASSIGN datosAsignacion
Rule 37    asignacion -> LOCALVAR MODASSIGN datosAsignacion
Rule 38    asignacion -> LOCALVAR EXPASSIGN datosAsignacion
Rule 39    datosAsignacion -> number
Rule 40    datosAsignacion -> LOCALVAR
Rule 41    tiposvariables -> VAR
Rule 42    tiposvariables -> LOCALVAR
Rule 43    tiposvariables -> CONSTANT
Rule 44    datos -> INTEGER
Rule 45    datos -> FLOAT
Rule 46    datos -> STRING
Rule 47    estructurasDatos -> hash
Rule 48    estructurasDatos -> array
Rule 49    estructurasDatos -> set
Rule 50    hash -> LCURLYBRACKET elementoHash RCURLYBRACKET
Rule 51    elementoHash -> datos EQUAL GREATERTHAN datos maselementos
Rule 52    elementoHash -> <empty>
Rule 53    maselementos -> <empty>
Rule 54    maselementos -> COMMA elementoHash maselementos
Rule 55    operacionHash -> hash LBRACKET datos RBRACKET
Rule 56    operacionHash -> hash LBRACKET datos RBRACKET EQUAL datos
Rule 57    operacionHash -> hash DOT INCLUDE QUESTIONMARK LPARENTHESES datos RPARENTHESES
Rule 58    operacionHash -> hash DOT DELETE LPARENTHESES datos RPARENTHESES
Rule 59    operacionHash -> hash DOT KEYS
Rule 60    rango -> INTEGER RANGEINCLUSIVE INTEGER
Rule 61    rango -> INTEGER RANGEXCLUSIVE INTEGER
Rule 62    impresion -> PUTS datos
Rule 63    impresion -> PUTS LOCALVAR
Rule 64    impresion -> PRINT datos
Rule 65    impresion -> PRINT LOCALVAR
Rule 66    number -> INTEGER
Rule 67    number -> FLOAT
Rule 68    expresion -> operacion
Rule 69    expresion -> LPARENTHESES operacion RPARENTHESES
Rule 70    expresion -> LPARENTHESES operacion RPARENTHESES masoperaciones
Rule 71    operacion -> number operador number
Rule 72    operacion -> operacion masoperaciones
Rule 73    masoperaciones -> operador expresion masoperaciones
Rule 74    masoperaciones -> operador number
Rule 75    masoperaciones -> operador expresion
Rule 76    operador -> PLUS
Rule 77    operador -> MINUS
Rule 78    operador -> MULTIPLY
Rule 79    operador -> DIVIDE
Rule 80    operador -> PERCENTAGE
Rule 81    array -> LBRACKET RBRACKET
Rule 82    array -> LBRACKET datosarray RBRACKET
Rule 83    datosvarios -> datos
Rule 84    datosvarios -> number
Rule 85    datosvarios -> VAR
Rule 86    datosvarios -> LOCALVAR
Rule 87    datosarray -> datosvarios
Rule 88    datosarray -> datosarray COMMA datosvarios
Rule 89    operacionarray -> array LBRACKET INTEGER RBRACKET
Rule 90    operacionarray -> array DOT TAKE LPARENTHESES INTEGER RPARENTHESES
Rule 91    operacionarray -> array DOT DROP LPARENTHESES INTEGER RPARENTHESES
Rule 92    operacionarray -> array DOT push maspush
Rule 93    push -> PUSH LPARENTHESES datosvarios RPARENTHESES
Rule 94    push -> <empty>
Rule 95    maspush -> <empty>
Rule 96    maspush -> DOT push maspush
Rule 97    operacionarray -> array DOT POP
Rule 98    operacionarray -> array DOT POP LPARENTHESES INTEGER RPARENTHESES
Rule 99    operacionarray -> array DOT DELETE LPARENTHESES INTEGER RPARENTHESES
Rule 100   operacionarray -> array DOT LENGTH LPARENTHESES RPARENTHESES
Rule 101   operacionarray -> array DOT EMPTY QUESTIONMARK
Rule 102   datoscompletos -> datosvarios
Rule 103   datoscompletos -> tiposvariables
Rule 104   if -> IF datoscompletos operadores datoscompletos cuerpo END
Rule 105   if -> IF datoscompletos operadores datoscompletos cuerpo else
Rule 106   else -> ELSE cuerpo END
Rule 107   operadores -> DOUBLEEQUAL
Rule 108   operadores -> TRIPLEEQUAL
Rule 109   operadores -> GREATERTHAN
Rule 110   operadores -> NOTEQUAL
Rule 111   operadores -> LESSTHAN
Rule 112   operadores -> GREQUAL
Rule 113   operadores -> LEQUAL
Rule 114   unless -> UNLESS condiciones cuerpo ELSE cuerpo END
Rule 115   condiciones -> tiposvariables operadores tiposvariables
Rule 116   condiciones -> datos operadores datos
Rule 117   condiciones -> tiposvariables operadores datos
Rule 118   condiciones -> datos operadores tiposvariables
Rule 119   set -> SET LBRACKET elementoSet RBRACKET
Rule 120   elementoSet -> <empty>
Rule 121   elementoSet -> datos
Rule 122   elementoSet -> datos otroElemento
Rule 123   otroElemento -> <empty>
Rule 124   otroElemento -> COMMA elementoSet otroElemento
Rule 125   operacionSet -> set DOT ADD LPARENTHESES datos RPARENTHESES
Rule 126   operacionSet -> set DOT ADD LPARENTHESES tiposvariables RPARENTHESES
Rule 127   operacionSet -> set DOT CLEAR
Rule 128   operacionSet -> set DOT DELETE LPARENTHESES datos RPARENTHESES
Rule 129   operacionSet -> set DOT DELETE LPARENTHESES tiposvariables RPARENTHESES

Terminals, with rules where they appear

ADD                  : 125 126
ALERT                : 
AMPERSAND            : 
BARRA                : 
BEGIN                : 
BEGIN_M              : 
BOOLEAN              : 
CIRCUMFLEX           : 
CLEAR                : 127
COLON                : 
COMBCOMP             : 
COMMA                : 14 54 88 124
COMMENT              : 
CONSTANT             : 43
DEF                  : 3 4
DELETE               : 58 99 128 129
DIVASSIGN            : 35
DIVIDE               : 79
DOBLEQUOTE           : 
DOT                  : 57 58 59 90 91 92 96 97 98 99 100 101 125 126 127 128 129
DOUBLEAMPERSAND      : 
DOUBLEEQUAL          : 107
DOUBLELESSTHAN       : 
DOUBLEPIPE           : 
DROP                 : 91
ELSE                 : 106 114
ELSEIF               : 
EMPTY                : 101
END                  : 3 4 28 104 106 114
END_M                : 
EQUAL                : 8 11 13 29 30 31 32 51 56
EXCLAMATION          : 
EXPASSIGN            : 38
FALSE                : 
FLOAT                : 45 67
FOR                  : 28
GETS                 : 
GREATERTHAN          : 51 109
GREQUAL              : 112
IF                   : 104 105
IN                   : 28
INCLUDE              : 57
INTEGER              : 44 60 60 61 61 66 89 90 91 98 99
KEYS                 : 59
LBRACKET             : 55 56 81 82 89 119
LCURLYBRACKET        : 8 50
LENGTH               : 100
LEQUAL               : 113
LESSTHAN             : 111
LOCALVAR             : 3 4 6 7 8 9 10 11 12 13 15 28 33 34 35 36 37 38 40 42 63 65 86
LPARENTHESES         : 3 4 57 58 69 70 90 91 93 98 99 100 125 126 128 129
MINASSIGN            : 34
MINUS                : 77
MODASSIGN            : 37
MULTIPLY             : 6 78
NIL                  : 
NOT                  : 
NOTEQUAL             : 110
OR                   : 
PERCENTAGE           : 80
PLUS                 : 76
PLUSASSIGN           : 33
POP                  : 97 98
PRINT                : 64 65
PUSH                 : 93
PUTS                 : 62 63
QUESTIONMARK         : 57 101
QUESTIONMARKPERIOD   : 
RANGEINCLUSIVE       : 60
RANGEXCLUSIVE        : 61
RBRACKET             : 55 56 81 82 89 119
RCURLYBRACKET        : 8 50
RETURN               : 15 16
RPARENTHESES         : 3 4 57 58 69 70 90 91 93 98 99 100 125 126 128 129
SEMICOLON            : 
SET                  : 119
SINGLEQUOTE          : 
STRING               : 46
TAKE                 : 90
TIMESASSIGN          : 36
TRIPLEEQUAL          : 108
TRUE                 : 
TWOGREATERTHAN       : 
TWOPOINTS            : 9
TWOSTARS             : 7
UNLESS               : 114
UNTIL                : 
VAR                  : 41 85
WAVE                 : 
error                : 

Nonterminals, with rules where they appear

argumentos           : 3 4
array                : 48 89 90 91 92 97 98 99 100 101
asignacion           : 18
condiciones          : 114
cuerpo               : 1 3 4 17 18 19 20 21 22 23 24 25 26 28 104 105 106 114 114
datos                : 9 11 13 16 29 51 51 55 56 56 57 58 62 64 83 116 116 117 118 121 122 125 128
datosAsignacion      : 33 34 35 36 37 38
datosarray           : 82 88
datoscompletos       : 104 104 105 105
datosvarios          : 87 88 93 102
declaracion          : 17 32
elementoHash         : 50 54
elementoSet          : 119 124
else                 : 105
estructurasDatos     : 20 30
expresion            : 31 73 75
funcion              : 2
hash                 : 47 55 56 57 58 59
if                   : 21
impresion            : 23
inicio               : 0
loop                 : 19
masargumentos        : 12 13
maselementos         : 51 54
masoperaciones       : 70 72 73
maspush              : 92 96
number               : 39 71 71 74 84
operacion            : 68 69 70 72
operacionHash        : 26
operacionSet         : 24
operacionarray       : 25
operador             : 71 73 74 75
operadores           : 104 105 115 116 117 118
otroElemento         : 122 124
push                 : 92 96
rango                : 28
retornar             : 4
set                  : 49 125 126 127 128 129
tiposvariables       : 29 30 31 32 103 115 115 117 118 126 129
unless               : 22
variosargumentos     : 5 14

Parsing method: LALR

state 0

    (0) S' -> . inicio
    (1) inicio -> . cuerpo
    (2) inicio -> . funcion
    (17) cuerpo -> . declaracion cuerpo
    (18) cuerpo -> . asignacion cuerpo
    (19) cuerpo -> . loop cuerpo
    (20) cuerpo -> . estructurasDatos cuerpo
    (21) cuerpo -> . if cuerpo
    (22) cuerpo -> . unless cuerpo
    (23) cuerpo -> . impresion cuerpo
    (24) cuerpo -> . operacionSet cuerpo
    (25) cuerpo -> . operacionarray cuerpo
    (26) cuerpo -> . operacionHash cuerpo
    (27) cuerpo -> .
    (3) funcion -> . DEF LOCALVAR LPARENTHESES argumentos RPARENTHESES cuerpo END
    (4) funcion -> . DEF LOCALVAR LPARENTHESES argumentos RPARENTHESES cuerpo retornar END
    (29) declaracion -> . tiposvariables EQUAL datos
    (30) declaracion -> . tiposvariables EQUAL estructurasDatos
    (31) declaracion -> . tiposvariables EQUAL expresion
    (32) declaracion -> . tiposvariables EQUAL declaracion
    (33) asignacion -> . LOCALVAR PLUSASSIGN datosAsignacion
    (34) asignacion -> . LOCALVAR MINASSIGN datosAsignacion
    (35) asignacion -> . LOCALVAR DIVASSIGN datosAsignacion
    (36) asignacion -> . LOCALVAR TIMESASSIGN datosAsignacion
    (37) asignacion -> . LOCALVAR MODASSIGN datosAsignacion
    (38) asignacion -> . LOCALVAR EXPASSIGN datosAsignacion
    (28) loop -> . FOR LOCALVAR IN rango cuerpo END
    (47) estructurasDatos -> . hash
    (48) estructurasDatos -> . array
    (49) estructurasDatos -> . set
    (104) if -> . IF datoscompletos operadores datoscompletos cuerpo END
    (105) if -> . IF datoscompletos operadores datoscompletos cuerpo else
    (114) unless -> . UNLESS condiciones cuerpo ELSE cuerpo END
    (62) impresion -> . PUTS datos
    (63) impresion -> . PUTS LOCALVAR
    (64) impresion -> . PRINT datos
    (65) impresion -> . PRINT LOCALVAR
    (125) operacionSet -> . set DOT ADD LPARENTHESES datos RPARENTHESES
    (126) operacionSet -> . set DOT ADD LPARENTHESES tiposvariables RPARENTHESES
    (127) operacionSet -> . set DOT CLEAR
    (128) operacionSet -> . set DOT DELETE LPARENTHESES datos RPARENTHESES
    (129) operacionSet -> . set DOT DELETE LPARENTHESES tiposvariables RPARENTHESES
    (89) operacionarray -> . array LBRACKET INTEGER RBRACKET
    (90) operacionarray -> . array DOT TAKE LPARENTHESES INTEGER RPARENTHESES
    (91) operacionarray -> . array DOT DROP LPARENTHESES INTEGER RPARENTHESES
    (92) operacionarray -> . array DOT push maspush
    (97) operacionarray -> . array DOT POP
    (98) operacionarray -> . array DOT POP LPARENTHESES INTEGER RPARENTHESES
    (99) operacionarray -> . array DOT DELETE LPARENTHESES INTEGER RPARENTHESES
    (100) operacionarray -> . array DOT LENGTH LPARENTHESES RPARENTHESES
    (101) operacionarray -> . array DOT EMPTY QUESTIONMARK
    (55) operacionHash -> . hash LBRACKET datos RBRACKET
    (56) operacionHash -> . hash LBRACKET datos RBRACKET EQUAL datos
    (57) operacionHash -> . hash DOT INCLUDE QUESTIONMARK LPARENTHESES datos RPARENTHESES
    (58) operacionHash -> . hash DOT DELETE LPARENTHESES datos RPARENTHESES
    (59) operacionHash -> . hash DOT KEYS
    (41) tiposvariables -> . VAR
    (42) tiposvariables -> . LOCALVAR
    (43) tiposvariables -> . CONSTANT
    (50) hash -> . LCURLYBRACKET elementoHash RCURLYBRACKET
    (81) array -> . LBRACKET RBRACKET
    (82) array -> . LBRACKET datosarray RBRACKET
    (119) set -> . SET LBRACKET elementoSet RBRACKET

    $end            reduce using rule 27 (cuerpo -> .)
    DEF             shift and go to state 14
    LOCALVAR        shift and go to state 15
    FOR             shift and go to state 17
    IF              shift and go to state 21
    UNLESS          shift and go to state 22
    PUTS            shift and go to state 23
    PRINT           shift and go to state 24
    VAR             shift and go to state 26
    CONSTANT        shift and go to state 27
    LCURLYBRACKET   shift and go to state 28
    LBRACKET        shift and go to state 25
    SET             shift and go to state 29

    inicio                         shift and go to state 1
    cuerpo                         shift and go to state 2
    funcion                        shift and go to state 3
    declaracion                    shift and go to state 4
    asignacion                     shift and go to state 5
    loop                           shift and go to state 6
    estructurasDatos               shift and go to state 7
    if                             shift and go to state 8
    unless                         shift and go to state 9
    impresion                      shift and go to state 10
    operacionSet                   shift and go to state 11
    operacionarray                 shift and go to state 12
    operacionHash                  shift and go to state 13
    tiposvariables                 shift and go to state 16
    hash                           shift and go to state 18
    array                          shift and go to state 19
    set                            shift and go to state 20

state 1

    (0) S' -> inicio .



state 2

    (1) inicio -> cuerpo .

    $end            reduce using rule 1 (inicio -> cuerpo .)


state 3

    (2) inicio -> funcion .

    $end            reduce using rule 2 (inicio -> funcion .)


state 4

    (17) cuerpo -> declaracion . cuerpo
    (17) cuerpo -> . declaracion cuerpo
    (18) cuerpo -> . asignacion cuerpo
    (19) cuerpo -> . loop cuerpo
    (20) cuerpo -> . estructurasDatos cuerpo
    (21) cuerpo -> . if cuerpo
    (22) cuerpo -> . unless cuerpo
    (23) cuerpo -> . impresion cuerpo
    (24) cuerpo -> . operacionSet cuerpo
    (25) cuerpo -> . operacionarray cuerpo
    (26) cuerpo -> . operacionHash cuerpo
    (27) cuerpo -> .
    (29) declaracion -> . tiposvariables EQUAL datos
    (30) declaracion -> . tiposvariables EQUAL estructurasDatos
    (31) declaracion -> . tiposvariables EQUAL expresion
    (32) declaracion -> . tiposvariables EQUAL declaracion
    (33) asignacion -> . LOCALVAR PLUSASSIGN datosAsignacion
    (34) asignacion -> . LOCALVAR MINASSIGN datosAsignacion
    (35) asignacion -> . LOCALVAR DIVASSIGN datosAsignacion
    (36) asignacion -> . LOCALVAR TIMESASSIGN datosAsignacion
    (37) asignacion -> . LOCALVAR MODASSIGN datosAsignacion
    (38) asignacion -> . LOCALVAR EXPASSIGN datosAsignacion
    (28) loop -> . FOR LOCALVAR IN rango cuerpo END
    (47) estructurasDatos -> . hash
    (48) estructurasDatos -> . array
    (49) estructurasDatos -> . set
    (104) if -> . IF datoscompletos operadores datoscompletos cuerpo END
    (105) if -> . IF datoscompletos operadores datoscompletos cuerpo else
    (114) unless -> . UNLESS condiciones cuerpo ELSE cuerpo END
    (62) impresion -> . PUTS datos
    (63) impresion -> . PUTS LOCALVAR
    (64) impresion -> . PRINT datos
    (65) impresion -> . PRINT LOCALVAR
    (125) operacionSet -> . set DOT ADD LPARENTHESES datos RPARENTHESES
    (126) operacionSet -> . set DOT ADD LPARENTHESES tiposvariables RPARENTHESES
    (127) operacionSet -> . set DOT CLEAR
    (128) operacionSet -> . set DOT DELETE LPARENTHESES datos RPARENTHESES
    (129) operacionSet -> . set DOT DELETE LPARENTHESES tiposvariables RPARENTHESES
    (89) operacionarray -> . array LBRACKET INTEGER RBRACKET
    (90) operacionarray -> . array DOT TAKE LPARENTHESES INTEGER RPARENTHESES
    (91) operacionarray -> . array DOT DROP LPARENTHESES INTEGER RPARENTHESES
    (92) operacionarray -> . array DOT push maspush
    (97) operacionarray -> . array DOT POP
    (98) operacionarray -> . array DOT POP LPARENTHESES INTEGER RPARENTHESES
    (99) operacionarray -> . array DOT DELETE LPARENTHESES INTEGER RPARENTHESES
    (100) operacionarray -> . array DOT LENGTH LPARENTHESES RPARENTHESES
    (101) operacionarray -> . array DOT EMPTY QUESTIONMARK
    (55) operacionHash -> . hash LBRACKET datos RBRACKET
    (56) operacionHash -> . hash LBRACKET datos RBRACKET EQUAL datos
    (57) operacionHash -> . hash DOT INCLUDE QUESTIONMARK LPARENTHESES datos RPARENTHESES
    (58) operacionHash -> . hash DOT DELETE LPARENTHESES datos RPARENTHESES
    (59) operacionHash -> . hash DOT KEYS
    (41) tiposvariables -> . VAR
    (42) tiposvariables -> . LOCALVAR
    (43) tiposvariables -> . CONSTANT
    (50) hash -> . LCURLYBRACKET elementoHash RCURLYBRACKET
    (81) array -> . LBRACKET RBRACKET
    (82) array -> . LBRACKET datosarray RBRACKET
    (119) set -> . SET LBRACKET elementoSet RBRACKET

    $end            reduce using rule 27 (cuerpo -> .)
    ELSE            reduce using rule 27 (cuerpo -> .)
    END             reduce using rule 27 (cuerpo -> .)
    RETURN          reduce using rule 27 (cuerpo -> .)
    LOCALVAR        shift and go to state 15
    FOR             shift and go to state 17
    IF              shift and go to state 21
    UNLESS          shift and go to state 22
    PUTS            shift and go to state 23
    PRINT           shift and go to state 24
    VAR             shift and go to state 26
    CONSTANT        shift and go to state 27
    LCURLYBRACKET   shift and go to state 28
    LBRACKET        shift and go to state 25
    SET             shift and go to state 29

    declaracion                    shift and go to state 4
    cuerpo                         shift and go to state 30
    asignacion                     shift and go to state 5
    loop                           shift and go to state 6
    estructurasDatos               shift and go to state 7
    if                             shift and go to state 8
    unless                         shift and go to state 9
    impresion                      shift and go to state 10
    operacionSet                   shift and go to state 11
    operacionarray                 shift and go to state 12
    operacionHash                  shift and go to state 13
    tiposvariables                 shift and go to state 16
    hash                           shift and go to state 18
    array                          shift and go to state 19
    set                            shift and go to state 20

state 5

    (18) cuerpo -> asignacion . cuerpo
    (17) cuerpo -> . declaracion cuerpo
    (18) cuerpo -> . asignacion cuerpo
    (19) cuerpo -> . loop cuerpo
    (20) cuerpo -> . estructurasDatos cuerpo
    (21) cuerpo -> . if cuerpo
    (22) cuerpo -> . unless cuerpo
    (23) cuerpo -> . impresion cuerpo
    (24) cuerpo -> . operacionSet cuerpo
    (25) cuerpo -> . operacionarray cuerpo
    (26) cuerpo -> . operacionHash cuerpo
    (27) cuerpo -> .
    (29) declaracion -> . tiposvariables EQUAL datos
    (30) declaracion -> . tiposvariables EQUAL estructurasDatos
    (31) declaracion -> . tiposvariables EQUAL expresion
    (32) declaracion -> . tiposvariables EQUAL declaracion
    (33) asignacion -> . LOCALVAR PLUSASSIGN datosAsignacion
    (34) asignacion -> . LOCALVAR MINASSIGN datosAsignacion
    (35) asignacion -> . LOCALVAR DIVASSIGN datosAsignacion
    (36) asignacion -> . LOCALVAR TIMESASSIGN datosAsignacion
    (37) asignacion -> . LOCALVAR MODASSIGN datosAsignacion
    (38) asignacion -> . LOCALVAR EXPASSIGN datosAsignacion
    (28) loop -> . FOR LOCALVAR IN rango cuerpo END
    (47) estructurasDatos -> . hash
    (48) estructurasDatos -> . array
    (49) estructurasDatos -> . set
    (104) if -> . IF datoscompletos operadores datoscompletos cuerpo END
    (105) if -> . IF datoscompletos operadores datoscompletos cuerpo else
    (114) unless -> . UNLESS condiciones cuerpo ELSE cuerpo END
    (62) impresion -> . PUTS datos
    (63) impresion -> . PUTS LOCALVAR
    (64) impresion -> . PRINT datos
    (65) impresion -> . PRINT LOCALVAR
    (125) operacionSet -> . set DOT ADD LPARENTHESES datos RPARENTHESES
    (126) operacionSet -> . set DOT ADD LPARENTHESES tiposvariables RPARENTHESES
    (127) operacionSet -> . set DOT CLEAR
    (128) operacionSet -> . set DOT DELETE LPARENTHESES datos RPARENTHESES
    (129) operacionSet -> . set DOT DELETE LPARENTHESES tiposvariables RPARENTHESES
    (89) operacionarray -> . array LBRACKET INTEGER RBRACKET
    (90) operacionarray -> . array DOT TAKE LPARENTHESES INTEGER RPARENTHESES
    (91) operacionarray -> . array DOT DROP LPARENTHESES INTEGER RPARENTHESES
    (92) operacionarray -> . array DOT push maspush
    (97) operacionarray -> . array DOT POP
    (98) operacionarray -> . array DOT POP LPARENTHESES INTEGER RPARENTHESES
    (99) operacionarray -> . array DOT DELETE LPARENTHESES INTEGER RPARENTHESES
    (100) operacionarray -> . array DOT LENGTH LPARENTHESES RPARENTHESES
    (101) operacionarray -> . array DOT EMPTY QUESTIONMARK
    (55) operacionHash -> . hash LBRACKET datos RBRACKET
    (56) operacionHash -> . hash LBRACKET datos RBRACKET EQUAL datos
    (57) operacionHash -> . hash DOT INCLUDE QUESTIONMARK LPARENTHESES datos RPARENTHESES
    (58) operacionHash -> . hash DOT DELETE LPARENTHESES datos RPARENTHESES
    (59) operacionHash -> . hash DOT KEYS
    (41) tiposvariables -> . VAR
    (42) tiposvariables -> . LOCALVAR
    (43) tiposvariables -> . CONSTANT
    (50) hash -> . LCURLYBRACKET elementoHash RCURLYBRACKET
    (81) array -> . LBRACKET RBRACKET
    (82) array -> . LBRACKET datosarray RBRACKET
    (119) set -> . SET LBRACKET elementoSet RBRACKET

    $end            reduce using rule 27 (cuerpo -> .)
    ELSE            reduce using rule 27 (cuerpo -> .)
    END             reduce using rule 27 (cuerpo -> .)
    RETURN          reduce using rule 27 (cuerpo -> .)
    LOCALVAR        shift and go to state 15
    FOR             shift and go to state 17
    IF              shift and go to state 21
    UNLESS          shift and go to state 22
    PUTS            shift and go to state 23
    PRINT           shift and go to state 24
    VAR             shift and go to state 26
    CONSTANT        shift and go to state 27
    LCURLYBRACKET   shift and go to state 28
    LBRACKET        shift and go to state 25
    SET             shift and go to state 29

    asignacion                     shift and go to state 5
    cuerpo                         shift and go to state 31
    declaracion                    shift and go to state 4
    loop                           shift and go to state 6
    estructurasDatos               shift and go to state 7
    if                             shift and go to state 8
    unless                         shift and go to state 9
    impresion                      shift and go to state 10
    operacionSet                   shift and go to state 11
    operacionarray                 shift and go to state 12
    operacionHash                  shift and go to state 13
    tiposvariables                 shift and go to state 16
    hash                           shift and go to state 18
    array                          shift and go to state 19
    set                            shift and go to state 20

state 6

    (19) cuerpo -> loop . cuerpo
    (17) cuerpo -> . declaracion cuerpo
    (18) cuerpo -> . asignacion cuerpo
    (19) cuerpo -> . loop cuerpo
    (20) cuerpo -> . estructurasDatos cuerpo
    (21) cuerpo -> . if cuerpo
    (22) cuerpo -> . unless cuerpo
    (23) cuerpo -> . impresion cuerpo
    (24) cuerpo -> . operacionSet cuerpo
    (25) cuerpo -> . operacionarray cuerpo
    (26) cuerpo -> . operacionHash cuerpo
    (27) cuerpo -> .
    (29) declaracion -> . tiposvariables EQUAL datos
    (30) declaracion -> . tiposvariables EQUAL estructurasDatos
    (31) declaracion -> . tiposvariables EQUAL expresion
    (32) declaracion -> . tiposvariables EQUAL declaracion
    (33) asignacion -> . LOCALVAR PLUSASSIGN datosAsignacion
    (34) asignacion -> . LOCALVAR MINASSIGN datosAsignacion
    (35) asignacion -> . LOCALVAR DIVASSIGN datosAsignacion
    (36) asignacion -> . LOCALVAR TIMESASSIGN datosAsignacion
    (37) asignacion -> . LOCALVAR MODASSIGN datosAsignacion
    (38) asignacion -> . LOCALVAR EXPASSIGN datosAsignacion
    (28) loop -> . FOR LOCALVAR IN rango cuerpo END
    (47) estructurasDatos -> . hash
    (48) estructurasDatos -> . array
    (49) estructurasDatos -> . set
    (104) if -> . IF datoscompletos operadores datoscompletos cuerpo END
    (105) if -> . IF datoscompletos operadores datoscompletos cuerpo else
    (114) unless -> . UNLESS condiciones cuerpo ELSE cuerpo END
    (62) impresion -> . PUTS datos
    (63) impresion -> . PUTS LOCALVAR
    (64) impresion -> . PRINT datos
    (65) impresion -> . PRINT LOCALVAR
    (125) operacionSet -> . set DOT ADD LPARENTHESES datos RPARENTHESES
    (126) operacionSet -> . set DOT ADD LPARENTHESES tiposvariables RPARENTHESES
    (127) operacionSet -> . set DOT CLEAR
    (128) operacionSet -> . set DOT DELETE LPARENTHESES datos RPARENTHESES
    (129) operacionSet -> . set DOT DELETE LPARENTHESES tiposvariables RPARENTHESES
    (89) operacionarray -> . array LBRACKET INTEGER RBRACKET
    (90) operacionarray -> . array DOT TAKE LPARENTHESES INTEGER RPARENTHESES
    (91) operacionarray -> . array DOT DROP LPARENTHESES INTEGER RPARENTHESES
    (92) operacionarray -> . array DOT push maspush
    (97) operacionarray -> . array DOT POP
    (98) operacionarray -> . array DOT POP LPARENTHESES INTEGER RPARENTHESES
    (99) operacionarray -> . array DOT DELETE LPARENTHESES INTEGER RPARENTHESES
    (100) operacionarray -> . array DOT LENGTH LPARENTHESES RPARENTHESES
    (101) operacionarray -> . array DOT EMPTY QUESTIONMARK
    (55) operacionHash -> . hash LBRACKET datos RBRACKET
    (56) operacionHash -> . hash LBRACKET datos RBRACKET EQUAL datos
    (57) operacionHash -> . hash DOT INCLUDE QUESTIONMARK LPARENTHESES datos RPARENTHESES
    (58) operacionHash -> . hash DOT DELETE LPARENTHESES datos RPARENTHESES
    (59) operacionHash -> . hash DOT KEYS
    (41) tiposvariables -> . VAR
    (42) tiposvariables -> . LOCALVAR
    (43) tiposvariables -> . CONSTANT
    (50) hash -> . LCURLYBRACKET elementoHash RCURLYBRACKET
    (81) array -> . LBRACKET RBRACKET
    (82) array -> . LBRACKET datosarray RBRACKET
    (119) set -> . SET LBRACKET elementoSet RBRACKET

    $end            reduce using rule 27 (cuerpo -> .)
    ELSE            reduce using rule 27 (cuerpo -> .)
    END             reduce using rule 27 (cuerpo -> .)
    RETURN          reduce using rule 27 (cuerpo -> .)
    LOCALVAR        shift and go to state 15
    FOR             shift and go to state 17
    IF              shift and go to state 21
    UNLESS          shift and go to state 22
    PUTS            shift and go to state 23
    PRINT           shift and go to state 24
    VAR             shift and go to state 26
    CONSTANT        shift and go to state 27
    LCURLYBRACKET   shift and go to state 28
    LBRACKET        shift and go to state 25
    SET             shift and go to state 29

    loop                           shift and go to state 6
    cuerpo                         shift and go to state 32
    declaracion                    shift and go to state 4
    asignacion                     shift and go to state 5
    estructurasDatos               shift and go to state 7
    if                             shift and go to state 8
    unless                         shift and go to state 9
    impresion                      shift and go to state 10
    operacionSet                   shift and go to state 11
    operacionarray                 shift and go to state 12
    operacionHash                  shift and go to state 13
    tiposvariables                 shift and go to state 16
    hash                           shift and go to state 18
    array                          shift and go to state 19
    set                            shift and go to state 20

state 7

    (20) cuerpo -> estructurasDatos . cuerpo
    (17) cuerpo -> . declaracion cuerpo
    (18) cuerpo -> . asignacion cuerpo
    (19) cuerpo -> . loop cuerpo
    (20) cuerpo -> . estructurasDatos cuerpo
    (21) cuerpo -> . if cuerpo
    (22) cuerpo -> . unless cuerpo
    (23) cuerpo -> . impresion cuerpo
    (24) cuerpo -> . operacionSet cuerpo
    (25) cuerpo -> . operacionarray cuerpo
    (26) cuerpo -> . operacionHash cuerpo
    (27) cuerpo -> .
    (29) declaracion -> . tiposvariables EQUAL datos
    (30) declaracion -> . tiposvariables EQUAL estructurasDatos
    (31) declaracion -> . tiposvariables EQUAL expresion
    (32) declaracion -> . tiposvariables EQUAL declaracion
    (33) asignacion -> . LOCALVAR PLUSASSIGN datosAsignacion
    (34) asignacion -> . LOCALVAR MINASSIGN datosAsignacion
    (35) asignacion -> . LOCALVAR DIVASSIGN datosAsignacion
    (36) asignacion -> . LOCALVAR TIMESASSIGN datosAsignacion
    (37) asignacion -> . LOCALVAR MODASSIGN datosAsignacion
    (38) asignacion -> . LOCALVAR EXPASSIGN datosAsignacion
    (28) loop -> . FOR LOCALVAR IN rango cuerpo END
    (47) estructurasDatos -> . hash
    (48) estructurasDatos -> . array
    (49) estructurasDatos -> . set
    (104) if -> . IF datoscompletos operadores datoscompletos cuerpo END
    (105) if -> . IF datoscompletos operadores datoscompletos cuerpo else
    (114) unless -> . UNLESS condiciones cuerpo ELSE cuerpo END
    (62) impresion -> . PUTS datos
    (63) impresion -> . PUTS LOCALVAR
    (64) impresion -> . PRINT datos
    (65) impresion -> . PRINT LOCALVAR
    (125) operacionSet -> . set DOT ADD LPARENTHESES datos RPARENTHESES
    (126) operacionSet -> . set DOT ADD LPARENTHESES tiposvariables RPARENTHESES
    (127) operacionSet -> . set DOT CLEAR
    (128) operacionSet -> . set DOT DELETE LPARENTHESES datos RPARENTHESES
    (129) operacionSet -> . set DOT DELETE LPARENTHESES tiposvariables RPARENTHESES
    (89) operacionarray -> . array LBRACKET INTEGER RBRACKET
    (90) operacionarray -> . array DOT TAKE LPARENTHESES INTEGER RPARENTHESES
    (91) operacionarray -> . array DOT DROP LPARENTHESES INTEGER RPARENTHESES
    (92) operacionarray -> . array DOT push maspush
    (97) operacionarray -> . array DOT POP
    (98) operacionarray -> . array DOT POP LPARENTHESES INTEGER RPARENTHESES
    (99) operacionarray -> . array DOT DELETE LPARENTHESES INTEGER RPARENTHESES
    (100) operacionarray -> . array DOT LENGTH LPARENTHESES RPARENTHESES
    (101) operacionarray -> . array DOT EMPTY QUESTIONMARK
    (55) operacionHash -> . hash LBRACKET datos RBRACKET
    (56) operacionHash -> . hash LBRACKET datos RBRACKET EQUAL datos
    (57) operacionHash -> . hash DOT INCLUDE QUESTIONMARK LPARENTHESES datos RPARENTHESES
    (58) operacionHash -> . hash DOT DELETE LPARENTHESES datos RPARENTHESES
    (59) operacionHash -> . hash DOT KEYS
    (41) tiposvariables -> . VAR
    (42) tiposvariables -> . LOCALVAR
    (43) tiposvariables -> . CONSTANT
    (50) hash -> . LCURLYBRACKET elementoHash RCURLYBRACKET
    (81) array -> . LBRACKET RBRACKET
    (82) array -> . LBRACKET datosarray RBRACKET
    (119) set -> . SET LBRACKET elementoSet RBRACKET

    $end            reduce using rule 27 (cuerpo -> .)
    ELSE            reduce using rule 27 (cuerpo -> .)
    END             reduce using rule 27 (cuerpo -> .)
    RETURN          reduce using rule 27 (cuerpo -> .)
    LOCALVAR        shift and go to state 15
    FOR             shift and go to state 17
    IF              shift and go to state 21
    UNLESS          shift and go to state 22
    PUTS            shift and go to state 23
    PRINT           shift and go to state 24
    VAR             shift and go to state 26
    CONSTANT        shift and go to state 27
    LCURLYBRACKET   shift and go to state 28
    LBRACKET        shift and go to state 25
    SET             shift and go to state 29

    estructurasDatos               shift and go to state 7
    cuerpo                         shift and go to state 33
    declaracion                    shift and go to state 4
    asignacion                     shift and go to state 5
    loop                           shift and go to state 6
    if                             shift and go to state 8
    unless                         shift and go to state 9
    impresion                      shift and go to state 10
    operacionSet                   shift and go to state 11
    operacionarray                 shift and go to state 12
    operacionHash                  shift and go to state 13
    tiposvariables                 shift and go to state 16
    hash                           shift and go to state 18
    array                          shift and go to state 19
    set                            shift and go to state 20

state 8

    (21) cuerpo -> if . cuerpo
    (17) cuerpo -> . declaracion cuerpo
    (18) cuerpo -> . asignacion cuerpo
    (19) cuerpo -> . loop cuerpo
    (20) cuerpo -> . estructurasDatos cuerpo
    (21) cuerpo -> . if cuerpo
    (22) cuerpo -> . unless cuerpo
    (23) cuerpo -> . impresion cuerpo
    (24) cuerpo -> . operacionSet cuerpo
    (25) cuerpo -> . operacionarray cuerpo
    (26) cuerpo -> . operacionHash cuerpo
    (27) cuerpo -> .
    (29) declaracion -> . tiposvariables EQUAL datos
    (30) declaracion -> . tiposvariables EQUAL estructurasDatos
    (31) declaracion -> . tiposvariables EQUAL expresion
    (32) declaracion -> . tiposvariables EQUAL declaracion
    (33) asignacion -> . LOCALVAR PLUSASSIGN datosAsignacion
    (34) asignacion -> . LOCALVAR MINASSIGN datosAsignacion
    (35) asignacion -> . LOCALVAR DIVASSIGN datosAsignacion
    (36) asignacion -> . LOCALVAR TIMESASSIGN datosAsignacion
    (37) asignacion -> . LOCALVAR MODASSIGN datosAsignacion
    (38) asignacion -> . LOCALVAR EXPASSIGN datosAsignacion
    (28) loop -> . FOR LOCALVAR IN rango cuerpo END
    (47) estructurasDatos -> . hash
    (48) estructurasDatos -> . array
    (49) estructurasDatos -> . set
    (104) if -> . IF datoscompletos operadores datoscompletos cuerpo END
    (105) if -> . IF datoscompletos operadores datoscompletos cuerpo else
    (114) unless -> . UNLESS condiciones cuerpo ELSE cuerpo END
    (62) impresion -> . PUTS datos
    (63) impresion -> . PUTS LOCALVAR
    (64) impresion -> . PRINT datos
    (65) impresion -> . PRINT LOCALVAR
    (125) operacionSet -> . set DOT ADD LPARENTHESES datos RPARENTHESES
    (126) operacionSet -> . set DOT ADD LPARENTHESES tiposvariables RPARENTHESES
    (127) operacionSet -> . set DOT CLEAR
    (128) operacionSet -> . set DOT DELETE LPARENTHESES datos RPARENTHESES
    (129) operacionSet -> . set DOT DELETE LPARENTHESES tiposvariables RPARENTHESES
    (89) operacionarray -> . array LBRACKET INTEGER RBRACKET
    (90) operacionarray -> . array DOT TAKE LPARENTHESES INTEGER RPARENTHESES
    (91) operacionarray -> . array DOT DROP LPARENTHESES INTEGER RPARENTHESES
    (92) operacionarray -> . array DOT push maspush
    (97) operacionarray -> . array DOT POP
    (98) operacionarray -> . array DOT POP LPARENTHESES INTEGER RPARENTHESES
    (99) operacionarray -> . array DOT DELETE LPARENTHESES INTEGER RPARENTHESES
    (100) operacionarray -> . array DOT LENGTH LPARENTHESES RPARENTHESES
    (101) operacionarray -> . array DOT EMPTY QUESTIONMARK
    (55) operacionHash -> . hash LBRACKET datos RBRACKET
    (56) operacionHash -> . hash LBRACKET datos RBRACKET EQUAL datos
    (57) operacionHash -> . hash DOT INCLUDE QUESTIONMARK LPARENTHESES datos RPARENTHESES
    (58) operacionHash -> . hash DOT DELETE LPARENTHESES datos RPARENTHESES
    (59) operacionHash -> . hash DOT KEYS
    (41) tiposvariables -> . VAR
    (42) tiposvariables -> . LOCALVAR
    (43) tiposvariables -> . CONSTANT
    (50) hash -> . LCURLYBRACKET elementoHash RCURLYBRACKET
    (81) array -> . LBRACKET RBRACKET
    (82) array -> . LBRACKET datosarray RBRACKET
    (119) set -> . SET LBRACKET elementoSet RBRACKET

    $end            reduce using rule 27 (cuerpo -> .)
    ELSE            reduce using rule 27 (cuerpo -> .)
    END             reduce using rule 27 (cuerpo -> .)
    RETURN          reduce using rule 27 (cuerpo -> .)
    LOCALVAR        shift and go to state 15
    FOR             shift and go to state 17
    IF              shift and go to state 21
    UNLESS          shift and go to state 22
    PUTS            shift and go to state 23
    PRINT           shift and go to state 24
    VAR             shift and go to state 26
    CONSTANT        shift and go to state 27
    LCURLYBRACKET   shift and go to state 28
    LBRACKET        shift and go to state 25
    SET             shift and go to state 29

    if                             shift and go to state 8
    cuerpo                         shift and go to state 34
    declaracion                    shift and go to state 4
    asignacion                     shift and go to state 5
    loop                           shift and go to state 6
    estructurasDatos               shift and go to state 7
    unless                         shift and go to state 9
    impresion                      shift and go to state 10
    operacionSet                   shift and go to state 11
    operacionarray                 shift and go to state 12
    operacionHash                  shift and go to state 13
    tiposvariables                 shift and go to state 16
    hash                           shift and go to state 18
    array                          shift and go to state 19
    set                            shift and go to state 20

state 9

    (22) cuerpo -> unless . cuerpo
    (17) cuerpo -> . declaracion cuerpo
    (18) cuerpo -> . asignacion cuerpo
    (19) cuerpo -> . loop cuerpo
    (20) cuerpo -> . estructurasDatos cuerpo
    (21) cuerpo -> . if cuerpo
    (22) cuerpo -> . unless cuerpo
    (23) cuerpo -> . impresion cuerpo
    (24) cuerpo -> . operacionSet cuerpo
    (25) cuerpo -> . operacionarray cuerpo
    (26) cuerpo -> . operacionHash cuerpo
    (27) cuerpo -> .
    (29) declaracion -> . tiposvariables EQUAL datos
    (30) declaracion -> . tiposvariables EQUAL estructurasDatos
    (31) declaracion -> . tiposvariables EQUAL expresion
    (32) declaracion -> . tiposvariables EQUAL declaracion
    (33) asignacion -> . LOCALVAR PLUSASSIGN datosAsignacion
    (34) asignacion -> . LOCALVAR MINASSIGN datosAsignacion
    (35) asignacion -> . LOCALVAR DIVASSIGN datosAsignacion
    (36) asignacion -> . LOCALVAR TIMESASSIGN datosAsignacion
    (37) asignacion -> . LOCALVAR MODASSIGN datosAsignacion
    (38) asignacion -> . LOCALVAR EXPASSIGN datosAsignacion
    (28) loop -> . FOR LOCALVAR IN rango cuerpo END
    (47) estructurasDatos -> . hash
    (48) estructurasDatos -> . array
    (49) estructurasDatos -> . set
    (104) if -> . IF datoscompletos operadores datoscompletos cuerpo END
    (105) if -> . IF datoscompletos operadores datoscompletos cuerpo else
    (114) unless -> . UNLESS condiciones cuerpo ELSE cuerpo END
    (62) impresion -> . PUTS datos
    (63) impresion -> . PUTS LOCALVAR
    (64) impresion -> . PRINT datos
    (65) impresion -> . PRINT LOCALVAR
    (125) operacionSet -> . set DOT ADD LPARENTHESES datos RPARENTHESES
    (126) operacionSet -> . set DOT ADD LPARENTHESES tiposvariables RPARENTHESES
    (127) operacionSet -> . set DOT CLEAR
    (128) operacionSet -> . set DOT DELETE LPARENTHESES datos RPARENTHESES
    (129) operacionSet -> . set DOT DELETE LPARENTHESES tiposvariables RPARENTHESES
    (89) operacionarray -> . array LBRACKET INTEGER RBRACKET
    (90) operacionarray -> . array DOT TAKE LPARENTHESES INTEGER RPARENTHESES
    (91) operacionarray -> . array DOT DROP LPARENTHESES INTEGER RPARENTHESES
    (92) operacionarray -> . array DOT push maspush
    (97) operacionarray -> . array DOT POP
    (98) operacionarray -> . array DOT POP LPARENTHESES INTEGER RPARENTHESES
    (99) operacionarray -> . array DOT DELETE LPARENTHESES INTEGER RPARENTHESES
    (100) operacionarray -> . array DOT LENGTH LPARENTHESES RPARENTHESES
    (101) operacionarray -> . array DOT EMPTY QUESTIONMARK
    (55) operacionHash -> . hash LBRACKET datos RBRACKET
    (56) operacionHash -> . hash LBRACKET datos RBRACKET EQUAL datos
    (57) operacionHash -> . hash DOT INCLUDE QUESTIONMARK LPARENTHESES datos RPARENTHESES
    (58) operacionHash -> . hash DOT DELETE LPARENTHESES datos RPARENTHESES
    (59) operacionHash -> . hash DOT KEYS
    (41) tiposvariables -> . VAR
    (42) tiposvariables -> . LOCALVAR
    (43) tiposvariables -> . CONSTANT
    (50) hash -> . LCURLYBRACKET elementoHash RCURLYBRACKET
    (81) array -> . LBRACKET RBRACKET
    (82) array -> . LBRACKET datosarray RBRACKET
    (119) set -> . SET LBRACKET elementoSet RBRACKET

    $end            reduce using rule 27 (cuerpo -> .)
    ELSE            reduce using rule 27 (cuerpo -> .)
    END             reduce using rule 27 (cuerpo -> .)
    RETURN          reduce using rule 27 (cuerpo -> .)
    LOCALVAR        shift and go to state 15
    FOR             shift and go to state 17
    IF              shift and go to state 21
    UNLESS          shift and go to state 22
    PUTS            shift and go to state 23
    PRINT           shift and go to state 24
    VAR             shift and go to state 26
    CONSTANT        shift and go to state 27
    LCURLYBRACKET   shift and go to state 28
    LBRACKET        shift and go to state 25
    SET             shift and go to state 29

    unless                         shift and go to state 9
    cuerpo                         shift and go to state 35
    declaracion                    shift and go to state 4
    asignacion                     shift and go to state 5
    loop                           shift and go to state 6
    estructurasDatos               shift and go to state 7
    if                             shift and go to state 8
    impresion                      shift and go to state 10
    operacionSet                   shift and go to state 11
    operacionarray                 shift and go to state 12
    operacionHash                  shift and go to state 13
    tiposvariables                 shift and go to state 16
    hash                           shift and go to state 18
    array                          shift and go to state 19
    set                            shift and go to state 20

state 10

    (23) cuerpo -> impresion . cuerpo
    (17) cuerpo -> . declaracion cuerpo
    (18) cuerpo -> . asignacion cuerpo
    (19) cuerpo -> . loop cuerpo
    (20) cuerpo -> . estructurasDatos cuerpo
    (21) cuerpo -> . if cuerpo
    (22) cuerpo -> . unless cuerpo
    (23) cuerpo -> . impresion cuerpo
    (24) cuerpo -> . operacionSet cuerpo
    (25) cuerpo -> . operacionarray cuerpo
    (26) cuerpo -> . operacionHash cuerpo
    (27) cuerpo -> .
    (29) declaracion -> . tiposvariables EQUAL datos
    (30) declaracion -> . tiposvariables EQUAL estructurasDatos
    (31) declaracion -> . tiposvariables EQUAL expresion
    (32) declaracion -> . tiposvariables EQUAL declaracion
    (33) asignacion -> . LOCALVAR PLUSASSIGN datosAsignacion
    (34) asignacion -> . LOCALVAR MINASSIGN datosAsignacion
    (35) asignacion -> . LOCALVAR DIVASSIGN datosAsignacion
    (36) asignacion -> . LOCALVAR TIMESASSIGN datosAsignacion
    (37) asignacion -> . LOCALVAR MODASSIGN datosAsignacion
    (38) asignacion -> . LOCALVAR EXPASSIGN datosAsignacion
    (28) loop -> . FOR LOCALVAR IN rango cuerpo END
    (47) estructurasDatos -> . hash
    (48) estructurasDatos -> . array
    (49) estructurasDatos -> . set
    (104) if -> . IF datoscompletos operadores datoscompletos cuerpo END
    (105) if -> . IF datoscompletos operadores datoscompletos cuerpo else
    (114) unless -> . UNLESS condiciones cuerpo ELSE cuerpo END
    (62) impresion -> . PUTS datos
    (63) impresion -> . PUTS LOCALVAR
    (64) impresion -> . PRINT datos
    (65) impresion -> . PRINT LOCALVAR
    (125) operacionSet -> . set DOT ADD LPARENTHESES datos RPARENTHESES
    (126) operacionSet -> . set DOT ADD LPARENTHESES tiposvariables RPARENTHESES
    (127) operacionSet -> . set DOT CLEAR
    (128) operacionSet -> . set DOT DELETE LPARENTHESES datos RPARENTHESES
    (129) operacionSet -> . set DOT DELETE LPARENTHESES tiposvariables RPARENTHESES
    (89) operacionarray -> . array LBRACKET INTEGER RBRACKET
    (90) operacionarray -> . array DOT TAKE LPARENTHESES INTEGER RPARENTHESES
    (91) operacionarray -> . array DOT DROP LPARENTHESES INTEGER RPARENTHESES
    (92) operacionarray -> . array DOT push maspush
    (97) operacionarray -> . array DOT POP
    (98) operacionarray -> . array DOT POP LPARENTHESES INTEGER RPARENTHESES
    (99) operacionarray -> . array DOT DELETE LPARENTHESES INTEGER RPARENTHESES
    (100) operacionarray -> . array DOT LENGTH LPARENTHESES RPARENTHESES
    (101) operacionarray -> . array DOT EMPTY QUESTIONMARK
    (55) operacionHash -> . hash LBRACKET datos RBRACKET
    (56) operacionHash -> . hash LBRACKET datos RBRACKET EQUAL datos
    (57) operacionHash -> . hash DOT INCLUDE QUESTIONMARK LPARENTHESES datos RPARENTHESES
    (58) operacionHash -> . hash DOT DELETE LPARENTHESES datos RPARENTHESES
    (59) operacionHash -> . hash DOT KEYS
    (41) tiposvariables -> . VAR
    (42) tiposvariables -> . LOCALVAR
    (43) tiposvariables -> . CONSTANT
    (50) hash -> . LCURLYBRACKET elementoHash RCURLYBRACKET
    (81) array -> . LBRACKET RBRACKET
    (82) array -> . LBRACKET datosarray RBRACKET
    (119) set -> . SET LBRACKET elementoSet RBRACKET

    $end            reduce using rule 27 (cuerpo -> .)
    ELSE            reduce using rule 27 (cuerpo -> .)
    END             reduce using rule 27 (cuerpo -> .)
    RETURN          reduce using rule 27 (cuerpo -> .)
    LOCALVAR        shift and go to state 15
    FOR             shift and go to state 17
    IF              shift and go to state 21
    UNLESS          shift and go to state 22
    PUTS            shift and go to state 23
    PRINT           shift and go to state 24
    VAR             shift and go to state 26
    CONSTANT        shift and go to state 27
    LCURLYBRACKET   shift and go to state 28
    LBRACKET        shift and go to state 25
    SET             shift and go to state 29

    impresion                      shift and go to state 10
    cuerpo                         shift and go to state 36
    declaracion                    shift and go to state 4
    asignacion                     shift and go to state 5
    loop                           shift and go to state 6
    estructurasDatos               shift and go to state 7
    if                             shift and go to state 8
    unless                         shift and go to state 9
    operacionSet                   shift and go to state 11
    operacionarray                 shift and go to state 12
    operacionHash                  shift and go to state 13
    tiposvariables                 shift and go to state 16
    hash                           shift and go to state 18
    array                          shift and go to state 19
    set                            shift and go to state 20

state 11

    (24) cuerpo -> operacionSet . cuerpo
    (17) cuerpo -> . declaracion cuerpo
    (18) cuerpo -> . asignacion cuerpo
    (19) cuerpo -> . loop cuerpo
    (20) cuerpo -> . estructurasDatos cuerpo
    (21) cuerpo -> . if cuerpo
    (22) cuerpo -> . unless cuerpo
    (23) cuerpo -> . impresion cuerpo
    (24) cuerpo -> . operacionSet cuerpo
    (25) cuerpo -> . operacionarray cuerpo
    (26) cuerpo -> . operacionHash cuerpo
    (27) cuerpo -> .
    (29) declaracion -> . tiposvariables EQUAL datos
    (30) declaracion -> . tiposvariables EQUAL estructurasDatos
    (31) declaracion -> . tiposvariables EQUAL expresion
    (32) declaracion -> . tiposvariables EQUAL declaracion
    (33) asignacion -> . LOCALVAR PLUSASSIGN datosAsignacion
    (34) asignacion -> . LOCALVAR MINASSIGN datosAsignacion
    (35) asignacion -> . LOCALVAR DIVASSIGN datosAsignacion
    (36) asignacion -> . LOCALVAR TIMESASSIGN datosAsignacion
    (37) asignacion -> . LOCALVAR MODASSIGN datosAsignacion
    (38) asignacion -> . LOCALVAR EXPASSIGN datosAsignacion
    (28) loop -> . FOR LOCALVAR IN rango cuerpo END
    (47) estructurasDatos -> . hash
    (48) estructurasDatos -> . array
    (49) estructurasDatos -> . set
    (104) if -> . IF datoscompletos operadores datoscompletos cuerpo END
    (105) if -> . IF datoscompletos operadores datoscompletos cuerpo else
    (114) unless -> . UNLESS condiciones cuerpo ELSE cuerpo END
    (62) impresion -> . PUTS datos
    (63) impresion -> . PUTS LOCALVAR
    (64) impresion -> . PRINT datos
    (65) impresion -> . PRINT LOCALVAR
    (125) operacionSet -> . set DOT ADD LPARENTHESES datos RPARENTHESES
    (126) operacionSet -> . set DOT ADD LPARENTHESES tiposvariables RPARENTHESES
    (127) operacionSet -> . set DOT CLEAR
    (128) operacionSet -> . set DOT DELETE LPARENTHESES datos RPARENTHESES
    (129) operacionSet -> . set DOT DELETE LPARENTHESES tiposvariables RPARENTHESES
    (89) operacionarray -> . array LBRACKET INTEGER RBRACKET
    (90) operacionarray -> . array DOT TAKE LPARENTHESES INTEGER RPARENTHESES
    (91) operacionarray -> . array DOT DROP LPARENTHESES INTEGER RPARENTHESES
    (92) operacionarray -> . array DOT push maspush
    (97) operacionarray -> . array DOT POP
    (98) operacionarray -> . array DOT POP LPARENTHESES INTEGER RPARENTHESES
    (99) operacionarray -> . array DOT DELETE LPARENTHESES INTEGER RPARENTHESES
    (100) operacionarray -> . array DOT LENGTH LPARENTHESES RPARENTHESES
    (101) operacionarray -> . array DOT EMPTY QUESTIONMARK
    (55) operacionHash -> . hash LBRACKET datos RBRACKET
    (56) operacionHash -> . hash LBRACKET datos RBRACKET EQUAL datos
    (57) operacionHash -> . hash DOT INCLUDE QUESTIONMARK LPARENTHESES datos RPARENTHESES
    (58) operacionHash -> . hash DOT DELETE LPARENTHESES datos RPARENTHESES
    (59) operacionHash -> . hash DOT KEYS
    (41) tiposvariables -> . VAR
    (42) tiposvariables -> . LOCALVAR
    (43) tiposvariables -> . CONSTANT
    (50) hash -> . LCURLYBRACKET elementoHash RCURLYBRACKET
    (81) array -> . LBRACKET RBRACKET
    (82) array -> . LBRACKET datosarray RBRACKET
    (119) set -> . SET LBRACKET elementoSet RBRACKET

    $end            reduce using rule 27 (cuerpo -> .)
    ELSE            reduce using rule 27 (cuerpo -> .)
    END             reduce using rule 27 (cuerpo -> .)
    RETURN          reduce using rule 27 (cuerpo -> .)
    LOCALVAR        shift and go to state 15
    FOR             shift and go to state 17
    IF              shift and go to state 21
    UNLESS          shift and go to state 22
    PUTS            shift and go to state 23
    PRINT           shift and go to state 24
    VAR             shift and go to state 26
    CONSTANT        shift and go to state 27
    LCURLYBRACKET   shift and go to state 28
    LBRACKET        shift and go to state 25
    SET             shift and go to state 29

    operacionSet                   shift and go to state 11
    cuerpo                         shift and go to state 37
    declaracion                    shift and go to state 4
    asignacion                     shift and go to state 5
    loop                           shift and go to state 6
    estructurasDatos               shift and go to state 7
    if                             shift and go to state 8
    unless                         shift and go to state 9
    impresion                      shift and go to state 10
    operacionarray                 shift and go to state 12
    operacionHash                  shift and go to state 13
    tiposvariables                 shift and go to state 16
    hash                           shift and go to state 18
    array                          shift and go to state 19
    set                            shift and go to state 20

state 12

    (25) cuerpo -> operacionarray . cuerpo
    (17) cuerpo -> . declaracion cuerpo
    (18) cuerpo -> . asignacion cuerpo
    (19) cuerpo -> . loop cuerpo
    (20) cuerpo -> . estructurasDatos cuerpo
    (21) cuerpo -> . if cuerpo
    (22) cuerpo -> . unless cuerpo
    (23) cuerpo -> . impresion cuerpo
    (24) cuerpo -> . operacionSet cuerpo
    (25) cuerpo -> . operacionarray cuerpo
    (26) cuerpo -> . operacionHash cuerpo
    (27) cuerpo -> .
    (29) declaracion -> . tiposvariables EQUAL datos
    (30) declaracion -> . tiposvariables EQUAL estructurasDatos
    (31) declaracion -> . tiposvariables EQUAL expresion
    (32) declaracion -> . tiposvariables EQUAL declaracion
    (33) asignacion -> . LOCALVAR PLUSASSIGN datosAsignacion
    (34) asignacion -> . LOCALVAR MINASSIGN datosAsignacion
    (35) asignacion -> . LOCALVAR DIVASSIGN datosAsignacion
    (36) asignacion -> . LOCALVAR TIMESASSIGN datosAsignacion
    (37) asignacion -> . LOCALVAR MODASSIGN datosAsignacion
    (38) asignacion -> . LOCALVAR EXPASSIGN datosAsignacion
    (28) loop -> . FOR LOCALVAR IN rango cuerpo END
    (47) estructurasDatos -> . hash
    (48) estructurasDatos -> . array
    (49) estructurasDatos -> . set
    (104) if -> . IF datoscompletos operadores datoscompletos cuerpo END
    (105) if -> . IF datoscompletos operadores datoscompletos cuerpo else
    (114) unless -> . UNLESS condiciones cuerpo ELSE cuerpo END
    (62) impresion -> . PUTS datos
    (63) impresion -> . PUTS LOCALVAR
    (64) impresion -> . PRINT datos
    (65) impresion -> . PRINT LOCALVAR
    (125) operacionSet -> . set DOT ADD LPARENTHESES datos RPARENTHESES
    (126) operacionSet -> . set DOT ADD LPARENTHESES tiposvariables RPARENTHESES
    (127) operacionSet -> . set DOT CLEAR
    (128) operacionSet -> . set DOT DELETE LPARENTHESES datos RPARENTHESES
    (129) operacionSet -> . set DOT DELETE LPARENTHESES tiposvariables RPARENTHESES
    (89) operacionarray -> . array LBRACKET INTEGER RBRACKET
    (90) operacionarray -> . array DOT TAKE LPARENTHESES INTEGER RPARENTHESES
    (91) operacionarray -> . array DOT DROP LPARENTHESES INTEGER RPARENTHESES
    (92) operacionarray -> . array DOT push maspush
    (97) operacionarray -> . array DOT POP
    (98) operacionarray -> . array DOT POP LPARENTHESES INTEGER RPARENTHESES
    (99) operacionarray -> . array DOT DELETE LPARENTHESES INTEGER RPARENTHESES
    (100) operacionarray -> . array DOT LENGTH LPARENTHESES RPARENTHESES
    (101) operacionarray -> . array DOT EMPTY QUESTIONMARK
    (55) operacionHash -> . hash LBRACKET datos RBRACKET
    (56) operacionHash -> . hash LBRACKET datos RBRACKET EQUAL datos
    (57) operacionHash -> . hash DOT INCLUDE QUESTIONMARK LPARENTHESES datos RPARENTHESES
    (58) operacionHash -> . hash DOT DELETE LPARENTHESES datos RPARENTHESES
    (59) operacionHash -> . hash DOT KEYS
    (41) tiposvariables -> . VAR
    (42) tiposvariables -> . LOCALVAR
    (43) tiposvariables -> . CONSTANT
    (50) hash -> . LCURLYBRACKET elementoHash RCURLYBRACKET
    (81) array -> . LBRACKET RBRACKET
    (82) array -> . LBRACKET datosarray RBRACKET
    (119) set -> . SET LBRACKET elementoSet RBRACKET

    $end            reduce using rule 27 (cuerpo -> .)
    ELSE            reduce using rule 27 (cuerpo -> .)
    END             reduce using rule 27 (cuerpo -> .)
    RETURN          reduce using rule 27 (cuerpo -> .)
    LOCALVAR        shift and go to state 15
    FOR             shift and go to state 17
    IF              shift and go to state 21
    UNLESS          shift and go to state 22
    PUTS            shift and go to state 23
    PRINT           shift and go to state 24
    VAR             shift and go to state 26
    CONSTANT        shift and go to state 27
    LCURLYBRACKET   shift and go to state 28
    LBRACKET        shift and go to state 25
    SET             shift and go to state 29

    operacionarray                 shift and go to state 12
    cuerpo                         shift and go to state 38
    declaracion                    shift and go to state 4
    asignacion                     shift and go to state 5
    loop                           shift and go to state 6
    estructurasDatos               shift and go to state 7
    if                             shift and go to state 8
    unless                         shift and go to state 9
    impresion                      shift and go to state 10
    operacionSet                   shift and go to state 11
    operacionHash                  shift and go to state 13
    tiposvariables                 shift and go to state 16
    hash                           shift and go to state 18
    array                          shift and go to state 19
    set                            shift and go to state 20

state 13

    (26) cuerpo -> operacionHash . cuerpo
    (17) cuerpo -> . declaracion cuerpo
    (18) cuerpo -> . asignacion cuerpo
    (19) cuerpo -> . loop cuerpo
    (20) cuerpo -> . estructurasDatos cuerpo
    (21) cuerpo -> . if cuerpo
    (22) cuerpo -> . unless cuerpo
    (23) cuerpo -> . impresion cuerpo
    (24) cuerpo -> . operacionSet cuerpo
    (25) cuerpo -> . operacionarray cuerpo
    (26) cuerpo -> . operacionHash cuerpo
    (27) cuerpo -> .
    (29) declaracion -> . tiposvariables EQUAL datos
    (30) declaracion -> . tiposvariables EQUAL estructurasDatos
    (31) declaracion -> . tiposvariables EQUAL expresion
    (32) declaracion -> . tiposvariables EQUAL declaracion
    (33) asignacion -> . LOCALVAR PLUSASSIGN datosAsignacion
    (34) asignacion -> . LOCALVAR MINASSIGN datosAsignacion
    (35) asignacion -> . LOCALVAR DIVASSIGN datosAsignacion
    (36) asignacion -> . LOCALVAR TIMESASSIGN datosAsignacion
    (37) asignacion -> . LOCALVAR MODASSIGN datosAsignacion
    (38) asignacion -> . LOCALVAR EXPASSIGN datosAsignacion
    (28) loop -> . FOR LOCALVAR IN rango cuerpo END
    (47) estructurasDatos -> . hash
    (48) estructurasDatos -> . array
    (49) estructurasDatos -> . set
    (104) if -> . IF datoscompletos operadores datoscompletos cuerpo END
    (105) if -> . IF datoscompletos operadores datoscompletos cuerpo else
    (114) unless -> . UNLESS condiciones cuerpo ELSE cuerpo END
    (62) impresion -> . PUTS datos
    (63) impresion -> . PUTS LOCALVAR
    (64) impresion -> . PRINT datos
    (65) impresion -> . PRINT LOCALVAR
    (125) operacionSet -> . set DOT ADD LPARENTHESES datos RPARENTHESES
    (126) operacionSet -> . set DOT ADD LPARENTHESES tiposvariables RPARENTHESES
    (127) operacionSet -> . set DOT CLEAR
    (128) operacionSet -> . set DOT DELETE LPARENTHESES datos RPARENTHESES
    (129) operacionSet -> . set DOT DELETE LPARENTHESES tiposvariables RPARENTHESES
    (89) operacionarray -> . array LBRACKET INTEGER RBRACKET
    (90) operacionarray -> . array DOT TAKE LPARENTHESES INTEGER RPARENTHESES
    (91) operacionarray -> . array DOT DROP LPARENTHESES INTEGER RPARENTHESES
    (92) operacionarray -> . array DOT push maspush
    (97) operacionarray -> . array DOT POP
    (98) operacionarray -> . array DOT POP LPARENTHESES INTEGER RPARENTHESES
    (99) operacionarray -> . array DOT DELETE LPARENTHESES INTEGER RPARENTHESES
    (100) operacionarray -> . array DOT LENGTH LPARENTHESES RPARENTHESES
    (101) operacionarray -> . array DOT EMPTY QUESTIONMARK
    (55) operacionHash -> . hash LBRACKET datos RBRACKET
    (56) operacionHash -> . hash LBRACKET datos RBRACKET EQUAL datos
    (57) operacionHash -> . hash DOT INCLUDE QUESTIONMARK LPARENTHESES datos RPARENTHESES
    (58) operacionHash -> . hash DOT DELETE LPARENTHESES datos RPARENTHESES
    (59) operacionHash -> . hash DOT KEYS
    (41) tiposvariables -> . VAR
    (42) tiposvariables -> . LOCALVAR
    (43) tiposvariables -> . CONSTANT
    (50) hash -> . LCURLYBRACKET elementoHash RCURLYBRACKET
    (81) array -> . LBRACKET RBRACKET
    (82) array -> . LBRACKET datosarray RBRACKET
    (119) set -> . SET LBRACKET elementoSet RBRACKET

    $end            reduce using rule 27 (cuerpo -> .)
    ELSE            reduce using rule 27 (cuerpo -> .)
    END             reduce using rule 27 (cuerpo -> .)
    RETURN          reduce using rule 27 (cuerpo -> .)
    LOCALVAR        shift and go to state 15
    FOR             shift and go to state 17
    IF              shift and go to state 21
    UNLESS          shift and go to state 22
    PUTS            shift and go to state 23
    PRINT           shift and go to state 24
    VAR             shift and go to state 26
    CONSTANT        shift and go to state 27
    LCURLYBRACKET   shift and go to state 28
    LBRACKET        shift and go to state 25
    SET             shift and go to state 29

    operacionHash                  shift and go to state 13
    cuerpo                         shift and go to state 39
    declaracion                    shift and go to state 4
    asignacion                     shift and go to state 5
    loop                           shift and go to state 6
    estructurasDatos               shift and go to state 7
    if                             shift and go to state 8
    unless                         shift and go to state 9
    impresion                      shift and go to state 10
    operacionSet                   shift and go to state 11
    operacionarray                 shift and go to state 12
    tiposvariables                 shift and go to state 16
    hash                           shift and go to state 18
    array                          shift and go to state 19
    set                            shift and go to state 20

state 14

    (3) funcion -> DEF . LOCALVAR LPARENTHESES argumentos RPARENTHESES cuerpo END
    (4) funcion -> DEF . LOCALVAR LPARENTHESES argumentos RPARENTHESES cuerpo retornar END

    LOCALVAR        shift and go to state 40


state 15

    (33) asignacion -> LOCALVAR . PLUSASSIGN datosAsignacion
    (34) asignacion -> LOCALVAR . MINASSIGN datosAsignacion
    (35) asignacion -> LOCALVAR . DIVASSIGN datosAsignacion
    (36) asignacion -> LOCALVAR . TIMESASSIGN datosAsignacion
    (37) asignacion -> LOCALVAR . MODASSIGN datosAsignacion
    (38) asignacion -> LOCALVAR . EXPASSIGN datosAsignacion
    (42) tiposvariables -> LOCALVAR .

    PLUSASSIGN      shift and go to state 41
    MINASSIGN       shift and go to state 42
    DIVASSIGN       shift and go to state 43
    TIMESASSIGN     shift and go to state 44
    MODASSIGN       shift and go to state 45
    EXPASSIGN       shift and go to state 46
    EQUAL           reduce using rule 42 (tiposvariables -> LOCALVAR .)


state 16

    (29) declaracion -> tiposvariables . EQUAL datos
    (30) declaracion -> tiposvariables . EQUAL estructurasDatos
    (31) declaracion -> tiposvariables . EQUAL expresion
    (32) declaracion -> tiposvariables . EQUAL declaracion

    EQUAL           shift and go to state 47


state 17

    (28) loop -> FOR . LOCALVAR IN rango cuerpo END

    LOCALVAR        shift and go to state 48


state 18

    (47) estructurasDatos -> hash .
    (55) operacionHash -> hash . LBRACKET datos RBRACKET
    (56) operacionHash -> hash . LBRACKET datos RBRACKET EQUAL datos
    (57) operacionHash -> hash . DOT INCLUDE QUESTIONMARK LPARENTHESES datos RPARENTHESES
    (58) operacionHash -> hash . DOT DELETE LPARENTHESES datos RPARENTHESES
    (59) operacionHash -> hash . DOT KEYS

  ! shift/reduce conflict for LBRACKET resolved as shift
    LOCALVAR        reduce using rule 47 (estructurasDatos -> hash .)
    FOR             reduce using rule 47 (estructurasDatos -> hash .)
    IF              reduce using rule 47 (estructurasDatos -> hash .)
    UNLESS          reduce using rule 47 (estructurasDatos -> hash .)
    PUTS            reduce using rule 47 (estructurasDatos -> hash .)
    PRINT           reduce using rule 47 (estructurasDatos -> hash .)
    VAR             reduce using rule 47 (estructurasDatos -> hash .)
    CONSTANT        reduce using rule 47 (estructurasDatos -> hash .)
    LCURLYBRACKET   reduce using rule 47 (estructurasDatos -> hash .)
    SET             reduce using rule 47 (estructurasDatos -> hash .)
    $end            reduce using rule 47 (estructurasDatos -> hash .)
    ELSE            reduce using rule 47 (estructurasDatos -> hash .)
    END             reduce using rule 47 (estructurasDatos -> hash .)
    RETURN          reduce using rule 47 (estructurasDatos -> hash .)
    LBRACKET        shift and go to state 49
    DOT             shift and go to state 50

  ! LBRACKET        [ reduce using rule 47 (estructurasDatos -> hash .) ]


state 19

    (48) estructurasDatos -> array .
    (89) operacionarray -> array . LBRACKET INTEGER RBRACKET
    (90) operacionarray -> array . DOT TAKE LPARENTHESES INTEGER RPARENTHESES
    (91) operacionarray -> array . DOT DROP LPARENTHESES INTEGER RPARENTHESES
    (92) operacionarray -> array . DOT push maspush
    (97) operacionarray -> array . DOT POP
    (98) operacionarray -> array . DOT POP LPARENTHESES INTEGER RPARENTHESES
    (99) operacionarray -> array . DOT DELETE LPARENTHESES INTEGER RPARENTHESES
    (100) operacionarray -> array . DOT LENGTH LPARENTHESES RPARENTHESES
    (101) operacionarray -> array . DOT EMPTY QUESTIONMARK

  ! shift/reduce conflict for LBRACKET resolved as shift
    LOCALVAR        reduce using rule 48 (estructurasDatos -> array .)
    FOR             reduce using rule 48 (estructurasDatos -> array .)
    IF              reduce using rule 48 (estructurasDatos -> array .)
    UNLESS          reduce using rule 48 (estructurasDatos -> array .)
    PUTS            reduce using rule 48 (estructurasDatos -> array .)
    PRINT           reduce using rule 48 (estructurasDatos -> array .)
    VAR             reduce using rule 48 (estructurasDatos -> array .)
    CONSTANT        reduce using rule 48 (estructurasDatos -> array .)
    LCURLYBRACKET   reduce using rule 48 (estructurasDatos -> array .)
    SET             reduce using rule 48 (estructurasDatos -> array .)
    $end            reduce using rule 48 (estructurasDatos -> array .)
    ELSE            reduce using rule 48 (estructurasDatos -> array .)
    END             reduce using rule 48 (estructurasDatos -> array .)
    RETURN          reduce using rule 48 (estructurasDatos -> array .)
    LBRACKET        shift and go to state 51
    DOT             shift and go to state 52

  ! LBRACKET        [ reduce using rule 48 (estructurasDatos -> array .) ]


state 20

    (49) estructurasDatos -> set .
    (125) operacionSet -> set . DOT ADD LPARENTHESES datos RPARENTHESES
    (126) operacionSet -> set . DOT ADD LPARENTHESES tiposvariables RPARENTHESES
    (127) operacionSet -> set . DOT CLEAR
    (128) operacionSet -> set . DOT DELETE LPARENTHESES datos RPARENTHESES
    (129) operacionSet -> set . DOT DELETE LPARENTHESES tiposvariables RPARENTHESES

    LOCALVAR        reduce using rule 49 (estructurasDatos -> set .)
    FOR             reduce using rule 49 (estructurasDatos -> set .)
    IF              reduce using rule 49 (estructurasDatos -> set .)
    UNLESS          reduce using rule 49 (estructurasDatos -> set .)
    PUTS            reduce using rule 49 (estructurasDatos -> set .)
    PRINT           reduce using rule 49 (estructurasDatos -> set .)
    VAR             reduce using rule 49 (estructurasDatos -> set .)
    CONSTANT        reduce using rule 49 (estructurasDatos -> set .)
    LCURLYBRACKET   reduce using rule 49 (estructurasDatos -> set .)
    LBRACKET        reduce using rule 49 (estructurasDatos -> set .)
    SET             reduce using rule 49 (estructurasDatos -> set .)
    $end            reduce using rule 49 (estructurasDatos -> set .)
    ELSE            reduce using rule 49 (estructurasDatos -> set .)
    END             reduce using rule 49 (estructurasDatos -> set .)
    RETURN          reduce using rule 49 (estructurasDatos -> set .)
    DOT             shift and go to state 53


state 21

    (104) if -> IF . datoscompletos operadores datoscompletos cuerpo END
    (105) if -> IF . datoscompletos operadores datoscompletos cuerpo else
    (102) datoscompletos -> . datosvarios
    (103) datoscompletos -> . tiposvariables
    (83) datosvarios -> . datos
    (84) datosvarios -> . number
    (85) datosvarios -> . VAR
    (86) datosvarios -> . LOCALVAR
    (41) tiposvariables -> . VAR
    (42) tiposvariables -> . LOCALVAR
    (43) tiposvariables -> . CONSTANT
    (44) datos -> . INTEGER
    (45) datos -> . FLOAT
    (46) datos -> . STRING
    (66) number -> . INTEGER
    (67) number -> . FLOAT

    VAR             shift and go to state 59
    LOCALVAR        shift and go to state 60
    CONSTANT        shift and go to state 27
    INTEGER         shift and go to state 61
    FLOAT           shift and go to state 62
    STRING          shift and go to state 63

    datoscompletos                 shift and go to state 54
    datosvarios                    shift and go to state 55
    tiposvariables                 shift and go to state 56
    datos                          shift and go to state 57
    number                         shift and go to state 58

state 22

    (114) unless -> UNLESS . condiciones cuerpo ELSE cuerpo END
    (115) condiciones -> . tiposvariables operadores tiposvariables
    (116) condiciones -> . datos operadores datos
    (117) condiciones -> . tiposvariables operadores datos
    (118) condiciones -> . datos operadores tiposvariables
    (41) tiposvariables -> . VAR
    (42) tiposvariables -> . LOCALVAR
    (43) tiposvariables -> . CONSTANT
    (44) datos -> . INTEGER
    (45) datos -> . FLOAT
    (46) datos -> . STRING

    VAR             shift and go to state 26
    LOCALVAR        shift and go to state 67
    CONSTANT        shift and go to state 27
    INTEGER         shift and go to state 68
    FLOAT           shift and go to state 69
    STRING          shift and go to state 63

    condiciones                    shift and go to state 64
    tiposvariables                 shift and go to state 65
    datos                          shift and go to state 66

state 23

    (62) impresion -> PUTS . datos
    (63) impresion -> PUTS . LOCALVAR
    (44) datos -> . INTEGER
    (45) datos -> . FLOAT
    (46) datos -> . STRING

    LOCALVAR        shift and go to state 71
    INTEGER         shift and go to state 68
    FLOAT           shift and go to state 69
    STRING          shift and go to state 63

    datos                          shift and go to state 70

state 24

    (64) impresion -> PRINT . datos
    (65) impresion -> PRINT . LOCALVAR
    (44) datos -> . INTEGER
    (45) datos -> . FLOAT
    (46) datos -> . STRING

    LOCALVAR        shift and go to state 73
    INTEGER         shift and go to state 68
    FLOAT           shift and go to state 69
    STRING          shift and go to state 63

    datos                          shift and go to state 72

state 25

    (81) array -> LBRACKET . RBRACKET
    (82) array -> LBRACKET . datosarray RBRACKET
    (87) datosarray -> . datosvarios
    (88) datosarray -> . datosarray COMMA datosvarios
    (83) datosvarios -> . datos
    (84) datosvarios -> . number
    (85) datosvarios -> . VAR
    (86) datosvarios -> . LOCALVAR
    (44) datos -> . INTEGER
    (45) datos -> . FLOAT
    (46) datos -> . STRING
    (66) number -> . INTEGER
    (67) number -> . FLOAT

    RBRACKET        shift and go to state 74
    VAR             shift and go to state 77
    LOCALVAR        shift and go to state 78
    INTEGER         shift and go to state 61
    FLOAT           shift and go to state 62
    STRING          shift and go to state 63

    datosarray                     shift and go to state 75
    datosvarios                    shift and go to state 76
    datos                          shift and go to state 57
    number                         shift and go to state 58

state 26

    (41) tiposvariables -> VAR .

    EQUAL           reduce using rule 41 (tiposvariables -> VAR .)
    DOUBLEEQUAL     reduce using rule 41 (tiposvariables -> VAR .)
    TRIPLEEQUAL     reduce using rule 41 (tiposvariables -> VAR .)
    GREATERTHAN     reduce using rule 41 (tiposvariables -> VAR .)
    NOTEQUAL        reduce using rule 41 (tiposvariables -> VAR .)
    LESSTHAN        reduce using rule 41 (tiposvariables -> VAR .)
    GREQUAL         reduce using rule 41 (tiposvariables -> VAR .)
    LEQUAL          reduce using rule 41 (tiposvariables -> VAR .)
    LOCALVAR        reduce using rule 41 (tiposvariables -> VAR .)
    FOR             reduce using rule 41 (tiposvariables -> VAR .)
    IF              reduce using rule 41 (tiposvariables -> VAR .)
    UNLESS          reduce using rule 41 (tiposvariables -> VAR .)
    PUTS            reduce using rule 41 (tiposvariables -> VAR .)
    PRINT           reduce using rule 41 (tiposvariables -> VAR .)
    VAR             reduce using rule 41 (tiposvariables -> VAR .)
    CONSTANT        reduce using rule 41 (tiposvariables -> VAR .)
    LCURLYBRACKET   reduce using rule 41 (tiposvariables -> VAR .)
    LBRACKET        reduce using rule 41 (tiposvariables -> VAR .)
    SET             reduce using rule 41 (tiposvariables -> VAR .)
    ELSE            reduce using rule 41 (tiposvariables -> VAR .)
    RPARENTHESES    reduce using rule 41 (tiposvariables -> VAR .)


state 27

    (43) tiposvariables -> CONSTANT .

    EQUAL           reduce using rule 43 (tiposvariables -> CONSTANT .)
    DOUBLEEQUAL     reduce using rule 43 (tiposvariables -> CONSTANT .)
    TRIPLEEQUAL     reduce using rule 43 (tiposvariables -> CONSTANT .)
    GREATERTHAN     reduce using rule 43 (tiposvariables -> CONSTANT .)
    NOTEQUAL        reduce using rule 43 (tiposvariables -> CONSTANT .)
    LESSTHAN        reduce using rule 43 (tiposvariables -> CONSTANT .)
    GREQUAL         reduce using rule 43 (tiposvariables -> CONSTANT .)
    LEQUAL          reduce using rule 43 (tiposvariables -> CONSTANT .)
    LOCALVAR        reduce using rule 43 (tiposvariables -> CONSTANT .)
    FOR             reduce using rule 43 (tiposvariables -> CONSTANT .)
    IF              reduce using rule 43 (tiposvariables -> CONSTANT .)
    UNLESS          reduce using rule 43 (tiposvariables -> CONSTANT .)
    PUTS            reduce using rule 43 (tiposvariables -> CONSTANT .)
    PRINT           reduce using rule 43 (tiposvariables -> CONSTANT .)
    VAR             reduce using rule 43 (tiposvariables -> CONSTANT .)
    CONSTANT        reduce using rule 43 (tiposvariables -> CONSTANT .)
    LCURLYBRACKET   reduce using rule 43 (tiposvariables -> CONSTANT .)
    LBRACKET        reduce using rule 43 (tiposvariables -> CONSTANT .)
    SET             reduce using rule 43 (tiposvariables -> CONSTANT .)
    END             reduce using rule 43 (tiposvariables -> CONSTANT .)
    ELSE            reduce using rule 43 (tiposvariables -> CONSTANT .)
    RPARENTHESES    reduce using rule 43 (tiposvariables -> CONSTANT .)


state 28

    (50) hash -> LCURLYBRACKET . elementoHash RCURLYBRACKET
    (51) elementoHash -> . datos EQUAL GREATERTHAN datos maselementos
    (52) elementoHash -> .
    (44) datos -> . INTEGER
    (45) datos -> . FLOAT
    (46) datos -> . STRING

    RCURLYBRACKET   reduce using rule 52 (elementoHash -> .)
    INTEGER         shift and go to state 68
    FLOAT           shift and go to state 69
    STRING          shift and go to state 63

    elementoHash                   shift and go to state 79
    datos                          shift and go to state 80

state 29

    (119) set -> SET . LBRACKET elementoSet RBRACKET

    LBRACKET        shift and go to state 81


state 30

    (17) cuerpo -> declaracion cuerpo .

    $end            reduce using rule 17 (cuerpo -> declaracion cuerpo .)
    ELSE            reduce using rule 17 (cuerpo -> declaracion cuerpo .)
    END             reduce using rule 17 (cuerpo -> declaracion cuerpo .)
    RETURN          reduce using rule 17 (cuerpo -> declaracion cuerpo .)


state 31

    (18) cuerpo -> asignacion cuerpo .

    $end            reduce using rule 18 (cuerpo -> asignacion cuerpo .)
    ELSE            reduce using rule 18 (cuerpo -> asignacion cuerpo .)
    END             reduce using rule 18 (cuerpo -> asignacion cuerpo .)
    RETURN          reduce using rule 18 (cuerpo -> asignacion cuerpo .)


state 32

    (19) cuerpo -> loop cuerpo .

    $end            reduce using rule 19 (cuerpo -> loop cuerpo .)
    ELSE            reduce using rule 19 (cuerpo -> loop cuerpo .)
    END             reduce using rule 19 (cuerpo -> loop cuerpo .)
    RETURN          reduce using rule 19 (cuerpo -> loop cuerpo .)


state 33

    (20) cuerpo -> estructurasDatos cuerpo .

    $end            reduce using rule 20 (cuerpo -> estructurasDatos cuerpo .)
    ELSE            reduce using rule 20 (cuerpo -> estructurasDatos cuerpo .)
    END             reduce using rule 20 (cuerpo -> estructurasDatos cuerpo .)
    RETURN          reduce using rule 20 (cuerpo -> estructurasDatos cuerpo .)


state 34

    (21) cuerpo -> if cuerpo .

    $end            reduce using rule 21 (cuerpo -> if cuerpo .)
    ELSE            reduce using rule 21 (cuerpo -> if cuerpo .)
    END             reduce using rule 21 (cuerpo -> if cuerpo .)
    RETURN          reduce using rule 21 (cuerpo -> if cuerpo .)


state 35

    (22) cuerpo -> unless cuerpo .

    $end            reduce using rule 22 (cuerpo -> unless cuerpo .)
    ELSE            reduce using rule 22 (cuerpo -> unless cuerpo .)
    END             reduce using rule 22 (cuerpo -> unless cuerpo .)
    RETURN          reduce using rule 22 (cuerpo -> unless cuerpo .)


state 36

    (23) cuerpo -> impresion cuerpo .

    $end            reduce using rule 23 (cuerpo -> impresion cuerpo .)
    ELSE            reduce using rule 23 (cuerpo -> impresion cuerpo .)
    END             reduce using rule 23 (cuerpo -> impresion cuerpo .)
    RETURN          reduce using rule 23 (cuerpo -> impresion cuerpo .)


state 37

    (24) cuerpo -> operacionSet cuerpo .

    $end            reduce using rule 24 (cuerpo -> operacionSet cuerpo .)
    ELSE            reduce using rule 24 (cuerpo -> operacionSet cuerpo .)
    END             reduce using rule 24 (cuerpo -> operacionSet cuerpo .)
    RETURN          reduce using rule 24 (cuerpo -> operacionSet cuerpo .)


state 38

    (25) cuerpo -> operacionarray cuerpo .

    $end            reduce using rule 25 (cuerpo -> operacionarray cuerpo .)
    ELSE            reduce using rule 25 (cuerpo -> operacionarray cuerpo .)
    END             reduce using rule 25 (cuerpo -> operacionarray cuerpo .)
    RETURN          reduce using rule 25 (cuerpo -> operacionarray cuerpo .)


state 39

    (26) cuerpo -> operacionHash cuerpo .

    $end            reduce using rule 26 (cuerpo -> operacionHash cuerpo .)
    ELSE            reduce using rule 26 (cuerpo -> operacionHash cuerpo .)
    END             reduce using rule 26 (cuerpo -> operacionHash cuerpo .)
    RETURN          reduce using rule 26 (cuerpo -> operacionHash cuerpo .)


state 40

    (3) funcion -> DEF LOCALVAR . LPARENTHESES argumentos RPARENTHESES cuerpo END
    (4) funcion -> DEF LOCALVAR . LPARENTHESES argumentos RPARENTHESES cuerpo retornar END

    LPARENTHESES    shift and go to state 82


state 41

    (33) asignacion -> LOCALVAR PLUSASSIGN . datosAsignacion
    (39) datosAsignacion -> . number
    (40) datosAsignacion -> . LOCALVAR
    (66) number -> . INTEGER
    (67) number -> . FLOAT

    LOCALVAR        shift and go to state 83
    INTEGER         shift and go to state 86
    FLOAT           shift and go to state 87

    datosAsignacion                shift and go to state 84
    number                         shift and go to state 85

state 42

    (34) asignacion -> LOCALVAR MINASSIGN . datosAsignacion
    (39) datosAsignacion -> . number
    (40) datosAsignacion -> . LOCALVAR
    (66) number -> . INTEGER
    (67) number -> . FLOAT

    LOCALVAR        shift and go to state 83
    INTEGER         shift and go to state 86
    FLOAT           shift and go to state 87

    datosAsignacion                shift and go to state 88
    number                         shift and go to state 85

state 43

    (35) asignacion -> LOCALVAR DIVASSIGN . datosAsignacion
    (39) datosAsignacion -> . number
    (40) datosAsignacion -> . LOCALVAR
    (66) number -> . INTEGER
    (67) number -> . FLOAT

    LOCALVAR        shift and go to state 83
    INTEGER         shift and go to state 86
    FLOAT           shift and go to state 87

    datosAsignacion                shift and go to state 89
    number                         shift and go to state 85

state 44

    (36) asignacion -> LOCALVAR TIMESASSIGN . datosAsignacion
    (39) datosAsignacion -> . number
    (40) datosAsignacion -> . LOCALVAR
    (66) number -> . INTEGER
    (67) number -> . FLOAT

    LOCALVAR        shift and go to state 83
    INTEGER         shift and go to state 86
    FLOAT           shift and go to state 87

    datosAsignacion                shift and go to state 90
    number                         shift and go to state 85

state 45

    (37) asignacion -> LOCALVAR MODASSIGN . datosAsignacion
    (39) datosAsignacion -> . number
    (40) datosAsignacion -> . LOCALVAR
    (66) number -> . INTEGER
    (67) number -> . FLOAT

    LOCALVAR        shift and go to state 83
    INTEGER         shift and go to state 86
    FLOAT           shift and go to state 87

    datosAsignacion                shift and go to state 91
    number                         shift and go to state 85

state 46

    (38) asignacion -> LOCALVAR EXPASSIGN . datosAsignacion
    (39) datosAsignacion -> . number
    (40) datosAsignacion -> . LOCALVAR
    (66) number -> . INTEGER
    (67) number -> . FLOAT

    LOCALVAR        shift and go to state 83
    INTEGER         shift and go to state 86
    FLOAT           shift and go to state 87

    datosAsignacion                shift and go to state 92
    number                         shift and go to state 85

state 47

    (29) declaracion -> tiposvariables EQUAL . datos
    (30) declaracion -> tiposvariables EQUAL . estructurasDatos
    (31) declaracion -> tiposvariables EQUAL . expresion
    (32) declaracion -> tiposvariables EQUAL . declaracion
    (44) datos -> . INTEGER
    (45) datos -> . FLOAT
    (46) datos -> . STRING
    (47) estructurasDatos -> . hash
    (48) estructurasDatos -> . array
    (49) estructurasDatos -> . set
    (68) expresion -> . operacion
    (69) expresion -> . LPARENTHESES operacion RPARENTHESES
    (70) expresion -> . LPARENTHESES operacion RPARENTHESES masoperaciones
    (29) declaracion -> . tiposvariables EQUAL datos
    (30) declaracion -> . tiposvariables EQUAL estructurasDatos
    (31) declaracion -> . tiposvariables EQUAL expresion
    (32) declaracion -> . tiposvariables EQUAL declaracion
    (50) hash -> . LCURLYBRACKET elementoHash RCURLYBRACKET
    (81) array -> . LBRACKET RBRACKET
    (82) array -> . LBRACKET datosarray RBRACKET
    (119) set -> . SET LBRACKET elementoSet RBRACKET
    (71) operacion -> . number operador number
    (72) operacion -> . operacion masoperaciones
    (41) tiposvariables -> . VAR
    (42) tiposvariables -> . LOCALVAR
    (43) tiposvariables -> . CONSTANT
    (66) number -> . INTEGER
    (67) number -> . FLOAT

    INTEGER         shift and go to state 61
    FLOAT           shift and go to state 62
    STRING          shift and go to state 63
    LPARENTHESES    shift and go to state 101
    LCURLYBRACKET   shift and go to state 28
    LBRACKET        shift and go to state 25
    SET             shift and go to state 29
    VAR             shift and go to state 26
    LOCALVAR        shift and go to state 67
    CONSTANT        shift and go to state 27

    tiposvariables                 shift and go to state 16
    datos                          shift and go to state 93
    estructurasDatos               shift and go to state 94
    expresion                      shift and go to state 95
    declaracion                    shift and go to state 96
    hash                           shift and go to state 97
    array                          shift and go to state 98
    set                            shift and go to state 99
    operacion                      shift and go to state 100
    number                         shift and go to state 102

state 48

    (28) loop -> FOR LOCALVAR . IN rango cuerpo END

    IN              shift and go to state 103


state 49

    (55) operacionHash -> hash LBRACKET . datos RBRACKET
    (56) operacionHash -> hash LBRACKET . datos RBRACKET EQUAL datos
    (44) datos -> . INTEGER
    (45) datos -> . FLOAT
    (46) datos -> . STRING

    INTEGER         shift and go to state 68
    FLOAT           shift and go to state 69
    STRING          shift and go to state 63

    datos                          shift and go to state 104

state 50

    (57) operacionHash -> hash DOT . INCLUDE QUESTIONMARK LPARENTHESES datos RPARENTHESES
    (58) operacionHash -> hash DOT . DELETE LPARENTHESES datos RPARENTHESES
    (59) operacionHash -> hash DOT . KEYS

    INCLUDE         shift and go to state 105
    DELETE          shift and go to state 106
    KEYS            shift and go to state 107


state 51

    (89) operacionarray -> array LBRACKET . INTEGER RBRACKET

    INTEGER         shift and go to state 108


state 52

    (90) operacionarray -> array DOT . TAKE LPARENTHESES INTEGER RPARENTHESES
    (91) operacionarray -> array DOT . DROP LPARENTHESES INTEGER RPARENTHESES
    (92) operacionarray -> array DOT . push maspush
    (97) operacionarray -> array DOT . POP
    (98) operacionarray -> array DOT . POP LPARENTHESES INTEGER RPARENTHESES
    (99) operacionarray -> array DOT . DELETE LPARENTHESES INTEGER RPARENTHESES
    (100) operacionarray -> array DOT . LENGTH LPARENTHESES RPARENTHESES
    (101) operacionarray -> array DOT . EMPTY QUESTIONMARK
    (93) push -> . PUSH LPARENTHESES datosvarios RPARENTHESES
    (94) push -> .

    TAKE            shift and go to state 109
    DROP            shift and go to state 110
    POP             shift and go to state 112
    DELETE          shift and go to state 113
    LENGTH          shift and go to state 114
    EMPTY           shift and go to state 115
    PUSH            shift and go to state 116
    DOT             reduce using rule 94 (push -> .)
    LOCALVAR        reduce using rule 94 (push -> .)
    FOR             reduce using rule 94 (push -> .)
    IF              reduce using rule 94 (push -> .)
    UNLESS          reduce using rule 94 (push -> .)
    PUTS            reduce using rule 94 (push -> .)
    PRINT           reduce using rule 94 (push -> .)
    VAR             reduce using rule 94 (push -> .)
    CONSTANT        reduce using rule 94 (push -> .)
    LCURLYBRACKET   reduce using rule 94 (push -> .)
    LBRACKET        reduce using rule 94 (push -> .)
    SET             reduce using rule 94 (push -> .)
    $end            reduce using rule 94 (push -> .)
    ELSE            reduce using rule 94 (push -> .)
    END             reduce using rule 94 (push -> .)
    RETURN          reduce using rule 94 (push -> .)

    push                           shift and go to state 111

state 53

    (125) operacionSet -> set DOT . ADD LPARENTHESES datos RPARENTHESES
    (126) operacionSet -> set DOT . ADD LPARENTHESES tiposvariables RPARENTHESES
    (127) operacionSet -> set DOT . CLEAR
    (128) operacionSet -> set DOT . DELETE LPARENTHESES datos RPARENTHESES
    (129) operacionSet -> set DOT . DELETE LPARENTHESES tiposvariables RPARENTHESES

    ADD             shift and go to state 117
    CLEAR           shift and go to state 118
    DELETE          shift and go to state 119


state 54

    (104) if -> IF datoscompletos . operadores datoscompletos cuerpo END
    (105) if -> IF datoscompletos . operadores datoscompletos cuerpo else
    (107) operadores -> . DOUBLEEQUAL
    (108) operadores -> . TRIPLEEQUAL
    (109) operadores -> . GREATERTHAN
    (110) operadores -> . NOTEQUAL
    (111) operadores -> . LESSTHAN
    (112) operadores -> . GREQUAL
    (113) operadores -> . LEQUAL

    DOUBLEEQUAL     shift and go to state 121
    TRIPLEEQUAL     shift and go to state 122
    GREATERTHAN     shift and go to state 123
    NOTEQUAL        shift and go to state 124
    LESSTHAN        shift and go to state 125
    GREQUAL         shift and go to state 126
    LEQUAL          shift and go to state 127

    operadores                     shift and go to state 120

state 55

    (102) datoscompletos -> datosvarios .

    DOUBLEEQUAL     reduce using rule 102 (datoscompletos -> datosvarios .)
    TRIPLEEQUAL     reduce using rule 102 (datoscompletos -> datosvarios .)
    GREATERTHAN     reduce using rule 102 (datoscompletos -> datosvarios .)
    NOTEQUAL        reduce using rule 102 (datoscompletos -> datosvarios .)
    LESSTHAN        reduce using rule 102 (datoscompletos -> datosvarios .)
    GREQUAL         reduce using rule 102 (datoscompletos -> datosvarios .)
    LEQUAL          reduce using rule 102 (datoscompletos -> datosvarios .)
    LOCALVAR        reduce using rule 102 (datoscompletos -> datosvarios .)
    FOR             reduce using rule 102 (datoscompletos -> datosvarios .)
    IF              reduce using rule 102 (datoscompletos -> datosvarios .)
    UNLESS          reduce using rule 102 (datoscompletos -> datosvarios .)
    PUTS            reduce using rule 102 (datoscompletos -> datosvarios .)
    PRINT           reduce using rule 102 (datoscompletos -> datosvarios .)
    VAR             reduce using rule 102 (datoscompletos -> datosvarios .)
    CONSTANT        reduce using rule 102 (datoscompletos -> datosvarios .)
    LCURLYBRACKET   reduce using rule 102 (datoscompletos -> datosvarios .)
    LBRACKET        reduce using rule 102 (datoscompletos -> datosvarios .)
    SET             reduce using rule 102 (datoscompletos -> datosvarios .)
    END             reduce using rule 102 (datoscompletos -> datosvarios .)
    ELSE            reduce using rule 102 (datoscompletos -> datosvarios .)


state 56

    (103) datoscompletos -> tiposvariables .

    DOUBLEEQUAL     reduce using rule 103 (datoscompletos -> tiposvariables .)
    TRIPLEEQUAL     reduce using rule 103 (datoscompletos -> tiposvariables .)
    GREATERTHAN     reduce using rule 103 (datoscompletos -> tiposvariables .)
    NOTEQUAL        reduce using rule 103 (datoscompletos -> tiposvariables .)
    LESSTHAN        reduce using rule 103 (datoscompletos -> tiposvariables .)
    GREQUAL         reduce using rule 103 (datoscompletos -> tiposvariables .)
    LEQUAL          reduce using rule 103 (datoscompletos -> tiposvariables .)
    LOCALVAR        reduce using rule 103 (datoscompletos -> tiposvariables .)
    FOR             reduce using rule 103 (datoscompletos -> tiposvariables .)
    IF              reduce using rule 103 (datoscompletos -> tiposvariables .)
    UNLESS          reduce using rule 103 (datoscompletos -> tiposvariables .)
    PUTS            reduce using rule 103 (datoscompletos -> tiposvariables .)
    PRINT           reduce using rule 103 (datoscompletos -> tiposvariables .)
    VAR             reduce using rule 103 (datoscompletos -> tiposvariables .)
    CONSTANT        reduce using rule 103 (datoscompletos -> tiposvariables .)
    LCURLYBRACKET   reduce using rule 103 (datoscompletos -> tiposvariables .)
    LBRACKET        reduce using rule 103 (datoscompletos -> tiposvariables .)
    SET             reduce using rule 103 (datoscompletos -> tiposvariables .)
    END             reduce using rule 103 (datoscompletos -> tiposvariables .)
    ELSE            reduce using rule 103 (datoscompletos -> tiposvariables .)


state 57

    (83) datosvarios -> datos .

    DOUBLEEQUAL     reduce using rule 83 (datosvarios -> datos .)
    TRIPLEEQUAL     reduce using rule 83 (datosvarios -> datos .)
    GREATERTHAN     reduce using rule 83 (datosvarios -> datos .)
    NOTEQUAL        reduce using rule 83 (datosvarios -> datos .)
    LESSTHAN        reduce using rule 83 (datosvarios -> datos .)
    GREQUAL         reduce using rule 83 (datosvarios -> datos .)
    LEQUAL          reduce using rule 83 (datosvarios -> datos .)
    RBRACKET        reduce using rule 83 (datosvarios -> datos .)
    COMMA           reduce using rule 83 (datosvarios -> datos .)
    LOCALVAR        reduce using rule 83 (datosvarios -> datos .)
    FOR             reduce using rule 83 (datosvarios -> datos .)
    IF              reduce using rule 83 (datosvarios -> datos .)
    UNLESS          reduce using rule 83 (datosvarios -> datos .)
    PUTS            reduce using rule 83 (datosvarios -> datos .)
    PRINT           reduce using rule 83 (datosvarios -> datos .)
    VAR             reduce using rule 83 (datosvarios -> datos .)
    CONSTANT        reduce using rule 83 (datosvarios -> datos .)
    LCURLYBRACKET   reduce using rule 83 (datosvarios -> datos .)
    LBRACKET        reduce using rule 83 (datosvarios -> datos .)
    SET             reduce using rule 83 (datosvarios -> datos .)
    END             reduce using rule 83 (datosvarios -> datos .)
    ELSE            reduce using rule 83 (datosvarios -> datos .)
    RPARENTHESES    reduce using rule 83 (datosvarios -> datos .)


state 58

    (84) datosvarios -> number .

    DOUBLEEQUAL     reduce using rule 84 (datosvarios -> number .)
    TRIPLEEQUAL     reduce using rule 84 (datosvarios -> number .)
    GREATERTHAN     reduce using rule 84 (datosvarios -> number .)
    NOTEQUAL        reduce using rule 84 (datosvarios -> number .)
    LESSTHAN        reduce using rule 84 (datosvarios -> number .)
    GREQUAL         reduce using rule 84 (datosvarios -> number .)
    LEQUAL          reduce using rule 84 (datosvarios -> number .)
    RBRACKET        reduce using rule 84 (datosvarios -> number .)
    COMMA           reduce using rule 84 (datosvarios -> number .)
    LOCALVAR        reduce using rule 84 (datosvarios -> number .)
    FOR             reduce using rule 84 (datosvarios -> number .)
    IF              reduce using rule 84 (datosvarios -> number .)
    UNLESS          reduce using rule 84 (datosvarios -> number .)
    PUTS            reduce using rule 84 (datosvarios -> number .)
    PRINT           reduce using rule 84 (datosvarios -> number .)
    VAR             reduce using rule 84 (datosvarios -> number .)
    CONSTANT        reduce using rule 84 (datosvarios -> number .)
    LCURLYBRACKET   reduce using rule 84 (datosvarios -> number .)
    LBRACKET        reduce using rule 84 (datosvarios -> number .)
    SET             reduce using rule 84 (datosvarios -> number .)
    END             reduce using rule 84 (datosvarios -> number .)
    ELSE            reduce using rule 84 (datosvarios -> number .)
    RPARENTHESES    reduce using rule 84 (datosvarios -> number .)


state 59

    (85) datosvarios -> VAR .
    (41) tiposvariables -> VAR .

  ! reduce/reduce conflict for DOUBLEEQUAL resolved using rule 41 (tiposvariables -> VAR .)
  ! reduce/reduce conflict for TRIPLEEQUAL resolved using rule 41 (tiposvariables -> VAR .)
  ! reduce/reduce conflict for GREATERTHAN resolved using rule 41 (tiposvariables -> VAR .)
  ! reduce/reduce conflict for NOTEQUAL resolved using rule 41 (tiposvariables -> VAR .)
  ! reduce/reduce conflict for LESSTHAN resolved using rule 41 (tiposvariables -> VAR .)
  ! reduce/reduce conflict for GREQUAL resolved using rule 41 (tiposvariables -> VAR .)
  ! reduce/reduce conflict for LEQUAL resolved using rule 41 (tiposvariables -> VAR .)
  ! reduce/reduce conflict for LOCALVAR resolved using rule 41 (tiposvariables -> VAR .)
  ! reduce/reduce conflict for FOR resolved using rule 41 (tiposvariables -> VAR .)
  ! reduce/reduce conflict for IF resolved using rule 41 (tiposvariables -> VAR .)
  ! reduce/reduce conflict for UNLESS resolved using rule 41 (tiposvariables -> VAR .)
  ! reduce/reduce conflict for PUTS resolved using rule 41 (tiposvariables -> VAR .)
  ! reduce/reduce conflict for PRINT resolved using rule 41 (tiposvariables -> VAR .)
  ! reduce/reduce conflict for VAR resolved using rule 41 (tiposvariables -> VAR .)
  ! reduce/reduce conflict for CONSTANT resolved using rule 41 (tiposvariables -> VAR .)
  ! reduce/reduce conflict for LCURLYBRACKET resolved using rule 41 (tiposvariables -> VAR .)
  ! reduce/reduce conflict for LBRACKET resolved using rule 41 (tiposvariables -> VAR .)
  ! reduce/reduce conflict for SET resolved using rule 41 (tiposvariables -> VAR .)
  ! reduce/reduce conflict for END resolved using rule 41 (tiposvariables -> VAR .)
  ! reduce/reduce conflict for ELSE resolved using rule 41 (tiposvariables -> VAR .)
    DOUBLEEQUAL     reduce using rule 41 (tiposvariables -> VAR .)
    TRIPLEEQUAL     reduce using rule 41 (tiposvariables -> VAR .)
    GREATERTHAN     reduce using rule 41 (tiposvariables -> VAR .)
    NOTEQUAL        reduce using rule 41 (tiposvariables -> VAR .)
    LESSTHAN        reduce using rule 41 (tiposvariables -> VAR .)
    GREQUAL         reduce using rule 41 (tiposvariables -> VAR .)
    LEQUAL          reduce using rule 41 (tiposvariables -> VAR .)
    LOCALVAR        reduce using rule 41 (tiposvariables -> VAR .)
    FOR             reduce using rule 41 (tiposvariables -> VAR .)
    IF              reduce using rule 41 (tiposvariables -> VAR .)
    UNLESS          reduce using rule 41 (tiposvariables -> VAR .)
    PUTS            reduce using rule 41 (tiposvariables -> VAR .)
    PRINT           reduce using rule 41 (tiposvariables -> VAR .)
    VAR             reduce using rule 41 (tiposvariables -> VAR .)
    CONSTANT        reduce using rule 41 (tiposvariables -> VAR .)
    LCURLYBRACKET   reduce using rule 41 (tiposvariables -> VAR .)
    LBRACKET        reduce using rule 41 (tiposvariables -> VAR .)
    SET             reduce using rule 41 (tiposvariables -> VAR .)
    END             reduce using rule 41 (tiposvariables -> VAR .)
    ELSE            reduce using rule 41 (tiposvariables -> VAR .)

  ! DOUBLEEQUAL     [ reduce using rule 85 (datosvarios -> VAR .) ]
  ! TRIPLEEQUAL     [ reduce using rule 85 (datosvarios -> VAR .) ]
  ! GREATERTHAN     [ reduce using rule 85 (datosvarios -> VAR .) ]
  ! NOTEQUAL        [ reduce using rule 85 (datosvarios -> VAR .) ]
  ! LESSTHAN        [ reduce using rule 85 (datosvarios -> VAR .) ]
  ! GREQUAL         [ reduce using rule 85 (datosvarios -> VAR .) ]
  ! LEQUAL          [ reduce using rule 85 (datosvarios -> VAR .) ]
  ! LOCALVAR        [ reduce using rule 85 (datosvarios -> VAR .) ]
  ! FOR             [ reduce using rule 85 (datosvarios -> VAR .) ]
  ! IF              [ reduce using rule 85 (datosvarios -> VAR .) ]
  ! UNLESS          [ reduce using rule 85 (datosvarios -> VAR .) ]
  ! PUTS            [ reduce using rule 85 (datosvarios -> VAR .) ]
  ! PRINT           [ reduce using rule 85 (datosvarios -> VAR .) ]
  ! VAR             [ reduce using rule 85 (datosvarios -> VAR .) ]
  ! CONSTANT        [ reduce using rule 85 (datosvarios -> VAR .) ]
  ! LCURLYBRACKET   [ reduce using rule 85 (datosvarios -> VAR .) ]
  ! LBRACKET        [ reduce using rule 85 (datosvarios -> VAR .) ]
  ! SET             [ reduce using rule 85 (datosvarios -> VAR .) ]
  ! END             [ reduce using rule 85 (datosvarios -> VAR .) ]
  ! ELSE            [ reduce using rule 85 (datosvarios -> VAR .) ]


state 60

    (86) datosvarios -> LOCALVAR .
    (42) tiposvariables -> LOCALVAR .

  ! reduce/reduce conflict for DOUBLEEQUAL resolved using rule 42 (tiposvariables -> LOCALVAR .)
  ! reduce/reduce conflict for TRIPLEEQUAL resolved using rule 42 (tiposvariables -> LOCALVAR .)
  ! reduce/reduce conflict for GREATERTHAN resolved using rule 42 (tiposvariables -> LOCALVAR .)
  ! reduce/reduce conflict for NOTEQUAL resolved using rule 42 (tiposvariables -> LOCALVAR .)
  ! reduce/reduce conflict for LESSTHAN resolved using rule 42 (tiposvariables -> LOCALVAR .)
  ! reduce/reduce conflict for GREQUAL resolved using rule 42 (tiposvariables -> LOCALVAR .)
  ! reduce/reduce conflict for LEQUAL resolved using rule 42 (tiposvariables -> LOCALVAR .)
  ! reduce/reduce conflict for LOCALVAR resolved using rule 42 (tiposvariables -> LOCALVAR .)
  ! reduce/reduce conflict for FOR resolved using rule 42 (tiposvariables -> LOCALVAR .)
  ! reduce/reduce conflict for IF resolved using rule 42 (tiposvariables -> LOCALVAR .)
  ! reduce/reduce conflict for UNLESS resolved using rule 42 (tiposvariables -> LOCALVAR .)
  ! reduce/reduce conflict for PUTS resolved using rule 42 (tiposvariables -> LOCALVAR .)
  ! reduce/reduce conflict for PRINT resolved using rule 42 (tiposvariables -> LOCALVAR .)
  ! reduce/reduce conflict for VAR resolved using rule 42 (tiposvariables -> LOCALVAR .)
  ! reduce/reduce conflict for CONSTANT resolved using rule 42 (tiposvariables -> LOCALVAR .)
  ! reduce/reduce conflict for LCURLYBRACKET resolved using rule 42 (tiposvariables -> LOCALVAR .)
  ! reduce/reduce conflict for LBRACKET resolved using rule 42 (tiposvariables -> LOCALVAR .)
  ! reduce/reduce conflict for SET resolved using rule 42 (tiposvariables -> LOCALVAR .)
  ! reduce/reduce conflict for END resolved using rule 42 (tiposvariables -> LOCALVAR .)
  ! reduce/reduce conflict for ELSE resolved using rule 42 (tiposvariables -> LOCALVAR .)
    DOUBLEEQUAL     reduce using rule 42 (tiposvariables -> LOCALVAR .)
    TRIPLEEQUAL     reduce using rule 42 (tiposvariables -> LOCALVAR .)
    GREATERTHAN     reduce using rule 42 (tiposvariables -> LOCALVAR .)
    NOTEQUAL        reduce using rule 42 (tiposvariables -> LOCALVAR .)
    LESSTHAN        reduce using rule 42 (tiposvariables -> LOCALVAR .)
    GREQUAL         reduce using rule 42 (tiposvariables -> LOCALVAR .)
    LEQUAL          reduce using rule 42 (tiposvariables -> LOCALVAR .)
    LOCALVAR        reduce using rule 42 (tiposvariables -> LOCALVAR .)
    FOR             reduce using rule 42 (tiposvariables -> LOCALVAR .)
    IF              reduce using rule 42 (tiposvariables -> LOCALVAR .)
    UNLESS          reduce using rule 42 (tiposvariables -> LOCALVAR .)
    PUTS            reduce using rule 42 (tiposvariables -> LOCALVAR .)
    PRINT           reduce using rule 42 (tiposvariables -> LOCALVAR .)
    VAR             reduce using rule 42 (tiposvariables -> LOCALVAR .)
    CONSTANT        reduce using rule 42 (tiposvariables -> LOCALVAR .)
    LCURLYBRACKET   reduce using rule 42 (tiposvariables -> LOCALVAR .)
    LBRACKET        reduce using rule 42 (tiposvariables -> LOCALVAR .)
    SET             reduce using rule 42 (tiposvariables -> LOCALVAR .)
    END             reduce using rule 42 (tiposvariables -> LOCALVAR .)
    ELSE            reduce using rule 42 (tiposvariables -> LOCALVAR .)

  ! DOUBLEEQUAL     [ reduce using rule 86 (datosvarios -> LOCALVAR .) ]
  ! TRIPLEEQUAL     [ reduce using rule 86 (datosvarios -> LOCALVAR .) ]
  ! GREATERTHAN     [ reduce using rule 86 (datosvarios -> LOCALVAR .) ]
  ! NOTEQUAL        [ reduce using rule 86 (datosvarios -> LOCALVAR .) ]
  ! LESSTHAN        [ reduce using rule 86 (datosvarios -> LOCALVAR .) ]
  ! GREQUAL         [ reduce using rule 86 (datosvarios -> LOCALVAR .) ]
  ! LEQUAL          [ reduce using rule 86 (datosvarios -> LOCALVAR .) ]
  ! LOCALVAR        [ reduce using rule 86 (datosvarios -> LOCALVAR .) ]
  ! FOR             [ reduce using rule 86 (datosvarios -> LOCALVAR .) ]
  ! IF              [ reduce using rule 86 (datosvarios -> LOCALVAR .) ]
  ! UNLESS          [ reduce using rule 86 (datosvarios -> LOCALVAR .) ]
  ! PUTS            [ reduce using rule 86 (datosvarios -> LOCALVAR .) ]
  ! PRINT           [ reduce using rule 86 (datosvarios -> LOCALVAR .) ]
  ! VAR             [ reduce using rule 86 (datosvarios -> LOCALVAR .) ]
  ! CONSTANT        [ reduce using rule 86 (datosvarios -> LOCALVAR .) ]
  ! LCURLYBRACKET   [ reduce using rule 86 (datosvarios -> LOCALVAR .) ]
  ! LBRACKET        [ reduce using rule 86 (datosvarios -> LOCALVAR .) ]
  ! SET             [ reduce using rule 86 (datosvarios -> LOCALVAR .) ]
  ! END             [ reduce using rule 86 (datosvarios -> LOCALVAR .) ]
  ! ELSE            [ reduce using rule 86 (datosvarios -> LOCALVAR .) ]


state 61

    (44) datos -> INTEGER .
    (66) number -> INTEGER .

  ! reduce/reduce conflict for DOUBLEEQUAL resolved using rule 44 (datos -> INTEGER .)
  ! reduce/reduce conflict for TRIPLEEQUAL resolved using rule 44 (datos -> INTEGER .)
  ! reduce/reduce conflict for GREATERTHAN resolved using rule 44 (datos -> INTEGER .)
  ! reduce/reduce conflict for NOTEQUAL resolved using rule 44 (datos -> INTEGER .)
  ! reduce/reduce conflict for LESSTHAN resolved using rule 44 (datos -> INTEGER .)
  ! reduce/reduce conflict for GREQUAL resolved using rule 44 (datos -> INTEGER .)
  ! reduce/reduce conflict for LEQUAL resolved using rule 44 (datos -> INTEGER .)
  ! reduce/reduce conflict for RBRACKET resolved using rule 44 (datos -> INTEGER .)
  ! reduce/reduce conflict for COMMA resolved using rule 44 (datos -> INTEGER .)
  ! reduce/reduce conflict for LOCALVAR resolved using rule 44 (datos -> INTEGER .)
  ! reduce/reduce conflict for FOR resolved using rule 44 (datos -> INTEGER .)
  ! reduce/reduce conflict for IF resolved using rule 44 (datos -> INTEGER .)
  ! reduce/reduce conflict for UNLESS resolved using rule 44 (datos -> INTEGER .)
  ! reduce/reduce conflict for PUTS resolved using rule 44 (datos -> INTEGER .)
  ! reduce/reduce conflict for PRINT resolved using rule 44 (datos -> INTEGER .)
  ! reduce/reduce conflict for VAR resolved using rule 44 (datos -> INTEGER .)
  ! reduce/reduce conflict for CONSTANT resolved using rule 44 (datos -> INTEGER .)
  ! reduce/reduce conflict for LCURLYBRACKET resolved using rule 44 (datos -> INTEGER .)
  ! reduce/reduce conflict for LBRACKET resolved using rule 44 (datos -> INTEGER .)
  ! reduce/reduce conflict for SET resolved using rule 44 (datos -> INTEGER .)
  ! reduce/reduce conflict for END resolved using rule 44 (datos -> INTEGER .)
  ! reduce/reduce conflict for ELSE resolved using rule 44 (datos -> INTEGER .)
  ! reduce/reduce conflict for RPARENTHESES resolved using rule 44 (datos -> INTEGER .)
    DOUBLEEQUAL     reduce using rule 44 (datos -> INTEGER .)
    TRIPLEEQUAL     reduce using rule 44 (datos -> INTEGER .)
    GREATERTHAN     reduce using rule 44 (datos -> INTEGER .)
    NOTEQUAL        reduce using rule 44 (datos -> INTEGER .)
    LESSTHAN        reduce using rule 44 (datos -> INTEGER .)
    GREQUAL         reduce using rule 44 (datos -> INTEGER .)
    LEQUAL          reduce using rule 44 (datos -> INTEGER .)
    RBRACKET        reduce using rule 44 (datos -> INTEGER .)
    COMMA           reduce using rule 44 (datos -> INTEGER .)
    LOCALVAR        reduce using rule 44 (datos -> INTEGER .)
    FOR             reduce using rule 44 (datos -> INTEGER .)
    IF              reduce using rule 44 (datos -> INTEGER .)
    UNLESS          reduce using rule 44 (datos -> INTEGER .)
    PUTS            reduce using rule 44 (datos -> INTEGER .)
    PRINT           reduce using rule 44 (datos -> INTEGER .)
    VAR             reduce using rule 44 (datos -> INTEGER .)
    CONSTANT        reduce using rule 44 (datos -> INTEGER .)
    LCURLYBRACKET   reduce using rule 44 (datos -> INTEGER .)
    LBRACKET        reduce using rule 44 (datos -> INTEGER .)
    SET             reduce using rule 44 (datos -> INTEGER .)
    $end            reduce using rule 44 (datos -> INTEGER .)
    ELSE            reduce using rule 44 (datos -> INTEGER .)
    END             reduce using rule 44 (datos -> INTEGER .)
    RETURN          reduce using rule 44 (datos -> INTEGER .)
    RPARENTHESES    reduce using rule 44 (datos -> INTEGER .)
    PLUS            reduce using rule 66 (number -> INTEGER .)
    MINUS           reduce using rule 66 (number -> INTEGER .)
    MULTIPLY        reduce using rule 66 (number -> INTEGER .)
    DIVIDE          reduce using rule 66 (number -> INTEGER .)
    PERCENTAGE      reduce using rule 66 (number -> INTEGER .)

  ! DOUBLEEQUAL     [ reduce using rule 66 (number -> INTEGER .) ]
  ! TRIPLEEQUAL     [ reduce using rule 66 (number -> INTEGER .) ]
  ! GREATERTHAN     [ reduce using rule 66 (number -> INTEGER .) ]
  ! NOTEQUAL        [ reduce using rule 66 (number -> INTEGER .) ]
  ! LESSTHAN        [ reduce using rule 66 (number -> INTEGER .) ]
  ! GREQUAL         [ reduce using rule 66 (number -> INTEGER .) ]
  ! LEQUAL          [ reduce using rule 66 (number -> INTEGER .) ]
  ! RBRACKET        [ reduce using rule 66 (number -> INTEGER .) ]
  ! COMMA           [ reduce using rule 66 (number -> INTEGER .) ]
  ! LOCALVAR        [ reduce using rule 66 (number -> INTEGER .) ]
  ! FOR             [ reduce using rule 66 (number -> INTEGER .) ]
  ! IF              [ reduce using rule 66 (number -> INTEGER .) ]
  ! UNLESS          [ reduce using rule 66 (number -> INTEGER .) ]
  ! PUTS            [ reduce using rule 66 (number -> INTEGER .) ]
  ! PRINT           [ reduce using rule 66 (number -> INTEGER .) ]
  ! VAR             [ reduce using rule 66 (number -> INTEGER .) ]
  ! CONSTANT        [ reduce using rule 66 (number -> INTEGER .) ]
  ! LCURLYBRACKET   [ reduce using rule 66 (number -> INTEGER .) ]
  ! LBRACKET        [ reduce using rule 66 (number -> INTEGER .) ]
  ! SET             [ reduce using rule 66 (number -> INTEGER .) ]
  ! END             [ reduce using rule 66 (number -> INTEGER .) ]
  ! ELSE            [ reduce using rule 66 (number -> INTEGER .) ]
  ! RPARENTHESES    [ reduce using rule 66 (number -> INTEGER .) ]


state 62

    (45) datos -> FLOAT .
    (67) number -> FLOAT .

  ! reduce/reduce conflict for DOUBLEEQUAL resolved using rule 45 (datos -> FLOAT .)
  ! reduce/reduce conflict for TRIPLEEQUAL resolved using rule 45 (datos -> FLOAT .)
  ! reduce/reduce conflict for GREATERTHAN resolved using rule 45 (datos -> FLOAT .)
  ! reduce/reduce conflict for NOTEQUAL resolved using rule 45 (datos -> FLOAT .)
  ! reduce/reduce conflict for LESSTHAN resolved using rule 45 (datos -> FLOAT .)
  ! reduce/reduce conflict for GREQUAL resolved using rule 45 (datos -> FLOAT .)
  ! reduce/reduce conflict for LEQUAL resolved using rule 45 (datos -> FLOAT .)
  ! reduce/reduce conflict for RBRACKET resolved using rule 45 (datos -> FLOAT .)
  ! reduce/reduce conflict for COMMA resolved using rule 45 (datos -> FLOAT .)
  ! reduce/reduce conflict for LOCALVAR resolved using rule 45 (datos -> FLOAT .)
  ! reduce/reduce conflict for FOR resolved using rule 45 (datos -> FLOAT .)
  ! reduce/reduce conflict for IF resolved using rule 45 (datos -> FLOAT .)
  ! reduce/reduce conflict for UNLESS resolved using rule 45 (datos -> FLOAT .)
  ! reduce/reduce conflict for PUTS resolved using rule 45 (datos -> FLOAT .)
  ! reduce/reduce conflict for PRINT resolved using rule 45 (datos -> FLOAT .)
  ! reduce/reduce conflict for VAR resolved using rule 45 (datos -> FLOAT .)
  ! reduce/reduce conflict for CONSTANT resolved using rule 45 (datos -> FLOAT .)
  ! reduce/reduce conflict for LCURLYBRACKET resolved using rule 45 (datos -> FLOAT .)
  ! reduce/reduce conflict for LBRACKET resolved using rule 45 (datos -> FLOAT .)
  ! reduce/reduce conflict for SET resolved using rule 45 (datos -> FLOAT .)
  ! reduce/reduce conflict for END resolved using rule 45 (datos -> FLOAT .)
  ! reduce/reduce conflict for ELSE resolved using rule 45 (datos -> FLOAT .)
  ! reduce/reduce conflict for RPARENTHESES resolved using rule 45 (datos -> FLOAT .)
    DOUBLEEQUAL     reduce using rule 45 (datos -> FLOAT .)
    TRIPLEEQUAL     reduce using rule 45 (datos -> FLOAT .)
    GREATERTHAN     reduce using rule 45 (datos -> FLOAT .)
    NOTEQUAL        reduce using rule 45 (datos -> FLOAT .)
    LESSTHAN        reduce using rule 45 (datos -> FLOAT .)
    GREQUAL         reduce using rule 45 (datos -> FLOAT .)
    LEQUAL          reduce using rule 45 (datos -> FLOAT .)
    RBRACKET        reduce using rule 45 (datos -> FLOAT .)
    COMMA           reduce using rule 45 (datos -> FLOAT .)
    LOCALVAR        reduce using rule 45 (datos -> FLOAT .)
    FOR             reduce using rule 45 (datos -> FLOAT .)
    IF              reduce using rule 45 (datos -> FLOAT .)
    UNLESS          reduce using rule 45 (datos -> FLOAT .)
    PUTS            reduce using rule 45 (datos -> FLOAT .)
    PRINT           reduce using rule 45 (datos -> FLOAT .)
    VAR             reduce using rule 45 (datos -> FLOAT .)
    CONSTANT        reduce using rule 45 (datos -> FLOAT .)
    LCURLYBRACKET   reduce using rule 45 (datos -> FLOAT .)
    LBRACKET        reduce using rule 45 (datos -> FLOAT .)
    SET             reduce using rule 45 (datos -> FLOAT .)
    $end            reduce using rule 45 (datos -> FLOAT .)
    ELSE            reduce using rule 45 (datos -> FLOAT .)
    END             reduce using rule 45 (datos -> FLOAT .)
    RETURN          reduce using rule 45 (datos -> FLOAT .)
    RPARENTHESES    reduce using rule 45 (datos -> FLOAT .)
    PLUS            reduce using rule 67 (number -> FLOAT .)
    MINUS           reduce using rule 67 (number -> FLOAT .)
    MULTIPLY        reduce using rule 67 (number -> FLOAT .)
    DIVIDE          reduce using rule 67 (number -> FLOAT .)
    PERCENTAGE      reduce using rule 67 (number -> FLOAT .)

  ! DOUBLEEQUAL     [ reduce using rule 67 (number -> FLOAT .) ]
  ! TRIPLEEQUAL     [ reduce using rule 67 (number -> FLOAT .) ]
  ! GREATERTHAN     [ reduce using rule 67 (number -> FLOAT .) ]
  ! NOTEQUAL        [ reduce using rule 67 (number -> FLOAT .) ]
  ! LESSTHAN        [ reduce using rule 67 (number -> FLOAT .) ]
  ! GREQUAL         [ reduce using rule 67 (number -> FLOAT .) ]
  ! LEQUAL          [ reduce using rule 67 (number -> FLOAT .) ]
  ! RBRACKET        [ reduce using rule 67 (number -> FLOAT .) ]
  ! COMMA           [ reduce using rule 67 (number -> FLOAT .) ]
  ! LOCALVAR        [ reduce using rule 67 (number -> FLOAT .) ]
  ! FOR             [ reduce using rule 67 (number -> FLOAT .) ]
  ! IF              [ reduce using rule 67 (number -> FLOAT .) ]
  ! UNLESS          [ reduce using rule 67 (number -> FLOAT .) ]
  ! PUTS            [ reduce using rule 67 (number -> FLOAT .) ]
  ! PRINT           [ reduce using rule 67 (number -> FLOAT .) ]
  ! VAR             [ reduce using rule 67 (number -> FLOAT .) ]
  ! CONSTANT        [ reduce using rule 67 (number -> FLOAT .) ]
  ! LCURLYBRACKET   [ reduce using rule 67 (number -> FLOAT .) ]
  ! LBRACKET        [ reduce using rule 67 (number -> FLOAT .) ]
  ! SET             [ reduce using rule 67 (number -> FLOAT .) ]
  ! END             [ reduce using rule 67 (number -> FLOAT .) ]
  ! ELSE            [ reduce using rule 67 (number -> FLOAT .) ]
  ! RPARENTHESES    [ reduce using rule 67 (number -> FLOAT .) ]


state 63

    (46) datos -> STRING .

    DOUBLEEQUAL     reduce using rule 46 (datos -> STRING .)
    TRIPLEEQUAL     reduce using rule 46 (datos -> STRING .)
    GREATERTHAN     reduce using rule 46 (datos -> STRING .)
    NOTEQUAL        reduce using rule 46 (datos -> STRING .)
    LESSTHAN        reduce using rule 46 (datos -> STRING .)
    GREQUAL         reduce using rule 46 (datos -> STRING .)
    LEQUAL          reduce using rule 46 (datos -> STRING .)
    LOCALVAR        reduce using rule 46 (datos -> STRING .)
    FOR             reduce using rule 46 (datos -> STRING .)
    IF              reduce using rule 46 (datos -> STRING .)
    UNLESS          reduce using rule 46 (datos -> STRING .)
    PUTS            reduce using rule 46 (datos -> STRING .)
    PRINT           reduce using rule 46 (datos -> STRING .)
    VAR             reduce using rule 46 (datos -> STRING .)
    CONSTANT        reduce using rule 46 (datos -> STRING .)
    LCURLYBRACKET   reduce using rule 46 (datos -> STRING .)
    LBRACKET        reduce using rule 46 (datos -> STRING .)
    SET             reduce using rule 46 (datos -> STRING .)
    $end            reduce using rule 46 (datos -> STRING .)
    ELSE            reduce using rule 46 (datos -> STRING .)
    END             reduce using rule 46 (datos -> STRING .)
    RETURN          reduce using rule 46 (datos -> STRING .)
    RBRACKET        reduce using rule 46 (datos -> STRING .)
    COMMA           reduce using rule 46 (datos -> STRING .)
    EQUAL           reduce using rule 46 (datos -> STRING .)
    RPARENTHESES    reduce using rule 46 (datos -> STRING .)
    RCURLYBRACKET   reduce using rule 46 (datos -> STRING .)


state 64

    (114) unless -> UNLESS condiciones . cuerpo ELSE cuerpo END
    (17) cuerpo -> . declaracion cuerpo
    (18) cuerpo -> . asignacion cuerpo
    (19) cuerpo -> . loop cuerpo
    (20) cuerpo -> . estructurasDatos cuerpo
    (21) cuerpo -> . if cuerpo
    (22) cuerpo -> . unless cuerpo
    (23) cuerpo -> . impresion cuerpo
    (24) cuerpo -> . operacionSet cuerpo
    (25) cuerpo -> . operacionarray cuerpo
    (26) cuerpo -> . operacionHash cuerpo
    (27) cuerpo -> .
    (29) declaracion -> . tiposvariables EQUAL datos
    (30) declaracion -> . tiposvariables EQUAL estructurasDatos
    (31) declaracion -> . tiposvariables EQUAL expresion
    (32) declaracion -> . tiposvariables EQUAL declaracion
    (33) asignacion -> . LOCALVAR PLUSASSIGN datosAsignacion
    (34) asignacion -> . LOCALVAR MINASSIGN datosAsignacion
    (35) asignacion -> . LOCALVAR DIVASSIGN datosAsignacion
    (36) asignacion -> . LOCALVAR TIMESASSIGN datosAsignacion
    (37) asignacion -> . LOCALVAR MODASSIGN datosAsignacion
    (38) asignacion -> . LOCALVAR EXPASSIGN datosAsignacion
    (28) loop -> . FOR LOCALVAR IN rango cuerpo END
    (47) estructurasDatos -> . hash
    (48) estructurasDatos -> . array
    (49) estructurasDatos -> . set
    (104) if -> . IF datoscompletos operadores datoscompletos cuerpo END
    (105) if -> . IF datoscompletos operadores datoscompletos cuerpo else
    (114) unless -> . UNLESS condiciones cuerpo ELSE cuerpo END
    (62) impresion -> . PUTS datos
    (63) impresion -> . PUTS LOCALVAR
    (64) impresion -> . PRINT datos
    (65) impresion -> . PRINT LOCALVAR
    (125) operacionSet -> . set DOT ADD LPARENTHESES datos RPARENTHESES
    (126) operacionSet -> . set DOT ADD LPARENTHESES tiposvariables RPARENTHESES
    (127) operacionSet -> . set DOT CLEAR
    (128) operacionSet -> . set DOT DELETE LPARENTHESES datos RPARENTHESES
    (129) operacionSet -> . set DOT DELETE LPARENTHESES tiposvariables RPARENTHESES
    (89) operacionarray -> . array LBRACKET INTEGER RBRACKET
    (90) operacionarray -> . array DOT TAKE LPARENTHESES INTEGER RPARENTHESES
    (91) operacionarray -> . array DOT DROP LPARENTHESES INTEGER RPARENTHESES
    (92) operacionarray -> . array DOT push maspush
    (97) operacionarray -> . array DOT POP
    (98) operacionarray -> . array DOT POP LPARENTHESES INTEGER RPARENTHESES
    (99) operacionarray -> . array DOT DELETE LPARENTHESES INTEGER RPARENTHESES
    (100) operacionarray -> . array DOT LENGTH LPARENTHESES RPARENTHESES
    (101) operacionarray -> . array DOT EMPTY QUESTIONMARK
    (55) operacionHash -> . hash LBRACKET datos RBRACKET
    (56) operacionHash -> . hash LBRACKET datos RBRACKET EQUAL datos
    (57) operacionHash -> . hash DOT INCLUDE QUESTIONMARK LPARENTHESES datos RPARENTHESES
    (58) operacionHash -> . hash DOT DELETE LPARENTHESES datos RPARENTHESES
    (59) operacionHash -> . hash DOT KEYS
    (41) tiposvariables -> . VAR
    (42) tiposvariables -> . LOCALVAR
    (43) tiposvariables -> . CONSTANT
    (50) hash -> . LCURLYBRACKET elementoHash RCURLYBRACKET
    (81) array -> . LBRACKET RBRACKET
    (82) array -> . LBRACKET datosarray RBRACKET
    (119) set -> . SET LBRACKET elementoSet RBRACKET

    ELSE            reduce using rule 27 (cuerpo -> .)
    LOCALVAR        shift and go to state 15
    FOR             shift and go to state 17
    IF              shift and go to state 21
    UNLESS          shift and go to state 22
    PUTS            shift and go to state 23
    PRINT           shift and go to state 24
    VAR             shift and go to state 26
    CONSTANT        shift and go to state 27
    LCURLYBRACKET   shift and go to state 28
    LBRACKET        shift and go to state 25
    SET             shift and go to state 29

    cuerpo                         shift and go to state 128
    declaracion                    shift and go to state 4
    asignacion                     shift and go to state 5
    loop                           shift and go to state 6
    estructurasDatos               shift and go to state 7
    if                             shift and go to state 8
    unless                         shift and go to state 9
    impresion                      shift and go to state 10
    operacionSet                   shift and go to state 11
    operacionarray                 shift and go to state 12
    operacionHash                  shift and go to state 13
    tiposvariables                 shift and go to state 16
    hash                           shift and go to state 18
    array                          shift and go to state 19
    set                            shift and go to state 20

state 65

    (115) condiciones -> tiposvariables . operadores tiposvariables
    (117) condiciones -> tiposvariables . operadores datos
    (107) operadores -> . DOUBLEEQUAL
    (108) operadores -> . TRIPLEEQUAL
    (109) operadores -> . GREATERTHAN
    (110) operadores -> . NOTEQUAL
    (111) operadores -> . LESSTHAN
    (112) operadores -> . GREQUAL
    (113) operadores -> . LEQUAL

    DOUBLEEQUAL     shift and go to state 121
    TRIPLEEQUAL     shift and go to state 122
    GREATERTHAN     shift and go to state 123
    NOTEQUAL        shift and go to state 124
    LESSTHAN        shift and go to state 125
    GREQUAL         shift and go to state 126
    LEQUAL          shift and go to state 127

    operadores                     shift and go to state 129

state 66

    (116) condiciones -> datos . operadores datos
    (118) condiciones -> datos . operadores tiposvariables
    (107) operadores -> . DOUBLEEQUAL
    (108) operadores -> . TRIPLEEQUAL
    (109) operadores -> . GREATERTHAN
    (110) operadores -> . NOTEQUAL
    (111) operadores -> . LESSTHAN
    (112) operadores -> . GREQUAL
    (113) operadores -> . LEQUAL

    DOUBLEEQUAL     shift and go to state 121
    TRIPLEEQUAL     shift and go to state 122
    GREATERTHAN     shift and go to state 123
    NOTEQUAL        shift and go to state 124
    LESSTHAN        shift and go to state 125
    GREQUAL         shift and go to state 126
    LEQUAL          shift and go to state 127

    operadores                     shift and go to state 130

state 67

    (42) tiposvariables -> LOCALVAR .

    DOUBLEEQUAL     reduce using rule 42 (tiposvariables -> LOCALVAR .)
    TRIPLEEQUAL     reduce using rule 42 (tiposvariables -> LOCALVAR .)
    GREATERTHAN     reduce using rule 42 (tiposvariables -> LOCALVAR .)
    NOTEQUAL        reduce using rule 42 (tiposvariables -> LOCALVAR .)
    LESSTHAN        reduce using rule 42 (tiposvariables -> LOCALVAR .)
    GREQUAL         reduce using rule 42 (tiposvariables -> LOCALVAR .)
    LEQUAL          reduce using rule 42 (tiposvariables -> LOCALVAR .)
    EQUAL           reduce using rule 42 (tiposvariables -> LOCALVAR .)
    LOCALVAR        reduce using rule 42 (tiposvariables -> LOCALVAR .)
    FOR             reduce using rule 42 (tiposvariables -> LOCALVAR .)
    IF              reduce using rule 42 (tiposvariables -> LOCALVAR .)
    UNLESS          reduce using rule 42 (tiposvariables -> LOCALVAR .)
    PUTS            reduce using rule 42 (tiposvariables -> LOCALVAR .)
    PRINT           reduce using rule 42 (tiposvariables -> LOCALVAR .)
    VAR             reduce using rule 42 (tiposvariables -> LOCALVAR .)
    CONSTANT        reduce using rule 42 (tiposvariables -> LOCALVAR .)
    LCURLYBRACKET   reduce using rule 42 (tiposvariables -> LOCALVAR .)
    LBRACKET        reduce using rule 42 (tiposvariables -> LOCALVAR .)
    SET             reduce using rule 42 (tiposvariables -> LOCALVAR .)
    ELSE            reduce using rule 42 (tiposvariables -> LOCALVAR .)
    RPARENTHESES    reduce using rule 42 (tiposvariables -> LOCALVAR .)


state 68

    (44) datos -> INTEGER .

    DOUBLEEQUAL     reduce using rule 44 (datos -> INTEGER .)
    TRIPLEEQUAL     reduce using rule 44 (datos -> INTEGER .)
    GREATERTHAN     reduce using rule 44 (datos -> INTEGER .)
    NOTEQUAL        reduce using rule 44 (datos -> INTEGER .)
    LESSTHAN        reduce using rule 44 (datos -> INTEGER .)
    GREQUAL         reduce using rule 44 (datos -> INTEGER .)
    LEQUAL          reduce using rule 44 (datos -> INTEGER .)
    LOCALVAR        reduce using rule 44 (datos -> INTEGER .)
    FOR             reduce using rule 44 (datos -> INTEGER .)
    IF              reduce using rule 44 (datos -> INTEGER .)
    UNLESS          reduce using rule 44 (datos -> INTEGER .)
    PUTS            reduce using rule 44 (datos -> INTEGER .)
    PRINT           reduce using rule 44 (datos -> INTEGER .)
    VAR             reduce using rule 44 (datos -> INTEGER .)
    CONSTANT        reduce using rule 44 (datos -> INTEGER .)
    LCURLYBRACKET   reduce using rule 44 (datos -> INTEGER .)
    LBRACKET        reduce using rule 44 (datos -> INTEGER .)
    SET             reduce using rule 44 (datos -> INTEGER .)
    $end            reduce using rule 44 (datos -> INTEGER .)
    ELSE            reduce using rule 44 (datos -> INTEGER .)
    END             reduce using rule 44 (datos -> INTEGER .)
    RETURN          reduce using rule 44 (datos -> INTEGER .)
    EQUAL           reduce using rule 44 (datos -> INTEGER .)
    RBRACKET        reduce using rule 44 (datos -> INTEGER .)
    COMMA           reduce using rule 44 (datos -> INTEGER .)
    RPARENTHESES    reduce using rule 44 (datos -> INTEGER .)
    RCURLYBRACKET   reduce using rule 44 (datos -> INTEGER .)


state 69

    (45) datos -> FLOAT .

    DOUBLEEQUAL     reduce using rule 45 (datos -> FLOAT .)
    TRIPLEEQUAL     reduce using rule 45 (datos -> FLOAT .)
    GREATERTHAN     reduce using rule 45 (datos -> FLOAT .)
    NOTEQUAL        reduce using rule 45 (datos -> FLOAT .)
    LESSTHAN        reduce using rule 45 (datos -> FLOAT .)
    GREQUAL         reduce using rule 45 (datos -> FLOAT .)
    LEQUAL          reduce using rule 45 (datos -> FLOAT .)
    LOCALVAR        reduce using rule 45 (datos -> FLOAT .)
    FOR             reduce using rule 45 (datos -> FLOAT .)
    IF              reduce using rule 45 (datos -> FLOAT .)
    UNLESS          reduce using rule 45 (datos -> FLOAT .)
    PUTS            reduce using rule 45 (datos -> FLOAT .)
    PRINT           reduce using rule 45 (datos -> FLOAT .)
    VAR             reduce using rule 45 (datos -> FLOAT .)
    CONSTANT        reduce using rule 45 (datos -> FLOAT .)
    LCURLYBRACKET   reduce using rule 45 (datos -> FLOAT .)
    LBRACKET        reduce using rule 45 (datos -> FLOAT .)
    SET             reduce using rule 45 (datos -> FLOAT .)
    $end            reduce using rule 45 (datos -> FLOAT .)
    ELSE            reduce using rule 45 (datos -> FLOAT .)
    END             reduce using rule 45 (datos -> FLOAT .)
    RETURN          reduce using rule 45 (datos -> FLOAT .)
    EQUAL           reduce using rule 45 (datos -> FLOAT .)
    RBRACKET        reduce using rule 45 (datos -> FLOAT .)
    COMMA           reduce using rule 45 (datos -> FLOAT .)
    RPARENTHESES    reduce using rule 45 (datos -> FLOAT .)
    RCURLYBRACKET   reduce using rule 45 (datos -> FLOAT .)


state 70

    (62) impresion -> PUTS datos .

    LOCALVAR        reduce using rule 62 (impresion -> PUTS datos .)
    FOR             reduce using rule 62 (impresion -> PUTS datos .)
    IF              reduce using rule 62 (impresion -> PUTS datos .)
    UNLESS          reduce using rule 62 (impresion -> PUTS datos .)
    PUTS            reduce using rule 62 (impresion -> PUTS datos .)
    PRINT           reduce using rule 62 (impresion -> PUTS datos .)
    VAR             reduce using rule 62 (impresion -> PUTS datos .)
    CONSTANT        reduce using rule 62 (impresion -> PUTS datos .)
    LCURLYBRACKET   reduce using rule 62 (impresion -> PUTS datos .)
    LBRACKET        reduce using rule 62 (impresion -> PUTS datos .)
    SET             reduce using rule 62 (impresion -> PUTS datos .)
    $end            reduce using rule 62 (impresion -> PUTS datos .)
    ELSE            reduce using rule 62 (impresion -> PUTS datos .)
    END             reduce using rule 62 (impresion -> PUTS datos .)
    RETURN          reduce using rule 62 (impresion -> PUTS datos .)


state 71

    (63) impresion -> PUTS LOCALVAR .

    LOCALVAR        reduce using rule 63 (impresion -> PUTS LOCALVAR .)
    FOR             reduce using rule 63 (impresion -> PUTS LOCALVAR .)
    IF              reduce using rule 63 (impresion -> PUTS LOCALVAR .)
    UNLESS          reduce using rule 63 (impresion -> PUTS LOCALVAR .)
    PUTS            reduce using rule 63 (impresion -> PUTS LOCALVAR .)
    PRINT           reduce using rule 63 (impresion -> PUTS LOCALVAR .)
    VAR             reduce using rule 63 (impresion -> PUTS LOCALVAR .)
    CONSTANT        reduce using rule 63 (impresion -> PUTS LOCALVAR .)
    LCURLYBRACKET   reduce using rule 63 (impresion -> PUTS LOCALVAR .)
    LBRACKET        reduce using rule 63 (impresion -> PUTS LOCALVAR .)
    SET             reduce using rule 63 (impresion -> PUTS LOCALVAR .)
    $end            reduce using rule 63 (impresion -> PUTS LOCALVAR .)
    ELSE            reduce using rule 63 (impresion -> PUTS LOCALVAR .)
    END             reduce using rule 63 (impresion -> PUTS LOCALVAR .)
    RETURN          reduce using rule 63 (impresion -> PUTS LOCALVAR .)


state 72

    (64) impresion -> PRINT datos .

    LOCALVAR        reduce using rule 64 (impresion -> PRINT datos .)
    FOR             reduce using rule 64 (impresion -> PRINT datos .)
    IF              reduce using rule 64 (impresion -> PRINT datos .)
    UNLESS          reduce using rule 64 (impresion -> PRINT datos .)
    PUTS            reduce using rule 64 (impresion -> PRINT datos .)
    PRINT           reduce using rule 64 (impresion -> PRINT datos .)
    VAR             reduce using rule 64 (impresion -> PRINT datos .)
    CONSTANT        reduce using rule 64 (impresion -> PRINT datos .)
    LCURLYBRACKET   reduce using rule 64 (impresion -> PRINT datos .)
    LBRACKET        reduce using rule 64 (impresion -> PRINT datos .)
    SET             reduce using rule 64 (impresion -> PRINT datos .)
    $end            reduce using rule 64 (impresion -> PRINT datos .)
    ELSE            reduce using rule 64 (impresion -> PRINT datos .)
    END             reduce using rule 64 (impresion -> PRINT datos .)
    RETURN          reduce using rule 64 (impresion -> PRINT datos .)


state 73

    (65) impresion -> PRINT LOCALVAR .

    LOCALVAR        reduce using rule 65 (impresion -> PRINT LOCALVAR .)
    FOR             reduce using rule 65 (impresion -> PRINT LOCALVAR .)
    IF              reduce using rule 65 (impresion -> PRINT LOCALVAR .)
    UNLESS          reduce using rule 65 (impresion -> PRINT LOCALVAR .)
    PUTS            reduce using rule 65 (impresion -> PRINT LOCALVAR .)
    PRINT           reduce using rule 65 (impresion -> PRINT LOCALVAR .)
    VAR             reduce using rule 65 (impresion -> PRINT LOCALVAR .)
    CONSTANT        reduce using rule 65 (impresion -> PRINT LOCALVAR .)
    LCURLYBRACKET   reduce using rule 65 (impresion -> PRINT LOCALVAR .)
    LBRACKET        reduce using rule 65 (impresion -> PRINT LOCALVAR .)
    SET             reduce using rule 65 (impresion -> PRINT LOCALVAR .)
    $end            reduce using rule 65 (impresion -> PRINT LOCALVAR .)
    ELSE            reduce using rule 65 (impresion -> PRINT LOCALVAR .)
    END             reduce using rule 65 (impresion -> PRINT LOCALVAR .)
    RETURN          reduce using rule 65 (impresion -> PRINT LOCALVAR .)


state 74

    (81) array -> LBRACKET RBRACKET .

    LBRACKET        reduce using rule 81 (array -> LBRACKET RBRACKET .)
    DOT             reduce using rule 81 (array -> LBRACKET RBRACKET .)
    LOCALVAR        reduce using rule 81 (array -> LBRACKET RBRACKET .)
    FOR             reduce using rule 81 (array -> LBRACKET RBRACKET .)
    IF              reduce using rule 81 (array -> LBRACKET RBRACKET .)
    UNLESS          reduce using rule 81 (array -> LBRACKET RBRACKET .)
    PUTS            reduce using rule 81 (array -> LBRACKET RBRACKET .)
    PRINT           reduce using rule 81 (array -> LBRACKET RBRACKET .)
    VAR             reduce using rule 81 (array -> LBRACKET RBRACKET .)
    CONSTANT        reduce using rule 81 (array -> LBRACKET RBRACKET .)
    LCURLYBRACKET   reduce using rule 81 (array -> LBRACKET RBRACKET .)
    SET             reduce using rule 81 (array -> LBRACKET RBRACKET .)
    $end            reduce using rule 81 (array -> LBRACKET RBRACKET .)
    ELSE            reduce using rule 81 (array -> LBRACKET RBRACKET .)
    END             reduce using rule 81 (array -> LBRACKET RBRACKET .)
    RETURN          reduce using rule 81 (array -> LBRACKET RBRACKET .)


state 75

    (82) array -> LBRACKET datosarray . RBRACKET
    (88) datosarray -> datosarray . COMMA datosvarios

    RBRACKET        shift and go to state 131
    COMMA           shift and go to state 132


state 76

    (87) datosarray -> datosvarios .

    RBRACKET        reduce using rule 87 (datosarray -> datosvarios .)
    COMMA           reduce using rule 87 (datosarray -> datosvarios .)


state 77

    (85) datosvarios -> VAR .

    RBRACKET        reduce using rule 85 (datosvarios -> VAR .)
    COMMA           reduce using rule 85 (datosvarios -> VAR .)
    RPARENTHESES    reduce using rule 85 (datosvarios -> VAR .)


state 78

    (86) datosvarios -> LOCALVAR .

    RBRACKET        reduce using rule 86 (datosvarios -> LOCALVAR .)
    COMMA           reduce using rule 86 (datosvarios -> LOCALVAR .)
    RPARENTHESES    reduce using rule 86 (datosvarios -> LOCALVAR .)


state 79

    (50) hash -> LCURLYBRACKET elementoHash . RCURLYBRACKET

    RCURLYBRACKET   shift and go to state 133


state 80

    (51) elementoHash -> datos . EQUAL GREATERTHAN datos maselementos

    EQUAL           shift and go to state 134


state 81

    (119) set -> SET LBRACKET . elementoSet RBRACKET
    (120) elementoSet -> .
    (121) elementoSet -> . datos
    (122) elementoSet -> . datos otroElemento
    (44) datos -> . INTEGER
    (45) datos -> . FLOAT
    (46) datos -> . STRING

    RBRACKET        reduce using rule 120 (elementoSet -> .)
    INTEGER         shift and go to state 68
    FLOAT           shift and go to state 69
    STRING          shift and go to state 63

    elementoSet                    shift and go to state 135
    datos                          shift and go to state 136

state 82

    (3) funcion -> DEF LOCALVAR LPARENTHESES . argumentos RPARENTHESES cuerpo END
    (4) funcion -> DEF LOCALVAR LPARENTHESES . argumentos RPARENTHESES cuerpo retornar END
    (5) argumentos -> . variosargumentos
    (6) argumentos -> . MULTIPLY LOCALVAR
    (7) argumentos -> . TWOSTARS LOCALVAR
    (8) argumentos -> . LOCALVAR EQUAL LCURLYBRACKET RCURLYBRACKET
    (9) argumentos -> . LOCALVAR TWOPOINTS datos
    (10) variosargumentos -> . LOCALVAR
    (11) variosargumentos -> . LOCALVAR EQUAL datos
    (12) variosargumentos -> . LOCALVAR masargumentos
    (13) variosargumentos -> . LOCALVAR EQUAL datos masargumentos

    MULTIPLY        shift and go to state 140
    TWOSTARS        shift and go to state 141
    LOCALVAR        shift and go to state 137

    argumentos                     shift and go to state 138
    variosargumentos               shift and go to state 139

state 83

    (40) datosAsignacion -> LOCALVAR .

    LOCALVAR        reduce using rule 40 (datosAsignacion -> LOCALVAR .)
    FOR             reduce using rule 40 (datosAsignacion -> LOCALVAR .)
    IF              reduce using rule 40 (datosAsignacion -> LOCALVAR .)
    UNLESS          reduce using rule 40 (datosAsignacion -> LOCALVAR .)
    PUTS            reduce using rule 40 (datosAsignacion -> LOCALVAR .)
    PRINT           reduce using rule 40 (datosAsignacion -> LOCALVAR .)
    VAR             reduce using rule 40 (datosAsignacion -> LOCALVAR .)
    CONSTANT        reduce using rule 40 (datosAsignacion -> LOCALVAR .)
    LCURLYBRACKET   reduce using rule 40 (datosAsignacion -> LOCALVAR .)
    LBRACKET        reduce using rule 40 (datosAsignacion -> LOCALVAR .)
    SET             reduce using rule 40 (datosAsignacion -> LOCALVAR .)
    $end            reduce using rule 40 (datosAsignacion -> LOCALVAR .)
    ELSE            reduce using rule 40 (datosAsignacion -> LOCALVAR .)
    END             reduce using rule 40 (datosAsignacion -> LOCALVAR .)
    RETURN          reduce using rule 40 (datosAsignacion -> LOCALVAR .)


state 84

    (33) asignacion -> LOCALVAR PLUSASSIGN datosAsignacion .

    LOCALVAR        reduce using rule 33 (asignacion -> LOCALVAR PLUSASSIGN datosAsignacion .)
    FOR             reduce using rule 33 (asignacion -> LOCALVAR PLUSASSIGN datosAsignacion .)
    IF              reduce using rule 33 (asignacion -> LOCALVAR PLUSASSIGN datosAsignacion .)
    UNLESS          reduce using rule 33 (asignacion -> LOCALVAR PLUSASSIGN datosAsignacion .)
    PUTS            reduce using rule 33 (asignacion -> LOCALVAR PLUSASSIGN datosAsignacion .)
    PRINT           reduce using rule 33 (asignacion -> LOCALVAR PLUSASSIGN datosAsignacion .)
    VAR             reduce using rule 33 (asignacion -> LOCALVAR PLUSASSIGN datosAsignacion .)
    CONSTANT        reduce using rule 33 (asignacion -> LOCALVAR PLUSASSIGN datosAsignacion .)
    LCURLYBRACKET   reduce using rule 33 (asignacion -> LOCALVAR PLUSASSIGN datosAsignacion .)
    LBRACKET        reduce using rule 33 (asignacion -> LOCALVAR PLUSASSIGN datosAsignacion .)
    SET             reduce using rule 33 (asignacion -> LOCALVAR PLUSASSIGN datosAsignacion .)
    $end            reduce using rule 33 (asignacion -> LOCALVAR PLUSASSIGN datosAsignacion .)
    ELSE            reduce using rule 33 (asignacion -> LOCALVAR PLUSASSIGN datosAsignacion .)
    END             reduce using rule 33 (asignacion -> LOCALVAR PLUSASSIGN datosAsignacion .)
    RETURN          reduce using rule 33 (asignacion -> LOCALVAR PLUSASSIGN datosAsignacion .)


state 85

    (39) datosAsignacion -> number .

    LOCALVAR        reduce using rule 39 (datosAsignacion -> number .)
    FOR             reduce using rule 39 (datosAsignacion -> number .)
    IF              reduce using rule 39 (datosAsignacion -> number .)
    UNLESS          reduce using rule 39 (datosAsignacion -> number .)
    PUTS            reduce using rule 39 (datosAsignacion -> number .)
    PRINT           reduce using rule 39 (datosAsignacion -> number .)
    VAR             reduce using rule 39 (datosAsignacion -> number .)
    CONSTANT        reduce using rule 39 (datosAsignacion -> number .)
    LCURLYBRACKET   reduce using rule 39 (datosAsignacion -> number .)
    LBRACKET        reduce using rule 39 (datosAsignacion -> number .)
    SET             reduce using rule 39 (datosAsignacion -> number .)
    $end            reduce using rule 39 (datosAsignacion -> number .)
    ELSE            reduce using rule 39 (datosAsignacion -> number .)
    END             reduce using rule 39 (datosAsignacion -> number .)
    RETURN          reduce using rule 39 (datosAsignacion -> number .)


state 86

    (66) number -> INTEGER .

    LOCALVAR        reduce using rule 66 (number -> INTEGER .)
    FOR             reduce using rule 66 (number -> INTEGER .)
    IF              reduce using rule 66 (number -> INTEGER .)
    UNLESS          reduce using rule 66 (number -> INTEGER .)
    PUTS            reduce using rule 66 (number -> INTEGER .)
    PRINT           reduce using rule 66 (number -> INTEGER .)
    VAR             reduce using rule 66 (number -> INTEGER .)
    CONSTANT        reduce using rule 66 (number -> INTEGER .)
    LCURLYBRACKET   reduce using rule 66 (number -> INTEGER .)
    LBRACKET        reduce using rule 66 (number -> INTEGER .)
    SET             reduce using rule 66 (number -> INTEGER .)
    $end            reduce using rule 66 (number -> INTEGER .)
    ELSE            reduce using rule 66 (number -> INTEGER .)
    END             reduce using rule 66 (number -> INTEGER .)
    RETURN          reduce using rule 66 (number -> INTEGER .)
    PLUS            reduce using rule 66 (number -> INTEGER .)
    MINUS           reduce using rule 66 (number -> INTEGER .)
    MULTIPLY        reduce using rule 66 (number -> INTEGER .)
    DIVIDE          reduce using rule 66 (number -> INTEGER .)
    PERCENTAGE      reduce using rule 66 (number -> INTEGER .)
    RPARENTHESES    reduce using rule 66 (number -> INTEGER .)


state 87

    (67) number -> FLOAT .

    LOCALVAR        reduce using rule 67 (number -> FLOAT .)
    FOR             reduce using rule 67 (number -> FLOAT .)
    IF              reduce using rule 67 (number -> FLOAT .)
    UNLESS          reduce using rule 67 (number -> FLOAT .)
    PUTS            reduce using rule 67 (number -> FLOAT .)
    PRINT           reduce using rule 67 (number -> FLOAT .)
    VAR             reduce using rule 67 (number -> FLOAT .)
    CONSTANT        reduce using rule 67 (number -> FLOAT .)
    LCURLYBRACKET   reduce using rule 67 (number -> FLOAT .)
    LBRACKET        reduce using rule 67 (number -> FLOAT .)
    SET             reduce using rule 67 (number -> FLOAT .)
    $end            reduce using rule 67 (number -> FLOAT .)
    ELSE            reduce using rule 67 (number -> FLOAT .)
    END             reduce using rule 67 (number -> FLOAT .)
    RETURN          reduce using rule 67 (number -> FLOAT .)
    PLUS            reduce using rule 67 (number -> FLOAT .)
    MINUS           reduce using rule 67 (number -> FLOAT .)
    MULTIPLY        reduce using rule 67 (number -> FLOAT .)
    DIVIDE          reduce using rule 67 (number -> FLOAT .)
    PERCENTAGE      reduce using rule 67 (number -> FLOAT .)
    RPARENTHESES    reduce using rule 67 (number -> FLOAT .)


state 88

    (34) asignacion -> LOCALVAR MINASSIGN datosAsignacion .

    LOCALVAR        reduce using rule 34 (asignacion -> LOCALVAR MINASSIGN datosAsignacion .)
    FOR             reduce using rule 34 (asignacion -> LOCALVAR MINASSIGN datosAsignacion .)
    IF              reduce using rule 34 (asignacion -> LOCALVAR MINASSIGN datosAsignacion .)
    UNLESS          reduce using rule 34 (asignacion -> LOCALVAR MINASSIGN datosAsignacion .)
    PUTS            reduce using rule 34 (asignacion -> LOCALVAR MINASSIGN datosAsignacion .)
    PRINT           reduce using rule 34 (asignacion -> LOCALVAR MINASSIGN datosAsignacion .)
    VAR             reduce using rule 34 (asignacion -> LOCALVAR MINASSIGN datosAsignacion .)
    CONSTANT        reduce using rule 34 (asignacion -> LOCALVAR MINASSIGN datosAsignacion .)
    LCURLYBRACKET   reduce using rule 34 (asignacion -> LOCALVAR MINASSIGN datosAsignacion .)
    LBRACKET        reduce using rule 34 (asignacion -> LOCALVAR MINASSIGN datosAsignacion .)
    SET             reduce using rule 34 (asignacion -> LOCALVAR MINASSIGN datosAsignacion .)
    $end            reduce using rule 34 (asignacion -> LOCALVAR MINASSIGN datosAsignacion .)
    ELSE            reduce using rule 34 (asignacion -> LOCALVAR MINASSIGN datosAsignacion .)
    END             reduce using rule 34 (asignacion -> LOCALVAR MINASSIGN datosAsignacion .)
    RETURN          reduce using rule 34 (asignacion -> LOCALVAR MINASSIGN datosAsignacion .)


state 89

    (35) asignacion -> LOCALVAR DIVASSIGN datosAsignacion .

    LOCALVAR        reduce using rule 35 (asignacion -> LOCALVAR DIVASSIGN datosAsignacion .)
    FOR             reduce using rule 35 (asignacion -> LOCALVAR DIVASSIGN datosAsignacion .)
    IF              reduce using rule 35 (asignacion -> LOCALVAR DIVASSIGN datosAsignacion .)
    UNLESS          reduce using rule 35 (asignacion -> LOCALVAR DIVASSIGN datosAsignacion .)
    PUTS            reduce using rule 35 (asignacion -> LOCALVAR DIVASSIGN datosAsignacion .)
    PRINT           reduce using rule 35 (asignacion -> LOCALVAR DIVASSIGN datosAsignacion .)
    VAR             reduce using rule 35 (asignacion -> LOCALVAR DIVASSIGN datosAsignacion .)
    CONSTANT        reduce using rule 35 (asignacion -> LOCALVAR DIVASSIGN datosAsignacion .)
    LCURLYBRACKET   reduce using rule 35 (asignacion -> LOCALVAR DIVASSIGN datosAsignacion .)
    LBRACKET        reduce using rule 35 (asignacion -> LOCALVAR DIVASSIGN datosAsignacion .)
    SET             reduce using rule 35 (asignacion -> LOCALVAR DIVASSIGN datosAsignacion .)
    $end            reduce using rule 35 (asignacion -> LOCALVAR DIVASSIGN datosAsignacion .)
    ELSE            reduce using rule 35 (asignacion -> LOCALVAR DIVASSIGN datosAsignacion .)
    END             reduce using rule 35 (asignacion -> LOCALVAR DIVASSIGN datosAsignacion .)
    RETURN          reduce using rule 35 (asignacion -> LOCALVAR DIVASSIGN datosAsignacion .)


state 90

    (36) asignacion -> LOCALVAR TIMESASSIGN datosAsignacion .

    LOCALVAR        reduce using rule 36 (asignacion -> LOCALVAR TIMESASSIGN datosAsignacion .)
    FOR             reduce using rule 36 (asignacion -> LOCALVAR TIMESASSIGN datosAsignacion .)
    IF              reduce using rule 36 (asignacion -> LOCALVAR TIMESASSIGN datosAsignacion .)
    UNLESS          reduce using rule 36 (asignacion -> LOCALVAR TIMESASSIGN datosAsignacion .)
    PUTS            reduce using rule 36 (asignacion -> LOCALVAR TIMESASSIGN datosAsignacion .)
    PRINT           reduce using rule 36 (asignacion -> LOCALVAR TIMESASSIGN datosAsignacion .)
    VAR             reduce using rule 36 (asignacion -> LOCALVAR TIMESASSIGN datosAsignacion .)
    CONSTANT        reduce using rule 36 (asignacion -> LOCALVAR TIMESASSIGN datosAsignacion .)
    LCURLYBRACKET   reduce using rule 36 (asignacion -> LOCALVAR TIMESASSIGN datosAsignacion .)
    LBRACKET        reduce using rule 36 (asignacion -> LOCALVAR TIMESASSIGN datosAsignacion .)
    SET             reduce using rule 36 (asignacion -> LOCALVAR TIMESASSIGN datosAsignacion .)
    $end            reduce using rule 36 (asignacion -> LOCALVAR TIMESASSIGN datosAsignacion .)
    ELSE            reduce using rule 36 (asignacion -> LOCALVAR TIMESASSIGN datosAsignacion .)
    END             reduce using rule 36 (asignacion -> LOCALVAR TIMESASSIGN datosAsignacion .)
    RETURN          reduce using rule 36 (asignacion -> LOCALVAR TIMESASSIGN datosAsignacion .)


state 91

    (37) asignacion -> LOCALVAR MODASSIGN datosAsignacion .

    LOCALVAR        reduce using rule 37 (asignacion -> LOCALVAR MODASSIGN datosAsignacion .)
    FOR             reduce using rule 37 (asignacion -> LOCALVAR MODASSIGN datosAsignacion .)
    IF              reduce using rule 37 (asignacion -> LOCALVAR MODASSIGN datosAsignacion .)
    UNLESS          reduce using rule 37 (asignacion -> LOCALVAR MODASSIGN datosAsignacion .)
    PUTS            reduce using rule 37 (asignacion -> LOCALVAR MODASSIGN datosAsignacion .)
    PRINT           reduce using rule 37 (asignacion -> LOCALVAR MODASSIGN datosAsignacion .)
    VAR             reduce using rule 37 (asignacion -> LOCALVAR MODASSIGN datosAsignacion .)
    CONSTANT        reduce using rule 37 (asignacion -> LOCALVAR MODASSIGN datosAsignacion .)
    LCURLYBRACKET   reduce using rule 37 (asignacion -> LOCALVAR MODASSIGN datosAsignacion .)
    LBRACKET        reduce using rule 37 (asignacion -> LOCALVAR MODASSIGN datosAsignacion .)
    SET             reduce using rule 37 (asignacion -> LOCALVAR MODASSIGN datosAsignacion .)
    $end            reduce using rule 37 (asignacion -> LOCALVAR MODASSIGN datosAsignacion .)
    ELSE            reduce using rule 37 (asignacion -> LOCALVAR MODASSIGN datosAsignacion .)
    END             reduce using rule 37 (asignacion -> LOCALVAR MODASSIGN datosAsignacion .)
    RETURN          reduce using rule 37 (asignacion -> LOCALVAR MODASSIGN datosAsignacion .)


state 92

    (38) asignacion -> LOCALVAR EXPASSIGN datosAsignacion .

    LOCALVAR        reduce using rule 38 (asignacion -> LOCALVAR EXPASSIGN datosAsignacion .)
    FOR             reduce using rule 38 (asignacion -> LOCALVAR EXPASSIGN datosAsignacion .)
    IF              reduce using rule 38 (asignacion -> LOCALVAR EXPASSIGN datosAsignacion .)
    UNLESS          reduce using rule 38 (asignacion -> LOCALVAR EXPASSIGN datosAsignacion .)
    PUTS            reduce using rule 38 (asignacion -> LOCALVAR EXPASSIGN datosAsignacion .)
    PRINT           reduce using rule 38 (asignacion -> LOCALVAR EXPASSIGN datosAsignacion .)
    VAR             reduce using rule 38 (asignacion -> LOCALVAR EXPASSIGN datosAsignacion .)
    CONSTANT        reduce using rule 38 (asignacion -> LOCALVAR EXPASSIGN datosAsignacion .)
    LCURLYBRACKET   reduce using rule 38 (asignacion -> LOCALVAR EXPASSIGN datosAsignacion .)
    LBRACKET        reduce using rule 38 (asignacion -> LOCALVAR EXPASSIGN datosAsignacion .)
    SET             reduce using rule 38 (asignacion -> LOCALVAR EXPASSIGN datosAsignacion .)
    $end            reduce using rule 38 (asignacion -> LOCALVAR EXPASSIGN datosAsignacion .)
    ELSE            reduce using rule 38 (asignacion -> LOCALVAR EXPASSIGN datosAsignacion .)
    END             reduce using rule 38 (asignacion -> LOCALVAR EXPASSIGN datosAsignacion .)
    RETURN          reduce using rule 38 (asignacion -> LOCALVAR EXPASSIGN datosAsignacion .)


state 93

    (29) declaracion -> tiposvariables EQUAL datos .

    LOCALVAR        reduce using rule 29 (declaracion -> tiposvariables EQUAL datos .)
    FOR             reduce using rule 29 (declaracion -> tiposvariables EQUAL datos .)
    IF              reduce using rule 29 (declaracion -> tiposvariables EQUAL datos .)
    UNLESS          reduce using rule 29 (declaracion -> tiposvariables EQUAL datos .)
    PUTS            reduce using rule 29 (declaracion -> tiposvariables EQUAL datos .)
    PRINT           reduce using rule 29 (declaracion -> tiposvariables EQUAL datos .)
    VAR             reduce using rule 29 (declaracion -> tiposvariables EQUAL datos .)
    CONSTANT        reduce using rule 29 (declaracion -> tiposvariables EQUAL datos .)
    LCURLYBRACKET   reduce using rule 29 (declaracion -> tiposvariables EQUAL datos .)
    LBRACKET        reduce using rule 29 (declaracion -> tiposvariables EQUAL datos .)
    SET             reduce using rule 29 (declaracion -> tiposvariables EQUAL datos .)
    $end            reduce using rule 29 (declaracion -> tiposvariables EQUAL datos .)
    ELSE            reduce using rule 29 (declaracion -> tiposvariables EQUAL datos .)
    END             reduce using rule 29 (declaracion -> tiposvariables EQUAL datos .)
    RETURN          reduce using rule 29 (declaracion -> tiposvariables EQUAL datos .)


state 94

    (30) declaracion -> tiposvariables EQUAL estructurasDatos .

    LOCALVAR        reduce using rule 30 (declaracion -> tiposvariables EQUAL estructurasDatos .)
    FOR             reduce using rule 30 (declaracion -> tiposvariables EQUAL estructurasDatos .)
    IF              reduce using rule 30 (declaracion -> tiposvariables EQUAL estructurasDatos .)
    UNLESS          reduce using rule 30 (declaracion -> tiposvariables EQUAL estructurasDatos .)
    PUTS            reduce using rule 30 (declaracion -> tiposvariables EQUAL estructurasDatos .)
    PRINT           reduce using rule 30 (declaracion -> tiposvariables EQUAL estructurasDatos .)
    VAR             reduce using rule 30 (declaracion -> tiposvariables EQUAL estructurasDatos .)
    CONSTANT        reduce using rule 30 (declaracion -> tiposvariables EQUAL estructurasDatos .)
    LCURLYBRACKET   reduce using rule 30 (declaracion -> tiposvariables EQUAL estructurasDatos .)
    LBRACKET        reduce using rule 30 (declaracion -> tiposvariables EQUAL estructurasDatos .)
    SET             reduce using rule 30 (declaracion -> tiposvariables EQUAL estructurasDatos .)
    $end            reduce using rule 30 (declaracion -> tiposvariables EQUAL estructurasDatos .)
    ELSE            reduce using rule 30 (declaracion -> tiposvariables EQUAL estructurasDatos .)
    END             reduce using rule 30 (declaracion -> tiposvariables EQUAL estructurasDatos .)
    RETURN          reduce using rule 30 (declaracion -> tiposvariables EQUAL estructurasDatos .)


state 95

    (31) declaracion -> tiposvariables EQUAL expresion .

    LOCALVAR        reduce using rule 31 (declaracion -> tiposvariables EQUAL expresion .)
    FOR             reduce using rule 31 (declaracion -> tiposvariables EQUAL expresion .)
    IF              reduce using rule 31 (declaracion -> tiposvariables EQUAL expresion .)
    UNLESS          reduce using rule 31 (declaracion -> tiposvariables EQUAL expresion .)
    PUTS            reduce using rule 31 (declaracion -> tiposvariables EQUAL expresion .)
    PRINT           reduce using rule 31 (declaracion -> tiposvariables EQUAL expresion .)
    VAR             reduce using rule 31 (declaracion -> tiposvariables EQUAL expresion .)
    CONSTANT        reduce using rule 31 (declaracion -> tiposvariables EQUAL expresion .)
    LCURLYBRACKET   reduce using rule 31 (declaracion -> tiposvariables EQUAL expresion .)
    LBRACKET        reduce using rule 31 (declaracion -> tiposvariables EQUAL expresion .)
    SET             reduce using rule 31 (declaracion -> tiposvariables EQUAL expresion .)
    $end            reduce using rule 31 (declaracion -> tiposvariables EQUAL expresion .)
    ELSE            reduce using rule 31 (declaracion -> tiposvariables EQUAL expresion .)
    END             reduce using rule 31 (declaracion -> tiposvariables EQUAL expresion .)
    RETURN          reduce using rule 31 (declaracion -> tiposvariables EQUAL expresion .)


state 96

    (32) declaracion -> tiposvariables EQUAL declaracion .

    LOCALVAR        reduce using rule 32 (declaracion -> tiposvariables EQUAL declaracion .)
    FOR             reduce using rule 32 (declaracion -> tiposvariables EQUAL declaracion .)
    IF              reduce using rule 32 (declaracion -> tiposvariables EQUAL declaracion .)
    UNLESS          reduce using rule 32 (declaracion -> tiposvariables EQUAL declaracion .)
    PUTS            reduce using rule 32 (declaracion -> tiposvariables EQUAL declaracion .)
    PRINT           reduce using rule 32 (declaracion -> tiposvariables EQUAL declaracion .)
    VAR             reduce using rule 32 (declaracion -> tiposvariables EQUAL declaracion .)
    CONSTANT        reduce using rule 32 (declaracion -> tiposvariables EQUAL declaracion .)
    LCURLYBRACKET   reduce using rule 32 (declaracion -> tiposvariables EQUAL declaracion .)
    LBRACKET        reduce using rule 32 (declaracion -> tiposvariables EQUAL declaracion .)
    SET             reduce using rule 32 (declaracion -> tiposvariables EQUAL declaracion .)
    $end            reduce using rule 32 (declaracion -> tiposvariables EQUAL declaracion .)
    ELSE            reduce using rule 32 (declaracion -> tiposvariables EQUAL declaracion .)
    END             reduce using rule 32 (declaracion -> tiposvariables EQUAL declaracion .)
    RETURN          reduce using rule 32 (declaracion -> tiposvariables EQUAL declaracion .)


state 97

    (47) estructurasDatos -> hash .

    LOCALVAR        reduce using rule 47 (estructurasDatos -> hash .)
    FOR             reduce using rule 47 (estructurasDatos -> hash .)
    IF              reduce using rule 47 (estructurasDatos -> hash .)
    UNLESS          reduce using rule 47 (estructurasDatos -> hash .)
    PUTS            reduce using rule 47 (estructurasDatos -> hash .)
    PRINT           reduce using rule 47 (estructurasDatos -> hash .)
    VAR             reduce using rule 47 (estructurasDatos -> hash .)
    CONSTANT        reduce using rule 47 (estructurasDatos -> hash .)
    LCURLYBRACKET   reduce using rule 47 (estructurasDatos -> hash .)
    LBRACKET        reduce using rule 47 (estructurasDatos -> hash .)
    SET             reduce using rule 47 (estructurasDatos -> hash .)
    $end            reduce using rule 47 (estructurasDatos -> hash .)
    ELSE            reduce using rule 47 (estructurasDatos -> hash .)
    END             reduce using rule 47 (estructurasDatos -> hash .)
    RETURN          reduce using rule 47 (estructurasDatos -> hash .)


state 98

    (48) estructurasDatos -> array .

    LOCALVAR        reduce using rule 48 (estructurasDatos -> array .)
    FOR             reduce using rule 48 (estructurasDatos -> array .)
    IF              reduce using rule 48 (estructurasDatos -> array .)
    UNLESS          reduce using rule 48 (estructurasDatos -> array .)
    PUTS            reduce using rule 48 (estructurasDatos -> array .)
    PRINT           reduce using rule 48 (estructurasDatos -> array .)
    VAR             reduce using rule 48 (estructurasDatos -> array .)
    CONSTANT        reduce using rule 48 (estructurasDatos -> array .)
    LCURLYBRACKET   reduce using rule 48 (estructurasDatos -> array .)
    LBRACKET        reduce using rule 48 (estructurasDatos -> array .)
    SET             reduce using rule 48 (estructurasDatos -> array .)
    $end            reduce using rule 48 (estructurasDatos -> array .)
    ELSE            reduce using rule 48 (estructurasDatos -> array .)
    END             reduce using rule 48 (estructurasDatos -> array .)
    RETURN          reduce using rule 48 (estructurasDatos -> array .)


state 99

    (49) estructurasDatos -> set .

    LOCALVAR        reduce using rule 49 (estructurasDatos -> set .)
    FOR             reduce using rule 49 (estructurasDatos -> set .)
    IF              reduce using rule 49 (estructurasDatos -> set .)
    UNLESS          reduce using rule 49 (estructurasDatos -> set .)
    PUTS            reduce using rule 49 (estructurasDatos -> set .)
    PRINT           reduce using rule 49 (estructurasDatos -> set .)
    VAR             reduce using rule 49 (estructurasDatos -> set .)
    CONSTANT        reduce using rule 49 (estructurasDatos -> set .)
    LCURLYBRACKET   reduce using rule 49 (estructurasDatos -> set .)
    LBRACKET        reduce using rule 49 (estructurasDatos -> set .)
    SET             reduce using rule 49 (estructurasDatos -> set .)
    $end            reduce using rule 49 (estructurasDatos -> set .)
    ELSE            reduce using rule 49 (estructurasDatos -> set .)
    END             reduce using rule 49 (estructurasDatos -> set .)
    RETURN          reduce using rule 49 (estructurasDatos -> set .)


state 100

    (68) expresion -> operacion .
    (72) operacion -> operacion . masoperaciones
    (73) masoperaciones -> . operador expresion masoperaciones
    (74) masoperaciones -> . operador number
    (75) masoperaciones -> . operador expresion
    (76) operador -> . PLUS
    (77) operador -> . MINUS
    (78) operador -> . MULTIPLY
    (79) operador -> . DIVIDE
    (80) operador -> . PERCENTAGE

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for PERCENTAGE resolved as shift
    LOCALVAR        reduce using rule 68 (expresion -> operacion .)
    FOR             reduce using rule 68 (expresion -> operacion .)
    IF              reduce using rule 68 (expresion -> operacion .)
    UNLESS          reduce using rule 68 (expresion -> operacion .)
    PUTS            reduce using rule 68 (expresion -> operacion .)
    PRINT           reduce using rule 68 (expresion -> operacion .)
    VAR             reduce using rule 68 (expresion -> operacion .)
    CONSTANT        reduce using rule 68 (expresion -> operacion .)
    LCURLYBRACKET   reduce using rule 68 (expresion -> operacion .)
    LBRACKET        reduce using rule 68 (expresion -> operacion .)
    SET             reduce using rule 68 (expresion -> operacion .)
    $end            reduce using rule 68 (expresion -> operacion .)
    ELSE            reduce using rule 68 (expresion -> operacion .)
    END             reduce using rule 68 (expresion -> operacion .)
    RETURN          reduce using rule 68 (expresion -> operacion .)
    RPARENTHESES    reduce using rule 68 (expresion -> operacion .)
    PLUS            shift and go to state 144
    MINUS           shift and go to state 145
    MULTIPLY        shift and go to state 146
    DIVIDE          shift and go to state 147
    PERCENTAGE      shift and go to state 148

  ! PLUS            [ reduce using rule 68 (expresion -> operacion .) ]
  ! MINUS           [ reduce using rule 68 (expresion -> operacion .) ]
  ! MULTIPLY        [ reduce using rule 68 (expresion -> operacion .) ]
  ! DIVIDE          [ reduce using rule 68 (expresion -> operacion .) ]
  ! PERCENTAGE      [ reduce using rule 68 (expresion -> operacion .) ]

    masoperaciones                 shift and go to state 142
    operador                       shift and go to state 143

state 101

    (69) expresion -> LPARENTHESES . operacion RPARENTHESES
    (70) expresion -> LPARENTHESES . operacion RPARENTHESES masoperaciones
    (71) operacion -> . number operador number
    (72) operacion -> . operacion masoperaciones
    (66) number -> . INTEGER
    (67) number -> . FLOAT

    INTEGER         shift and go to state 86
    FLOAT           shift and go to state 87

    operacion                      shift and go to state 149
    number                         shift and go to state 102

state 102

    (71) operacion -> number . operador number
    (76) operador -> . PLUS
    (77) operador -> . MINUS
    (78) operador -> . MULTIPLY
    (79) operador -> . DIVIDE
    (80) operador -> . PERCENTAGE

    PLUS            shift and go to state 144
    MINUS           shift and go to state 145
    MULTIPLY        shift and go to state 146
    DIVIDE          shift and go to state 147
    PERCENTAGE      shift and go to state 148

    operador                       shift and go to state 150

state 103

    (28) loop -> FOR LOCALVAR IN . rango cuerpo END
    (60) rango -> . INTEGER RANGEINCLUSIVE INTEGER
    (61) rango -> . INTEGER RANGEXCLUSIVE INTEGER

    INTEGER         shift and go to state 152

    rango                          shift and go to state 151

state 104

    (55) operacionHash -> hash LBRACKET datos . RBRACKET
    (56) operacionHash -> hash LBRACKET datos . RBRACKET EQUAL datos

    RBRACKET        shift and go to state 153


state 105

    (57) operacionHash -> hash DOT INCLUDE . QUESTIONMARK LPARENTHESES datos RPARENTHESES

    QUESTIONMARK    shift and go to state 154


state 106

    (58) operacionHash -> hash DOT DELETE . LPARENTHESES datos RPARENTHESES

    LPARENTHESES    shift and go to state 155


state 107

    (59) operacionHash -> hash DOT KEYS .

    LOCALVAR        reduce using rule 59 (operacionHash -> hash DOT KEYS .)
    FOR             reduce using rule 59 (operacionHash -> hash DOT KEYS .)
    IF              reduce using rule 59 (operacionHash -> hash DOT KEYS .)
    UNLESS          reduce using rule 59 (operacionHash -> hash DOT KEYS .)
    PUTS            reduce using rule 59 (operacionHash -> hash DOT KEYS .)
    PRINT           reduce using rule 59 (operacionHash -> hash DOT KEYS .)
    VAR             reduce using rule 59 (operacionHash -> hash DOT KEYS .)
    CONSTANT        reduce using rule 59 (operacionHash -> hash DOT KEYS .)
    LCURLYBRACKET   reduce using rule 59 (operacionHash -> hash DOT KEYS .)
    LBRACKET        reduce using rule 59 (operacionHash -> hash DOT KEYS .)
    SET             reduce using rule 59 (operacionHash -> hash DOT KEYS .)
    $end            reduce using rule 59 (operacionHash -> hash DOT KEYS .)
    ELSE            reduce using rule 59 (operacionHash -> hash DOT KEYS .)
    END             reduce using rule 59 (operacionHash -> hash DOT KEYS .)
    RETURN          reduce using rule 59 (operacionHash -> hash DOT KEYS .)


state 108

    (89) operacionarray -> array LBRACKET INTEGER . RBRACKET

    RBRACKET        shift and go to state 156


state 109

    (90) operacionarray -> array DOT TAKE . LPARENTHESES INTEGER RPARENTHESES

    LPARENTHESES    shift and go to state 157


state 110

    (91) operacionarray -> array DOT DROP . LPARENTHESES INTEGER RPARENTHESES

    LPARENTHESES    shift and go to state 158


state 111

    (92) operacionarray -> array DOT push . maspush
    (95) maspush -> .
    (96) maspush -> . DOT push maspush

    LOCALVAR        reduce using rule 95 (maspush -> .)
    FOR             reduce using rule 95 (maspush -> .)
    IF              reduce using rule 95 (maspush -> .)
    UNLESS          reduce using rule 95 (maspush -> .)
    PUTS            reduce using rule 95 (maspush -> .)
    PRINT           reduce using rule 95 (maspush -> .)
    VAR             reduce using rule 95 (maspush -> .)
    CONSTANT        reduce using rule 95 (maspush -> .)
    LCURLYBRACKET   reduce using rule 95 (maspush -> .)
    LBRACKET        reduce using rule 95 (maspush -> .)
    SET             reduce using rule 95 (maspush -> .)
    $end            reduce using rule 95 (maspush -> .)
    ELSE            reduce using rule 95 (maspush -> .)
    END             reduce using rule 95 (maspush -> .)
    RETURN          reduce using rule 95 (maspush -> .)
    DOT             shift and go to state 159

    maspush                        shift and go to state 160

state 112

    (97) operacionarray -> array DOT POP .
    (98) operacionarray -> array DOT POP . LPARENTHESES INTEGER RPARENTHESES

    LOCALVAR        reduce using rule 97 (operacionarray -> array DOT POP .)
    FOR             reduce using rule 97 (operacionarray -> array DOT POP .)
    IF              reduce using rule 97 (operacionarray -> array DOT POP .)
    UNLESS          reduce using rule 97 (operacionarray -> array DOT POP .)
    PUTS            reduce using rule 97 (operacionarray -> array DOT POP .)
    PRINT           reduce using rule 97 (operacionarray -> array DOT POP .)
    VAR             reduce using rule 97 (operacionarray -> array DOT POP .)
    CONSTANT        reduce using rule 97 (operacionarray -> array DOT POP .)
    LCURLYBRACKET   reduce using rule 97 (operacionarray -> array DOT POP .)
    LBRACKET        reduce using rule 97 (operacionarray -> array DOT POP .)
    SET             reduce using rule 97 (operacionarray -> array DOT POP .)
    $end            reduce using rule 97 (operacionarray -> array DOT POP .)
    ELSE            reduce using rule 97 (operacionarray -> array DOT POP .)
    END             reduce using rule 97 (operacionarray -> array DOT POP .)
    RETURN          reduce using rule 97 (operacionarray -> array DOT POP .)
    LPARENTHESES    shift and go to state 161


state 113

    (99) operacionarray -> array DOT DELETE . LPARENTHESES INTEGER RPARENTHESES

    LPARENTHESES    shift and go to state 162


state 114

    (100) operacionarray -> array DOT LENGTH . LPARENTHESES RPARENTHESES

    LPARENTHESES    shift and go to state 163


state 115

    (101) operacionarray -> array DOT EMPTY . QUESTIONMARK

    QUESTIONMARK    shift and go to state 164


state 116

    (93) push -> PUSH . LPARENTHESES datosvarios RPARENTHESES

    LPARENTHESES    shift and go to state 165


state 117

    (125) operacionSet -> set DOT ADD . LPARENTHESES datos RPARENTHESES
    (126) operacionSet -> set DOT ADD . LPARENTHESES tiposvariables RPARENTHESES

    LPARENTHESES    shift and go to state 166


state 118

    (127) operacionSet -> set DOT CLEAR .

    LOCALVAR        reduce using rule 127 (operacionSet -> set DOT CLEAR .)
    FOR             reduce using rule 127 (operacionSet -> set DOT CLEAR .)
    IF              reduce using rule 127 (operacionSet -> set DOT CLEAR .)
    UNLESS          reduce using rule 127 (operacionSet -> set DOT CLEAR .)
    PUTS            reduce using rule 127 (operacionSet -> set DOT CLEAR .)
    PRINT           reduce using rule 127 (operacionSet -> set DOT CLEAR .)
    VAR             reduce using rule 127 (operacionSet -> set DOT CLEAR .)
    CONSTANT        reduce using rule 127 (operacionSet -> set DOT CLEAR .)
    LCURLYBRACKET   reduce using rule 127 (operacionSet -> set DOT CLEAR .)
    LBRACKET        reduce using rule 127 (operacionSet -> set DOT CLEAR .)
    SET             reduce using rule 127 (operacionSet -> set DOT CLEAR .)
    $end            reduce using rule 127 (operacionSet -> set DOT CLEAR .)
    ELSE            reduce using rule 127 (operacionSet -> set DOT CLEAR .)
    END             reduce using rule 127 (operacionSet -> set DOT CLEAR .)
    RETURN          reduce using rule 127 (operacionSet -> set DOT CLEAR .)


state 119

    (128) operacionSet -> set DOT DELETE . LPARENTHESES datos RPARENTHESES
    (129) operacionSet -> set DOT DELETE . LPARENTHESES tiposvariables RPARENTHESES

    LPARENTHESES    shift and go to state 167


state 120

    (104) if -> IF datoscompletos operadores . datoscompletos cuerpo END
    (105) if -> IF datoscompletos operadores . datoscompletos cuerpo else
    (102) datoscompletos -> . datosvarios
    (103) datoscompletos -> . tiposvariables
    (83) datosvarios -> . datos
    (84) datosvarios -> . number
    (85) datosvarios -> . VAR
    (86) datosvarios -> . LOCALVAR
    (41) tiposvariables -> . VAR
    (42) tiposvariables -> . LOCALVAR
    (43) tiposvariables -> . CONSTANT
    (44) datos -> . INTEGER
    (45) datos -> . FLOAT
    (46) datos -> . STRING
    (66) number -> . INTEGER
    (67) number -> . FLOAT

    VAR             shift and go to state 59
    LOCALVAR        shift and go to state 60
    CONSTANT        shift and go to state 27
    INTEGER         shift and go to state 61
    FLOAT           shift and go to state 62
    STRING          shift and go to state 63

    datoscompletos                 shift and go to state 168
    datosvarios                    shift and go to state 55
    tiposvariables                 shift and go to state 56
    datos                          shift and go to state 57
    number                         shift and go to state 58

state 121

    (107) operadores -> DOUBLEEQUAL .

    VAR             reduce using rule 107 (operadores -> DOUBLEEQUAL .)
    LOCALVAR        reduce using rule 107 (operadores -> DOUBLEEQUAL .)
    CONSTANT        reduce using rule 107 (operadores -> DOUBLEEQUAL .)
    INTEGER         reduce using rule 107 (operadores -> DOUBLEEQUAL .)
    FLOAT           reduce using rule 107 (operadores -> DOUBLEEQUAL .)
    STRING          reduce using rule 107 (operadores -> DOUBLEEQUAL .)


state 122

    (108) operadores -> TRIPLEEQUAL .

    VAR             reduce using rule 108 (operadores -> TRIPLEEQUAL .)
    LOCALVAR        reduce using rule 108 (operadores -> TRIPLEEQUAL .)
    CONSTANT        reduce using rule 108 (operadores -> TRIPLEEQUAL .)
    INTEGER         reduce using rule 108 (operadores -> TRIPLEEQUAL .)
    FLOAT           reduce using rule 108 (operadores -> TRIPLEEQUAL .)
    STRING          reduce using rule 108 (operadores -> TRIPLEEQUAL .)


state 123

    (109) operadores -> GREATERTHAN .

    VAR             reduce using rule 109 (operadores -> GREATERTHAN .)
    LOCALVAR        reduce using rule 109 (operadores -> GREATERTHAN .)
    CONSTANT        reduce using rule 109 (operadores -> GREATERTHAN .)
    INTEGER         reduce using rule 109 (operadores -> GREATERTHAN .)
    FLOAT           reduce using rule 109 (operadores -> GREATERTHAN .)
    STRING          reduce using rule 109 (operadores -> GREATERTHAN .)


state 124

    (110) operadores -> NOTEQUAL .

    VAR             reduce using rule 110 (operadores -> NOTEQUAL .)
    LOCALVAR        reduce using rule 110 (operadores -> NOTEQUAL .)
    CONSTANT        reduce using rule 110 (operadores -> NOTEQUAL .)
    INTEGER         reduce using rule 110 (operadores -> NOTEQUAL .)
    FLOAT           reduce using rule 110 (operadores -> NOTEQUAL .)
    STRING          reduce using rule 110 (operadores -> NOTEQUAL .)


state 125

    (111) operadores -> LESSTHAN .

    VAR             reduce using rule 111 (operadores -> LESSTHAN .)
    LOCALVAR        reduce using rule 111 (operadores -> LESSTHAN .)
    CONSTANT        reduce using rule 111 (operadores -> LESSTHAN .)
    INTEGER         reduce using rule 111 (operadores -> LESSTHAN .)
    FLOAT           reduce using rule 111 (operadores -> LESSTHAN .)
    STRING          reduce using rule 111 (operadores -> LESSTHAN .)


state 126

    (112) operadores -> GREQUAL .

    VAR             reduce using rule 112 (operadores -> GREQUAL .)
    LOCALVAR        reduce using rule 112 (operadores -> GREQUAL .)
    CONSTANT        reduce using rule 112 (operadores -> GREQUAL .)
    INTEGER         reduce using rule 112 (operadores -> GREQUAL .)
    FLOAT           reduce using rule 112 (operadores -> GREQUAL .)
    STRING          reduce using rule 112 (operadores -> GREQUAL .)


state 127

    (113) operadores -> LEQUAL .

    VAR             reduce using rule 113 (operadores -> LEQUAL .)
    LOCALVAR        reduce using rule 113 (operadores -> LEQUAL .)
    CONSTANT        reduce using rule 113 (operadores -> LEQUAL .)
    INTEGER         reduce using rule 113 (operadores -> LEQUAL .)
    FLOAT           reduce using rule 113 (operadores -> LEQUAL .)
    STRING          reduce using rule 113 (operadores -> LEQUAL .)


state 128

    (114) unless -> UNLESS condiciones cuerpo . ELSE cuerpo END

    ELSE            shift and go to state 169


state 129

    (115) condiciones -> tiposvariables operadores . tiposvariables
    (117) condiciones -> tiposvariables operadores . datos
    (41) tiposvariables -> . VAR
    (42) tiposvariables -> . LOCALVAR
    (43) tiposvariables -> . CONSTANT
    (44) datos -> . INTEGER
    (45) datos -> . FLOAT
    (46) datos -> . STRING

    VAR             shift and go to state 26
    LOCALVAR        shift and go to state 67
    CONSTANT        shift and go to state 27
    INTEGER         shift and go to state 68
    FLOAT           shift and go to state 69
    STRING          shift and go to state 63

    tiposvariables                 shift and go to state 170
    datos                          shift and go to state 171

state 130

    (116) condiciones -> datos operadores . datos
    (118) condiciones -> datos operadores . tiposvariables
    (44) datos -> . INTEGER
    (45) datos -> . FLOAT
    (46) datos -> . STRING
    (41) tiposvariables -> . VAR
    (42) tiposvariables -> . LOCALVAR
    (43) tiposvariables -> . CONSTANT

    INTEGER         shift and go to state 68
    FLOAT           shift and go to state 69
    STRING          shift and go to state 63
    VAR             shift and go to state 26
    LOCALVAR        shift and go to state 67
    CONSTANT        shift and go to state 27

    datos                          shift and go to state 172
    tiposvariables                 shift and go to state 173

state 131

    (82) array -> LBRACKET datosarray RBRACKET .

    LBRACKET        reduce using rule 82 (array -> LBRACKET datosarray RBRACKET .)
    DOT             reduce using rule 82 (array -> LBRACKET datosarray RBRACKET .)
    LOCALVAR        reduce using rule 82 (array -> LBRACKET datosarray RBRACKET .)
    FOR             reduce using rule 82 (array -> LBRACKET datosarray RBRACKET .)
    IF              reduce using rule 82 (array -> LBRACKET datosarray RBRACKET .)
    UNLESS          reduce using rule 82 (array -> LBRACKET datosarray RBRACKET .)
    PUTS            reduce using rule 82 (array -> LBRACKET datosarray RBRACKET .)
    PRINT           reduce using rule 82 (array -> LBRACKET datosarray RBRACKET .)
    VAR             reduce using rule 82 (array -> LBRACKET datosarray RBRACKET .)
    CONSTANT        reduce using rule 82 (array -> LBRACKET datosarray RBRACKET .)
    LCURLYBRACKET   reduce using rule 82 (array -> LBRACKET datosarray RBRACKET .)
    SET             reduce using rule 82 (array -> LBRACKET datosarray RBRACKET .)
    $end            reduce using rule 82 (array -> LBRACKET datosarray RBRACKET .)
    ELSE            reduce using rule 82 (array -> LBRACKET datosarray RBRACKET .)
    END             reduce using rule 82 (array -> LBRACKET datosarray RBRACKET .)
    RETURN          reduce using rule 82 (array -> LBRACKET datosarray RBRACKET .)


state 132

    (88) datosarray -> datosarray COMMA . datosvarios
    (83) datosvarios -> . datos
    (84) datosvarios -> . number
    (85) datosvarios -> . VAR
    (86) datosvarios -> . LOCALVAR
    (44) datos -> . INTEGER
    (45) datos -> . FLOAT
    (46) datos -> . STRING
    (66) number -> . INTEGER
    (67) number -> . FLOAT

    VAR             shift and go to state 77
    LOCALVAR        shift and go to state 78
    INTEGER         shift and go to state 61
    FLOAT           shift and go to state 62
    STRING          shift and go to state 63

    datosvarios                    shift and go to state 174
    datos                          shift and go to state 57
    number                         shift and go to state 58

state 133

    (50) hash -> LCURLYBRACKET elementoHash RCURLYBRACKET .

    LBRACKET        reduce using rule 50 (hash -> LCURLYBRACKET elementoHash RCURLYBRACKET .)
    DOT             reduce using rule 50 (hash -> LCURLYBRACKET elementoHash RCURLYBRACKET .)
    LOCALVAR        reduce using rule 50 (hash -> LCURLYBRACKET elementoHash RCURLYBRACKET .)
    FOR             reduce using rule 50 (hash -> LCURLYBRACKET elementoHash RCURLYBRACKET .)
    IF              reduce using rule 50 (hash -> LCURLYBRACKET elementoHash RCURLYBRACKET .)
    UNLESS          reduce using rule 50 (hash -> LCURLYBRACKET elementoHash RCURLYBRACKET .)
    PUTS            reduce using rule 50 (hash -> LCURLYBRACKET elementoHash RCURLYBRACKET .)
    PRINT           reduce using rule 50 (hash -> LCURLYBRACKET elementoHash RCURLYBRACKET .)
    VAR             reduce using rule 50 (hash -> LCURLYBRACKET elementoHash RCURLYBRACKET .)
    CONSTANT        reduce using rule 50 (hash -> LCURLYBRACKET elementoHash RCURLYBRACKET .)
    LCURLYBRACKET   reduce using rule 50 (hash -> LCURLYBRACKET elementoHash RCURLYBRACKET .)
    SET             reduce using rule 50 (hash -> LCURLYBRACKET elementoHash RCURLYBRACKET .)
    $end            reduce using rule 50 (hash -> LCURLYBRACKET elementoHash RCURLYBRACKET .)
    ELSE            reduce using rule 50 (hash -> LCURLYBRACKET elementoHash RCURLYBRACKET .)
    END             reduce using rule 50 (hash -> LCURLYBRACKET elementoHash RCURLYBRACKET .)
    RETURN          reduce using rule 50 (hash -> LCURLYBRACKET elementoHash RCURLYBRACKET .)


state 134

    (51) elementoHash -> datos EQUAL . GREATERTHAN datos maselementos

    GREATERTHAN     shift and go to state 175


state 135

    (119) set -> SET LBRACKET elementoSet . RBRACKET

    RBRACKET        shift and go to state 176


state 136

    (121) elementoSet -> datos .
    (122) elementoSet -> datos . otroElemento
    (123) otroElemento -> .
    (124) otroElemento -> . COMMA elementoSet otroElemento

  ! reduce/reduce conflict for RBRACKET resolved using rule 121 (elementoSet -> datos .)
  ! reduce/reduce conflict for COMMA resolved using rule 121 (elementoSet -> datos .)
  ! shift/reduce conflict for COMMA resolved as shift
    RBRACKET        reduce using rule 121 (elementoSet -> datos .)
    COMMA           shift and go to state 178

  ! COMMA           [ reduce using rule 121 (elementoSet -> datos .) ]
  ! RBRACKET        [ reduce using rule 123 (otroElemento -> .) ]
  ! COMMA           [ reduce using rule 123 (otroElemento -> .) ]

    otroElemento                   shift and go to state 177

state 137

    (8) argumentos -> LOCALVAR . EQUAL LCURLYBRACKET RCURLYBRACKET
    (9) argumentos -> LOCALVAR . TWOPOINTS datos
    (10) variosargumentos -> LOCALVAR .
    (11) variosargumentos -> LOCALVAR . EQUAL datos
    (12) variosargumentos -> LOCALVAR . masargumentos
    (13) variosargumentos -> LOCALVAR . EQUAL datos masargumentos
    (14) masargumentos -> . COMMA variosargumentos

    EQUAL           shift and go to state 179
    TWOPOINTS       shift and go to state 180
    RPARENTHESES    reduce using rule 10 (variosargumentos -> LOCALVAR .)
    COMMA           shift and go to state 182

    masargumentos                  shift and go to state 181

state 138

    (3) funcion -> DEF LOCALVAR LPARENTHESES argumentos . RPARENTHESES cuerpo END
    (4) funcion -> DEF LOCALVAR LPARENTHESES argumentos . RPARENTHESES cuerpo retornar END

    RPARENTHESES    shift and go to state 183


state 139

    (5) argumentos -> variosargumentos .

    RPARENTHESES    reduce using rule 5 (argumentos -> variosargumentos .)


state 140

    (6) argumentos -> MULTIPLY . LOCALVAR

    LOCALVAR        shift and go to state 184


state 141

    (7) argumentos -> TWOSTARS . LOCALVAR

    LOCALVAR        shift and go to state 185


state 142

    (72) operacion -> operacion masoperaciones .

    PLUS            reduce using rule 72 (operacion -> operacion masoperaciones .)
    MINUS           reduce using rule 72 (operacion -> operacion masoperaciones .)
    MULTIPLY        reduce using rule 72 (operacion -> operacion masoperaciones .)
    DIVIDE          reduce using rule 72 (operacion -> operacion masoperaciones .)
    PERCENTAGE      reduce using rule 72 (operacion -> operacion masoperaciones .)
    LOCALVAR        reduce using rule 72 (operacion -> operacion masoperaciones .)
    FOR             reduce using rule 72 (operacion -> operacion masoperaciones .)
    IF              reduce using rule 72 (operacion -> operacion masoperaciones .)
    UNLESS          reduce using rule 72 (operacion -> operacion masoperaciones .)
    PUTS            reduce using rule 72 (operacion -> operacion masoperaciones .)
    PRINT           reduce using rule 72 (operacion -> operacion masoperaciones .)
    VAR             reduce using rule 72 (operacion -> operacion masoperaciones .)
    CONSTANT        reduce using rule 72 (operacion -> operacion masoperaciones .)
    LCURLYBRACKET   reduce using rule 72 (operacion -> operacion masoperaciones .)
    LBRACKET        reduce using rule 72 (operacion -> operacion masoperaciones .)
    SET             reduce using rule 72 (operacion -> operacion masoperaciones .)
    $end            reduce using rule 72 (operacion -> operacion masoperaciones .)
    ELSE            reduce using rule 72 (operacion -> operacion masoperaciones .)
    END             reduce using rule 72 (operacion -> operacion masoperaciones .)
    RETURN          reduce using rule 72 (operacion -> operacion masoperaciones .)
    RPARENTHESES    reduce using rule 72 (operacion -> operacion masoperaciones .)


state 143

    (73) masoperaciones -> operador . expresion masoperaciones
    (74) masoperaciones -> operador . number
    (75) masoperaciones -> operador . expresion
    (68) expresion -> . operacion
    (69) expresion -> . LPARENTHESES operacion RPARENTHESES
    (70) expresion -> . LPARENTHESES operacion RPARENTHESES masoperaciones
    (66) number -> . INTEGER
    (67) number -> . FLOAT
    (71) operacion -> . number operador number
    (72) operacion -> . operacion masoperaciones

    LPARENTHESES    shift and go to state 101
    INTEGER         shift and go to state 86
    FLOAT           shift and go to state 87

    expresion                      shift and go to state 186
    number                         shift and go to state 187
    operacion                      shift and go to state 100

state 144

    (76) operador -> PLUS .

    LPARENTHESES    reduce using rule 76 (operador -> PLUS .)
    INTEGER         reduce using rule 76 (operador -> PLUS .)
    FLOAT           reduce using rule 76 (operador -> PLUS .)


state 145

    (77) operador -> MINUS .

    LPARENTHESES    reduce using rule 77 (operador -> MINUS .)
    INTEGER         reduce using rule 77 (operador -> MINUS .)
    FLOAT           reduce using rule 77 (operador -> MINUS .)


state 146

    (78) operador -> MULTIPLY .

    LPARENTHESES    reduce using rule 78 (operador -> MULTIPLY .)
    INTEGER         reduce using rule 78 (operador -> MULTIPLY .)
    FLOAT           reduce using rule 78 (operador -> MULTIPLY .)


state 147

    (79) operador -> DIVIDE .

    LPARENTHESES    reduce using rule 79 (operador -> DIVIDE .)
    INTEGER         reduce using rule 79 (operador -> DIVIDE .)
    FLOAT           reduce using rule 79 (operador -> DIVIDE .)


state 148

    (80) operador -> PERCENTAGE .

    LPARENTHESES    reduce using rule 80 (operador -> PERCENTAGE .)
    INTEGER         reduce using rule 80 (operador -> PERCENTAGE .)
    FLOAT           reduce using rule 80 (operador -> PERCENTAGE .)


state 149

    (69) expresion -> LPARENTHESES operacion . RPARENTHESES
    (70) expresion -> LPARENTHESES operacion . RPARENTHESES masoperaciones
    (72) operacion -> operacion . masoperaciones
    (73) masoperaciones -> . operador expresion masoperaciones
    (74) masoperaciones -> . operador number
    (75) masoperaciones -> . operador expresion
    (76) operador -> . PLUS
    (77) operador -> . MINUS
    (78) operador -> . MULTIPLY
    (79) operador -> . DIVIDE
    (80) operador -> . PERCENTAGE

    RPARENTHESES    shift and go to state 188
    PLUS            shift and go to state 144
    MINUS           shift and go to state 145
    MULTIPLY        shift and go to state 146
    DIVIDE          shift and go to state 147
    PERCENTAGE      shift and go to state 148

    masoperaciones                 shift and go to state 142
    operador                       shift and go to state 143

state 150

    (71) operacion -> number operador . number
    (66) number -> . INTEGER
    (67) number -> . FLOAT

    INTEGER         shift and go to state 86
    FLOAT           shift and go to state 87

    number                         shift and go to state 189

state 151

    (28) loop -> FOR LOCALVAR IN rango . cuerpo END
    (17) cuerpo -> . declaracion cuerpo
    (18) cuerpo -> . asignacion cuerpo
    (19) cuerpo -> . loop cuerpo
    (20) cuerpo -> . estructurasDatos cuerpo
    (21) cuerpo -> . if cuerpo
    (22) cuerpo -> . unless cuerpo
    (23) cuerpo -> . impresion cuerpo
    (24) cuerpo -> . operacionSet cuerpo
    (25) cuerpo -> . operacionarray cuerpo
    (26) cuerpo -> . operacionHash cuerpo
    (27) cuerpo -> .
    (29) declaracion -> . tiposvariables EQUAL datos
    (30) declaracion -> . tiposvariables EQUAL estructurasDatos
    (31) declaracion -> . tiposvariables EQUAL expresion
    (32) declaracion -> . tiposvariables EQUAL declaracion
    (33) asignacion -> . LOCALVAR PLUSASSIGN datosAsignacion
    (34) asignacion -> . LOCALVAR MINASSIGN datosAsignacion
    (35) asignacion -> . LOCALVAR DIVASSIGN datosAsignacion
    (36) asignacion -> . LOCALVAR TIMESASSIGN datosAsignacion
    (37) asignacion -> . LOCALVAR MODASSIGN datosAsignacion
    (38) asignacion -> . LOCALVAR EXPASSIGN datosAsignacion
    (28) loop -> . FOR LOCALVAR IN rango cuerpo END
    (47) estructurasDatos -> . hash
    (48) estructurasDatos -> . array
    (49) estructurasDatos -> . set
    (104) if -> . IF datoscompletos operadores datoscompletos cuerpo END
    (105) if -> . IF datoscompletos operadores datoscompletos cuerpo else
    (114) unless -> . UNLESS condiciones cuerpo ELSE cuerpo END
    (62) impresion -> . PUTS datos
    (63) impresion -> . PUTS LOCALVAR
    (64) impresion -> . PRINT datos
    (65) impresion -> . PRINT LOCALVAR
    (125) operacionSet -> . set DOT ADD LPARENTHESES datos RPARENTHESES
    (126) operacionSet -> . set DOT ADD LPARENTHESES tiposvariables RPARENTHESES
    (127) operacionSet -> . set DOT CLEAR
    (128) operacionSet -> . set DOT DELETE LPARENTHESES datos RPARENTHESES
    (129) operacionSet -> . set DOT DELETE LPARENTHESES tiposvariables RPARENTHESES
    (89) operacionarray -> . array LBRACKET INTEGER RBRACKET
    (90) operacionarray -> . array DOT TAKE LPARENTHESES INTEGER RPARENTHESES
    (91) operacionarray -> . array DOT DROP LPARENTHESES INTEGER RPARENTHESES
    (92) operacionarray -> . array DOT push maspush
    (97) operacionarray -> . array DOT POP
    (98) operacionarray -> . array DOT POP LPARENTHESES INTEGER RPARENTHESES
    (99) operacionarray -> . array DOT DELETE LPARENTHESES INTEGER RPARENTHESES
    (100) operacionarray -> . array DOT LENGTH LPARENTHESES RPARENTHESES
    (101) operacionarray -> . array DOT EMPTY QUESTIONMARK
    (55) operacionHash -> . hash LBRACKET datos RBRACKET
    (56) operacionHash -> . hash LBRACKET datos RBRACKET EQUAL datos
    (57) operacionHash -> . hash DOT INCLUDE QUESTIONMARK LPARENTHESES datos RPARENTHESES
    (58) operacionHash -> . hash DOT DELETE LPARENTHESES datos RPARENTHESES
    (59) operacionHash -> . hash DOT KEYS
    (41) tiposvariables -> . VAR
    (42) tiposvariables -> . LOCALVAR
    (43) tiposvariables -> . CONSTANT
    (50) hash -> . LCURLYBRACKET elementoHash RCURLYBRACKET
    (81) array -> . LBRACKET RBRACKET
    (82) array -> . LBRACKET datosarray RBRACKET
    (119) set -> . SET LBRACKET elementoSet RBRACKET

    END             reduce using rule 27 (cuerpo -> .)
    LOCALVAR        shift and go to state 15
    FOR             shift and go to state 17
    IF              shift and go to state 21
    UNLESS          shift and go to state 22
    PUTS            shift and go to state 23
    PRINT           shift and go to state 24
    VAR             shift and go to state 26
    CONSTANT        shift and go to state 27
    LCURLYBRACKET   shift and go to state 28
    LBRACKET        shift and go to state 25
    SET             shift and go to state 29

    cuerpo                         shift and go to state 190
    declaracion                    shift and go to state 4
    asignacion                     shift and go to state 5
    loop                           shift and go to state 6
    estructurasDatos               shift and go to state 7
    if                             shift and go to state 8
    unless                         shift and go to state 9
    impresion                      shift and go to state 10
    operacionSet                   shift and go to state 11
    operacionarray                 shift and go to state 12
    operacionHash                  shift and go to state 13
    tiposvariables                 shift and go to state 16
    hash                           shift and go to state 18
    array                          shift and go to state 19
    set                            shift and go to state 20

state 152

    (60) rango -> INTEGER . RANGEINCLUSIVE INTEGER
    (61) rango -> INTEGER . RANGEXCLUSIVE INTEGER

    RANGEINCLUSIVE  shift and go to state 191
    RANGEXCLUSIVE   shift and go to state 192


state 153

    (55) operacionHash -> hash LBRACKET datos RBRACKET .
    (56) operacionHash -> hash LBRACKET datos RBRACKET . EQUAL datos

    LOCALVAR        reduce using rule 55 (operacionHash -> hash LBRACKET datos RBRACKET .)
    FOR             reduce using rule 55 (operacionHash -> hash LBRACKET datos RBRACKET .)
    IF              reduce using rule 55 (operacionHash -> hash LBRACKET datos RBRACKET .)
    UNLESS          reduce using rule 55 (operacionHash -> hash LBRACKET datos RBRACKET .)
    PUTS            reduce using rule 55 (operacionHash -> hash LBRACKET datos RBRACKET .)
    PRINT           reduce using rule 55 (operacionHash -> hash LBRACKET datos RBRACKET .)
    VAR             reduce using rule 55 (operacionHash -> hash LBRACKET datos RBRACKET .)
    CONSTANT        reduce using rule 55 (operacionHash -> hash LBRACKET datos RBRACKET .)
    LCURLYBRACKET   reduce using rule 55 (operacionHash -> hash LBRACKET datos RBRACKET .)
    LBRACKET        reduce using rule 55 (operacionHash -> hash LBRACKET datos RBRACKET .)
    SET             reduce using rule 55 (operacionHash -> hash LBRACKET datos RBRACKET .)
    $end            reduce using rule 55 (operacionHash -> hash LBRACKET datos RBRACKET .)
    ELSE            reduce using rule 55 (operacionHash -> hash LBRACKET datos RBRACKET .)
    END             reduce using rule 55 (operacionHash -> hash LBRACKET datos RBRACKET .)
    RETURN          reduce using rule 55 (operacionHash -> hash LBRACKET datos RBRACKET .)
    EQUAL           shift and go to state 193


state 154

    (57) operacionHash -> hash DOT INCLUDE QUESTIONMARK . LPARENTHESES datos RPARENTHESES

    LPARENTHESES    shift and go to state 194


state 155

    (58) operacionHash -> hash DOT DELETE LPARENTHESES . datos RPARENTHESES
    (44) datos -> . INTEGER
    (45) datos -> . FLOAT
    (46) datos -> . STRING

    INTEGER         shift and go to state 68
    FLOAT           shift and go to state 69
    STRING          shift and go to state 63

    datos                          shift and go to state 195

state 156

    (89) operacionarray -> array LBRACKET INTEGER RBRACKET .

    LOCALVAR        reduce using rule 89 (operacionarray -> array LBRACKET INTEGER RBRACKET .)
    FOR             reduce using rule 89 (operacionarray -> array LBRACKET INTEGER RBRACKET .)
    IF              reduce using rule 89 (operacionarray -> array LBRACKET INTEGER RBRACKET .)
    UNLESS          reduce using rule 89 (operacionarray -> array LBRACKET INTEGER RBRACKET .)
    PUTS            reduce using rule 89 (operacionarray -> array LBRACKET INTEGER RBRACKET .)
    PRINT           reduce using rule 89 (operacionarray -> array LBRACKET INTEGER RBRACKET .)
    VAR             reduce using rule 89 (operacionarray -> array LBRACKET INTEGER RBRACKET .)
    CONSTANT        reduce using rule 89 (operacionarray -> array LBRACKET INTEGER RBRACKET .)
    LCURLYBRACKET   reduce using rule 89 (operacionarray -> array LBRACKET INTEGER RBRACKET .)
    LBRACKET        reduce using rule 89 (operacionarray -> array LBRACKET INTEGER RBRACKET .)
    SET             reduce using rule 89 (operacionarray -> array LBRACKET INTEGER RBRACKET .)
    $end            reduce using rule 89 (operacionarray -> array LBRACKET INTEGER RBRACKET .)
    ELSE            reduce using rule 89 (operacionarray -> array LBRACKET INTEGER RBRACKET .)
    END             reduce using rule 89 (operacionarray -> array LBRACKET INTEGER RBRACKET .)
    RETURN          reduce using rule 89 (operacionarray -> array LBRACKET INTEGER RBRACKET .)


state 157

    (90) operacionarray -> array DOT TAKE LPARENTHESES . INTEGER RPARENTHESES

    INTEGER         shift and go to state 196


state 158

    (91) operacionarray -> array DOT DROP LPARENTHESES . INTEGER RPARENTHESES

    INTEGER         shift and go to state 197


state 159

    (96) maspush -> DOT . push maspush
    (93) push -> . PUSH LPARENTHESES datosvarios RPARENTHESES
    (94) push -> .

    PUSH            shift and go to state 116
    DOT             reduce using rule 94 (push -> .)
    LOCALVAR        reduce using rule 94 (push -> .)
    FOR             reduce using rule 94 (push -> .)
    IF              reduce using rule 94 (push -> .)
    UNLESS          reduce using rule 94 (push -> .)
    PUTS            reduce using rule 94 (push -> .)
    PRINT           reduce using rule 94 (push -> .)
    VAR             reduce using rule 94 (push -> .)
    CONSTANT        reduce using rule 94 (push -> .)
    LCURLYBRACKET   reduce using rule 94 (push -> .)
    LBRACKET        reduce using rule 94 (push -> .)
    SET             reduce using rule 94 (push -> .)
    $end            reduce using rule 94 (push -> .)
    ELSE            reduce using rule 94 (push -> .)
    END             reduce using rule 94 (push -> .)
    RETURN          reduce using rule 94 (push -> .)

    push                           shift and go to state 198

state 160

    (92) operacionarray -> array DOT push maspush .

    LOCALVAR        reduce using rule 92 (operacionarray -> array DOT push maspush .)
    FOR             reduce using rule 92 (operacionarray -> array DOT push maspush .)
    IF              reduce using rule 92 (operacionarray -> array DOT push maspush .)
    UNLESS          reduce using rule 92 (operacionarray -> array DOT push maspush .)
    PUTS            reduce using rule 92 (operacionarray -> array DOT push maspush .)
    PRINT           reduce using rule 92 (operacionarray -> array DOT push maspush .)
    VAR             reduce using rule 92 (operacionarray -> array DOT push maspush .)
    CONSTANT        reduce using rule 92 (operacionarray -> array DOT push maspush .)
    LCURLYBRACKET   reduce using rule 92 (operacionarray -> array DOT push maspush .)
    LBRACKET        reduce using rule 92 (operacionarray -> array DOT push maspush .)
    SET             reduce using rule 92 (operacionarray -> array DOT push maspush .)
    $end            reduce using rule 92 (operacionarray -> array DOT push maspush .)
    ELSE            reduce using rule 92 (operacionarray -> array DOT push maspush .)
    END             reduce using rule 92 (operacionarray -> array DOT push maspush .)
    RETURN          reduce using rule 92 (operacionarray -> array DOT push maspush .)


state 161

    (98) operacionarray -> array DOT POP LPARENTHESES . INTEGER RPARENTHESES

    INTEGER         shift and go to state 199


state 162

    (99) operacionarray -> array DOT DELETE LPARENTHESES . INTEGER RPARENTHESES

    INTEGER         shift and go to state 200


state 163

    (100) operacionarray -> array DOT LENGTH LPARENTHESES . RPARENTHESES

    RPARENTHESES    shift and go to state 201


state 164

    (101) operacionarray -> array DOT EMPTY QUESTIONMARK .

    LOCALVAR        reduce using rule 101 (operacionarray -> array DOT EMPTY QUESTIONMARK .)
    FOR             reduce using rule 101 (operacionarray -> array DOT EMPTY QUESTIONMARK .)
    IF              reduce using rule 101 (operacionarray -> array DOT EMPTY QUESTIONMARK .)
    UNLESS          reduce using rule 101 (operacionarray -> array DOT EMPTY QUESTIONMARK .)
    PUTS            reduce using rule 101 (operacionarray -> array DOT EMPTY QUESTIONMARK .)
    PRINT           reduce using rule 101 (operacionarray -> array DOT EMPTY QUESTIONMARK .)
    VAR             reduce using rule 101 (operacionarray -> array DOT EMPTY QUESTIONMARK .)
    CONSTANT        reduce using rule 101 (operacionarray -> array DOT EMPTY QUESTIONMARK .)
    LCURLYBRACKET   reduce using rule 101 (operacionarray -> array DOT EMPTY QUESTIONMARK .)
    LBRACKET        reduce using rule 101 (operacionarray -> array DOT EMPTY QUESTIONMARK .)
    SET             reduce using rule 101 (operacionarray -> array DOT EMPTY QUESTIONMARK .)
    $end            reduce using rule 101 (operacionarray -> array DOT EMPTY QUESTIONMARK .)
    ELSE            reduce using rule 101 (operacionarray -> array DOT EMPTY QUESTIONMARK .)
    END             reduce using rule 101 (operacionarray -> array DOT EMPTY QUESTIONMARK .)
    RETURN          reduce using rule 101 (operacionarray -> array DOT EMPTY QUESTIONMARK .)


state 165

    (93) push -> PUSH LPARENTHESES . datosvarios RPARENTHESES
    (83) datosvarios -> . datos
    (84) datosvarios -> . number
    (85) datosvarios -> . VAR
    (86) datosvarios -> . LOCALVAR
    (44) datos -> . INTEGER
    (45) datos -> . FLOAT
    (46) datos -> . STRING
    (66) number -> . INTEGER
    (67) number -> . FLOAT

    VAR             shift and go to state 77
    LOCALVAR        shift and go to state 78
    INTEGER         shift and go to state 61
    FLOAT           shift and go to state 62
    STRING          shift and go to state 63

    datosvarios                    shift and go to state 202
    datos                          shift and go to state 57
    number                         shift and go to state 58

state 166

    (125) operacionSet -> set DOT ADD LPARENTHESES . datos RPARENTHESES
    (126) operacionSet -> set DOT ADD LPARENTHESES . tiposvariables RPARENTHESES
    (44) datos -> . INTEGER
    (45) datos -> . FLOAT
    (46) datos -> . STRING
    (41) tiposvariables -> . VAR
    (42) tiposvariables -> . LOCALVAR
    (43) tiposvariables -> . CONSTANT

    INTEGER         shift and go to state 68
    FLOAT           shift and go to state 69
    STRING          shift and go to state 63
    VAR             shift and go to state 26
    LOCALVAR        shift and go to state 67
    CONSTANT        shift and go to state 27

    datos                          shift and go to state 203
    tiposvariables                 shift and go to state 204

state 167

    (128) operacionSet -> set DOT DELETE LPARENTHESES . datos RPARENTHESES
    (129) operacionSet -> set DOT DELETE LPARENTHESES . tiposvariables RPARENTHESES
    (44) datos -> . INTEGER
    (45) datos -> . FLOAT
    (46) datos -> . STRING
    (41) tiposvariables -> . VAR
    (42) tiposvariables -> . LOCALVAR
    (43) tiposvariables -> . CONSTANT

    INTEGER         shift and go to state 68
    FLOAT           shift and go to state 69
    STRING          shift and go to state 63
    VAR             shift and go to state 26
    LOCALVAR        shift and go to state 67
    CONSTANT        shift and go to state 27

    datos                          shift and go to state 205
    tiposvariables                 shift and go to state 206

state 168

    (104) if -> IF datoscompletos operadores datoscompletos . cuerpo END
    (105) if -> IF datoscompletos operadores datoscompletos . cuerpo else
    (17) cuerpo -> . declaracion cuerpo
    (18) cuerpo -> . asignacion cuerpo
    (19) cuerpo -> . loop cuerpo
    (20) cuerpo -> . estructurasDatos cuerpo
    (21) cuerpo -> . if cuerpo
    (22) cuerpo -> . unless cuerpo
    (23) cuerpo -> . impresion cuerpo
    (24) cuerpo -> . operacionSet cuerpo
    (25) cuerpo -> . operacionarray cuerpo
    (26) cuerpo -> . operacionHash cuerpo
    (27) cuerpo -> .
    (29) declaracion -> . tiposvariables EQUAL datos
    (30) declaracion -> . tiposvariables EQUAL estructurasDatos
    (31) declaracion -> . tiposvariables EQUAL expresion
    (32) declaracion -> . tiposvariables EQUAL declaracion
    (33) asignacion -> . LOCALVAR PLUSASSIGN datosAsignacion
    (34) asignacion -> . LOCALVAR MINASSIGN datosAsignacion
    (35) asignacion -> . LOCALVAR DIVASSIGN datosAsignacion
    (36) asignacion -> . LOCALVAR TIMESASSIGN datosAsignacion
    (37) asignacion -> . LOCALVAR MODASSIGN datosAsignacion
    (38) asignacion -> . LOCALVAR EXPASSIGN datosAsignacion
    (28) loop -> . FOR LOCALVAR IN rango cuerpo END
    (47) estructurasDatos -> . hash
    (48) estructurasDatos -> . array
    (49) estructurasDatos -> . set
    (104) if -> . IF datoscompletos operadores datoscompletos cuerpo END
    (105) if -> . IF datoscompletos operadores datoscompletos cuerpo else
    (114) unless -> . UNLESS condiciones cuerpo ELSE cuerpo END
    (62) impresion -> . PUTS datos
    (63) impresion -> . PUTS LOCALVAR
    (64) impresion -> . PRINT datos
    (65) impresion -> . PRINT LOCALVAR
    (125) operacionSet -> . set DOT ADD LPARENTHESES datos RPARENTHESES
    (126) operacionSet -> . set DOT ADD LPARENTHESES tiposvariables RPARENTHESES
    (127) operacionSet -> . set DOT CLEAR
    (128) operacionSet -> . set DOT DELETE LPARENTHESES datos RPARENTHESES
    (129) operacionSet -> . set DOT DELETE LPARENTHESES tiposvariables RPARENTHESES
    (89) operacionarray -> . array LBRACKET INTEGER RBRACKET
    (90) operacionarray -> . array DOT TAKE LPARENTHESES INTEGER RPARENTHESES
    (91) operacionarray -> . array DOT DROP LPARENTHESES INTEGER RPARENTHESES
    (92) operacionarray -> . array DOT push maspush
    (97) operacionarray -> . array DOT POP
    (98) operacionarray -> . array DOT POP LPARENTHESES INTEGER RPARENTHESES
    (99) operacionarray -> . array DOT DELETE LPARENTHESES INTEGER RPARENTHESES
    (100) operacionarray -> . array DOT LENGTH LPARENTHESES RPARENTHESES
    (101) operacionarray -> . array DOT EMPTY QUESTIONMARK
    (55) operacionHash -> . hash LBRACKET datos RBRACKET
    (56) operacionHash -> . hash LBRACKET datos RBRACKET EQUAL datos
    (57) operacionHash -> . hash DOT INCLUDE QUESTIONMARK LPARENTHESES datos RPARENTHESES
    (58) operacionHash -> . hash DOT DELETE LPARENTHESES datos RPARENTHESES
    (59) operacionHash -> . hash DOT KEYS
    (41) tiposvariables -> . VAR
    (42) tiposvariables -> . LOCALVAR
    (43) tiposvariables -> . CONSTANT
    (50) hash -> . LCURLYBRACKET elementoHash RCURLYBRACKET
    (81) array -> . LBRACKET RBRACKET
    (82) array -> . LBRACKET datosarray RBRACKET
    (119) set -> . SET LBRACKET elementoSet RBRACKET

    END             reduce using rule 27 (cuerpo -> .)
    ELSE            reduce using rule 27 (cuerpo -> .)
    LOCALVAR        shift and go to state 15
    FOR             shift and go to state 17
    IF              shift and go to state 21
    UNLESS          shift and go to state 22
    PUTS            shift and go to state 23
    PRINT           shift and go to state 24
    VAR             shift and go to state 26
    CONSTANT        shift and go to state 27
    LCURLYBRACKET   shift and go to state 28
    LBRACKET        shift and go to state 25
    SET             shift and go to state 29

    cuerpo                         shift and go to state 207
    declaracion                    shift and go to state 4
    asignacion                     shift and go to state 5
    loop                           shift and go to state 6
    estructurasDatos               shift and go to state 7
    if                             shift and go to state 8
    unless                         shift and go to state 9
    impresion                      shift and go to state 10
    operacionSet                   shift and go to state 11
    operacionarray                 shift and go to state 12
    operacionHash                  shift and go to state 13
    tiposvariables                 shift and go to state 16
    hash                           shift and go to state 18
    array                          shift and go to state 19
    set                            shift and go to state 20

state 169

    (114) unless -> UNLESS condiciones cuerpo ELSE . cuerpo END
    (17) cuerpo -> . declaracion cuerpo
    (18) cuerpo -> . asignacion cuerpo
    (19) cuerpo -> . loop cuerpo
    (20) cuerpo -> . estructurasDatos cuerpo
    (21) cuerpo -> . if cuerpo
    (22) cuerpo -> . unless cuerpo
    (23) cuerpo -> . impresion cuerpo
    (24) cuerpo -> . operacionSet cuerpo
    (25) cuerpo -> . operacionarray cuerpo
    (26) cuerpo -> . operacionHash cuerpo
    (27) cuerpo -> .
    (29) declaracion -> . tiposvariables EQUAL datos
    (30) declaracion -> . tiposvariables EQUAL estructurasDatos
    (31) declaracion -> . tiposvariables EQUAL expresion
    (32) declaracion -> . tiposvariables EQUAL declaracion
    (33) asignacion -> . LOCALVAR PLUSASSIGN datosAsignacion
    (34) asignacion -> . LOCALVAR MINASSIGN datosAsignacion
    (35) asignacion -> . LOCALVAR DIVASSIGN datosAsignacion
    (36) asignacion -> . LOCALVAR TIMESASSIGN datosAsignacion
    (37) asignacion -> . LOCALVAR MODASSIGN datosAsignacion
    (38) asignacion -> . LOCALVAR EXPASSIGN datosAsignacion
    (28) loop -> . FOR LOCALVAR IN rango cuerpo END
    (47) estructurasDatos -> . hash
    (48) estructurasDatos -> . array
    (49) estructurasDatos -> . set
    (104) if -> . IF datoscompletos operadores datoscompletos cuerpo END
    (105) if -> . IF datoscompletos operadores datoscompletos cuerpo else
    (114) unless -> . UNLESS condiciones cuerpo ELSE cuerpo END
    (62) impresion -> . PUTS datos
    (63) impresion -> . PUTS LOCALVAR
    (64) impresion -> . PRINT datos
    (65) impresion -> . PRINT LOCALVAR
    (125) operacionSet -> . set DOT ADD LPARENTHESES datos RPARENTHESES
    (126) operacionSet -> . set DOT ADD LPARENTHESES tiposvariables RPARENTHESES
    (127) operacionSet -> . set DOT CLEAR
    (128) operacionSet -> . set DOT DELETE LPARENTHESES datos RPARENTHESES
    (129) operacionSet -> . set DOT DELETE LPARENTHESES tiposvariables RPARENTHESES
    (89) operacionarray -> . array LBRACKET INTEGER RBRACKET
    (90) operacionarray -> . array DOT TAKE LPARENTHESES INTEGER RPARENTHESES
    (91) operacionarray -> . array DOT DROP LPARENTHESES INTEGER RPARENTHESES
    (92) operacionarray -> . array DOT push maspush
    (97) operacionarray -> . array DOT POP
    (98) operacionarray -> . array DOT POP LPARENTHESES INTEGER RPARENTHESES
    (99) operacionarray -> . array DOT DELETE LPARENTHESES INTEGER RPARENTHESES
    (100) operacionarray -> . array DOT LENGTH LPARENTHESES RPARENTHESES
    (101) operacionarray -> . array DOT EMPTY QUESTIONMARK
    (55) operacionHash -> . hash LBRACKET datos RBRACKET
    (56) operacionHash -> . hash LBRACKET datos RBRACKET EQUAL datos
    (57) operacionHash -> . hash DOT INCLUDE QUESTIONMARK LPARENTHESES datos RPARENTHESES
    (58) operacionHash -> . hash DOT DELETE LPARENTHESES datos RPARENTHESES
    (59) operacionHash -> . hash DOT KEYS
    (41) tiposvariables -> . VAR
    (42) tiposvariables -> . LOCALVAR
    (43) tiposvariables -> . CONSTANT
    (50) hash -> . LCURLYBRACKET elementoHash RCURLYBRACKET
    (81) array -> . LBRACKET RBRACKET
    (82) array -> . LBRACKET datosarray RBRACKET
    (119) set -> . SET LBRACKET elementoSet RBRACKET

    END             reduce using rule 27 (cuerpo -> .)
    LOCALVAR        shift and go to state 15
    FOR             shift and go to state 17
    IF              shift and go to state 21
    UNLESS          shift and go to state 22
    PUTS            shift and go to state 23
    PRINT           shift and go to state 24
    VAR             shift and go to state 26
    CONSTANT        shift and go to state 27
    LCURLYBRACKET   shift and go to state 28
    LBRACKET        shift and go to state 25
    SET             shift and go to state 29

    cuerpo                         shift and go to state 208
    declaracion                    shift and go to state 4
    asignacion                     shift and go to state 5
    loop                           shift and go to state 6
    estructurasDatos               shift and go to state 7
    if                             shift and go to state 8
    unless                         shift and go to state 9
    impresion                      shift and go to state 10
    operacionSet                   shift and go to state 11
    operacionarray                 shift and go to state 12
    operacionHash                  shift and go to state 13
    tiposvariables                 shift and go to state 16
    hash                           shift and go to state 18
    array                          shift and go to state 19
    set                            shift and go to state 20

state 170

    (115) condiciones -> tiposvariables operadores tiposvariables .

    LOCALVAR        reduce using rule 115 (condiciones -> tiposvariables operadores tiposvariables .)
    FOR             reduce using rule 115 (condiciones -> tiposvariables operadores tiposvariables .)
    IF              reduce using rule 115 (condiciones -> tiposvariables operadores tiposvariables .)
    UNLESS          reduce using rule 115 (condiciones -> tiposvariables operadores tiposvariables .)
    PUTS            reduce using rule 115 (condiciones -> tiposvariables operadores tiposvariables .)
    PRINT           reduce using rule 115 (condiciones -> tiposvariables operadores tiposvariables .)
    VAR             reduce using rule 115 (condiciones -> tiposvariables operadores tiposvariables .)
    CONSTANT        reduce using rule 115 (condiciones -> tiposvariables operadores tiposvariables .)
    LCURLYBRACKET   reduce using rule 115 (condiciones -> tiposvariables operadores tiposvariables .)
    LBRACKET        reduce using rule 115 (condiciones -> tiposvariables operadores tiposvariables .)
    SET             reduce using rule 115 (condiciones -> tiposvariables operadores tiposvariables .)
    ELSE            reduce using rule 115 (condiciones -> tiposvariables operadores tiposvariables .)


state 171

    (117) condiciones -> tiposvariables operadores datos .

    LOCALVAR        reduce using rule 117 (condiciones -> tiposvariables operadores datos .)
    FOR             reduce using rule 117 (condiciones -> tiposvariables operadores datos .)
    IF              reduce using rule 117 (condiciones -> tiposvariables operadores datos .)
    UNLESS          reduce using rule 117 (condiciones -> tiposvariables operadores datos .)
    PUTS            reduce using rule 117 (condiciones -> tiposvariables operadores datos .)
    PRINT           reduce using rule 117 (condiciones -> tiposvariables operadores datos .)
    VAR             reduce using rule 117 (condiciones -> tiposvariables operadores datos .)
    CONSTANT        reduce using rule 117 (condiciones -> tiposvariables operadores datos .)
    LCURLYBRACKET   reduce using rule 117 (condiciones -> tiposvariables operadores datos .)
    LBRACKET        reduce using rule 117 (condiciones -> tiposvariables operadores datos .)
    SET             reduce using rule 117 (condiciones -> tiposvariables operadores datos .)
    ELSE            reduce using rule 117 (condiciones -> tiposvariables operadores datos .)


state 172

    (116) condiciones -> datos operadores datos .

    LOCALVAR        reduce using rule 116 (condiciones -> datos operadores datos .)
    FOR             reduce using rule 116 (condiciones -> datos operadores datos .)
    IF              reduce using rule 116 (condiciones -> datos operadores datos .)
    UNLESS          reduce using rule 116 (condiciones -> datos operadores datos .)
    PUTS            reduce using rule 116 (condiciones -> datos operadores datos .)
    PRINT           reduce using rule 116 (condiciones -> datos operadores datos .)
    VAR             reduce using rule 116 (condiciones -> datos operadores datos .)
    CONSTANT        reduce using rule 116 (condiciones -> datos operadores datos .)
    LCURLYBRACKET   reduce using rule 116 (condiciones -> datos operadores datos .)
    LBRACKET        reduce using rule 116 (condiciones -> datos operadores datos .)
    SET             reduce using rule 116 (condiciones -> datos operadores datos .)
    ELSE            reduce using rule 116 (condiciones -> datos operadores datos .)


state 173

    (118) condiciones -> datos operadores tiposvariables .

    LOCALVAR        reduce using rule 118 (condiciones -> datos operadores tiposvariables .)
    FOR             reduce using rule 118 (condiciones -> datos operadores tiposvariables .)
    IF              reduce using rule 118 (condiciones -> datos operadores tiposvariables .)
    UNLESS          reduce using rule 118 (condiciones -> datos operadores tiposvariables .)
    PUTS            reduce using rule 118 (condiciones -> datos operadores tiposvariables .)
    PRINT           reduce using rule 118 (condiciones -> datos operadores tiposvariables .)
    VAR             reduce using rule 118 (condiciones -> datos operadores tiposvariables .)
    CONSTANT        reduce using rule 118 (condiciones -> datos operadores tiposvariables .)
    LCURLYBRACKET   reduce using rule 118 (condiciones -> datos operadores tiposvariables .)
    LBRACKET        reduce using rule 118 (condiciones -> datos operadores tiposvariables .)
    SET             reduce using rule 118 (condiciones -> datos operadores tiposvariables .)
    ELSE            reduce using rule 118 (condiciones -> datos operadores tiposvariables .)


state 174

    (88) datosarray -> datosarray COMMA datosvarios .

    RBRACKET        reduce using rule 88 (datosarray -> datosarray COMMA datosvarios .)
    COMMA           reduce using rule 88 (datosarray -> datosarray COMMA datosvarios .)


state 175

    (51) elementoHash -> datos EQUAL GREATERTHAN . datos maselementos
    (44) datos -> . INTEGER
    (45) datos -> . FLOAT
    (46) datos -> . STRING

    INTEGER         shift and go to state 68
    FLOAT           shift and go to state 69
    STRING          shift and go to state 63

    datos                          shift and go to state 209

state 176

    (119) set -> SET LBRACKET elementoSet RBRACKET .

    DOT             reduce using rule 119 (set -> SET LBRACKET elementoSet RBRACKET .)
    LOCALVAR        reduce using rule 119 (set -> SET LBRACKET elementoSet RBRACKET .)
    FOR             reduce using rule 119 (set -> SET LBRACKET elementoSet RBRACKET .)
    IF              reduce using rule 119 (set -> SET LBRACKET elementoSet RBRACKET .)
    UNLESS          reduce using rule 119 (set -> SET LBRACKET elementoSet RBRACKET .)
    PUTS            reduce using rule 119 (set -> SET LBRACKET elementoSet RBRACKET .)
    PRINT           reduce using rule 119 (set -> SET LBRACKET elementoSet RBRACKET .)
    VAR             reduce using rule 119 (set -> SET LBRACKET elementoSet RBRACKET .)
    CONSTANT        reduce using rule 119 (set -> SET LBRACKET elementoSet RBRACKET .)
    LCURLYBRACKET   reduce using rule 119 (set -> SET LBRACKET elementoSet RBRACKET .)
    LBRACKET        reduce using rule 119 (set -> SET LBRACKET elementoSet RBRACKET .)
    SET             reduce using rule 119 (set -> SET LBRACKET elementoSet RBRACKET .)
    $end            reduce using rule 119 (set -> SET LBRACKET elementoSet RBRACKET .)
    ELSE            reduce using rule 119 (set -> SET LBRACKET elementoSet RBRACKET .)
    END             reduce using rule 119 (set -> SET LBRACKET elementoSet RBRACKET .)
    RETURN          reduce using rule 119 (set -> SET LBRACKET elementoSet RBRACKET .)


state 177

    (122) elementoSet -> datos otroElemento .

    RBRACKET        reduce using rule 122 (elementoSet -> datos otroElemento .)
    COMMA           reduce using rule 122 (elementoSet -> datos otroElemento .)


state 178

    (124) otroElemento -> COMMA . elementoSet otroElemento
    (120) elementoSet -> .
    (121) elementoSet -> . datos
    (122) elementoSet -> . datos otroElemento
    (44) datos -> . INTEGER
    (45) datos -> . FLOAT
    (46) datos -> . STRING

    RBRACKET        reduce using rule 120 (elementoSet -> .)
    COMMA           reduce using rule 120 (elementoSet -> .)
    INTEGER         shift and go to state 68
    FLOAT           shift and go to state 69
    STRING          shift and go to state 63

    elementoSet                    shift and go to state 210
    datos                          shift and go to state 136

state 179

    (8) argumentos -> LOCALVAR EQUAL . LCURLYBRACKET RCURLYBRACKET
    (11) variosargumentos -> LOCALVAR EQUAL . datos
    (13) variosargumentos -> LOCALVAR EQUAL . datos masargumentos
    (44) datos -> . INTEGER
    (45) datos -> . FLOAT
    (46) datos -> . STRING

    LCURLYBRACKET   shift and go to state 211
    INTEGER         shift and go to state 68
    FLOAT           shift and go to state 69
    STRING          shift and go to state 63

    datos                          shift and go to state 212

state 180

    (9) argumentos -> LOCALVAR TWOPOINTS . datos
    (44) datos -> . INTEGER
    (45) datos -> . FLOAT
    (46) datos -> . STRING

    INTEGER         shift and go to state 68
    FLOAT           shift and go to state 69
    STRING          shift and go to state 63

    datos                          shift and go to state 213

state 181

    (12) variosargumentos -> LOCALVAR masargumentos .

    RPARENTHESES    reduce using rule 12 (variosargumentos -> LOCALVAR masargumentos .)


state 182

    (14) masargumentos -> COMMA . variosargumentos
    (10) variosargumentos -> . LOCALVAR
    (11) variosargumentos -> . LOCALVAR EQUAL datos
    (12) variosargumentos -> . LOCALVAR masargumentos
    (13) variosargumentos -> . LOCALVAR EQUAL datos masargumentos

    LOCALVAR        shift and go to state 215

    variosargumentos               shift and go to state 214

state 183

    (3) funcion -> DEF LOCALVAR LPARENTHESES argumentos RPARENTHESES . cuerpo END
    (4) funcion -> DEF LOCALVAR LPARENTHESES argumentos RPARENTHESES . cuerpo retornar END
    (17) cuerpo -> . declaracion cuerpo
    (18) cuerpo -> . asignacion cuerpo
    (19) cuerpo -> . loop cuerpo
    (20) cuerpo -> . estructurasDatos cuerpo
    (21) cuerpo -> . if cuerpo
    (22) cuerpo -> . unless cuerpo
    (23) cuerpo -> . impresion cuerpo
    (24) cuerpo -> . operacionSet cuerpo
    (25) cuerpo -> . operacionarray cuerpo
    (26) cuerpo -> . operacionHash cuerpo
    (27) cuerpo -> .
    (29) declaracion -> . tiposvariables EQUAL datos
    (30) declaracion -> . tiposvariables EQUAL estructurasDatos
    (31) declaracion -> . tiposvariables EQUAL expresion
    (32) declaracion -> . tiposvariables EQUAL declaracion
    (33) asignacion -> . LOCALVAR PLUSASSIGN datosAsignacion
    (34) asignacion -> . LOCALVAR MINASSIGN datosAsignacion
    (35) asignacion -> . LOCALVAR DIVASSIGN datosAsignacion
    (36) asignacion -> . LOCALVAR TIMESASSIGN datosAsignacion
    (37) asignacion -> . LOCALVAR MODASSIGN datosAsignacion
    (38) asignacion -> . LOCALVAR EXPASSIGN datosAsignacion
    (28) loop -> . FOR LOCALVAR IN rango cuerpo END
    (47) estructurasDatos -> . hash
    (48) estructurasDatos -> . array
    (49) estructurasDatos -> . set
    (104) if -> . IF datoscompletos operadores datoscompletos cuerpo END
    (105) if -> . IF datoscompletos operadores datoscompletos cuerpo else
    (114) unless -> . UNLESS condiciones cuerpo ELSE cuerpo END
    (62) impresion -> . PUTS datos
    (63) impresion -> . PUTS LOCALVAR
    (64) impresion -> . PRINT datos
    (65) impresion -> . PRINT LOCALVAR
    (125) operacionSet -> . set DOT ADD LPARENTHESES datos RPARENTHESES
    (126) operacionSet -> . set DOT ADD LPARENTHESES tiposvariables RPARENTHESES
    (127) operacionSet -> . set DOT CLEAR
    (128) operacionSet -> . set DOT DELETE LPARENTHESES datos RPARENTHESES
    (129) operacionSet -> . set DOT DELETE LPARENTHESES tiposvariables RPARENTHESES
    (89) operacionarray -> . array LBRACKET INTEGER RBRACKET
    (90) operacionarray -> . array DOT TAKE LPARENTHESES INTEGER RPARENTHESES
    (91) operacionarray -> . array DOT DROP LPARENTHESES INTEGER RPARENTHESES
    (92) operacionarray -> . array DOT push maspush
    (97) operacionarray -> . array DOT POP
    (98) operacionarray -> . array DOT POP LPARENTHESES INTEGER RPARENTHESES
    (99) operacionarray -> . array DOT DELETE LPARENTHESES INTEGER RPARENTHESES
    (100) operacionarray -> . array DOT LENGTH LPARENTHESES RPARENTHESES
    (101) operacionarray -> . array DOT EMPTY QUESTIONMARK
    (55) operacionHash -> . hash LBRACKET datos RBRACKET
    (56) operacionHash -> . hash LBRACKET datos RBRACKET EQUAL datos
    (57) operacionHash -> . hash DOT INCLUDE QUESTIONMARK LPARENTHESES datos RPARENTHESES
    (58) operacionHash -> . hash DOT DELETE LPARENTHESES datos RPARENTHESES
    (59) operacionHash -> . hash DOT KEYS
    (41) tiposvariables -> . VAR
    (42) tiposvariables -> . LOCALVAR
    (43) tiposvariables -> . CONSTANT
    (50) hash -> . LCURLYBRACKET elementoHash RCURLYBRACKET
    (81) array -> . LBRACKET RBRACKET
    (82) array -> . LBRACKET datosarray RBRACKET
    (119) set -> . SET LBRACKET elementoSet RBRACKET

    END             reduce using rule 27 (cuerpo -> .)
    RETURN          reduce using rule 27 (cuerpo -> .)
    LOCALVAR        shift and go to state 15
    FOR             shift and go to state 17
    IF              shift and go to state 21
    UNLESS          shift and go to state 22
    PUTS            shift and go to state 23
    PRINT           shift and go to state 24
    VAR             shift and go to state 26
    CONSTANT        shift and go to state 27
    LCURLYBRACKET   shift and go to state 28
    LBRACKET        shift and go to state 25
    SET             shift and go to state 29

    cuerpo                         shift and go to state 216
    declaracion                    shift and go to state 4
    asignacion                     shift and go to state 5
    loop                           shift and go to state 6
    estructurasDatos               shift and go to state 7
    if                             shift and go to state 8
    unless                         shift and go to state 9
    impresion                      shift and go to state 10
    operacionSet                   shift and go to state 11
    operacionarray                 shift and go to state 12
    operacionHash                  shift and go to state 13
    tiposvariables                 shift and go to state 16
    hash                           shift and go to state 18
    array                          shift and go to state 19
    set                            shift and go to state 20

state 184

    (6) argumentos -> MULTIPLY LOCALVAR .

    RPARENTHESES    reduce using rule 6 (argumentos -> MULTIPLY LOCALVAR .)


state 185

    (7) argumentos -> TWOSTARS LOCALVAR .

    RPARENTHESES    reduce using rule 7 (argumentos -> TWOSTARS LOCALVAR .)


state 186

    (73) masoperaciones -> operador expresion . masoperaciones
    (75) masoperaciones -> operador expresion .
    (73) masoperaciones -> . operador expresion masoperaciones
    (74) masoperaciones -> . operador number
    (75) masoperaciones -> . operador expresion
    (76) operador -> . PLUS
    (77) operador -> . MINUS
    (78) operador -> . MULTIPLY
    (79) operador -> . DIVIDE
    (80) operador -> . PERCENTAGE

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for PERCENTAGE resolved as shift
    LOCALVAR        reduce using rule 75 (masoperaciones -> operador expresion .)
    FOR             reduce using rule 75 (masoperaciones -> operador expresion .)
    IF              reduce using rule 75 (masoperaciones -> operador expresion .)
    UNLESS          reduce using rule 75 (masoperaciones -> operador expresion .)
    PUTS            reduce using rule 75 (masoperaciones -> operador expresion .)
    PRINT           reduce using rule 75 (masoperaciones -> operador expresion .)
    VAR             reduce using rule 75 (masoperaciones -> operador expresion .)
    CONSTANT        reduce using rule 75 (masoperaciones -> operador expresion .)
    LCURLYBRACKET   reduce using rule 75 (masoperaciones -> operador expresion .)
    LBRACKET        reduce using rule 75 (masoperaciones -> operador expresion .)
    SET             reduce using rule 75 (masoperaciones -> operador expresion .)
    $end            reduce using rule 75 (masoperaciones -> operador expresion .)
    ELSE            reduce using rule 75 (masoperaciones -> operador expresion .)
    END             reduce using rule 75 (masoperaciones -> operador expresion .)
    RETURN          reduce using rule 75 (masoperaciones -> operador expresion .)
    RPARENTHESES    reduce using rule 75 (masoperaciones -> operador expresion .)
    PLUS            shift and go to state 144
    MINUS           shift and go to state 145
    MULTIPLY        shift and go to state 146
    DIVIDE          shift and go to state 147
    PERCENTAGE      shift and go to state 148

  ! PLUS            [ reduce using rule 75 (masoperaciones -> operador expresion .) ]
  ! MINUS           [ reduce using rule 75 (masoperaciones -> operador expresion .) ]
  ! MULTIPLY        [ reduce using rule 75 (masoperaciones -> operador expresion .) ]
  ! DIVIDE          [ reduce using rule 75 (masoperaciones -> operador expresion .) ]
  ! PERCENTAGE      [ reduce using rule 75 (masoperaciones -> operador expresion .) ]

    operador                       shift and go to state 143
    masoperaciones                 shift and go to state 217

state 187

    (74) masoperaciones -> operador number .
    (71) operacion -> number . operador number
    (76) operador -> . PLUS
    (77) operador -> . MINUS
    (78) operador -> . MULTIPLY
    (79) operador -> . DIVIDE
    (80) operador -> . PERCENTAGE

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for PERCENTAGE resolved as shift
    LOCALVAR        reduce using rule 74 (masoperaciones -> operador number .)
    FOR             reduce using rule 74 (masoperaciones -> operador number .)
    IF              reduce using rule 74 (masoperaciones -> operador number .)
    UNLESS          reduce using rule 74 (masoperaciones -> operador number .)
    PUTS            reduce using rule 74 (masoperaciones -> operador number .)
    PRINT           reduce using rule 74 (masoperaciones -> operador number .)
    VAR             reduce using rule 74 (masoperaciones -> operador number .)
    CONSTANT        reduce using rule 74 (masoperaciones -> operador number .)
    LCURLYBRACKET   reduce using rule 74 (masoperaciones -> operador number .)
    LBRACKET        reduce using rule 74 (masoperaciones -> operador number .)
    SET             reduce using rule 74 (masoperaciones -> operador number .)
    $end            reduce using rule 74 (masoperaciones -> operador number .)
    ELSE            reduce using rule 74 (masoperaciones -> operador number .)
    END             reduce using rule 74 (masoperaciones -> operador number .)
    RETURN          reduce using rule 74 (masoperaciones -> operador number .)
    RPARENTHESES    reduce using rule 74 (masoperaciones -> operador number .)
    PLUS            shift and go to state 144
    MINUS           shift and go to state 145
    MULTIPLY        shift and go to state 146
    DIVIDE          shift and go to state 147
    PERCENTAGE      shift and go to state 148

  ! PLUS            [ reduce using rule 74 (masoperaciones -> operador number .) ]
  ! MINUS           [ reduce using rule 74 (masoperaciones -> operador number .) ]
  ! MULTIPLY        [ reduce using rule 74 (masoperaciones -> operador number .) ]
  ! DIVIDE          [ reduce using rule 74 (masoperaciones -> operador number .) ]
  ! PERCENTAGE      [ reduce using rule 74 (masoperaciones -> operador number .) ]

    operador                       shift and go to state 150

state 188

    (69) expresion -> LPARENTHESES operacion RPARENTHESES .
    (70) expresion -> LPARENTHESES operacion RPARENTHESES . masoperaciones
    (73) masoperaciones -> . operador expresion masoperaciones
    (74) masoperaciones -> . operador number
    (75) masoperaciones -> . operador expresion
    (76) operador -> . PLUS
    (77) operador -> . MINUS
    (78) operador -> . MULTIPLY
    (79) operador -> . DIVIDE
    (80) operador -> . PERCENTAGE

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for PERCENTAGE resolved as shift
    LOCALVAR        reduce using rule 69 (expresion -> LPARENTHESES operacion RPARENTHESES .)
    FOR             reduce using rule 69 (expresion -> LPARENTHESES operacion RPARENTHESES .)
    IF              reduce using rule 69 (expresion -> LPARENTHESES operacion RPARENTHESES .)
    UNLESS          reduce using rule 69 (expresion -> LPARENTHESES operacion RPARENTHESES .)
    PUTS            reduce using rule 69 (expresion -> LPARENTHESES operacion RPARENTHESES .)
    PRINT           reduce using rule 69 (expresion -> LPARENTHESES operacion RPARENTHESES .)
    VAR             reduce using rule 69 (expresion -> LPARENTHESES operacion RPARENTHESES .)
    CONSTANT        reduce using rule 69 (expresion -> LPARENTHESES operacion RPARENTHESES .)
    LCURLYBRACKET   reduce using rule 69 (expresion -> LPARENTHESES operacion RPARENTHESES .)
    LBRACKET        reduce using rule 69 (expresion -> LPARENTHESES operacion RPARENTHESES .)
    SET             reduce using rule 69 (expresion -> LPARENTHESES operacion RPARENTHESES .)
    $end            reduce using rule 69 (expresion -> LPARENTHESES operacion RPARENTHESES .)
    ELSE            reduce using rule 69 (expresion -> LPARENTHESES operacion RPARENTHESES .)
    END             reduce using rule 69 (expresion -> LPARENTHESES operacion RPARENTHESES .)
    RETURN          reduce using rule 69 (expresion -> LPARENTHESES operacion RPARENTHESES .)
    RPARENTHESES    reduce using rule 69 (expresion -> LPARENTHESES operacion RPARENTHESES .)
    PLUS            shift and go to state 144
    MINUS           shift and go to state 145
    MULTIPLY        shift and go to state 146
    DIVIDE          shift and go to state 147
    PERCENTAGE      shift and go to state 148

  ! PLUS            [ reduce using rule 69 (expresion -> LPARENTHESES operacion RPARENTHESES .) ]
  ! MINUS           [ reduce using rule 69 (expresion -> LPARENTHESES operacion RPARENTHESES .) ]
  ! MULTIPLY        [ reduce using rule 69 (expresion -> LPARENTHESES operacion RPARENTHESES .) ]
  ! DIVIDE          [ reduce using rule 69 (expresion -> LPARENTHESES operacion RPARENTHESES .) ]
  ! PERCENTAGE      [ reduce using rule 69 (expresion -> LPARENTHESES operacion RPARENTHESES .) ]

    masoperaciones                 shift and go to state 218
    operador                       shift and go to state 143

state 189

    (71) operacion -> number operador number .

    PLUS            reduce using rule 71 (operacion -> number operador number .)
    MINUS           reduce using rule 71 (operacion -> number operador number .)
    MULTIPLY        reduce using rule 71 (operacion -> number operador number .)
    DIVIDE          reduce using rule 71 (operacion -> number operador number .)
    PERCENTAGE      reduce using rule 71 (operacion -> number operador number .)
    LOCALVAR        reduce using rule 71 (operacion -> number operador number .)
    FOR             reduce using rule 71 (operacion -> number operador number .)
    IF              reduce using rule 71 (operacion -> number operador number .)
    UNLESS          reduce using rule 71 (operacion -> number operador number .)
    PUTS            reduce using rule 71 (operacion -> number operador number .)
    PRINT           reduce using rule 71 (operacion -> number operador number .)
    VAR             reduce using rule 71 (operacion -> number operador number .)
    CONSTANT        reduce using rule 71 (operacion -> number operador number .)
    LCURLYBRACKET   reduce using rule 71 (operacion -> number operador number .)
    LBRACKET        reduce using rule 71 (operacion -> number operador number .)
    SET             reduce using rule 71 (operacion -> number operador number .)
    $end            reduce using rule 71 (operacion -> number operador number .)
    ELSE            reduce using rule 71 (operacion -> number operador number .)
    END             reduce using rule 71 (operacion -> number operador number .)
    RETURN          reduce using rule 71 (operacion -> number operador number .)
    RPARENTHESES    reduce using rule 71 (operacion -> number operador number .)


state 190

    (28) loop -> FOR LOCALVAR IN rango cuerpo . END

    END             shift and go to state 219


state 191

    (60) rango -> INTEGER RANGEINCLUSIVE . INTEGER

    INTEGER         shift and go to state 220


state 192

    (61) rango -> INTEGER RANGEXCLUSIVE . INTEGER

    INTEGER         shift and go to state 221


state 193

    (56) operacionHash -> hash LBRACKET datos RBRACKET EQUAL . datos
    (44) datos -> . INTEGER
    (45) datos -> . FLOAT
    (46) datos -> . STRING

    INTEGER         shift and go to state 68
    FLOAT           shift and go to state 69
    STRING          shift and go to state 63

    datos                          shift and go to state 222

state 194

    (57) operacionHash -> hash DOT INCLUDE QUESTIONMARK LPARENTHESES . datos RPARENTHESES
    (44) datos -> . INTEGER
    (45) datos -> . FLOAT
    (46) datos -> . STRING

    INTEGER         shift and go to state 68
    FLOAT           shift and go to state 69
    STRING          shift and go to state 63

    datos                          shift and go to state 223

state 195

    (58) operacionHash -> hash DOT DELETE LPARENTHESES datos . RPARENTHESES

    RPARENTHESES    shift and go to state 224


state 196

    (90) operacionarray -> array DOT TAKE LPARENTHESES INTEGER . RPARENTHESES

    RPARENTHESES    shift and go to state 225


state 197

    (91) operacionarray -> array DOT DROP LPARENTHESES INTEGER . RPARENTHESES

    RPARENTHESES    shift and go to state 226


state 198

    (96) maspush -> DOT push . maspush
    (95) maspush -> .
    (96) maspush -> . DOT push maspush

    LOCALVAR        reduce using rule 95 (maspush -> .)
    FOR             reduce using rule 95 (maspush -> .)
    IF              reduce using rule 95 (maspush -> .)
    UNLESS          reduce using rule 95 (maspush -> .)
    PUTS            reduce using rule 95 (maspush -> .)
    PRINT           reduce using rule 95 (maspush -> .)
    VAR             reduce using rule 95 (maspush -> .)
    CONSTANT        reduce using rule 95 (maspush -> .)
    LCURLYBRACKET   reduce using rule 95 (maspush -> .)
    LBRACKET        reduce using rule 95 (maspush -> .)
    SET             reduce using rule 95 (maspush -> .)
    $end            reduce using rule 95 (maspush -> .)
    ELSE            reduce using rule 95 (maspush -> .)
    END             reduce using rule 95 (maspush -> .)
    RETURN          reduce using rule 95 (maspush -> .)
    DOT             shift and go to state 159

    maspush                        shift and go to state 227

state 199

    (98) operacionarray -> array DOT POP LPARENTHESES INTEGER . RPARENTHESES

    RPARENTHESES    shift and go to state 228


state 200

    (99) operacionarray -> array DOT DELETE LPARENTHESES INTEGER . RPARENTHESES

    RPARENTHESES    shift and go to state 229


state 201

    (100) operacionarray -> array DOT LENGTH LPARENTHESES RPARENTHESES .

    LOCALVAR        reduce using rule 100 (operacionarray -> array DOT LENGTH LPARENTHESES RPARENTHESES .)
    FOR             reduce using rule 100 (operacionarray -> array DOT LENGTH LPARENTHESES RPARENTHESES .)
    IF              reduce using rule 100 (operacionarray -> array DOT LENGTH LPARENTHESES RPARENTHESES .)
    UNLESS          reduce using rule 100 (operacionarray -> array DOT LENGTH LPARENTHESES RPARENTHESES .)
    PUTS            reduce using rule 100 (operacionarray -> array DOT LENGTH LPARENTHESES RPARENTHESES .)
    PRINT           reduce using rule 100 (operacionarray -> array DOT LENGTH LPARENTHESES RPARENTHESES .)
    VAR             reduce using rule 100 (operacionarray -> array DOT LENGTH LPARENTHESES RPARENTHESES .)
    CONSTANT        reduce using rule 100 (operacionarray -> array DOT LENGTH LPARENTHESES RPARENTHESES .)
    LCURLYBRACKET   reduce using rule 100 (operacionarray -> array DOT LENGTH LPARENTHESES RPARENTHESES .)
    LBRACKET        reduce using rule 100 (operacionarray -> array DOT LENGTH LPARENTHESES RPARENTHESES .)
    SET             reduce using rule 100 (operacionarray -> array DOT LENGTH LPARENTHESES RPARENTHESES .)
    $end            reduce using rule 100 (operacionarray -> array DOT LENGTH LPARENTHESES RPARENTHESES .)
    ELSE            reduce using rule 100 (operacionarray -> array DOT LENGTH LPARENTHESES RPARENTHESES .)
    END             reduce using rule 100 (operacionarray -> array DOT LENGTH LPARENTHESES RPARENTHESES .)
    RETURN          reduce using rule 100 (operacionarray -> array DOT LENGTH LPARENTHESES RPARENTHESES .)


state 202

    (93) push -> PUSH LPARENTHESES datosvarios . RPARENTHESES

    RPARENTHESES    shift and go to state 230


state 203

    (125) operacionSet -> set DOT ADD LPARENTHESES datos . RPARENTHESES

    RPARENTHESES    shift and go to state 231


state 204

    (126) operacionSet -> set DOT ADD LPARENTHESES tiposvariables . RPARENTHESES

    RPARENTHESES    shift and go to state 232


state 205

    (128) operacionSet -> set DOT DELETE LPARENTHESES datos . RPARENTHESES

    RPARENTHESES    shift and go to state 233


state 206

    (129) operacionSet -> set DOT DELETE LPARENTHESES tiposvariables . RPARENTHESES

    RPARENTHESES    shift and go to state 234


state 207

    (104) if -> IF datoscompletos operadores datoscompletos cuerpo . END
    (105) if -> IF datoscompletos operadores datoscompletos cuerpo . else
    (106) else -> . ELSE cuerpo END

    END             shift and go to state 235
    ELSE            shift and go to state 237

    else                           shift and go to state 236

state 208

    (114) unless -> UNLESS condiciones cuerpo ELSE cuerpo . END

    END             shift and go to state 238


state 209

    (51) elementoHash -> datos EQUAL GREATERTHAN datos . maselementos
    (53) maselementos -> .
    (54) maselementos -> . COMMA elementoHash maselementos

  ! shift/reduce conflict for COMMA resolved as shift
    RCURLYBRACKET   reduce using rule 53 (maselementos -> .)
    COMMA           shift and go to state 240

  ! COMMA           [ reduce using rule 53 (maselementos -> .) ]

    maselementos                   shift and go to state 239

state 210

    (124) otroElemento -> COMMA elementoSet . otroElemento
    (123) otroElemento -> .
    (124) otroElemento -> . COMMA elementoSet otroElemento

  ! shift/reduce conflict for COMMA resolved as shift
    RBRACKET        reduce using rule 123 (otroElemento -> .)
    COMMA           shift and go to state 178

  ! COMMA           [ reduce using rule 123 (otroElemento -> .) ]

    otroElemento                   shift and go to state 241

state 211

    (8) argumentos -> LOCALVAR EQUAL LCURLYBRACKET . RCURLYBRACKET

    RCURLYBRACKET   shift and go to state 242


state 212

    (11) variosargumentos -> LOCALVAR EQUAL datos .
    (13) variosargumentos -> LOCALVAR EQUAL datos . masargumentos
    (14) masargumentos -> . COMMA variosargumentos

    RPARENTHESES    reduce using rule 11 (variosargumentos -> LOCALVAR EQUAL datos .)
    COMMA           shift and go to state 182

    masargumentos                  shift and go to state 243

state 213

    (9) argumentos -> LOCALVAR TWOPOINTS datos .

    RPARENTHESES    reduce using rule 9 (argumentos -> LOCALVAR TWOPOINTS datos .)


state 214

    (14) masargumentos -> COMMA variosargumentos .

    RPARENTHESES    reduce using rule 14 (masargumentos -> COMMA variosargumentos .)


state 215

    (10) variosargumentos -> LOCALVAR .
    (11) variosargumentos -> LOCALVAR . EQUAL datos
    (12) variosargumentos -> LOCALVAR . masargumentos
    (13) variosargumentos -> LOCALVAR . EQUAL datos masargumentos
    (14) masargumentos -> . COMMA variosargumentos

    RPARENTHESES    reduce using rule 10 (variosargumentos -> LOCALVAR .)
    EQUAL           shift and go to state 244
    COMMA           shift and go to state 182

    masargumentos                  shift and go to state 181

state 216

    (3) funcion -> DEF LOCALVAR LPARENTHESES argumentos RPARENTHESES cuerpo . END
    (4) funcion -> DEF LOCALVAR LPARENTHESES argumentos RPARENTHESES cuerpo . retornar END
    (15) retornar -> . RETURN LOCALVAR
    (16) retornar -> . RETURN datos

    END             shift and go to state 245
    RETURN          shift and go to state 247

    retornar                       shift and go to state 246

state 217

    (73) masoperaciones -> operador expresion masoperaciones .

    PLUS            reduce using rule 73 (masoperaciones -> operador expresion masoperaciones .)
    MINUS           reduce using rule 73 (masoperaciones -> operador expresion masoperaciones .)
    MULTIPLY        reduce using rule 73 (masoperaciones -> operador expresion masoperaciones .)
    DIVIDE          reduce using rule 73 (masoperaciones -> operador expresion masoperaciones .)
    PERCENTAGE      reduce using rule 73 (masoperaciones -> operador expresion masoperaciones .)
    LOCALVAR        reduce using rule 73 (masoperaciones -> operador expresion masoperaciones .)
    FOR             reduce using rule 73 (masoperaciones -> operador expresion masoperaciones .)
    IF              reduce using rule 73 (masoperaciones -> operador expresion masoperaciones .)
    UNLESS          reduce using rule 73 (masoperaciones -> operador expresion masoperaciones .)
    PUTS            reduce using rule 73 (masoperaciones -> operador expresion masoperaciones .)
    PRINT           reduce using rule 73 (masoperaciones -> operador expresion masoperaciones .)
    VAR             reduce using rule 73 (masoperaciones -> operador expresion masoperaciones .)
    CONSTANT        reduce using rule 73 (masoperaciones -> operador expresion masoperaciones .)
    LCURLYBRACKET   reduce using rule 73 (masoperaciones -> operador expresion masoperaciones .)
    LBRACKET        reduce using rule 73 (masoperaciones -> operador expresion masoperaciones .)
    SET             reduce using rule 73 (masoperaciones -> operador expresion masoperaciones .)
    $end            reduce using rule 73 (masoperaciones -> operador expresion masoperaciones .)
    ELSE            reduce using rule 73 (masoperaciones -> operador expresion masoperaciones .)
    END             reduce using rule 73 (masoperaciones -> operador expresion masoperaciones .)
    RETURN          reduce using rule 73 (masoperaciones -> operador expresion masoperaciones .)
    RPARENTHESES    reduce using rule 73 (masoperaciones -> operador expresion masoperaciones .)


state 218

    (70) expresion -> LPARENTHESES operacion RPARENTHESES masoperaciones .

    LOCALVAR        reduce using rule 70 (expresion -> LPARENTHESES operacion RPARENTHESES masoperaciones .)
    FOR             reduce using rule 70 (expresion -> LPARENTHESES operacion RPARENTHESES masoperaciones .)
    IF              reduce using rule 70 (expresion -> LPARENTHESES operacion RPARENTHESES masoperaciones .)
    UNLESS          reduce using rule 70 (expresion -> LPARENTHESES operacion RPARENTHESES masoperaciones .)
    PUTS            reduce using rule 70 (expresion -> LPARENTHESES operacion RPARENTHESES masoperaciones .)
    PRINT           reduce using rule 70 (expresion -> LPARENTHESES operacion RPARENTHESES masoperaciones .)
    VAR             reduce using rule 70 (expresion -> LPARENTHESES operacion RPARENTHESES masoperaciones .)
    CONSTANT        reduce using rule 70 (expresion -> LPARENTHESES operacion RPARENTHESES masoperaciones .)
    LCURLYBRACKET   reduce using rule 70 (expresion -> LPARENTHESES operacion RPARENTHESES masoperaciones .)
    LBRACKET        reduce using rule 70 (expresion -> LPARENTHESES operacion RPARENTHESES masoperaciones .)
    SET             reduce using rule 70 (expresion -> LPARENTHESES operacion RPARENTHESES masoperaciones .)
    $end            reduce using rule 70 (expresion -> LPARENTHESES operacion RPARENTHESES masoperaciones .)
    ELSE            reduce using rule 70 (expresion -> LPARENTHESES operacion RPARENTHESES masoperaciones .)
    END             reduce using rule 70 (expresion -> LPARENTHESES operacion RPARENTHESES masoperaciones .)
    RETURN          reduce using rule 70 (expresion -> LPARENTHESES operacion RPARENTHESES masoperaciones .)
    PLUS            reduce using rule 70 (expresion -> LPARENTHESES operacion RPARENTHESES masoperaciones .)
    MINUS           reduce using rule 70 (expresion -> LPARENTHESES operacion RPARENTHESES masoperaciones .)
    MULTIPLY        reduce using rule 70 (expresion -> LPARENTHESES operacion RPARENTHESES masoperaciones .)
    DIVIDE          reduce using rule 70 (expresion -> LPARENTHESES operacion RPARENTHESES masoperaciones .)
    PERCENTAGE      reduce using rule 70 (expresion -> LPARENTHESES operacion RPARENTHESES masoperaciones .)
    RPARENTHESES    reduce using rule 70 (expresion -> LPARENTHESES operacion RPARENTHESES masoperaciones .)


state 219

    (28) loop -> FOR LOCALVAR IN rango cuerpo END .

    LOCALVAR        reduce using rule 28 (loop -> FOR LOCALVAR IN rango cuerpo END .)
    FOR             reduce using rule 28 (loop -> FOR LOCALVAR IN rango cuerpo END .)
    IF              reduce using rule 28 (loop -> FOR LOCALVAR IN rango cuerpo END .)
    UNLESS          reduce using rule 28 (loop -> FOR LOCALVAR IN rango cuerpo END .)
    PUTS            reduce using rule 28 (loop -> FOR LOCALVAR IN rango cuerpo END .)
    PRINT           reduce using rule 28 (loop -> FOR LOCALVAR IN rango cuerpo END .)
    VAR             reduce using rule 28 (loop -> FOR LOCALVAR IN rango cuerpo END .)
    CONSTANT        reduce using rule 28 (loop -> FOR LOCALVAR IN rango cuerpo END .)
    LCURLYBRACKET   reduce using rule 28 (loop -> FOR LOCALVAR IN rango cuerpo END .)
    LBRACKET        reduce using rule 28 (loop -> FOR LOCALVAR IN rango cuerpo END .)
    SET             reduce using rule 28 (loop -> FOR LOCALVAR IN rango cuerpo END .)
    $end            reduce using rule 28 (loop -> FOR LOCALVAR IN rango cuerpo END .)
    ELSE            reduce using rule 28 (loop -> FOR LOCALVAR IN rango cuerpo END .)
    END             reduce using rule 28 (loop -> FOR LOCALVAR IN rango cuerpo END .)
    RETURN          reduce using rule 28 (loop -> FOR LOCALVAR IN rango cuerpo END .)


state 220

    (60) rango -> INTEGER RANGEINCLUSIVE INTEGER .

    LOCALVAR        reduce using rule 60 (rango -> INTEGER RANGEINCLUSIVE INTEGER .)
    FOR             reduce using rule 60 (rango -> INTEGER RANGEINCLUSIVE INTEGER .)
    IF              reduce using rule 60 (rango -> INTEGER RANGEINCLUSIVE INTEGER .)
    UNLESS          reduce using rule 60 (rango -> INTEGER RANGEINCLUSIVE INTEGER .)
    PUTS            reduce using rule 60 (rango -> INTEGER RANGEINCLUSIVE INTEGER .)
    PRINT           reduce using rule 60 (rango -> INTEGER RANGEINCLUSIVE INTEGER .)
    VAR             reduce using rule 60 (rango -> INTEGER RANGEINCLUSIVE INTEGER .)
    CONSTANT        reduce using rule 60 (rango -> INTEGER RANGEINCLUSIVE INTEGER .)
    LCURLYBRACKET   reduce using rule 60 (rango -> INTEGER RANGEINCLUSIVE INTEGER .)
    LBRACKET        reduce using rule 60 (rango -> INTEGER RANGEINCLUSIVE INTEGER .)
    SET             reduce using rule 60 (rango -> INTEGER RANGEINCLUSIVE INTEGER .)
    END             reduce using rule 60 (rango -> INTEGER RANGEINCLUSIVE INTEGER .)


state 221

    (61) rango -> INTEGER RANGEXCLUSIVE INTEGER .

    LOCALVAR        reduce using rule 61 (rango -> INTEGER RANGEXCLUSIVE INTEGER .)
    FOR             reduce using rule 61 (rango -> INTEGER RANGEXCLUSIVE INTEGER .)
    IF              reduce using rule 61 (rango -> INTEGER RANGEXCLUSIVE INTEGER .)
    UNLESS          reduce using rule 61 (rango -> INTEGER RANGEXCLUSIVE INTEGER .)
    PUTS            reduce using rule 61 (rango -> INTEGER RANGEXCLUSIVE INTEGER .)
    PRINT           reduce using rule 61 (rango -> INTEGER RANGEXCLUSIVE INTEGER .)
    VAR             reduce using rule 61 (rango -> INTEGER RANGEXCLUSIVE INTEGER .)
    CONSTANT        reduce using rule 61 (rango -> INTEGER RANGEXCLUSIVE INTEGER .)
    LCURLYBRACKET   reduce using rule 61 (rango -> INTEGER RANGEXCLUSIVE INTEGER .)
    LBRACKET        reduce using rule 61 (rango -> INTEGER RANGEXCLUSIVE INTEGER .)
    SET             reduce using rule 61 (rango -> INTEGER RANGEXCLUSIVE INTEGER .)
    END             reduce using rule 61 (rango -> INTEGER RANGEXCLUSIVE INTEGER .)


state 222

    (56) operacionHash -> hash LBRACKET datos RBRACKET EQUAL datos .

    LOCALVAR        reduce using rule 56 (operacionHash -> hash LBRACKET datos RBRACKET EQUAL datos .)
    FOR             reduce using rule 56 (operacionHash -> hash LBRACKET datos RBRACKET EQUAL datos .)
    IF              reduce using rule 56 (operacionHash -> hash LBRACKET datos RBRACKET EQUAL datos .)
    UNLESS          reduce using rule 56 (operacionHash -> hash LBRACKET datos RBRACKET EQUAL datos .)
    PUTS            reduce using rule 56 (operacionHash -> hash LBRACKET datos RBRACKET EQUAL datos .)
    PRINT           reduce using rule 56 (operacionHash -> hash LBRACKET datos RBRACKET EQUAL datos .)
    VAR             reduce using rule 56 (operacionHash -> hash LBRACKET datos RBRACKET EQUAL datos .)
    CONSTANT        reduce using rule 56 (operacionHash -> hash LBRACKET datos RBRACKET EQUAL datos .)
    LCURLYBRACKET   reduce using rule 56 (operacionHash -> hash LBRACKET datos RBRACKET EQUAL datos .)
    LBRACKET        reduce using rule 56 (operacionHash -> hash LBRACKET datos RBRACKET EQUAL datos .)
    SET             reduce using rule 56 (operacionHash -> hash LBRACKET datos RBRACKET EQUAL datos .)
    $end            reduce using rule 56 (operacionHash -> hash LBRACKET datos RBRACKET EQUAL datos .)
    ELSE            reduce using rule 56 (operacionHash -> hash LBRACKET datos RBRACKET EQUAL datos .)
    END             reduce using rule 56 (operacionHash -> hash LBRACKET datos RBRACKET EQUAL datos .)
    RETURN          reduce using rule 56 (operacionHash -> hash LBRACKET datos RBRACKET EQUAL datos .)


state 223

    (57) operacionHash -> hash DOT INCLUDE QUESTIONMARK LPARENTHESES datos . RPARENTHESES

    RPARENTHESES    shift and go to state 248


state 224

    (58) operacionHash -> hash DOT DELETE LPARENTHESES datos RPARENTHESES .

    LOCALVAR        reduce using rule 58 (operacionHash -> hash DOT DELETE LPARENTHESES datos RPARENTHESES .)
    FOR             reduce using rule 58 (operacionHash -> hash DOT DELETE LPARENTHESES datos RPARENTHESES .)
    IF              reduce using rule 58 (operacionHash -> hash DOT DELETE LPARENTHESES datos RPARENTHESES .)
    UNLESS          reduce using rule 58 (operacionHash -> hash DOT DELETE LPARENTHESES datos RPARENTHESES .)
    PUTS            reduce using rule 58 (operacionHash -> hash DOT DELETE LPARENTHESES datos RPARENTHESES .)
    PRINT           reduce using rule 58 (operacionHash -> hash DOT DELETE LPARENTHESES datos RPARENTHESES .)
    VAR             reduce using rule 58 (operacionHash -> hash DOT DELETE LPARENTHESES datos RPARENTHESES .)
    CONSTANT        reduce using rule 58 (operacionHash -> hash DOT DELETE LPARENTHESES datos RPARENTHESES .)
    LCURLYBRACKET   reduce using rule 58 (operacionHash -> hash DOT DELETE LPARENTHESES datos RPARENTHESES .)
    LBRACKET        reduce using rule 58 (operacionHash -> hash DOT DELETE LPARENTHESES datos RPARENTHESES .)
    SET             reduce using rule 58 (operacionHash -> hash DOT DELETE LPARENTHESES datos RPARENTHESES .)
    $end            reduce using rule 58 (operacionHash -> hash DOT DELETE LPARENTHESES datos RPARENTHESES .)
    ELSE            reduce using rule 58 (operacionHash -> hash DOT DELETE LPARENTHESES datos RPARENTHESES .)
    END             reduce using rule 58 (operacionHash -> hash DOT DELETE LPARENTHESES datos RPARENTHESES .)
    RETURN          reduce using rule 58 (operacionHash -> hash DOT DELETE LPARENTHESES datos RPARENTHESES .)


state 225

    (90) operacionarray -> array DOT TAKE LPARENTHESES INTEGER RPARENTHESES .

    LOCALVAR        reduce using rule 90 (operacionarray -> array DOT TAKE LPARENTHESES INTEGER RPARENTHESES .)
    FOR             reduce using rule 90 (operacionarray -> array DOT TAKE LPARENTHESES INTEGER RPARENTHESES .)
    IF              reduce using rule 90 (operacionarray -> array DOT TAKE LPARENTHESES INTEGER RPARENTHESES .)
    UNLESS          reduce using rule 90 (operacionarray -> array DOT TAKE LPARENTHESES INTEGER RPARENTHESES .)
    PUTS            reduce using rule 90 (operacionarray -> array DOT TAKE LPARENTHESES INTEGER RPARENTHESES .)
    PRINT           reduce using rule 90 (operacionarray -> array DOT TAKE LPARENTHESES INTEGER RPARENTHESES .)
    VAR             reduce using rule 90 (operacionarray -> array DOT TAKE LPARENTHESES INTEGER RPARENTHESES .)
    CONSTANT        reduce using rule 90 (operacionarray -> array DOT TAKE LPARENTHESES INTEGER RPARENTHESES .)
    LCURLYBRACKET   reduce using rule 90 (operacionarray -> array DOT TAKE LPARENTHESES INTEGER RPARENTHESES .)
    LBRACKET        reduce using rule 90 (operacionarray -> array DOT TAKE LPARENTHESES INTEGER RPARENTHESES .)
    SET             reduce using rule 90 (operacionarray -> array DOT TAKE LPARENTHESES INTEGER RPARENTHESES .)
    $end            reduce using rule 90 (operacionarray -> array DOT TAKE LPARENTHESES INTEGER RPARENTHESES .)
    ELSE            reduce using rule 90 (operacionarray -> array DOT TAKE LPARENTHESES INTEGER RPARENTHESES .)
    END             reduce using rule 90 (operacionarray -> array DOT TAKE LPARENTHESES INTEGER RPARENTHESES .)
    RETURN          reduce using rule 90 (operacionarray -> array DOT TAKE LPARENTHESES INTEGER RPARENTHESES .)


state 226

    (91) operacionarray -> array DOT DROP LPARENTHESES INTEGER RPARENTHESES .

    LOCALVAR        reduce using rule 91 (operacionarray -> array DOT DROP LPARENTHESES INTEGER RPARENTHESES .)
    FOR             reduce using rule 91 (operacionarray -> array DOT DROP LPARENTHESES INTEGER RPARENTHESES .)
    IF              reduce using rule 91 (operacionarray -> array DOT DROP LPARENTHESES INTEGER RPARENTHESES .)
    UNLESS          reduce using rule 91 (operacionarray -> array DOT DROP LPARENTHESES INTEGER RPARENTHESES .)
    PUTS            reduce using rule 91 (operacionarray -> array DOT DROP LPARENTHESES INTEGER RPARENTHESES .)
    PRINT           reduce using rule 91 (operacionarray -> array DOT DROP LPARENTHESES INTEGER RPARENTHESES .)
    VAR             reduce using rule 91 (operacionarray -> array DOT DROP LPARENTHESES INTEGER RPARENTHESES .)
    CONSTANT        reduce using rule 91 (operacionarray -> array DOT DROP LPARENTHESES INTEGER RPARENTHESES .)
    LCURLYBRACKET   reduce using rule 91 (operacionarray -> array DOT DROP LPARENTHESES INTEGER RPARENTHESES .)
    LBRACKET        reduce using rule 91 (operacionarray -> array DOT DROP LPARENTHESES INTEGER RPARENTHESES .)
    SET             reduce using rule 91 (operacionarray -> array DOT DROP LPARENTHESES INTEGER RPARENTHESES .)
    $end            reduce using rule 91 (operacionarray -> array DOT DROP LPARENTHESES INTEGER RPARENTHESES .)
    ELSE            reduce using rule 91 (operacionarray -> array DOT DROP LPARENTHESES INTEGER RPARENTHESES .)
    END             reduce using rule 91 (operacionarray -> array DOT DROP LPARENTHESES INTEGER RPARENTHESES .)
    RETURN          reduce using rule 91 (operacionarray -> array DOT DROP LPARENTHESES INTEGER RPARENTHESES .)


state 227

    (96) maspush -> DOT push maspush .

    LOCALVAR        reduce using rule 96 (maspush -> DOT push maspush .)
    FOR             reduce using rule 96 (maspush -> DOT push maspush .)
    IF              reduce using rule 96 (maspush -> DOT push maspush .)
    UNLESS          reduce using rule 96 (maspush -> DOT push maspush .)
    PUTS            reduce using rule 96 (maspush -> DOT push maspush .)
    PRINT           reduce using rule 96 (maspush -> DOT push maspush .)
    VAR             reduce using rule 96 (maspush -> DOT push maspush .)
    CONSTANT        reduce using rule 96 (maspush -> DOT push maspush .)
    LCURLYBRACKET   reduce using rule 96 (maspush -> DOT push maspush .)
    LBRACKET        reduce using rule 96 (maspush -> DOT push maspush .)
    SET             reduce using rule 96 (maspush -> DOT push maspush .)
    $end            reduce using rule 96 (maspush -> DOT push maspush .)
    ELSE            reduce using rule 96 (maspush -> DOT push maspush .)
    END             reduce using rule 96 (maspush -> DOT push maspush .)
    RETURN          reduce using rule 96 (maspush -> DOT push maspush .)


state 228

    (98) operacionarray -> array DOT POP LPARENTHESES INTEGER RPARENTHESES .

    LOCALVAR        reduce using rule 98 (operacionarray -> array DOT POP LPARENTHESES INTEGER RPARENTHESES .)
    FOR             reduce using rule 98 (operacionarray -> array DOT POP LPARENTHESES INTEGER RPARENTHESES .)
    IF              reduce using rule 98 (operacionarray -> array DOT POP LPARENTHESES INTEGER RPARENTHESES .)
    UNLESS          reduce using rule 98 (operacionarray -> array DOT POP LPARENTHESES INTEGER RPARENTHESES .)
    PUTS            reduce using rule 98 (operacionarray -> array DOT POP LPARENTHESES INTEGER RPARENTHESES .)
    PRINT           reduce using rule 98 (operacionarray -> array DOT POP LPARENTHESES INTEGER RPARENTHESES .)
    VAR             reduce using rule 98 (operacionarray -> array DOT POP LPARENTHESES INTEGER RPARENTHESES .)
    CONSTANT        reduce using rule 98 (operacionarray -> array DOT POP LPARENTHESES INTEGER RPARENTHESES .)
    LCURLYBRACKET   reduce using rule 98 (operacionarray -> array DOT POP LPARENTHESES INTEGER RPARENTHESES .)
    LBRACKET        reduce using rule 98 (operacionarray -> array DOT POP LPARENTHESES INTEGER RPARENTHESES .)
    SET             reduce using rule 98 (operacionarray -> array DOT POP LPARENTHESES INTEGER RPARENTHESES .)
    $end            reduce using rule 98 (operacionarray -> array DOT POP LPARENTHESES INTEGER RPARENTHESES .)
    ELSE            reduce using rule 98 (operacionarray -> array DOT POP LPARENTHESES INTEGER RPARENTHESES .)
    END             reduce using rule 98 (operacionarray -> array DOT POP LPARENTHESES INTEGER RPARENTHESES .)
    RETURN          reduce using rule 98 (operacionarray -> array DOT POP LPARENTHESES INTEGER RPARENTHESES .)


state 229

    (99) operacionarray -> array DOT DELETE LPARENTHESES INTEGER RPARENTHESES .

    LOCALVAR        reduce using rule 99 (operacionarray -> array DOT DELETE LPARENTHESES INTEGER RPARENTHESES .)
    FOR             reduce using rule 99 (operacionarray -> array DOT DELETE LPARENTHESES INTEGER RPARENTHESES .)
    IF              reduce using rule 99 (operacionarray -> array DOT DELETE LPARENTHESES INTEGER RPARENTHESES .)
    UNLESS          reduce using rule 99 (operacionarray -> array DOT DELETE LPARENTHESES INTEGER RPARENTHESES .)
    PUTS            reduce using rule 99 (operacionarray -> array DOT DELETE LPARENTHESES INTEGER RPARENTHESES .)
    PRINT           reduce using rule 99 (operacionarray -> array DOT DELETE LPARENTHESES INTEGER RPARENTHESES .)
    VAR             reduce using rule 99 (operacionarray -> array DOT DELETE LPARENTHESES INTEGER RPARENTHESES .)
    CONSTANT        reduce using rule 99 (operacionarray -> array DOT DELETE LPARENTHESES INTEGER RPARENTHESES .)
    LCURLYBRACKET   reduce using rule 99 (operacionarray -> array DOT DELETE LPARENTHESES INTEGER RPARENTHESES .)
    LBRACKET        reduce using rule 99 (operacionarray -> array DOT DELETE LPARENTHESES INTEGER RPARENTHESES .)
    SET             reduce using rule 99 (operacionarray -> array DOT DELETE LPARENTHESES INTEGER RPARENTHESES .)
    $end            reduce using rule 99 (operacionarray -> array DOT DELETE LPARENTHESES INTEGER RPARENTHESES .)
    ELSE            reduce using rule 99 (operacionarray -> array DOT DELETE LPARENTHESES INTEGER RPARENTHESES .)
    END             reduce using rule 99 (operacionarray -> array DOT DELETE LPARENTHESES INTEGER RPARENTHESES .)
    RETURN          reduce using rule 99 (operacionarray -> array DOT DELETE LPARENTHESES INTEGER RPARENTHESES .)


state 230

    (93) push -> PUSH LPARENTHESES datosvarios RPARENTHESES .

    DOT             reduce using rule 93 (push -> PUSH LPARENTHESES datosvarios RPARENTHESES .)
    LOCALVAR        reduce using rule 93 (push -> PUSH LPARENTHESES datosvarios RPARENTHESES .)
    FOR             reduce using rule 93 (push -> PUSH LPARENTHESES datosvarios RPARENTHESES .)
    IF              reduce using rule 93 (push -> PUSH LPARENTHESES datosvarios RPARENTHESES .)
    UNLESS          reduce using rule 93 (push -> PUSH LPARENTHESES datosvarios RPARENTHESES .)
    PUTS            reduce using rule 93 (push -> PUSH LPARENTHESES datosvarios RPARENTHESES .)
    PRINT           reduce using rule 93 (push -> PUSH LPARENTHESES datosvarios RPARENTHESES .)
    VAR             reduce using rule 93 (push -> PUSH LPARENTHESES datosvarios RPARENTHESES .)
    CONSTANT        reduce using rule 93 (push -> PUSH LPARENTHESES datosvarios RPARENTHESES .)
    LCURLYBRACKET   reduce using rule 93 (push -> PUSH LPARENTHESES datosvarios RPARENTHESES .)
    LBRACKET        reduce using rule 93 (push -> PUSH LPARENTHESES datosvarios RPARENTHESES .)
    SET             reduce using rule 93 (push -> PUSH LPARENTHESES datosvarios RPARENTHESES .)
    $end            reduce using rule 93 (push -> PUSH LPARENTHESES datosvarios RPARENTHESES .)
    ELSE            reduce using rule 93 (push -> PUSH LPARENTHESES datosvarios RPARENTHESES .)
    END             reduce using rule 93 (push -> PUSH LPARENTHESES datosvarios RPARENTHESES .)
    RETURN          reduce using rule 93 (push -> PUSH LPARENTHESES datosvarios RPARENTHESES .)


state 231

    (125) operacionSet -> set DOT ADD LPARENTHESES datos RPARENTHESES .

    LOCALVAR        reduce using rule 125 (operacionSet -> set DOT ADD LPARENTHESES datos RPARENTHESES .)
    FOR             reduce using rule 125 (operacionSet -> set DOT ADD LPARENTHESES datos RPARENTHESES .)
    IF              reduce using rule 125 (operacionSet -> set DOT ADD LPARENTHESES datos RPARENTHESES .)
    UNLESS          reduce using rule 125 (operacionSet -> set DOT ADD LPARENTHESES datos RPARENTHESES .)
    PUTS            reduce using rule 125 (operacionSet -> set DOT ADD LPARENTHESES datos RPARENTHESES .)
    PRINT           reduce using rule 125 (operacionSet -> set DOT ADD LPARENTHESES datos RPARENTHESES .)
    VAR             reduce using rule 125 (operacionSet -> set DOT ADD LPARENTHESES datos RPARENTHESES .)
    CONSTANT        reduce using rule 125 (operacionSet -> set DOT ADD LPARENTHESES datos RPARENTHESES .)
    LCURLYBRACKET   reduce using rule 125 (operacionSet -> set DOT ADD LPARENTHESES datos RPARENTHESES .)
    LBRACKET        reduce using rule 125 (operacionSet -> set DOT ADD LPARENTHESES datos RPARENTHESES .)
    SET             reduce using rule 125 (operacionSet -> set DOT ADD LPARENTHESES datos RPARENTHESES .)
    $end            reduce using rule 125 (operacionSet -> set DOT ADD LPARENTHESES datos RPARENTHESES .)
    ELSE            reduce using rule 125 (operacionSet -> set DOT ADD LPARENTHESES datos RPARENTHESES .)
    END             reduce using rule 125 (operacionSet -> set DOT ADD LPARENTHESES datos RPARENTHESES .)
    RETURN          reduce using rule 125 (operacionSet -> set DOT ADD LPARENTHESES datos RPARENTHESES .)


state 232

    (126) operacionSet -> set DOT ADD LPARENTHESES tiposvariables RPARENTHESES .

    LOCALVAR        reduce using rule 126 (operacionSet -> set DOT ADD LPARENTHESES tiposvariables RPARENTHESES .)
    FOR             reduce using rule 126 (operacionSet -> set DOT ADD LPARENTHESES tiposvariables RPARENTHESES .)
    IF              reduce using rule 126 (operacionSet -> set DOT ADD LPARENTHESES tiposvariables RPARENTHESES .)
    UNLESS          reduce using rule 126 (operacionSet -> set DOT ADD LPARENTHESES tiposvariables RPARENTHESES .)
    PUTS            reduce using rule 126 (operacionSet -> set DOT ADD LPARENTHESES tiposvariables RPARENTHESES .)
    PRINT           reduce using rule 126 (operacionSet -> set DOT ADD LPARENTHESES tiposvariables RPARENTHESES .)
    VAR             reduce using rule 126 (operacionSet -> set DOT ADD LPARENTHESES tiposvariables RPARENTHESES .)
    CONSTANT        reduce using rule 126 (operacionSet -> set DOT ADD LPARENTHESES tiposvariables RPARENTHESES .)
    LCURLYBRACKET   reduce using rule 126 (operacionSet -> set DOT ADD LPARENTHESES tiposvariables RPARENTHESES .)
    LBRACKET        reduce using rule 126 (operacionSet -> set DOT ADD LPARENTHESES tiposvariables RPARENTHESES .)
    SET             reduce using rule 126 (operacionSet -> set DOT ADD LPARENTHESES tiposvariables RPARENTHESES .)
    $end            reduce using rule 126 (operacionSet -> set DOT ADD LPARENTHESES tiposvariables RPARENTHESES .)
    ELSE            reduce using rule 126 (operacionSet -> set DOT ADD LPARENTHESES tiposvariables RPARENTHESES .)
    END             reduce using rule 126 (operacionSet -> set DOT ADD LPARENTHESES tiposvariables RPARENTHESES .)
    RETURN          reduce using rule 126 (operacionSet -> set DOT ADD LPARENTHESES tiposvariables RPARENTHESES .)


state 233

    (128) operacionSet -> set DOT DELETE LPARENTHESES datos RPARENTHESES .

    LOCALVAR        reduce using rule 128 (operacionSet -> set DOT DELETE LPARENTHESES datos RPARENTHESES .)
    FOR             reduce using rule 128 (operacionSet -> set DOT DELETE LPARENTHESES datos RPARENTHESES .)
    IF              reduce using rule 128 (operacionSet -> set DOT DELETE LPARENTHESES datos RPARENTHESES .)
    UNLESS          reduce using rule 128 (operacionSet -> set DOT DELETE LPARENTHESES datos RPARENTHESES .)
    PUTS            reduce using rule 128 (operacionSet -> set DOT DELETE LPARENTHESES datos RPARENTHESES .)
    PRINT           reduce using rule 128 (operacionSet -> set DOT DELETE LPARENTHESES datos RPARENTHESES .)
    VAR             reduce using rule 128 (operacionSet -> set DOT DELETE LPARENTHESES datos RPARENTHESES .)
    CONSTANT        reduce using rule 128 (operacionSet -> set DOT DELETE LPARENTHESES datos RPARENTHESES .)
    LCURLYBRACKET   reduce using rule 128 (operacionSet -> set DOT DELETE LPARENTHESES datos RPARENTHESES .)
    LBRACKET        reduce using rule 128 (operacionSet -> set DOT DELETE LPARENTHESES datos RPARENTHESES .)
    SET             reduce using rule 128 (operacionSet -> set DOT DELETE LPARENTHESES datos RPARENTHESES .)
    $end            reduce using rule 128 (operacionSet -> set DOT DELETE LPARENTHESES datos RPARENTHESES .)
    ELSE            reduce using rule 128 (operacionSet -> set DOT DELETE LPARENTHESES datos RPARENTHESES .)
    END             reduce using rule 128 (operacionSet -> set DOT DELETE LPARENTHESES datos RPARENTHESES .)
    RETURN          reduce using rule 128 (operacionSet -> set DOT DELETE LPARENTHESES datos RPARENTHESES .)


state 234

    (129) operacionSet -> set DOT DELETE LPARENTHESES tiposvariables RPARENTHESES .

    LOCALVAR        reduce using rule 129 (operacionSet -> set DOT DELETE LPARENTHESES tiposvariables RPARENTHESES .)
    FOR             reduce using rule 129 (operacionSet -> set DOT DELETE LPARENTHESES tiposvariables RPARENTHESES .)
    IF              reduce using rule 129 (operacionSet -> set DOT DELETE LPARENTHESES tiposvariables RPARENTHESES .)
    UNLESS          reduce using rule 129 (operacionSet -> set DOT DELETE LPARENTHESES tiposvariables RPARENTHESES .)
    PUTS            reduce using rule 129 (operacionSet -> set DOT DELETE LPARENTHESES tiposvariables RPARENTHESES .)
    PRINT           reduce using rule 129 (operacionSet -> set DOT DELETE LPARENTHESES tiposvariables RPARENTHESES .)
    VAR             reduce using rule 129 (operacionSet -> set DOT DELETE LPARENTHESES tiposvariables RPARENTHESES .)
    CONSTANT        reduce using rule 129 (operacionSet -> set DOT DELETE LPARENTHESES tiposvariables RPARENTHESES .)
    LCURLYBRACKET   reduce using rule 129 (operacionSet -> set DOT DELETE LPARENTHESES tiposvariables RPARENTHESES .)
    LBRACKET        reduce using rule 129 (operacionSet -> set DOT DELETE LPARENTHESES tiposvariables RPARENTHESES .)
    SET             reduce using rule 129 (operacionSet -> set DOT DELETE LPARENTHESES tiposvariables RPARENTHESES .)
    $end            reduce using rule 129 (operacionSet -> set DOT DELETE LPARENTHESES tiposvariables RPARENTHESES .)
    ELSE            reduce using rule 129 (operacionSet -> set DOT DELETE LPARENTHESES tiposvariables RPARENTHESES .)
    END             reduce using rule 129 (operacionSet -> set DOT DELETE LPARENTHESES tiposvariables RPARENTHESES .)
    RETURN          reduce using rule 129 (operacionSet -> set DOT DELETE LPARENTHESES tiposvariables RPARENTHESES .)


state 235

    (104) if -> IF datoscompletos operadores datoscompletos cuerpo END .

    LOCALVAR        reduce using rule 104 (if -> IF datoscompletos operadores datoscompletos cuerpo END .)
    FOR             reduce using rule 104 (if -> IF datoscompletos operadores datoscompletos cuerpo END .)
    IF              reduce using rule 104 (if -> IF datoscompletos operadores datoscompletos cuerpo END .)
    UNLESS          reduce using rule 104 (if -> IF datoscompletos operadores datoscompletos cuerpo END .)
    PUTS            reduce using rule 104 (if -> IF datoscompletos operadores datoscompletos cuerpo END .)
    PRINT           reduce using rule 104 (if -> IF datoscompletos operadores datoscompletos cuerpo END .)
    VAR             reduce using rule 104 (if -> IF datoscompletos operadores datoscompletos cuerpo END .)
    CONSTANT        reduce using rule 104 (if -> IF datoscompletos operadores datoscompletos cuerpo END .)
    LCURLYBRACKET   reduce using rule 104 (if -> IF datoscompletos operadores datoscompletos cuerpo END .)
    LBRACKET        reduce using rule 104 (if -> IF datoscompletos operadores datoscompletos cuerpo END .)
    SET             reduce using rule 104 (if -> IF datoscompletos operadores datoscompletos cuerpo END .)
    $end            reduce using rule 104 (if -> IF datoscompletos operadores datoscompletos cuerpo END .)
    ELSE            reduce using rule 104 (if -> IF datoscompletos operadores datoscompletos cuerpo END .)
    END             reduce using rule 104 (if -> IF datoscompletos operadores datoscompletos cuerpo END .)
    RETURN          reduce using rule 104 (if -> IF datoscompletos operadores datoscompletos cuerpo END .)


state 236

    (105) if -> IF datoscompletos operadores datoscompletos cuerpo else .

    LOCALVAR        reduce using rule 105 (if -> IF datoscompletos operadores datoscompletos cuerpo else .)
    FOR             reduce using rule 105 (if -> IF datoscompletos operadores datoscompletos cuerpo else .)
    IF              reduce using rule 105 (if -> IF datoscompletos operadores datoscompletos cuerpo else .)
    UNLESS          reduce using rule 105 (if -> IF datoscompletos operadores datoscompletos cuerpo else .)
    PUTS            reduce using rule 105 (if -> IF datoscompletos operadores datoscompletos cuerpo else .)
    PRINT           reduce using rule 105 (if -> IF datoscompletos operadores datoscompletos cuerpo else .)
    VAR             reduce using rule 105 (if -> IF datoscompletos operadores datoscompletos cuerpo else .)
    CONSTANT        reduce using rule 105 (if -> IF datoscompletos operadores datoscompletos cuerpo else .)
    LCURLYBRACKET   reduce using rule 105 (if -> IF datoscompletos operadores datoscompletos cuerpo else .)
    LBRACKET        reduce using rule 105 (if -> IF datoscompletos operadores datoscompletos cuerpo else .)
    SET             reduce using rule 105 (if -> IF datoscompletos operadores datoscompletos cuerpo else .)
    $end            reduce using rule 105 (if -> IF datoscompletos operadores datoscompletos cuerpo else .)
    ELSE            reduce using rule 105 (if -> IF datoscompletos operadores datoscompletos cuerpo else .)
    END             reduce using rule 105 (if -> IF datoscompletos operadores datoscompletos cuerpo else .)
    RETURN          reduce using rule 105 (if -> IF datoscompletos operadores datoscompletos cuerpo else .)


state 237

    (106) else -> ELSE . cuerpo END
    (17) cuerpo -> . declaracion cuerpo
    (18) cuerpo -> . asignacion cuerpo
    (19) cuerpo -> . loop cuerpo
    (20) cuerpo -> . estructurasDatos cuerpo
    (21) cuerpo -> . if cuerpo
    (22) cuerpo -> . unless cuerpo
    (23) cuerpo -> . impresion cuerpo
    (24) cuerpo -> . operacionSet cuerpo
    (25) cuerpo -> . operacionarray cuerpo
    (26) cuerpo -> . operacionHash cuerpo
    (27) cuerpo -> .
    (29) declaracion -> . tiposvariables EQUAL datos
    (30) declaracion -> . tiposvariables EQUAL estructurasDatos
    (31) declaracion -> . tiposvariables EQUAL expresion
    (32) declaracion -> . tiposvariables EQUAL declaracion
    (33) asignacion -> . LOCALVAR PLUSASSIGN datosAsignacion
    (34) asignacion -> . LOCALVAR MINASSIGN datosAsignacion
    (35) asignacion -> . LOCALVAR DIVASSIGN datosAsignacion
    (36) asignacion -> . LOCALVAR TIMESASSIGN datosAsignacion
    (37) asignacion -> . LOCALVAR MODASSIGN datosAsignacion
    (38) asignacion -> . LOCALVAR EXPASSIGN datosAsignacion
    (28) loop -> . FOR LOCALVAR IN rango cuerpo END
    (47) estructurasDatos -> . hash
    (48) estructurasDatos -> . array
    (49) estructurasDatos -> . set
    (104) if -> . IF datoscompletos operadores datoscompletos cuerpo END
    (105) if -> . IF datoscompletos operadores datoscompletos cuerpo else
    (114) unless -> . UNLESS condiciones cuerpo ELSE cuerpo END
    (62) impresion -> . PUTS datos
    (63) impresion -> . PUTS LOCALVAR
    (64) impresion -> . PRINT datos
    (65) impresion -> . PRINT LOCALVAR
    (125) operacionSet -> . set DOT ADD LPARENTHESES datos RPARENTHESES
    (126) operacionSet -> . set DOT ADD LPARENTHESES tiposvariables RPARENTHESES
    (127) operacionSet -> . set DOT CLEAR
    (128) operacionSet -> . set DOT DELETE LPARENTHESES datos RPARENTHESES
    (129) operacionSet -> . set DOT DELETE LPARENTHESES tiposvariables RPARENTHESES
    (89) operacionarray -> . array LBRACKET INTEGER RBRACKET
    (90) operacionarray -> . array DOT TAKE LPARENTHESES INTEGER RPARENTHESES
    (91) operacionarray -> . array DOT DROP LPARENTHESES INTEGER RPARENTHESES
    (92) operacionarray -> . array DOT push maspush
    (97) operacionarray -> . array DOT POP
    (98) operacionarray -> . array DOT POP LPARENTHESES INTEGER RPARENTHESES
    (99) operacionarray -> . array DOT DELETE LPARENTHESES INTEGER RPARENTHESES
    (100) operacionarray -> . array DOT LENGTH LPARENTHESES RPARENTHESES
    (101) operacionarray -> . array DOT EMPTY QUESTIONMARK
    (55) operacionHash -> . hash LBRACKET datos RBRACKET
    (56) operacionHash -> . hash LBRACKET datos RBRACKET EQUAL datos
    (57) operacionHash -> . hash DOT INCLUDE QUESTIONMARK LPARENTHESES datos RPARENTHESES
    (58) operacionHash -> . hash DOT DELETE LPARENTHESES datos RPARENTHESES
    (59) operacionHash -> . hash DOT KEYS
    (41) tiposvariables -> . VAR
    (42) tiposvariables -> . LOCALVAR
    (43) tiposvariables -> . CONSTANT
    (50) hash -> . LCURLYBRACKET elementoHash RCURLYBRACKET
    (81) array -> . LBRACKET RBRACKET
    (82) array -> . LBRACKET datosarray RBRACKET
    (119) set -> . SET LBRACKET elementoSet RBRACKET

    END             reduce using rule 27 (cuerpo -> .)
    LOCALVAR        shift and go to state 15
    FOR             shift and go to state 17
    IF              shift and go to state 21
    UNLESS          shift and go to state 22
    PUTS            shift and go to state 23
    PRINT           shift and go to state 24
    VAR             shift and go to state 26
    CONSTANT        shift and go to state 27
    LCURLYBRACKET   shift and go to state 28
    LBRACKET        shift and go to state 25
    SET             shift and go to state 29

    cuerpo                         shift and go to state 249
    declaracion                    shift and go to state 4
    asignacion                     shift and go to state 5
    loop                           shift and go to state 6
    estructurasDatos               shift and go to state 7
    if                             shift and go to state 8
    unless                         shift and go to state 9
    impresion                      shift and go to state 10
    operacionSet                   shift and go to state 11
    operacionarray                 shift and go to state 12
    operacionHash                  shift and go to state 13
    tiposvariables                 shift and go to state 16
    hash                           shift and go to state 18
    array                          shift and go to state 19
    set                            shift and go to state 20

state 238

    (114) unless -> UNLESS condiciones cuerpo ELSE cuerpo END .

    LOCALVAR        reduce using rule 114 (unless -> UNLESS condiciones cuerpo ELSE cuerpo END .)
    FOR             reduce using rule 114 (unless -> UNLESS condiciones cuerpo ELSE cuerpo END .)
    IF              reduce using rule 114 (unless -> UNLESS condiciones cuerpo ELSE cuerpo END .)
    UNLESS          reduce using rule 114 (unless -> UNLESS condiciones cuerpo ELSE cuerpo END .)
    PUTS            reduce using rule 114 (unless -> UNLESS condiciones cuerpo ELSE cuerpo END .)
    PRINT           reduce using rule 114 (unless -> UNLESS condiciones cuerpo ELSE cuerpo END .)
    VAR             reduce using rule 114 (unless -> UNLESS condiciones cuerpo ELSE cuerpo END .)
    CONSTANT        reduce using rule 114 (unless -> UNLESS condiciones cuerpo ELSE cuerpo END .)
    LCURLYBRACKET   reduce using rule 114 (unless -> UNLESS condiciones cuerpo ELSE cuerpo END .)
    LBRACKET        reduce using rule 114 (unless -> UNLESS condiciones cuerpo ELSE cuerpo END .)
    SET             reduce using rule 114 (unless -> UNLESS condiciones cuerpo ELSE cuerpo END .)
    $end            reduce using rule 114 (unless -> UNLESS condiciones cuerpo ELSE cuerpo END .)
    ELSE            reduce using rule 114 (unless -> UNLESS condiciones cuerpo ELSE cuerpo END .)
    END             reduce using rule 114 (unless -> UNLESS condiciones cuerpo ELSE cuerpo END .)
    RETURN          reduce using rule 114 (unless -> UNLESS condiciones cuerpo ELSE cuerpo END .)


state 239

    (51) elementoHash -> datos EQUAL GREATERTHAN datos maselementos .

    RCURLYBRACKET   reduce using rule 51 (elementoHash -> datos EQUAL GREATERTHAN datos maselementos .)
    COMMA           reduce using rule 51 (elementoHash -> datos EQUAL GREATERTHAN datos maselementos .)


state 240

    (54) maselementos -> COMMA . elementoHash maselementos
    (51) elementoHash -> . datos EQUAL GREATERTHAN datos maselementos
    (52) elementoHash -> .
    (44) datos -> . INTEGER
    (45) datos -> . FLOAT
    (46) datos -> . STRING

    COMMA           reduce using rule 52 (elementoHash -> .)
    RCURLYBRACKET   reduce using rule 52 (elementoHash -> .)
    INTEGER         shift and go to state 68
    FLOAT           shift and go to state 69
    STRING          shift and go to state 63

    elementoHash                   shift and go to state 250
    datos                          shift and go to state 80

state 241

    (124) otroElemento -> COMMA elementoSet otroElemento .

    RBRACKET        reduce using rule 124 (otroElemento -> COMMA elementoSet otroElemento .)
    COMMA           reduce using rule 124 (otroElemento -> COMMA elementoSet otroElemento .)


state 242

    (8) argumentos -> LOCALVAR EQUAL LCURLYBRACKET RCURLYBRACKET .

    RPARENTHESES    reduce using rule 8 (argumentos -> LOCALVAR EQUAL LCURLYBRACKET RCURLYBRACKET .)


state 243

    (13) variosargumentos -> LOCALVAR EQUAL datos masargumentos .

    RPARENTHESES    reduce using rule 13 (variosargumentos -> LOCALVAR EQUAL datos masargumentos .)


state 244

    (11) variosargumentos -> LOCALVAR EQUAL . datos
    (13) variosargumentos -> LOCALVAR EQUAL . datos masargumentos
    (44) datos -> . INTEGER
    (45) datos -> . FLOAT
    (46) datos -> . STRING

    INTEGER         shift and go to state 68
    FLOAT           shift and go to state 69
    STRING          shift and go to state 63

    datos                          shift and go to state 212

state 245

    (3) funcion -> DEF LOCALVAR LPARENTHESES argumentos RPARENTHESES cuerpo END .

    $end            reduce using rule 3 (funcion -> DEF LOCALVAR LPARENTHESES argumentos RPARENTHESES cuerpo END .)


state 246

    (4) funcion -> DEF LOCALVAR LPARENTHESES argumentos RPARENTHESES cuerpo retornar . END

    END             shift and go to state 251


state 247

    (15) retornar -> RETURN . LOCALVAR
    (16) retornar -> RETURN . datos
    (44) datos -> . INTEGER
    (45) datos -> . FLOAT
    (46) datos -> . STRING

    LOCALVAR        shift and go to state 252
    INTEGER         shift and go to state 68
    FLOAT           shift and go to state 69
    STRING          shift and go to state 63

    datos                          shift and go to state 253

state 248

    (57) operacionHash -> hash DOT INCLUDE QUESTIONMARK LPARENTHESES datos RPARENTHESES .

    LOCALVAR        reduce using rule 57 (operacionHash -> hash DOT INCLUDE QUESTIONMARK LPARENTHESES datos RPARENTHESES .)
    FOR             reduce using rule 57 (operacionHash -> hash DOT INCLUDE QUESTIONMARK LPARENTHESES datos RPARENTHESES .)
    IF              reduce using rule 57 (operacionHash -> hash DOT INCLUDE QUESTIONMARK LPARENTHESES datos RPARENTHESES .)
    UNLESS          reduce using rule 57 (operacionHash -> hash DOT INCLUDE QUESTIONMARK LPARENTHESES datos RPARENTHESES .)
    PUTS            reduce using rule 57 (operacionHash -> hash DOT INCLUDE QUESTIONMARK LPARENTHESES datos RPARENTHESES .)
    PRINT           reduce using rule 57 (operacionHash -> hash DOT INCLUDE QUESTIONMARK LPARENTHESES datos RPARENTHESES .)
    VAR             reduce using rule 57 (operacionHash -> hash DOT INCLUDE QUESTIONMARK LPARENTHESES datos RPARENTHESES .)
    CONSTANT        reduce using rule 57 (operacionHash -> hash DOT INCLUDE QUESTIONMARK LPARENTHESES datos RPARENTHESES .)
    LCURLYBRACKET   reduce using rule 57 (operacionHash -> hash DOT INCLUDE QUESTIONMARK LPARENTHESES datos RPARENTHESES .)
    LBRACKET        reduce using rule 57 (operacionHash -> hash DOT INCLUDE QUESTIONMARK LPARENTHESES datos RPARENTHESES .)
    SET             reduce using rule 57 (operacionHash -> hash DOT INCLUDE QUESTIONMARK LPARENTHESES datos RPARENTHESES .)
    $end            reduce using rule 57 (operacionHash -> hash DOT INCLUDE QUESTIONMARK LPARENTHESES datos RPARENTHESES .)
    ELSE            reduce using rule 57 (operacionHash -> hash DOT INCLUDE QUESTIONMARK LPARENTHESES datos RPARENTHESES .)
    END             reduce using rule 57 (operacionHash -> hash DOT INCLUDE QUESTIONMARK LPARENTHESES datos RPARENTHESES .)
    RETURN          reduce using rule 57 (operacionHash -> hash DOT INCLUDE QUESTIONMARK LPARENTHESES datos RPARENTHESES .)


state 249

    (106) else -> ELSE cuerpo . END

    END             shift and go to state 254


state 250

    (54) maselementos -> COMMA elementoHash . maselementos
    (53) maselementos -> .
    (54) maselementos -> . COMMA elementoHash maselementos

  ! shift/reduce conflict for COMMA resolved as shift
    RCURLYBRACKET   reduce using rule 53 (maselementos -> .)
    COMMA           shift and go to state 240

  ! COMMA           [ reduce using rule 53 (maselementos -> .) ]

    maselementos                   shift and go to state 255

state 251

    (4) funcion -> DEF LOCALVAR LPARENTHESES argumentos RPARENTHESES cuerpo retornar END .

    $end            reduce using rule 4 (funcion -> DEF LOCALVAR LPARENTHESES argumentos RPARENTHESES cuerpo retornar END .)


state 252

    (15) retornar -> RETURN LOCALVAR .

    END             reduce using rule 15 (retornar -> RETURN LOCALVAR .)


state 253

    (16) retornar -> RETURN datos .

    END             reduce using rule 16 (retornar -> RETURN datos .)


state 254

    (106) else -> ELSE cuerpo END .

    LOCALVAR        reduce using rule 106 (else -> ELSE cuerpo END .)
    FOR             reduce using rule 106 (else -> ELSE cuerpo END .)
    IF              reduce using rule 106 (else -> ELSE cuerpo END .)
    UNLESS          reduce using rule 106 (else -> ELSE cuerpo END .)
    PUTS            reduce using rule 106 (else -> ELSE cuerpo END .)
    PRINT           reduce using rule 106 (else -> ELSE cuerpo END .)
    VAR             reduce using rule 106 (else -> ELSE cuerpo END .)
    CONSTANT        reduce using rule 106 (else -> ELSE cuerpo END .)
    LCURLYBRACKET   reduce using rule 106 (else -> ELSE cuerpo END .)
    LBRACKET        reduce using rule 106 (else -> ELSE cuerpo END .)
    SET             reduce using rule 106 (else -> ELSE cuerpo END .)
    $end            reduce using rule 106 (else -> ELSE cuerpo END .)
    ELSE            reduce using rule 106 (else -> ELSE cuerpo END .)
    END             reduce using rule 106 (else -> ELSE cuerpo END .)
    RETURN          reduce using rule 106 (else -> ELSE cuerpo END .)


state 255

    (54) maselementos -> COMMA elementoHash maselementos .

    COMMA           reduce using rule 54 (maselementos -> COMMA elementoHash maselementos .)
    RCURLYBRACKET   reduce using rule 54 (maselementos -> COMMA elementoHash maselementos .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for LBRACKET in state 18 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 19 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 100 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 100 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 100 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 100 resolved as shift
WARNING: shift/reduce conflict for PERCENTAGE in state 100 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 136 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 186 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 186 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 186 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 186 resolved as shift
WARNING: shift/reduce conflict for PERCENTAGE in state 186 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 187 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 187 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 187 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 187 resolved as shift
WARNING: shift/reduce conflict for PERCENTAGE in state 187 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 188 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 188 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 188 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 188 resolved as shift
WARNING: shift/reduce conflict for PERCENTAGE in state 188 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 209 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 210 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 250 resolved as shift
WARNING: reduce/reduce conflict in state 59 resolved using rule (tiposvariables -> VAR)
WARNING: rejected rule (datosvarios -> VAR) in state 59
WARNING: reduce/reduce conflict in state 60 resolved using rule (tiposvariables -> LOCALVAR)
WARNING: rejected rule (datosvarios -> LOCALVAR) in state 60
WARNING: reduce/reduce conflict in state 61 resolved using rule (datos -> INTEGER)
WARNING: rejected rule (number -> INTEGER) in state 61
WARNING: reduce/reduce conflict in state 62 resolved using rule (datos -> FLOAT)
WARNING: rejected rule (number -> FLOAT) in state 62
WARNING: reduce/reduce conflict in state 136 resolved using rule (elementoSet -> datos)
WARNING: rejected rule (otroElemento -> <empty>) in state 136
