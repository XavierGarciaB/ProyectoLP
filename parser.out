Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ALERT
    AMPERSAND
    BEGIN
    BEGIN_M
    BOOLEAN
    CIRCUMFLEX
    COLON
    COMBCOMP
    COMMENT
    DOBLEQUOTE
    DOUBLELESSTHAN
    ELSEIF
    END_M
    FALSE
    GETS
    NIL
    NOT
    OR
    PIPE
    QUESTIONMARKPERIOD
    SEMICOLON
    SINGLEQUOTE
    TRUE
    TWOGREATERTHAN
    UNTIL
    WAVE

Grammar

Rule 0     S' -> inicio
Rule 1     inicio -> cuerpo
Rule 2     inicio -> funcion
Rule 3     funcion -> DEF LOCALVAR LPARENTHESES argumentos RPARENTHESES cuerpo END
Rule 4     funcion -> DEF LOCALVAR LPARENTHESES argumentos RPARENTHESES cuerpo retornar END
Rule 5     argumentos -> variosargumentos
Rule 6     argumentos -> MULTIPLY LOCALVAR
Rule 7     argumentos -> TWOSTARS LOCALVAR
Rule 8     argumentos -> LOCALVAR EQUAL LCURLYBRACKET RCURLYBRACKET
Rule 9     argumentos -> LOCALVAR TWOPOINTS datos
Rule 10    variosargumentos -> LOCALVAR
Rule 11    variosargumentos -> LOCALVAR EQUAL datos
Rule 12    variosargumentos -> LOCALVAR masargumentos
Rule 13    variosargumentos -> LOCALVAR EQUAL datos masargumentos
Rule 14    masargumentos -> COMMA variosargumentos
Rule 15    retornar -> RETURN LOCALVAR
Rule 16    retornar -> RETURN datos
Rule 17    cuerpo -> declaracion cuerpo
Rule 18    cuerpo -> asignacion cuerpo
Rule 19    cuerpo -> loop cuerpo
Rule 20    cuerpo -> estructurasDatos cuerpo
Rule 21    cuerpo -> if cuerpo
Rule 22    cuerpo -> unless cuerpo
Rule 23    cuerpo -> impresion cuerpo
Rule 24    cuerpo -> operacionSet cuerpo
Rule 25    cuerpo -> operacionarray cuerpo
Rule 26    cuerpo -> operacionHash cuerpo
Rule 27    cuerpo -> string cuerpo
Rule 28    cuerpo -> <empty>
Rule 29    loop -> FOR LOCALVAR IN rango cuerpo END
Rule 30    declaracion -> tiposvariables EQUAL datos
Rule 31    declaracion -> tiposvariables EQUAL estructurasDatos
Rule 32    declaracion -> tiposvariables EQUAL expresion
Rule 33    declaracion -> tiposvariables EQUAL declaracion
Rule 34    declaracion -> tiposvariables EQUAL casting
Rule 35    asignacion -> LOCALVAR PLUSASSIGN datosAsignacion
Rule 36    asignacion -> LOCALVAR MINASSIGN datosAsignacion
Rule 37    asignacion -> LOCALVAR DIVASSIGN datosAsignacion
Rule 38    asignacion -> LOCALVAR TIMESASSIGN datosAsignacion
Rule 39    asignacion -> LOCALVAR MODASSIGN datosAsignacion
Rule 40    asignacion -> LOCALVAR EXPASSIGN datosAsignacion
Rule 41    datosAsignacion -> number
Rule 42    datosAsignacion -> LOCALVAR
Rule 43    tiposvariables -> VAR
Rule 44    tiposvariables -> LOCALVAR
Rule 45    tiposvariables -> CONSTANT
Rule 46    datos -> INTEGER
Rule 47    datos -> FLOAT
Rule 48    datos -> STRING
Rule 49    estructurasDatos -> hash
Rule 50    estructurasDatos -> array
Rule 51    estructurasDatos -> set
Rule 52    hash -> LCURLYBRACKET elementoHash RCURLYBRACKET
Rule 53    elementoHash -> datos EQUAL GREATERTHAN datos maselementos
Rule 54    elementoHash -> <empty>
Rule 55    maselementos -> <empty>
Rule 56    maselementos -> COMMA elementoHash maselementos
Rule 57    operacionHash -> hash LBRACKET datos RBRACKET
Rule 58    operacionHash -> hash LBRACKET datos RBRACKET EQUAL datos
Rule 59    operacionHash -> hash DOT INCLUDE QUESTIONMARK LPARENTHESES datos RPARENTHESES
Rule 60    operacionHash -> hash DOT DELETE LPARENTHESES datos RPARENTHESES
Rule 61    operacionHash -> hash DOT KEYS
Rule 62    rango -> INTEGER RANGEINCLUSIVE INTEGER
Rule 63    rango -> INTEGER RANGEXCLUSIVE INTEGER
Rule 64    impresion -> PUTS datos
Rule 65    impresion -> PUTS LOCALVAR
Rule 66    impresion -> PRINT datos
Rule 67    impresion -> PRINT LOCALVAR
Rule 68    number -> INTEGER
Rule 69    number -> FLOAT
Rule 70    expresion -> operacion
Rule 71    expresion -> LPARENTHESES operacion RPARENTHESES
Rule 72    expresion -> LPARENTHESES operacion RPARENTHESES masoperaciones
Rule 73    operacion -> number operador number
Rule 74    operacion -> operacion masoperaciones
Rule 75    masoperaciones -> operador expresion masoperaciones
Rule 76    masoperaciones -> operador number
Rule 77    masoperaciones -> operador expresion
Rule 78    operador -> PLUS
Rule 79    operador -> MINUS
Rule 80    operador -> MULTIPLY
Rule 81    operador -> DIVIDE
Rule 82    operador -> PERCENTAGE
Rule 83    array -> LBRACKET RBRACKET
Rule 84    array -> LBRACKET datosarray RBRACKET
Rule 85    datosvarios -> datos
Rule 86    datosvarios -> number
Rule 87    datosvarios -> VAR
Rule 88    datosvarios -> LOCALVAR
Rule 89    datosarray -> datosvarios
Rule 90    datosarray -> datosarray COMMA datosvarios
Rule 91    operacionarray -> array LBRACKET INTEGER RBRACKET
Rule 92    operacionarray -> array DOT TAKE LPARENTHESES INTEGER RPARENTHESES
Rule 93    operacionarray -> array DOT DROP LPARENTHESES INTEGER RPARENTHESES
Rule 94    operacionarray -> array DOT push maspush
Rule 95    push -> PUSH LPARENTHESES datosvarios RPARENTHESES
Rule 96    push -> <empty>
Rule 97    maspush -> <empty>
Rule 98    maspush -> DOT push maspush
Rule 99    operacionarray -> array DOT POP
Rule 100   operacionarray -> array DOT POP LPARENTHESES INTEGER RPARENTHESES
Rule 101   operacionarray -> array DOT DELETE LPARENTHESES INTEGER RPARENTHESES
Rule 102   operacionarray -> array DOT LENGTH LPARENTHESES RPARENTHESES
Rule 103   operacionarray -> array DOT EMPTY QUESTIONMARK
Rule 104   datoscompletos -> datosvarios
Rule 105   datoscompletos -> tiposvariables
Rule 106   if -> IF datoscompletos operadores datoscompletos cuerpo END
Rule 107   if -> IF datoscompletos operadores datoscompletos cuerpo else
Rule 108   else -> ELSE cuerpo END
Rule 109   operadores -> DOUBLEEQUAL
Rule 110   operadores -> TRIPLEEQUAL
Rule 111   operadores -> GREATERTHAN
Rule 112   operadores -> NOTEQUAL
Rule 113   operadores -> LESSTHAN
Rule 114   operadores -> GREQUAL
Rule 115   operadores -> LEQUAL
Rule 116   unless -> UNLESS expresionCondicional cuerpo ELSE cuerpo END
Rule 117   expresionCondicional -> boolean
Rule 118   expresionCondicional -> EXCLAMATION LPARENTHESES boolean RPARENTHESES
Rule 119   operadorBinario -> DOUBLEAMPERSAND
Rule 120   operadorBinario -> DOUBLEPIPE
Rule 121   boolean -> condiciones
Rule 122   boolean -> EXCLAMATION LPARENTHESES condiciones RPARENTHESES
Rule 123   boolean -> boolean operadorBinario boolean
Rule 124   condiciones -> tiposvariables operadores tiposvariables
Rule 125   condiciones -> datos operadores datos
Rule 126   condiciones -> tiposvariables operadores datos
Rule 127   condiciones -> datos operadores tiposvariables
Rule 128   set -> SET LBRACKET elementoSet RBRACKET
Rule 129   elementoSet -> <empty>
Rule 130   elementoSet -> datos
Rule 131   elementoSet -> datos otroElemento
Rule 132   otroElemento -> <empty>
Rule 133   otroElemento -> COMMA elementoSet otroElemento
Rule 134   operacionSet -> set DOT ADD LPARENTHESES datos RPARENTHESES
Rule 135   operacionSet -> set DOT ADD LPARENTHESES tiposvariables RPARENTHESES
Rule 136   operacionSet -> set DOT CLEAR
Rule 137   operacionSet -> set DOT DELETE LPARENTHESES datos RPARENTHESES
Rule 138   operacionSet -> set DOT DELETE LPARENTHESES tiposvariables RPARENTHESES
Rule 139   string -> STRING PLUS STRING
Rule 140   string -> STRING MULTIPLY INTEGER
Rule 141   string -> STRING DOT stringOpt
Rule 142   stringOpt -> UPCASE
Rule 143   stringOpt -> DOWNCASE
Rule 144   stringOpt -> LENGTH
Rule 145   stringOpt -> CAPS
Rule 146   stringOpt -> INSERT LPARENTHESES INTEGER COMMA STRING RPARENTHESES
Rule 147   casting -> STRING DOT TO_I
Rule 148   casting -> STRING DOT TO_F
Rule 149   casting -> number DOT TO_S

Terminals, with rules where they appear

ADD                  : 134 135
ALERT                : 
AMPERSAND            : 
BEGIN                : 
BEGIN_M              : 
BOOLEAN              : 
CAPS                 : 145
CIRCUMFLEX           : 
CLEAR                : 136
COLON                : 
COMBCOMP             : 
COMMA                : 14 56 90 133 146
COMMENT              : 
CONSTANT             : 45
DEF                  : 3 4
DELETE               : 60 101 137 138
DIVASSIGN            : 37
DIVIDE               : 81
DOBLEQUOTE           : 
DOT                  : 59 60 61 92 93 94 98 99 100 101 102 103 134 135 136 137 138 141 147 148 149
DOUBLEAMPERSAND      : 119
DOUBLEEQUAL          : 109
DOUBLELESSTHAN       : 
DOUBLEPIPE           : 120
DOWNCASE             : 143
DROP                 : 93
ELSE                 : 108 116
ELSEIF               : 
EMPTY                : 103
END                  : 3 4 29 106 108 116
END_M                : 
EQUAL                : 8 11 13 30 31 32 33 34 53 58
EXCLAMATION          : 118 122
EXPASSIGN            : 40
FALSE                : 
FLOAT                : 47 69
FOR                  : 29
GETS                 : 
GREATERTHAN          : 53 111
GREQUAL              : 114
IF                   : 106 107
IN                   : 29
INCLUDE              : 59
INSERT               : 146
INTEGER              : 46 62 62 63 63 68 91 92 93 100 101 140 146
KEYS                 : 61
LBRACKET             : 57 58 83 84 91 128
LCURLYBRACKET        : 8 52
LENGTH               : 102 144
LEQUAL               : 115
LESSTHAN             : 113
LOCALVAR             : 3 4 6 7 8 9 10 11 12 13 15 29 35 36 37 38 39 40 42 44 65 67 88
LPARENTHESES         : 3 4 59 60 71 72 92 93 95 100 101 102 118 122 134 135 137 138 146
MINASSIGN            : 36
MINUS                : 79
MODASSIGN            : 39
MULTIPLY             : 6 80 140
NIL                  : 
NOT                  : 
NOTEQUAL             : 112
OR                   : 
PERCENTAGE           : 82
PIPE                 : 
PLUS                 : 78 139
PLUSASSIGN           : 35
POP                  : 99 100
PRINT                : 66 67
PUSH                 : 95
PUTS                 : 64 65
QUESTIONMARK         : 59 103
QUESTIONMARKPERIOD   : 
RANGEINCLUSIVE       : 62
RANGEXCLUSIVE        : 63
RBRACKET             : 57 58 83 84 91 128
RCURLYBRACKET        : 8 52
RETURN               : 15 16
RPARENTHESES         : 3 4 59 60 71 72 92 93 95 100 101 102 118 122 134 135 137 138 146
SEMICOLON            : 
SET                  : 128
SINGLEQUOTE          : 
STRING               : 48 139 139 140 141 146 147 148
TAKE                 : 92
TIMESASSIGN          : 38
TO_F                 : 148
TO_I                 : 147
TO_S                 : 149
TRIPLEEQUAL          : 110
TRUE                 : 
TWOGREATERTHAN       : 
TWOPOINTS            : 9
TWOSTARS             : 7
UNLESS               : 116
UNTIL                : 
UPCASE               : 142
VAR                  : 43 87
WAVE                 : 
error                : 

Nonterminals, with rules where they appear

argumentos           : 3 4
array                : 50 91 92 93 94 99 100 101 102 103
asignacion           : 18
boolean              : 117 118 123 123
casting              : 34
condiciones          : 121 122
cuerpo               : 1 3 4 17 18 19 20 21 22 23 24 25 26 27 29 106 107 108 116 116
datos                : 9 11 13 16 30 53 53 57 58 58 59 60 64 66 85 125 125 126 127 130 131 134 137
datosAsignacion      : 35 36 37 38 39 40
datosarray           : 84 90
datoscompletos       : 106 106 107 107
datosvarios          : 89 90 95 104
declaracion          : 17 33
elementoHash         : 52 56
elementoSet          : 128 133
else                 : 107
estructurasDatos     : 20 31
expresion            : 32 75 77
expresionCondicional : 116
funcion              : 2
hash                 : 49 57 58 59 60 61
if                   : 21
impresion            : 23
inicio               : 0
loop                 : 19
masargumentos        : 12 13
maselementos         : 53 56
masoperaciones       : 72 74 75
maspush              : 94 98
number               : 41 73 73 76 86 149
operacion            : 70 71 72 74
operacionHash        : 26
operacionSet         : 24
operacionarray       : 25
operador             : 73 75 76 77
operadorBinario      : 123
operadores           : 106 107 124 125 126 127
otroElemento         : 131 133
push                 : 94 98
rango                : 29
retornar             : 4
set                  : 51 134 135 136 137 138
string               : 27
stringOpt            : 141
tiposvariables       : 30 31 32 33 34 105 124 124 126 127 135 138
unless               : 22
variosargumentos     : 5 14

Parsing method: LALR

state 0

    (0) S' -> . inicio
    (1) inicio -> . cuerpo
    (2) inicio -> . funcion
    (17) cuerpo -> . declaracion cuerpo
    (18) cuerpo -> . asignacion cuerpo
    (19) cuerpo -> . loop cuerpo
    (20) cuerpo -> . estructurasDatos cuerpo
    (21) cuerpo -> . if cuerpo
    (22) cuerpo -> . unless cuerpo
    (23) cuerpo -> . impresion cuerpo
    (24) cuerpo -> . operacionSet cuerpo
    (25) cuerpo -> . operacionarray cuerpo
    (26) cuerpo -> . operacionHash cuerpo
    (27) cuerpo -> . string cuerpo
    (28) cuerpo -> .
    (3) funcion -> . DEF LOCALVAR LPARENTHESES argumentos RPARENTHESES cuerpo END
    (4) funcion -> . DEF LOCALVAR LPARENTHESES argumentos RPARENTHESES cuerpo retornar END
    (30) declaracion -> . tiposvariables EQUAL datos
    (31) declaracion -> . tiposvariables EQUAL estructurasDatos
    (32) declaracion -> . tiposvariables EQUAL expresion
    (33) declaracion -> . tiposvariables EQUAL declaracion
    (34) declaracion -> . tiposvariables EQUAL casting
    (35) asignacion -> . LOCALVAR PLUSASSIGN datosAsignacion
    (36) asignacion -> . LOCALVAR MINASSIGN datosAsignacion
    (37) asignacion -> . LOCALVAR DIVASSIGN datosAsignacion
    (38) asignacion -> . LOCALVAR TIMESASSIGN datosAsignacion
    (39) asignacion -> . LOCALVAR MODASSIGN datosAsignacion
    (40) asignacion -> . LOCALVAR EXPASSIGN datosAsignacion
    (29) loop -> . FOR LOCALVAR IN rango cuerpo END
    (49) estructurasDatos -> . hash
    (50) estructurasDatos -> . array
    (51) estructurasDatos -> . set
    (106) if -> . IF datoscompletos operadores datoscompletos cuerpo END
    (107) if -> . IF datoscompletos operadores datoscompletos cuerpo else
    (116) unless -> . UNLESS expresionCondicional cuerpo ELSE cuerpo END
    (64) impresion -> . PUTS datos
    (65) impresion -> . PUTS LOCALVAR
    (66) impresion -> . PRINT datos
    (67) impresion -> . PRINT LOCALVAR
    (134) operacionSet -> . set DOT ADD LPARENTHESES datos RPARENTHESES
    (135) operacionSet -> . set DOT ADD LPARENTHESES tiposvariables RPARENTHESES
    (136) operacionSet -> . set DOT CLEAR
    (137) operacionSet -> . set DOT DELETE LPARENTHESES datos RPARENTHESES
    (138) operacionSet -> . set DOT DELETE LPARENTHESES tiposvariables RPARENTHESES
    (91) operacionarray -> . array LBRACKET INTEGER RBRACKET
    (92) operacionarray -> . array DOT TAKE LPARENTHESES INTEGER RPARENTHESES
    (93) operacionarray -> . array DOT DROP LPARENTHESES INTEGER RPARENTHESES
    (94) operacionarray -> . array DOT push maspush
    (99) operacionarray -> . array DOT POP
    (100) operacionarray -> . array DOT POP LPARENTHESES INTEGER RPARENTHESES
    (101) operacionarray -> . array DOT DELETE LPARENTHESES INTEGER RPARENTHESES
    (102) operacionarray -> . array DOT LENGTH LPARENTHESES RPARENTHESES
    (103) operacionarray -> . array DOT EMPTY QUESTIONMARK
    (57) operacionHash -> . hash LBRACKET datos RBRACKET
    (58) operacionHash -> . hash LBRACKET datos RBRACKET EQUAL datos
    (59) operacionHash -> . hash DOT INCLUDE QUESTIONMARK LPARENTHESES datos RPARENTHESES
    (60) operacionHash -> . hash DOT DELETE LPARENTHESES datos RPARENTHESES
    (61) operacionHash -> . hash DOT KEYS
    (139) string -> . STRING PLUS STRING
    (140) string -> . STRING MULTIPLY INTEGER
    (141) string -> . STRING DOT stringOpt
    (43) tiposvariables -> . VAR
    (44) tiposvariables -> . LOCALVAR
    (45) tiposvariables -> . CONSTANT
    (52) hash -> . LCURLYBRACKET elementoHash RCURLYBRACKET
    (83) array -> . LBRACKET RBRACKET
    (84) array -> . LBRACKET datosarray RBRACKET
    (128) set -> . SET LBRACKET elementoSet RBRACKET

    $end            reduce using rule 28 (cuerpo -> .)
    DEF             shift and go to state 15
    LOCALVAR        shift and go to state 16
    FOR             shift and go to state 18
    IF              shift and go to state 22
    UNLESS          shift and go to state 23
    PUTS            shift and go to state 24
    PRINT           shift and go to state 25
    STRING          shift and go to state 27
    VAR             shift and go to state 28
    CONSTANT        shift and go to state 29
    LCURLYBRACKET   shift and go to state 30
    LBRACKET        shift and go to state 26
    SET             shift and go to state 31

    inicio                         shift and go to state 1
    cuerpo                         shift and go to state 2
    funcion                        shift and go to state 3
    declaracion                    shift and go to state 4
    asignacion                     shift and go to state 5
    loop                           shift and go to state 6
    estructurasDatos               shift and go to state 7
    if                             shift and go to state 8
    unless                         shift and go to state 9
    impresion                      shift and go to state 10
    operacionSet                   shift and go to state 11
    operacionarray                 shift and go to state 12
    operacionHash                  shift and go to state 13
    string                         shift and go to state 14
    tiposvariables                 shift and go to state 17
    hash                           shift and go to state 19
    array                          shift and go to state 20
    set                            shift and go to state 21

state 1

    (0) S' -> inicio .



state 2

    (1) inicio -> cuerpo .

    $end            reduce using rule 1 (inicio -> cuerpo .)


state 3

    (2) inicio -> funcion .

    $end            reduce using rule 2 (inicio -> funcion .)


state 4

    (17) cuerpo -> declaracion . cuerpo
    (17) cuerpo -> . declaracion cuerpo
    (18) cuerpo -> . asignacion cuerpo
    (19) cuerpo -> . loop cuerpo
    (20) cuerpo -> . estructurasDatos cuerpo
    (21) cuerpo -> . if cuerpo
    (22) cuerpo -> . unless cuerpo
    (23) cuerpo -> . impresion cuerpo
    (24) cuerpo -> . operacionSet cuerpo
    (25) cuerpo -> . operacionarray cuerpo
    (26) cuerpo -> . operacionHash cuerpo
    (27) cuerpo -> . string cuerpo
    (28) cuerpo -> .
    (30) declaracion -> . tiposvariables EQUAL datos
    (31) declaracion -> . tiposvariables EQUAL estructurasDatos
    (32) declaracion -> . tiposvariables EQUAL expresion
    (33) declaracion -> . tiposvariables EQUAL declaracion
    (34) declaracion -> . tiposvariables EQUAL casting
    (35) asignacion -> . LOCALVAR PLUSASSIGN datosAsignacion
    (36) asignacion -> . LOCALVAR MINASSIGN datosAsignacion
    (37) asignacion -> . LOCALVAR DIVASSIGN datosAsignacion
    (38) asignacion -> . LOCALVAR TIMESASSIGN datosAsignacion
    (39) asignacion -> . LOCALVAR MODASSIGN datosAsignacion
    (40) asignacion -> . LOCALVAR EXPASSIGN datosAsignacion
    (29) loop -> . FOR LOCALVAR IN rango cuerpo END
    (49) estructurasDatos -> . hash
    (50) estructurasDatos -> . array
    (51) estructurasDatos -> . set
    (106) if -> . IF datoscompletos operadores datoscompletos cuerpo END
    (107) if -> . IF datoscompletos operadores datoscompletos cuerpo else
    (116) unless -> . UNLESS expresionCondicional cuerpo ELSE cuerpo END
    (64) impresion -> . PUTS datos
    (65) impresion -> . PUTS LOCALVAR
    (66) impresion -> . PRINT datos
    (67) impresion -> . PRINT LOCALVAR
    (134) operacionSet -> . set DOT ADD LPARENTHESES datos RPARENTHESES
    (135) operacionSet -> . set DOT ADD LPARENTHESES tiposvariables RPARENTHESES
    (136) operacionSet -> . set DOT CLEAR
    (137) operacionSet -> . set DOT DELETE LPARENTHESES datos RPARENTHESES
    (138) operacionSet -> . set DOT DELETE LPARENTHESES tiposvariables RPARENTHESES
    (91) operacionarray -> . array LBRACKET INTEGER RBRACKET
    (92) operacionarray -> . array DOT TAKE LPARENTHESES INTEGER RPARENTHESES
    (93) operacionarray -> . array DOT DROP LPARENTHESES INTEGER RPARENTHESES
    (94) operacionarray -> . array DOT push maspush
    (99) operacionarray -> . array DOT POP
    (100) operacionarray -> . array DOT POP LPARENTHESES INTEGER RPARENTHESES
    (101) operacionarray -> . array DOT DELETE LPARENTHESES INTEGER RPARENTHESES
    (102) operacionarray -> . array DOT LENGTH LPARENTHESES RPARENTHESES
    (103) operacionarray -> . array DOT EMPTY QUESTIONMARK
    (57) operacionHash -> . hash LBRACKET datos RBRACKET
    (58) operacionHash -> . hash LBRACKET datos RBRACKET EQUAL datos
    (59) operacionHash -> . hash DOT INCLUDE QUESTIONMARK LPARENTHESES datos RPARENTHESES
    (60) operacionHash -> . hash DOT DELETE LPARENTHESES datos RPARENTHESES
    (61) operacionHash -> . hash DOT KEYS
    (139) string -> . STRING PLUS STRING
    (140) string -> . STRING MULTIPLY INTEGER
    (141) string -> . STRING DOT stringOpt
    (43) tiposvariables -> . VAR
    (44) tiposvariables -> . LOCALVAR
    (45) tiposvariables -> . CONSTANT
    (52) hash -> . LCURLYBRACKET elementoHash RCURLYBRACKET
    (83) array -> . LBRACKET RBRACKET
    (84) array -> . LBRACKET datosarray RBRACKET
    (128) set -> . SET LBRACKET elementoSet RBRACKET

    $end            reduce using rule 28 (cuerpo -> .)
    ELSE            reduce using rule 28 (cuerpo -> .)
    END             reduce using rule 28 (cuerpo -> .)
    RETURN          reduce using rule 28 (cuerpo -> .)
    LOCALVAR        shift and go to state 16
    FOR             shift and go to state 18
    IF              shift and go to state 22
    UNLESS          shift and go to state 23
    PUTS            shift and go to state 24
    PRINT           shift and go to state 25
    STRING          shift and go to state 27
    VAR             shift and go to state 28
    CONSTANT        shift and go to state 29
    LCURLYBRACKET   shift and go to state 30
    LBRACKET        shift and go to state 26
    SET             shift and go to state 31

    declaracion                    shift and go to state 4
    cuerpo                         shift and go to state 32
    asignacion                     shift and go to state 5
    loop                           shift and go to state 6
    estructurasDatos               shift and go to state 7
    if                             shift and go to state 8
    unless                         shift and go to state 9
    impresion                      shift and go to state 10
    operacionSet                   shift and go to state 11
    operacionarray                 shift and go to state 12
    operacionHash                  shift and go to state 13
    string                         shift and go to state 14
    tiposvariables                 shift and go to state 17
    hash                           shift and go to state 19
    array                          shift and go to state 20
    set                            shift and go to state 21

state 5

    (18) cuerpo -> asignacion . cuerpo
    (17) cuerpo -> . declaracion cuerpo
    (18) cuerpo -> . asignacion cuerpo
    (19) cuerpo -> . loop cuerpo
    (20) cuerpo -> . estructurasDatos cuerpo
    (21) cuerpo -> . if cuerpo
    (22) cuerpo -> . unless cuerpo
    (23) cuerpo -> . impresion cuerpo
    (24) cuerpo -> . operacionSet cuerpo
    (25) cuerpo -> . operacionarray cuerpo
    (26) cuerpo -> . operacionHash cuerpo
    (27) cuerpo -> . string cuerpo
    (28) cuerpo -> .
    (30) declaracion -> . tiposvariables EQUAL datos
    (31) declaracion -> . tiposvariables EQUAL estructurasDatos
    (32) declaracion -> . tiposvariables EQUAL expresion
    (33) declaracion -> . tiposvariables EQUAL declaracion
    (34) declaracion -> . tiposvariables EQUAL casting
    (35) asignacion -> . LOCALVAR PLUSASSIGN datosAsignacion
    (36) asignacion -> . LOCALVAR MINASSIGN datosAsignacion
    (37) asignacion -> . LOCALVAR DIVASSIGN datosAsignacion
    (38) asignacion -> . LOCALVAR TIMESASSIGN datosAsignacion
    (39) asignacion -> . LOCALVAR MODASSIGN datosAsignacion
    (40) asignacion -> . LOCALVAR EXPASSIGN datosAsignacion
    (29) loop -> . FOR LOCALVAR IN rango cuerpo END
    (49) estructurasDatos -> . hash
    (50) estructurasDatos -> . array
    (51) estructurasDatos -> . set
    (106) if -> . IF datoscompletos operadores datoscompletos cuerpo END
    (107) if -> . IF datoscompletos operadores datoscompletos cuerpo else
    (116) unless -> . UNLESS expresionCondicional cuerpo ELSE cuerpo END
    (64) impresion -> . PUTS datos
    (65) impresion -> . PUTS LOCALVAR
    (66) impresion -> . PRINT datos
    (67) impresion -> . PRINT LOCALVAR
    (134) operacionSet -> . set DOT ADD LPARENTHESES datos RPARENTHESES
    (135) operacionSet -> . set DOT ADD LPARENTHESES tiposvariables RPARENTHESES
    (136) operacionSet -> . set DOT CLEAR
    (137) operacionSet -> . set DOT DELETE LPARENTHESES datos RPARENTHESES
    (138) operacionSet -> . set DOT DELETE LPARENTHESES tiposvariables RPARENTHESES
    (91) operacionarray -> . array LBRACKET INTEGER RBRACKET
    (92) operacionarray -> . array DOT TAKE LPARENTHESES INTEGER RPARENTHESES
    (93) operacionarray -> . array DOT DROP LPARENTHESES INTEGER RPARENTHESES
    (94) operacionarray -> . array DOT push maspush
    (99) operacionarray -> . array DOT POP
    (100) operacionarray -> . array DOT POP LPARENTHESES INTEGER RPARENTHESES
    (101) operacionarray -> . array DOT DELETE LPARENTHESES INTEGER RPARENTHESES
    (102) operacionarray -> . array DOT LENGTH LPARENTHESES RPARENTHESES
    (103) operacionarray -> . array DOT EMPTY QUESTIONMARK
    (57) operacionHash -> . hash LBRACKET datos RBRACKET
    (58) operacionHash -> . hash LBRACKET datos RBRACKET EQUAL datos
    (59) operacionHash -> . hash DOT INCLUDE QUESTIONMARK LPARENTHESES datos RPARENTHESES
    (60) operacionHash -> . hash DOT DELETE LPARENTHESES datos RPARENTHESES
    (61) operacionHash -> . hash DOT KEYS
    (139) string -> . STRING PLUS STRING
    (140) string -> . STRING MULTIPLY INTEGER
    (141) string -> . STRING DOT stringOpt
    (43) tiposvariables -> . VAR
    (44) tiposvariables -> . LOCALVAR
    (45) tiposvariables -> . CONSTANT
    (52) hash -> . LCURLYBRACKET elementoHash RCURLYBRACKET
    (83) array -> . LBRACKET RBRACKET
    (84) array -> . LBRACKET datosarray RBRACKET
    (128) set -> . SET LBRACKET elementoSet RBRACKET

    $end            reduce using rule 28 (cuerpo -> .)
    ELSE            reduce using rule 28 (cuerpo -> .)
    END             reduce using rule 28 (cuerpo -> .)
    RETURN          reduce using rule 28 (cuerpo -> .)
    LOCALVAR        shift and go to state 16
    FOR             shift and go to state 18
    IF              shift and go to state 22
    UNLESS          shift and go to state 23
    PUTS            shift and go to state 24
    PRINT           shift and go to state 25
    STRING          shift and go to state 27
    VAR             shift and go to state 28
    CONSTANT        shift and go to state 29
    LCURLYBRACKET   shift and go to state 30
    LBRACKET        shift and go to state 26
    SET             shift and go to state 31

    asignacion                     shift and go to state 5
    cuerpo                         shift and go to state 33
    declaracion                    shift and go to state 4
    loop                           shift and go to state 6
    estructurasDatos               shift and go to state 7
    if                             shift and go to state 8
    unless                         shift and go to state 9
    impresion                      shift and go to state 10
    operacionSet                   shift and go to state 11
    operacionarray                 shift and go to state 12
    operacionHash                  shift and go to state 13
    string                         shift and go to state 14
    tiposvariables                 shift and go to state 17
    hash                           shift and go to state 19
    array                          shift and go to state 20
    set                            shift and go to state 21

state 6

    (19) cuerpo -> loop . cuerpo
    (17) cuerpo -> . declaracion cuerpo
    (18) cuerpo -> . asignacion cuerpo
    (19) cuerpo -> . loop cuerpo
    (20) cuerpo -> . estructurasDatos cuerpo
    (21) cuerpo -> . if cuerpo
    (22) cuerpo -> . unless cuerpo
    (23) cuerpo -> . impresion cuerpo
    (24) cuerpo -> . operacionSet cuerpo
    (25) cuerpo -> . operacionarray cuerpo
    (26) cuerpo -> . operacionHash cuerpo
    (27) cuerpo -> . string cuerpo
    (28) cuerpo -> .
    (30) declaracion -> . tiposvariables EQUAL datos
    (31) declaracion -> . tiposvariables EQUAL estructurasDatos
    (32) declaracion -> . tiposvariables EQUAL expresion
    (33) declaracion -> . tiposvariables EQUAL declaracion
    (34) declaracion -> . tiposvariables EQUAL casting
    (35) asignacion -> . LOCALVAR PLUSASSIGN datosAsignacion
    (36) asignacion -> . LOCALVAR MINASSIGN datosAsignacion
    (37) asignacion -> . LOCALVAR DIVASSIGN datosAsignacion
    (38) asignacion -> . LOCALVAR TIMESASSIGN datosAsignacion
    (39) asignacion -> . LOCALVAR MODASSIGN datosAsignacion
    (40) asignacion -> . LOCALVAR EXPASSIGN datosAsignacion
    (29) loop -> . FOR LOCALVAR IN rango cuerpo END
    (49) estructurasDatos -> . hash
    (50) estructurasDatos -> . array
    (51) estructurasDatos -> . set
    (106) if -> . IF datoscompletos operadores datoscompletos cuerpo END
    (107) if -> . IF datoscompletos operadores datoscompletos cuerpo else
    (116) unless -> . UNLESS expresionCondicional cuerpo ELSE cuerpo END
    (64) impresion -> . PUTS datos
    (65) impresion -> . PUTS LOCALVAR
    (66) impresion -> . PRINT datos
    (67) impresion -> . PRINT LOCALVAR
    (134) operacionSet -> . set DOT ADD LPARENTHESES datos RPARENTHESES
    (135) operacionSet -> . set DOT ADD LPARENTHESES tiposvariables RPARENTHESES
    (136) operacionSet -> . set DOT CLEAR
    (137) operacionSet -> . set DOT DELETE LPARENTHESES datos RPARENTHESES
    (138) operacionSet -> . set DOT DELETE LPARENTHESES tiposvariables RPARENTHESES
    (91) operacionarray -> . array LBRACKET INTEGER RBRACKET
    (92) operacionarray -> . array DOT TAKE LPARENTHESES INTEGER RPARENTHESES
    (93) operacionarray -> . array DOT DROP LPARENTHESES INTEGER RPARENTHESES
    (94) operacionarray -> . array DOT push maspush
    (99) operacionarray -> . array DOT POP
    (100) operacionarray -> . array DOT POP LPARENTHESES INTEGER RPARENTHESES
    (101) operacionarray -> . array DOT DELETE LPARENTHESES INTEGER RPARENTHESES
    (102) operacionarray -> . array DOT LENGTH LPARENTHESES RPARENTHESES
    (103) operacionarray -> . array DOT EMPTY QUESTIONMARK
    (57) operacionHash -> . hash LBRACKET datos RBRACKET
    (58) operacionHash -> . hash LBRACKET datos RBRACKET EQUAL datos
    (59) operacionHash -> . hash DOT INCLUDE QUESTIONMARK LPARENTHESES datos RPARENTHESES
    (60) operacionHash -> . hash DOT DELETE LPARENTHESES datos RPARENTHESES
    (61) operacionHash -> . hash DOT KEYS
    (139) string -> . STRING PLUS STRING
    (140) string -> . STRING MULTIPLY INTEGER
    (141) string -> . STRING DOT stringOpt
    (43) tiposvariables -> . VAR
    (44) tiposvariables -> . LOCALVAR
    (45) tiposvariables -> . CONSTANT
    (52) hash -> . LCURLYBRACKET elementoHash RCURLYBRACKET
    (83) array -> . LBRACKET RBRACKET
    (84) array -> . LBRACKET datosarray RBRACKET
    (128) set -> . SET LBRACKET elementoSet RBRACKET

    $end            reduce using rule 28 (cuerpo -> .)
    ELSE            reduce using rule 28 (cuerpo -> .)
    END             reduce using rule 28 (cuerpo -> .)
    RETURN          reduce using rule 28 (cuerpo -> .)
    LOCALVAR        shift and go to state 16
    FOR             shift and go to state 18
    IF              shift and go to state 22
    UNLESS          shift and go to state 23
    PUTS            shift and go to state 24
    PRINT           shift and go to state 25
    STRING          shift and go to state 27
    VAR             shift and go to state 28
    CONSTANT        shift and go to state 29
    LCURLYBRACKET   shift and go to state 30
    LBRACKET        shift and go to state 26
    SET             shift and go to state 31

    loop                           shift and go to state 6
    cuerpo                         shift and go to state 34
    declaracion                    shift and go to state 4
    asignacion                     shift and go to state 5
    estructurasDatos               shift and go to state 7
    if                             shift and go to state 8
    unless                         shift and go to state 9
    impresion                      shift and go to state 10
    operacionSet                   shift and go to state 11
    operacionarray                 shift and go to state 12
    operacionHash                  shift and go to state 13
    string                         shift and go to state 14
    tiposvariables                 shift and go to state 17
    hash                           shift and go to state 19
    array                          shift and go to state 20
    set                            shift and go to state 21

state 7

    (20) cuerpo -> estructurasDatos . cuerpo
    (17) cuerpo -> . declaracion cuerpo
    (18) cuerpo -> . asignacion cuerpo
    (19) cuerpo -> . loop cuerpo
    (20) cuerpo -> . estructurasDatos cuerpo
    (21) cuerpo -> . if cuerpo
    (22) cuerpo -> . unless cuerpo
    (23) cuerpo -> . impresion cuerpo
    (24) cuerpo -> . operacionSet cuerpo
    (25) cuerpo -> . operacionarray cuerpo
    (26) cuerpo -> . operacionHash cuerpo
    (27) cuerpo -> . string cuerpo
    (28) cuerpo -> .
    (30) declaracion -> . tiposvariables EQUAL datos
    (31) declaracion -> . tiposvariables EQUAL estructurasDatos
    (32) declaracion -> . tiposvariables EQUAL expresion
    (33) declaracion -> . tiposvariables EQUAL declaracion
    (34) declaracion -> . tiposvariables EQUAL casting
    (35) asignacion -> . LOCALVAR PLUSASSIGN datosAsignacion
    (36) asignacion -> . LOCALVAR MINASSIGN datosAsignacion
    (37) asignacion -> . LOCALVAR DIVASSIGN datosAsignacion
    (38) asignacion -> . LOCALVAR TIMESASSIGN datosAsignacion
    (39) asignacion -> . LOCALVAR MODASSIGN datosAsignacion
    (40) asignacion -> . LOCALVAR EXPASSIGN datosAsignacion
    (29) loop -> . FOR LOCALVAR IN rango cuerpo END
    (49) estructurasDatos -> . hash
    (50) estructurasDatos -> . array
    (51) estructurasDatos -> . set
    (106) if -> . IF datoscompletos operadores datoscompletos cuerpo END
    (107) if -> . IF datoscompletos operadores datoscompletos cuerpo else
    (116) unless -> . UNLESS expresionCondicional cuerpo ELSE cuerpo END
    (64) impresion -> . PUTS datos
    (65) impresion -> . PUTS LOCALVAR
    (66) impresion -> . PRINT datos
    (67) impresion -> . PRINT LOCALVAR
    (134) operacionSet -> . set DOT ADD LPARENTHESES datos RPARENTHESES
    (135) operacionSet -> . set DOT ADD LPARENTHESES tiposvariables RPARENTHESES
    (136) operacionSet -> . set DOT CLEAR
    (137) operacionSet -> . set DOT DELETE LPARENTHESES datos RPARENTHESES
    (138) operacionSet -> . set DOT DELETE LPARENTHESES tiposvariables RPARENTHESES
    (91) operacionarray -> . array LBRACKET INTEGER RBRACKET
    (92) operacionarray -> . array DOT TAKE LPARENTHESES INTEGER RPARENTHESES
    (93) operacionarray -> . array DOT DROP LPARENTHESES INTEGER RPARENTHESES
    (94) operacionarray -> . array DOT push maspush
    (99) operacionarray -> . array DOT POP
    (100) operacionarray -> . array DOT POP LPARENTHESES INTEGER RPARENTHESES
    (101) operacionarray -> . array DOT DELETE LPARENTHESES INTEGER RPARENTHESES
    (102) operacionarray -> . array DOT LENGTH LPARENTHESES RPARENTHESES
    (103) operacionarray -> . array DOT EMPTY QUESTIONMARK
    (57) operacionHash -> . hash LBRACKET datos RBRACKET
    (58) operacionHash -> . hash LBRACKET datos RBRACKET EQUAL datos
    (59) operacionHash -> . hash DOT INCLUDE QUESTIONMARK LPARENTHESES datos RPARENTHESES
    (60) operacionHash -> . hash DOT DELETE LPARENTHESES datos RPARENTHESES
    (61) operacionHash -> . hash DOT KEYS
    (139) string -> . STRING PLUS STRING
    (140) string -> . STRING MULTIPLY INTEGER
    (141) string -> . STRING DOT stringOpt
    (43) tiposvariables -> . VAR
    (44) tiposvariables -> . LOCALVAR
    (45) tiposvariables -> . CONSTANT
    (52) hash -> . LCURLYBRACKET elementoHash RCURLYBRACKET
    (83) array -> . LBRACKET RBRACKET
    (84) array -> . LBRACKET datosarray RBRACKET
    (128) set -> . SET LBRACKET elementoSet RBRACKET

    $end            reduce using rule 28 (cuerpo -> .)
    ELSE            reduce using rule 28 (cuerpo -> .)
    END             reduce using rule 28 (cuerpo -> .)
    RETURN          reduce using rule 28 (cuerpo -> .)
    LOCALVAR        shift and go to state 16
    FOR             shift and go to state 18
    IF              shift and go to state 22
    UNLESS          shift and go to state 23
    PUTS            shift and go to state 24
    PRINT           shift and go to state 25
    STRING          shift and go to state 27
    VAR             shift and go to state 28
    CONSTANT        shift and go to state 29
    LCURLYBRACKET   shift and go to state 30
    LBRACKET        shift and go to state 26
    SET             shift and go to state 31

    estructurasDatos               shift and go to state 7
    cuerpo                         shift and go to state 35
    declaracion                    shift and go to state 4
    asignacion                     shift and go to state 5
    loop                           shift and go to state 6
    if                             shift and go to state 8
    unless                         shift and go to state 9
    impresion                      shift and go to state 10
    operacionSet                   shift and go to state 11
    operacionarray                 shift and go to state 12
    operacionHash                  shift and go to state 13
    string                         shift and go to state 14
    tiposvariables                 shift and go to state 17
    hash                           shift and go to state 19
    array                          shift and go to state 20
    set                            shift and go to state 21

state 8

    (21) cuerpo -> if . cuerpo
    (17) cuerpo -> . declaracion cuerpo
    (18) cuerpo -> . asignacion cuerpo
    (19) cuerpo -> . loop cuerpo
    (20) cuerpo -> . estructurasDatos cuerpo
    (21) cuerpo -> . if cuerpo
    (22) cuerpo -> . unless cuerpo
    (23) cuerpo -> . impresion cuerpo
    (24) cuerpo -> . operacionSet cuerpo
    (25) cuerpo -> . operacionarray cuerpo
    (26) cuerpo -> . operacionHash cuerpo
    (27) cuerpo -> . string cuerpo
    (28) cuerpo -> .
    (30) declaracion -> . tiposvariables EQUAL datos
    (31) declaracion -> . tiposvariables EQUAL estructurasDatos
    (32) declaracion -> . tiposvariables EQUAL expresion
    (33) declaracion -> . tiposvariables EQUAL declaracion
    (34) declaracion -> . tiposvariables EQUAL casting
    (35) asignacion -> . LOCALVAR PLUSASSIGN datosAsignacion
    (36) asignacion -> . LOCALVAR MINASSIGN datosAsignacion
    (37) asignacion -> . LOCALVAR DIVASSIGN datosAsignacion
    (38) asignacion -> . LOCALVAR TIMESASSIGN datosAsignacion
    (39) asignacion -> . LOCALVAR MODASSIGN datosAsignacion
    (40) asignacion -> . LOCALVAR EXPASSIGN datosAsignacion
    (29) loop -> . FOR LOCALVAR IN rango cuerpo END
    (49) estructurasDatos -> . hash
    (50) estructurasDatos -> . array
    (51) estructurasDatos -> . set
    (106) if -> . IF datoscompletos operadores datoscompletos cuerpo END
    (107) if -> . IF datoscompletos operadores datoscompletos cuerpo else
    (116) unless -> . UNLESS expresionCondicional cuerpo ELSE cuerpo END
    (64) impresion -> . PUTS datos
    (65) impresion -> . PUTS LOCALVAR
    (66) impresion -> . PRINT datos
    (67) impresion -> . PRINT LOCALVAR
    (134) operacionSet -> . set DOT ADD LPARENTHESES datos RPARENTHESES
    (135) operacionSet -> . set DOT ADD LPARENTHESES tiposvariables RPARENTHESES
    (136) operacionSet -> . set DOT CLEAR
    (137) operacionSet -> . set DOT DELETE LPARENTHESES datos RPARENTHESES
    (138) operacionSet -> . set DOT DELETE LPARENTHESES tiposvariables RPARENTHESES
    (91) operacionarray -> . array LBRACKET INTEGER RBRACKET
    (92) operacionarray -> . array DOT TAKE LPARENTHESES INTEGER RPARENTHESES
    (93) operacionarray -> . array DOT DROP LPARENTHESES INTEGER RPARENTHESES
    (94) operacionarray -> . array DOT push maspush
    (99) operacionarray -> . array DOT POP
    (100) operacionarray -> . array DOT POP LPARENTHESES INTEGER RPARENTHESES
    (101) operacionarray -> . array DOT DELETE LPARENTHESES INTEGER RPARENTHESES
    (102) operacionarray -> . array DOT LENGTH LPARENTHESES RPARENTHESES
    (103) operacionarray -> . array DOT EMPTY QUESTIONMARK
    (57) operacionHash -> . hash LBRACKET datos RBRACKET
    (58) operacionHash -> . hash LBRACKET datos RBRACKET EQUAL datos
    (59) operacionHash -> . hash DOT INCLUDE QUESTIONMARK LPARENTHESES datos RPARENTHESES
    (60) operacionHash -> . hash DOT DELETE LPARENTHESES datos RPARENTHESES
    (61) operacionHash -> . hash DOT KEYS
    (139) string -> . STRING PLUS STRING
    (140) string -> . STRING MULTIPLY INTEGER
    (141) string -> . STRING DOT stringOpt
    (43) tiposvariables -> . VAR
    (44) tiposvariables -> . LOCALVAR
    (45) tiposvariables -> . CONSTANT
    (52) hash -> . LCURLYBRACKET elementoHash RCURLYBRACKET
    (83) array -> . LBRACKET RBRACKET
    (84) array -> . LBRACKET datosarray RBRACKET
    (128) set -> . SET LBRACKET elementoSet RBRACKET

    $end            reduce using rule 28 (cuerpo -> .)
    ELSE            reduce using rule 28 (cuerpo -> .)
    END             reduce using rule 28 (cuerpo -> .)
    RETURN          reduce using rule 28 (cuerpo -> .)
    LOCALVAR        shift and go to state 16
    FOR             shift and go to state 18
    IF              shift and go to state 22
    UNLESS          shift and go to state 23
    PUTS            shift and go to state 24
    PRINT           shift and go to state 25
    STRING          shift and go to state 27
    VAR             shift and go to state 28
    CONSTANT        shift and go to state 29
    LCURLYBRACKET   shift and go to state 30
    LBRACKET        shift and go to state 26
    SET             shift and go to state 31

    if                             shift and go to state 8
    cuerpo                         shift and go to state 36
    declaracion                    shift and go to state 4
    asignacion                     shift and go to state 5
    loop                           shift and go to state 6
    estructurasDatos               shift and go to state 7
    unless                         shift and go to state 9
    impresion                      shift and go to state 10
    operacionSet                   shift and go to state 11
    operacionarray                 shift and go to state 12
    operacionHash                  shift and go to state 13
    string                         shift and go to state 14
    tiposvariables                 shift and go to state 17
    hash                           shift and go to state 19
    array                          shift and go to state 20
    set                            shift and go to state 21

state 9

    (22) cuerpo -> unless . cuerpo
    (17) cuerpo -> . declaracion cuerpo
    (18) cuerpo -> . asignacion cuerpo
    (19) cuerpo -> . loop cuerpo
    (20) cuerpo -> . estructurasDatos cuerpo
    (21) cuerpo -> . if cuerpo
    (22) cuerpo -> . unless cuerpo
    (23) cuerpo -> . impresion cuerpo
    (24) cuerpo -> . operacionSet cuerpo
    (25) cuerpo -> . operacionarray cuerpo
    (26) cuerpo -> . operacionHash cuerpo
    (27) cuerpo -> . string cuerpo
    (28) cuerpo -> .
    (30) declaracion -> . tiposvariables EQUAL datos
    (31) declaracion -> . tiposvariables EQUAL estructurasDatos
    (32) declaracion -> . tiposvariables EQUAL expresion
    (33) declaracion -> . tiposvariables EQUAL declaracion
    (34) declaracion -> . tiposvariables EQUAL casting
    (35) asignacion -> . LOCALVAR PLUSASSIGN datosAsignacion
    (36) asignacion -> . LOCALVAR MINASSIGN datosAsignacion
    (37) asignacion -> . LOCALVAR DIVASSIGN datosAsignacion
    (38) asignacion -> . LOCALVAR TIMESASSIGN datosAsignacion
    (39) asignacion -> . LOCALVAR MODASSIGN datosAsignacion
    (40) asignacion -> . LOCALVAR EXPASSIGN datosAsignacion
    (29) loop -> . FOR LOCALVAR IN rango cuerpo END
    (49) estructurasDatos -> . hash
    (50) estructurasDatos -> . array
    (51) estructurasDatos -> . set
    (106) if -> . IF datoscompletos operadores datoscompletos cuerpo END
    (107) if -> . IF datoscompletos operadores datoscompletos cuerpo else
    (116) unless -> . UNLESS expresionCondicional cuerpo ELSE cuerpo END
    (64) impresion -> . PUTS datos
    (65) impresion -> . PUTS LOCALVAR
    (66) impresion -> . PRINT datos
    (67) impresion -> . PRINT LOCALVAR
    (134) operacionSet -> . set DOT ADD LPARENTHESES datos RPARENTHESES
    (135) operacionSet -> . set DOT ADD LPARENTHESES tiposvariables RPARENTHESES
    (136) operacionSet -> . set DOT CLEAR
    (137) operacionSet -> . set DOT DELETE LPARENTHESES datos RPARENTHESES
    (138) operacionSet -> . set DOT DELETE LPARENTHESES tiposvariables RPARENTHESES
    (91) operacionarray -> . array LBRACKET INTEGER RBRACKET
    (92) operacionarray -> . array DOT TAKE LPARENTHESES INTEGER RPARENTHESES
    (93) operacionarray -> . array DOT DROP LPARENTHESES INTEGER RPARENTHESES
    (94) operacionarray -> . array DOT push maspush
    (99) operacionarray -> . array DOT POP
    (100) operacionarray -> . array DOT POP LPARENTHESES INTEGER RPARENTHESES
    (101) operacionarray -> . array DOT DELETE LPARENTHESES INTEGER RPARENTHESES
    (102) operacionarray -> . array DOT LENGTH LPARENTHESES RPARENTHESES
    (103) operacionarray -> . array DOT EMPTY QUESTIONMARK
    (57) operacionHash -> . hash LBRACKET datos RBRACKET
    (58) operacionHash -> . hash LBRACKET datos RBRACKET EQUAL datos
    (59) operacionHash -> . hash DOT INCLUDE QUESTIONMARK LPARENTHESES datos RPARENTHESES
    (60) operacionHash -> . hash DOT DELETE LPARENTHESES datos RPARENTHESES
    (61) operacionHash -> . hash DOT KEYS
    (139) string -> . STRING PLUS STRING
    (140) string -> . STRING MULTIPLY INTEGER
    (141) string -> . STRING DOT stringOpt
    (43) tiposvariables -> . VAR
    (44) tiposvariables -> . LOCALVAR
    (45) tiposvariables -> . CONSTANT
    (52) hash -> . LCURLYBRACKET elementoHash RCURLYBRACKET
    (83) array -> . LBRACKET RBRACKET
    (84) array -> . LBRACKET datosarray RBRACKET
    (128) set -> . SET LBRACKET elementoSet RBRACKET

    $end            reduce using rule 28 (cuerpo -> .)
    ELSE            reduce using rule 28 (cuerpo -> .)
    END             reduce using rule 28 (cuerpo -> .)
    RETURN          reduce using rule 28 (cuerpo -> .)
    LOCALVAR        shift and go to state 16
    FOR             shift and go to state 18
    IF              shift and go to state 22
    UNLESS          shift and go to state 23
    PUTS            shift and go to state 24
    PRINT           shift and go to state 25
    STRING          shift and go to state 27
    VAR             shift and go to state 28
    CONSTANT        shift and go to state 29
    LCURLYBRACKET   shift and go to state 30
    LBRACKET        shift and go to state 26
    SET             shift and go to state 31

    unless                         shift and go to state 9
    cuerpo                         shift and go to state 37
    declaracion                    shift and go to state 4
    asignacion                     shift and go to state 5
    loop                           shift and go to state 6
    estructurasDatos               shift and go to state 7
    if                             shift and go to state 8
    impresion                      shift and go to state 10
    operacionSet                   shift and go to state 11
    operacionarray                 shift and go to state 12
    operacionHash                  shift and go to state 13
    string                         shift and go to state 14
    tiposvariables                 shift and go to state 17
    hash                           shift and go to state 19
    array                          shift and go to state 20
    set                            shift and go to state 21

state 10

    (23) cuerpo -> impresion . cuerpo
    (17) cuerpo -> . declaracion cuerpo
    (18) cuerpo -> . asignacion cuerpo
    (19) cuerpo -> . loop cuerpo
    (20) cuerpo -> . estructurasDatos cuerpo
    (21) cuerpo -> . if cuerpo
    (22) cuerpo -> . unless cuerpo
    (23) cuerpo -> . impresion cuerpo
    (24) cuerpo -> . operacionSet cuerpo
    (25) cuerpo -> . operacionarray cuerpo
    (26) cuerpo -> . operacionHash cuerpo
    (27) cuerpo -> . string cuerpo
    (28) cuerpo -> .
    (30) declaracion -> . tiposvariables EQUAL datos
    (31) declaracion -> . tiposvariables EQUAL estructurasDatos
    (32) declaracion -> . tiposvariables EQUAL expresion
    (33) declaracion -> . tiposvariables EQUAL declaracion
    (34) declaracion -> . tiposvariables EQUAL casting
    (35) asignacion -> . LOCALVAR PLUSASSIGN datosAsignacion
    (36) asignacion -> . LOCALVAR MINASSIGN datosAsignacion
    (37) asignacion -> . LOCALVAR DIVASSIGN datosAsignacion
    (38) asignacion -> . LOCALVAR TIMESASSIGN datosAsignacion
    (39) asignacion -> . LOCALVAR MODASSIGN datosAsignacion
    (40) asignacion -> . LOCALVAR EXPASSIGN datosAsignacion
    (29) loop -> . FOR LOCALVAR IN rango cuerpo END
    (49) estructurasDatos -> . hash
    (50) estructurasDatos -> . array
    (51) estructurasDatos -> . set
    (106) if -> . IF datoscompletos operadores datoscompletos cuerpo END
    (107) if -> . IF datoscompletos operadores datoscompletos cuerpo else
    (116) unless -> . UNLESS expresionCondicional cuerpo ELSE cuerpo END
    (64) impresion -> . PUTS datos
    (65) impresion -> . PUTS LOCALVAR
    (66) impresion -> . PRINT datos
    (67) impresion -> . PRINT LOCALVAR
    (134) operacionSet -> . set DOT ADD LPARENTHESES datos RPARENTHESES
    (135) operacionSet -> . set DOT ADD LPARENTHESES tiposvariables RPARENTHESES
    (136) operacionSet -> . set DOT CLEAR
    (137) operacionSet -> . set DOT DELETE LPARENTHESES datos RPARENTHESES
    (138) operacionSet -> . set DOT DELETE LPARENTHESES tiposvariables RPARENTHESES
    (91) operacionarray -> . array LBRACKET INTEGER RBRACKET
    (92) operacionarray -> . array DOT TAKE LPARENTHESES INTEGER RPARENTHESES
    (93) operacionarray -> . array DOT DROP LPARENTHESES INTEGER RPARENTHESES
    (94) operacionarray -> . array DOT push maspush
    (99) operacionarray -> . array DOT POP
    (100) operacionarray -> . array DOT POP LPARENTHESES INTEGER RPARENTHESES
    (101) operacionarray -> . array DOT DELETE LPARENTHESES INTEGER RPARENTHESES
    (102) operacionarray -> . array DOT LENGTH LPARENTHESES RPARENTHESES
    (103) operacionarray -> . array DOT EMPTY QUESTIONMARK
    (57) operacionHash -> . hash LBRACKET datos RBRACKET
    (58) operacionHash -> . hash LBRACKET datos RBRACKET EQUAL datos
    (59) operacionHash -> . hash DOT INCLUDE QUESTIONMARK LPARENTHESES datos RPARENTHESES
    (60) operacionHash -> . hash DOT DELETE LPARENTHESES datos RPARENTHESES
    (61) operacionHash -> . hash DOT KEYS
    (139) string -> . STRING PLUS STRING
    (140) string -> . STRING MULTIPLY INTEGER
    (141) string -> . STRING DOT stringOpt
    (43) tiposvariables -> . VAR
    (44) tiposvariables -> . LOCALVAR
    (45) tiposvariables -> . CONSTANT
    (52) hash -> . LCURLYBRACKET elementoHash RCURLYBRACKET
    (83) array -> . LBRACKET RBRACKET
    (84) array -> . LBRACKET datosarray RBRACKET
    (128) set -> . SET LBRACKET elementoSet RBRACKET

    $end            reduce using rule 28 (cuerpo -> .)
    ELSE            reduce using rule 28 (cuerpo -> .)
    END             reduce using rule 28 (cuerpo -> .)
    RETURN          reduce using rule 28 (cuerpo -> .)
    LOCALVAR        shift and go to state 16
    FOR             shift and go to state 18
    IF              shift and go to state 22
    UNLESS          shift and go to state 23
    PUTS            shift and go to state 24
    PRINT           shift and go to state 25
    STRING          shift and go to state 27
    VAR             shift and go to state 28
    CONSTANT        shift and go to state 29
    LCURLYBRACKET   shift and go to state 30
    LBRACKET        shift and go to state 26
    SET             shift and go to state 31

    impresion                      shift and go to state 10
    cuerpo                         shift and go to state 38
    declaracion                    shift and go to state 4
    asignacion                     shift and go to state 5
    loop                           shift and go to state 6
    estructurasDatos               shift and go to state 7
    if                             shift and go to state 8
    unless                         shift and go to state 9
    operacionSet                   shift and go to state 11
    operacionarray                 shift and go to state 12
    operacionHash                  shift and go to state 13
    string                         shift and go to state 14
    tiposvariables                 shift and go to state 17
    hash                           shift and go to state 19
    array                          shift and go to state 20
    set                            shift and go to state 21

state 11

    (24) cuerpo -> operacionSet . cuerpo
    (17) cuerpo -> . declaracion cuerpo
    (18) cuerpo -> . asignacion cuerpo
    (19) cuerpo -> . loop cuerpo
    (20) cuerpo -> . estructurasDatos cuerpo
    (21) cuerpo -> . if cuerpo
    (22) cuerpo -> . unless cuerpo
    (23) cuerpo -> . impresion cuerpo
    (24) cuerpo -> . operacionSet cuerpo
    (25) cuerpo -> . operacionarray cuerpo
    (26) cuerpo -> . operacionHash cuerpo
    (27) cuerpo -> . string cuerpo
    (28) cuerpo -> .
    (30) declaracion -> . tiposvariables EQUAL datos
    (31) declaracion -> . tiposvariables EQUAL estructurasDatos
    (32) declaracion -> . tiposvariables EQUAL expresion
    (33) declaracion -> . tiposvariables EQUAL declaracion
    (34) declaracion -> . tiposvariables EQUAL casting
    (35) asignacion -> . LOCALVAR PLUSASSIGN datosAsignacion
    (36) asignacion -> . LOCALVAR MINASSIGN datosAsignacion
    (37) asignacion -> . LOCALVAR DIVASSIGN datosAsignacion
    (38) asignacion -> . LOCALVAR TIMESASSIGN datosAsignacion
    (39) asignacion -> . LOCALVAR MODASSIGN datosAsignacion
    (40) asignacion -> . LOCALVAR EXPASSIGN datosAsignacion
    (29) loop -> . FOR LOCALVAR IN rango cuerpo END
    (49) estructurasDatos -> . hash
    (50) estructurasDatos -> . array
    (51) estructurasDatos -> . set
    (106) if -> . IF datoscompletos operadores datoscompletos cuerpo END
    (107) if -> . IF datoscompletos operadores datoscompletos cuerpo else
    (116) unless -> . UNLESS expresionCondicional cuerpo ELSE cuerpo END
    (64) impresion -> . PUTS datos
    (65) impresion -> . PUTS LOCALVAR
    (66) impresion -> . PRINT datos
    (67) impresion -> . PRINT LOCALVAR
    (134) operacionSet -> . set DOT ADD LPARENTHESES datos RPARENTHESES
    (135) operacionSet -> . set DOT ADD LPARENTHESES tiposvariables RPARENTHESES
    (136) operacionSet -> . set DOT CLEAR
    (137) operacionSet -> . set DOT DELETE LPARENTHESES datos RPARENTHESES
    (138) operacionSet -> . set DOT DELETE LPARENTHESES tiposvariables RPARENTHESES
    (91) operacionarray -> . array LBRACKET INTEGER RBRACKET
    (92) operacionarray -> . array DOT TAKE LPARENTHESES INTEGER RPARENTHESES
    (93) operacionarray -> . array DOT DROP LPARENTHESES INTEGER RPARENTHESES
    (94) operacionarray -> . array DOT push maspush
    (99) operacionarray -> . array DOT POP
    (100) operacionarray -> . array DOT POP LPARENTHESES INTEGER RPARENTHESES
    (101) operacionarray -> . array DOT DELETE LPARENTHESES INTEGER RPARENTHESES
    (102) operacionarray -> . array DOT LENGTH LPARENTHESES RPARENTHESES
    (103) operacionarray -> . array DOT EMPTY QUESTIONMARK
    (57) operacionHash -> . hash LBRACKET datos RBRACKET
    (58) operacionHash -> . hash LBRACKET datos RBRACKET EQUAL datos
    (59) operacionHash -> . hash DOT INCLUDE QUESTIONMARK LPARENTHESES datos RPARENTHESES
    (60) operacionHash -> . hash DOT DELETE LPARENTHESES datos RPARENTHESES
    (61) operacionHash -> . hash DOT KEYS
    (139) string -> . STRING PLUS STRING
    (140) string -> . STRING MULTIPLY INTEGER
    (141) string -> . STRING DOT stringOpt
    (43) tiposvariables -> . VAR
    (44) tiposvariables -> . LOCALVAR
    (45) tiposvariables -> . CONSTANT
    (52) hash -> . LCURLYBRACKET elementoHash RCURLYBRACKET
    (83) array -> . LBRACKET RBRACKET
    (84) array -> . LBRACKET datosarray RBRACKET
    (128) set -> . SET LBRACKET elementoSet RBRACKET

    $end            reduce using rule 28 (cuerpo -> .)
    ELSE            reduce using rule 28 (cuerpo -> .)
    END             reduce using rule 28 (cuerpo -> .)
    RETURN          reduce using rule 28 (cuerpo -> .)
    LOCALVAR        shift and go to state 16
    FOR             shift and go to state 18
    IF              shift and go to state 22
    UNLESS          shift and go to state 23
    PUTS            shift and go to state 24
    PRINT           shift and go to state 25
    STRING          shift and go to state 27
    VAR             shift and go to state 28
    CONSTANT        shift and go to state 29
    LCURLYBRACKET   shift and go to state 30
    LBRACKET        shift and go to state 26
    SET             shift and go to state 31

    operacionSet                   shift and go to state 11
    cuerpo                         shift and go to state 39
    declaracion                    shift and go to state 4
    asignacion                     shift and go to state 5
    loop                           shift and go to state 6
    estructurasDatos               shift and go to state 7
    if                             shift and go to state 8
    unless                         shift and go to state 9
    impresion                      shift and go to state 10
    operacionarray                 shift and go to state 12
    operacionHash                  shift and go to state 13
    string                         shift and go to state 14
    tiposvariables                 shift and go to state 17
    hash                           shift and go to state 19
    array                          shift and go to state 20
    set                            shift and go to state 21

state 12

    (25) cuerpo -> operacionarray . cuerpo
    (17) cuerpo -> . declaracion cuerpo
    (18) cuerpo -> . asignacion cuerpo
    (19) cuerpo -> . loop cuerpo
    (20) cuerpo -> . estructurasDatos cuerpo
    (21) cuerpo -> . if cuerpo
    (22) cuerpo -> . unless cuerpo
    (23) cuerpo -> . impresion cuerpo
    (24) cuerpo -> . operacionSet cuerpo
    (25) cuerpo -> . operacionarray cuerpo
    (26) cuerpo -> . operacionHash cuerpo
    (27) cuerpo -> . string cuerpo
    (28) cuerpo -> .
    (30) declaracion -> . tiposvariables EQUAL datos
    (31) declaracion -> . tiposvariables EQUAL estructurasDatos
    (32) declaracion -> . tiposvariables EQUAL expresion
    (33) declaracion -> . tiposvariables EQUAL declaracion
    (34) declaracion -> . tiposvariables EQUAL casting
    (35) asignacion -> . LOCALVAR PLUSASSIGN datosAsignacion
    (36) asignacion -> . LOCALVAR MINASSIGN datosAsignacion
    (37) asignacion -> . LOCALVAR DIVASSIGN datosAsignacion
    (38) asignacion -> . LOCALVAR TIMESASSIGN datosAsignacion
    (39) asignacion -> . LOCALVAR MODASSIGN datosAsignacion
    (40) asignacion -> . LOCALVAR EXPASSIGN datosAsignacion
    (29) loop -> . FOR LOCALVAR IN rango cuerpo END
    (49) estructurasDatos -> . hash
    (50) estructurasDatos -> . array
    (51) estructurasDatos -> . set
    (106) if -> . IF datoscompletos operadores datoscompletos cuerpo END
    (107) if -> . IF datoscompletos operadores datoscompletos cuerpo else
    (116) unless -> . UNLESS expresionCondicional cuerpo ELSE cuerpo END
    (64) impresion -> . PUTS datos
    (65) impresion -> . PUTS LOCALVAR
    (66) impresion -> . PRINT datos
    (67) impresion -> . PRINT LOCALVAR
    (134) operacionSet -> . set DOT ADD LPARENTHESES datos RPARENTHESES
    (135) operacionSet -> . set DOT ADD LPARENTHESES tiposvariables RPARENTHESES
    (136) operacionSet -> . set DOT CLEAR
    (137) operacionSet -> . set DOT DELETE LPARENTHESES datos RPARENTHESES
    (138) operacionSet -> . set DOT DELETE LPARENTHESES tiposvariables RPARENTHESES
    (91) operacionarray -> . array LBRACKET INTEGER RBRACKET
    (92) operacionarray -> . array DOT TAKE LPARENTHESES INTEGER RPARENTHESES
    (93) operacionarray -> . array DOT DROP LPARENTHESES INTEGER RPARENTHESES
    (94) operacionarray -> . array DOT push maspush
    (99) operacionarray -> . array DOT POP
    (100) operacionarray -> . array DOT POP LPARENTHESES INTEGER RPARENTHESES
    (101) operacionarray -> . array DOT DELETE LPARENTHESES INTEGER RPARENTHESES
    (102) operacionarray -> . array DOT LENGTH LPARENTHESES RPARENTHESES
    (103) operacionarray -> . array DOT EMPTY QUESTIONMARK
    (57) operacionHash -> . hash LBRACKET datos RBRACKET
    (58) operacionHash -> . hash LBRACKET datos RBRACKET EQUAL datos
    (59) operacionHash -> . hash DOT INCLUDE QUESTIONMARK LPARENTHESES datos RPARENTHESES
    (60) operacionHash -> . hash DOT DELETE LPARENTHESES datos RPARENTHESES
    (61) operacionHash -> . hash DOT KEYS
    (139) string -> . STRING PLUS STRING
    (140) string -> . STRING MULTIPLY INTEGER
    (141) string -> . STRING DOT stringOpt
    (43) tiposvariables -> . VAR
    (44) tiposvariables -> . LOCALVAR
    (45) tiposvariables -> . CONSTANT
    (52) hash -> . LCURLYBRACKET elementoHash RCURLYBRACKET
    (83) array -> . LBRACKET RBRACKET
    (84) array -> . LBRACKET datosarray RBRACKET
    (128) set -> . SET LBRACKET elementoSet RBRACKET

    $end            reduce using rule 28 (cuerpo -> .)
    ELSE            reduce using rule 28 (cuerpo -> .)
    END             reduce using rule 28 (cuerpo -> .)
    RETURN          reduce using rule 28 (cuerpo -> .)
    LOCALVAR        shift and go to state 16
    FOR             shift and go to state 18
    IF              shift and go to state 22
    UNLESS          shift and go to state 23
    PUTS            shift and go to state 24
    PRINT           shift and go to state 25
    STRING          shift and go to state 27
    VAR             shift and go to state 28
    CONSTANT        shift and go to state 29
    LCURLYBRACKET   shift and go to state 30
    LBRACKET        shift and go to state 26
    SET             shift and go to state 31

    operacionarray                 shift and go to state 12
    cuerpo                         shift and go to state 40
    declaracion                    shift and go to state 4
    asignacion                     shift and go to state 5
    loop                           shift and go to state 6
    estructurasDatos               shift and go to state 7
    if                             shift and go to state 8
    unless                         shift and go to state 9
    impresion                      shift and go to state 10
    operacionSet                   shift and go to state 11
    operacionHash                  shift and go to state 13
    string                         shift and go to state 14
    tiposvariables                 shift and go to state 17
    hash                           shift and go to state 19
    array                          shift and go to state 20
    set                            shift and go to state 21

state 13

    (26) cuerpo -> operacionHash . cuerpo
    (17) cuerpo -> . declaracion cuerpo
    (18) cuerpo -> . asignacion cuerpo
    (19) cuerpo -> . loop cuerpo
    (20) cuerpo -> . estructurasDatos cuerpo
    (21) cuerpo -> . if cuerpo
    (22) cuerpo -> . unless cuerpo
    (23) cuerpo -> . impresion cuerpo
    (24) cuerpo -> . operacionSet cuerpo
    (25) cuerpo -> . operacionarray cuerpo
    (26) cuerpo -> . operacionHash cuerpo
    (27) cuerpo -> . string cuerpo
    (28) cuerpo -> .
    (30) declaracion -> . tiposvariables EQUAL datos
    (31) declaracion -> . tiposvariables EQUAL estructurasDatos
    (32) declaracion -> . tiposvariables EQUAL expresion
    (33) declaracion -> . tiposvariables EQUAL declaracion
    (34) declaracion -> . tiposvariables EQUAL casting
    (35) asignacion -> . LOCALVAR PLUSASSIGN datosAsignacion
    (36) asignacion -> . LOCALVAR MINASSIGN datosAsignacion
    (37) asignacion -> . LOCALVAR DIVASSIGN datosAsignacion
    (38) asignacion -> . LOCALVAR TIMESASSIGN datosAsignacion
    (39) asignacion -> . LOCALVAR MODASSIGN datosAsignacion
    (40) asignacion -> . LOCALVAR EXPASSIGN datosAsignacion
    (29) loop -> . FOR LOCALVAR IN rango cuerpo END
    (49) estructurasDatos -> . hash
    (50) estructurasDatos -> . array
    (51) estructurasDatos -> . set
    (106) if -> . IF datoscompletos operadores datoscompletos cuerpo END
    (107) if -> . IF datoscompletos operadores datoscompletos cuerpo else
    (116) unless -> . UNLESS expresionCondicional cuerpo ELSE cuerpo END
    (64) impresion -> . PUTS datos
    (65) impresion -> . PUTS LOCALVAR
    (66) impresion -> . PRINT datos
    (67) impresion -> . PRINT LOCALVAR
    (134) operacionSet -> . set DOT ADD LPARENTHESES datos RPARENTHESES
    (135) operacionSet -> . set DOT ADD LPARENTHESES tiposvariables RPARENTHESES
    (136) operacionSet -> . set DOT CLEAR
    (137) operacionSet -> . set DOT DELETE LPARENTHESES datos RPARENTHESES
    (138) operacionSet -> . set DOT DELETE LPARENTHESES tiposvariables RPARENTHESES
    (91) operacionarray -> . array LBRACKET INTEGER RBRACKET
    (92) operacionarray -> . array DOT TAKE LPARENTHESES INTEGER RPARENTHESES
    (93) operacionarray -> . array DOT DROP LPARENTHESES INTEGER RPARENTHESES
    (94) operacionarray -> . array DOT push maspush
    (99) operacionarray -> . array DOT POP
    (100) operacionarray -> . array DOT POP LPARENTHESES INTEGER RPARENTHESES
    (101) operacionarray -> . array DOT DELETE LPARENTHESES INTEGER RPARENTHESES
    (102) operacionarray -> . array DOT LENGTH LPARENTHESES RPARENTHESES
    (103) operacionarray -> . array DOT EMPTY QUESTIONMARK
    (57) operacionHash -> . hash LBRACKET datos RBRACKET
    (58) operacionHash -> . hash LBRACKET datos RBRACKET EQUAL datos
    (59) operacionHash -> . hash DOT INCLUDE QUESTIONMARK LPARENTHESES datos RPARENTHESES
    (60) operacionHash -> . hash DOT DELETE LPARENTHESES datos RPARENTHESES
    (61) operacionHash -> . hash DOT KEYS
    (139) string -> . STRING PLUS STRING
    (140) string -> . STRING MULTIPLY INTEGER
    (141) string -> . STRING DOT stringOpt
    (43) tiposvariables -> . VAR
    (44) tiposvariables -> . LOCALVAR
    (45) tiposvariables -> . CONSTANT
    (52) hash -> . LCURLYBRACKET elementoHash RCURLYBRACKET
    (83) array -> . LBRACKET RBRACKET
    (84) array -> . LBRACKET datosarray RBRACKET
    (128) set -> . SET LBRACKET elementoSet RBRACKET

    $end            reduce using rule 28 (cuerpo -> .)
    ELSE            reduce using rule 28 (cuerpo -> .)
    END             reduce using rule 28 (cuerpo -> .)
    RETURN          reduce using rule 28 (cuerpo -> .)
    LOCALVAR        shift and go to state 16
    FOR             shift and go to state 18
    IF              shift and go to state 22
    UNLESS          shift and go to state 23
    PUTS            shift and go to state 24
    PRINT           shift and go to state 25
    STRING          shift and go to state 27
    VAR             shift and go to state 28
    CONSTANT        shift and go to state 29
    LCURLYBRACKET   shift and go to state 30
    LBRACKET        shift and go to state 26
    SET             shift and go to state 31

    operacionHash                  shift and go to state 13
    cuerpo                         shift and go to state 41
    declaracion                    shift and go to state 4
    asignacion                     shift and go to state 5
    loop                           shift and go to state 6
    estructurasDatos               shift and go to state 7
    if                             shift and go to state 8
    unless                         shift and go to state 9
    impresion                      shift and go to state 10
    operacionSet                   shift and go to state 11
    operacionarray                 shift and go to state 12
    string                         shift and go to state 14
    tiposvariables                 shift and go to state 17
    hash                           shift and go to state 19
    array                          shift and go to state 20
    set                            shift and go to state 21

state 14

    (27) cuerpo -> string . cuerpo
    (17) cuerpo -> . declaracion cuerpo
    (18) cuerpo -> . asignacion cuerpo
    (19) cuerpo -> . loop cuerpo
    (20) cuerpo -> . estructurasDatos cuerpo
    (21) cuerpo -> . if cuerpo
    (22) cuerpo -> . unless cuerpo
    (23) cuerpo -> . impresion cuerpo
    (24) cuerpo -> . operacionSet cuerpo
    (25) cuerpo -> . operacionarray cuerpo
    (26) cuerpo -> . operacionHash cuerpo
    (27) cuerpo -> . string cuerpo
    (28) cuerpo -> .
    (30) declaracion -> . tiposvariables EQUAL datos
    (31) declaracion -> . tiposvariables EQUAL estructurasDatos
    (32) declaracion -> . tiposvariables EQUAL expresion
    (33) declaracion -> . tiposvariables EQUAL declaracion
    (34) declaracion -> . tiposvariables EQUAL casting
    (35) asignacion -> . LOCALVAR PLUSASSIGN datosAsignacion
    (36) asignacion -> . LOCALVAR MINASSIGN datosAsignacion
    (37) asignacion -> . LOCALVAR DIVASSIGN datosAsignacion
    (38) asignacion -> . LOCALVAR TIMESASSIGN datosAsignacion
    (39) asignacion -> . LOCALVAR MODASSIGN datosAsignacion
    (40) asignacion -> . LOCALVAR EXPASSIGN datosAsignacion
    (29) loop -> . FOR LOCALVAR IN rango cuerpo END
    (49) estructurasDatos -> . hash
    (50) estructurasDatos -> . array
    (51) estructurasDatos -> . set
    (106) if -> . IF datoscompletos operadores datoscompletos cuerpo END
    (107) if -> . IF datoscompletos operadores datoscompletos cuerpo else
    (116) unless -> . UNLESS expresionCondicional cuerpo ELSE cuerpo END
    (64) impresion -> . PUTS datos
    (65) impresion -> . PUTS LOCALVAR
    (66) impresion -> . PRINT datos
    (67) impresion -> . PRINT LOCALVAR
    (134) operacionSet -> . set DOT ADD LPARENTHESES datos RPARENTHESES
    (135) operacionSet -> . set DOT ADD LPARENTHESES tiposvariables RPARENTHESES
    (136) operacionSet -> . set DOT CLEAR
    (137) operacionSet -> . set DOT DELETE LPARENTHESES datos RPARENTHESES
    (138) operacionSet -> . set DOT DELETE LPARENTHESES tiposvariables RPARENTHESES
    (91) operacionarray -> . array LBRACKET INTEGER RBRACKET
    (92) operacionarray -> . array DOT TAKE LPARENTHESES INTEGER RPARENTHESES
    (93) operacionarray -> . array DOT DROP LPARENTHESES INTEGER RPARENTHESES
    (94) operacionarray -> . array DOT push maspush
    (99) operacionarray -> . array DOT POP
    (100) operacionarray -> . array DOT POP LPARENTHESES INTEGER RPARENTHESES
    (101) operacionarray -> . array DOT DELETE LPARENTHESES INTEGER RPARENTHESES
    (102) operacionarray -> . array DOT LENGTH LPARENTHESES RPARENTHESES
    (103) operacionarray -> . array DOT EMPTY QUESTIONMARK
    (57) operacionHash -> . hash LBRACKET datos RBRACKET
    (58) operacionHash -> . hash LBRACKET datos RBRACKET EQUAL datos
    (59) operacionHash -> . hash DOT INCLUDE QUESTIONMARK LPARENTHESES datos RPARENTHESES
    (60) operacionHash -> . hash DOT DELETE LPARENTHESES datos RPARENTHESES
    (61) operacionHash -> . hash DOT KEYS
    (139) string -> . STRING PLUS STRING
    (140) string -> . STRING MULTIPLY INTEGER
    (141) string -> . STRING DOT stringOpt
    (43) tiposvariables -> . VAR
    (44) tiposvariables -> . LOCALVAR
    (45) tiposvariables -> . CONSTANT
    (52) hash -> . LCURLYBRACKET elementoHash RCURLYBRACKET
    (83) array -> . LBRACKET RBRACKET
    (84) array -> . LBRACKET datosarray RBRACKET
    (128) set -> . SET LBRACKET elementoSet RBRACKET

    $end            reduce using rule 28 (cuerpo -> .)
    ELSE            reduce using rule 28 (cuerpo -> .)
    END             reduce using rule 28 (cuerpo -> .)
    RETURN          reduce using rule 28 (cuerpo -> .)
    LOCALVAR        shift and go to state 16
    FOR             shift and go to state 18
    IF              shift and go to state 22
    UNLESS          shift and go to state 23
    PUTS            shift and go to state 24
    PRINT           shift and go to state 25
    STRING          shift and go to state 27
    VAR             shift and go to state 28
    CONSTANT        shift and go to state 29
    LCURLYBRACKET   shift and go to state 30
    LBRACKET        shift and go to state 26
    SET             shift and go to state 31

    string                         shift and go to state 14
    cuerpo                         shift and go to state 42
    declaracion                    shift and go to state 4
    asignacion                     shift and go to state 5
    loop                           shift and go to state 6
    estructurasDatos               shift and go to state 7
    if                             shift and go to state 8
    unless                         shift and go to state 9
    impresion                      shift and go to state 10
    operacionSet                   shift and go to state 11
    operacionarray                 shift and go to state 12
    operacionHash                  shift and go to state 13
    tiposvariables                 shift and go to state 17
    hash                           shift and go to state 19
    array                          shift and go to state 20
    set                            shift and go to state 21

state 15

    (3) funcion -> DEF . LOCALVAR LPARENTHESES argumentos RPARENTHESES cuerpo END
    (4) funcion -> DEF . LOCALVAR LPARENTHESES argumentos RPARENTHESES cuerpo retornar END

    LOCALVAR        shift and go to state 43


state 16

    (35) asignacion -> LOCALVAR . PLUSASSIGN datosAsignacion
    (36) asignacion -> LOCALVAR . MINASSIGN datosAsignacion
    (37) asignacion -> LOCALVAR . DIVASSIGN datosAsignacion
    (38) asignacion -> LOCALVAR . TIMESASSIGN datosAsignacion
    (39) asignacion -> LOCALVAR . MODASSIGN datosAsignacion
    (40) asignacion -> LOCALVAR . EXPASSIGN datosAsignacion
    (44) tiposvariables -> LOCALVAR .

    PLUSASSIGN      shift and go to state 44
    MINASSIGN       shift and go to state 45
    DIVASSIGN       shift and go to state 46
    TIMESASSIGN     shift and go to state 47
    MODASSIGN       shift and go to state 48
    EXPASSIGN       shift and go to state 49
    EQUAL           reduce using rule 44 (tiposvariables -> LOCALVAR .)


state 17

    (30) declaracion -> tiposvariables . EQUAL datos
    (31) declaracion -> tiposvariables . EQUAL estructurasDatos
    (32) declaracion -> tiposvariables . EQUAL expresion
    (33) declaracion -> tiposvariables . EQUAL declaracion
    (34) declaracion -> tiposvariables . EQUAL casting

    EQUAL           shift and go to state 50


state 18

    (29) loop -> FOR . LOCALVAR IN rango cuerpo END

    LOCALVAR        shift and go to state 51


state 19

    (49) estructurasDatos -> hash .
    (57) operacionHash -> hash . LBRACKET datos RBRACKET
    (58) operacionHash -> hash . LBRACKET datos RBRACKET EQUAL datos
    (59) operacionHash -> hash . DOT INCLUDE QUESTIONMARK LPARENTHESES datos RPARENTHESES
    (60) operacionHash -> hash . DOT DELETE LPARENTHESES datos RPARENTHESES
    (61) operacionHash -> hash . DOT KEYS

  ! shift/reduce conflict for LBRACKET resolved as shift
    LOCALVAR        reduce using rule 49 (estructurasDatos -> hash .)
    FOR             reduce using rule 49 (estructurasDatos -> hash .)
    IF              reduce using rule 49 (estructurasDatos -> hash .)
    UNLESS          reduce using rule 49 (estructurasDatos -> hash .)
    PUTS            reduce using rule 49 (estructurasDatos -> hash .)
    PRINT           reduce using rule 49 (estructurasDatos -> hash .)
    STRING          reduce using rule 49 (estructurasDatos -> hash .)
    VAR             reduce using rule 49 (estructurasDatos -> hash .)
    CONSTANT        reduce using rule 49 (estructurasDatos -> hash .)
    LCURLYBRACKET   reduce using rule 49 (estructurasDatos -> hash .)
    SET             reduce using rule 49 (estructurasDatos -> hash .)
    $end            reduce using rule 49 (estructurasDatos -> hash .)
    ELSE            reduce using rule 49 (estructurasDatos -> hash .)
    END             reduce using rule 49 (estructurasDatos -> hash .)
    RETURN          reduce using rule 49 (estructurasDatos -> hash .)
    LBRACKET        shift and go to state 52
    DOT             shift and go to state 53

  ! LBRACKET        [ reduce using rule 49 (estructurasDatos -> hash .) ]


state 20

    (50) estructurasDatos -> array .
    (91) operacionarray -> array . LBRACKET INTEGER RBRACKET
    (92) operacionarray -> array . DOT TAKE LPARENTHESES INTEGER RPARENTHESES
    (93) operacionarray -> array . DOT DROP LPARENTHESES INTEGER RPARENTHESES
    (94) operacionarray -> array . DOT push maspush
    (99) operacionarray -> array . DOT POP
    (100) operacionarray -> array . DOT POP LPARENTHESES INTEGER RPARENTHESES
    (101) operacionarray -> array . DOT DELETE LPARENTHESES INTEGER RPARENTHESES
    (102) operacionarray -> array . DOT LENGTH LPARENTHESES RPARENTHESES
    (103) operacionarray -> array . DOT EMPTY QUESTIONMARK

  ! shift/reduce conflict for LBRACKET resolved as shift
    LOCALVAR        reduce using rule 50 (estructurasDatos -> array .)
    FOR             reduce using rule 50 (estructurasDatos -> array .)
    IF              reduce using rule 50 (estructurasDatos -> array .)
    UNLESS          reduce using rule 50 (estructurasDatos -> array .)
    PUTS            reduce using rule 50 (estructurasDatos -> array .)
    PRINT           reduce using rule 50 (estructurasDatos -> array .)
    STRING          reduce using rule 50 (estructurasDatos -> array .)
    VAR             reduce using rule 50 (estructurasDatos -> array .)
    CONSTANT        reduce using rule 50 (estructurasDatos -> array .)
    LCURLYBRACKET   reduce using rule 50 (estructurasDatos -> array .)
    SET             reduce using rule 50 (estructurasDatos -> array .)
    $end            reduce using rule 50 (estructurasDatos -> array .)
    ELSE            reduce using rule 50 (estructurasDatos -> array .)
    END             reduce using rule 50 (estructurasDatos -> array .)
    RETURN          reduce using rule 50 (estructurasDatos -> array .)
    LBRACKET        shift and go to state 54
    DOT             shift and go to state 55

  ! LBRACKET        [ reduce using rule 50 (estructurasDatos -> array .) ]


state 21

    (51) estructurasDatos -> set .
    (134) operacionSet -> set . DOT ADD LPARENTHESES datos RPARENTHESES
    (135) operacionSet -> set . DOT ADD LPARENTHESES tiposvariables RPARENTHESES
    (136) operacionSet -> set . DOT CLEAR
    (137) operacionSet -> set . DOT DELETE LPARENTHESES datos RPARENTHESES
    (138) operacionSet -> set . DOT DELETE LPARENTHESES tiposvariables RPARENTHESES

    LOCALVAR        reduce using rule 51 (estructurasDatos -> set .)
    FOR             reduce using rule 51 (estructurasDatos -> set .)
    IF              reduce using rule 51 (estructurasDatos -> set .)
    UNLESS          reduce using rule 51 (estructurasDatos -> set .)
    PUTS            reduce using rule 51 (estructurasDatos -> set .)
    PRINT           reduce using rule 51 (estructurasDatos -> set .)
    STRING          reduce using rule 51 (estructurasDatos -> set .)
    VAR             reduce using rule 51 (estructurasDatos -> set .)
    CONSTANT        reduce using rule 51 (estructurasDatos -> set .)
    LCURLYBRACKET   reduce using rule 51 (estructurasDatos -> set .)
    LBRACKET        reduce using rule 51 (estructurasDatos -> set .)
    SET             reduce using rule 51 (estructurasDatos -> set .)
    $end            reduce using rule 51 (estructurasDatos -> set .)
    ELSE            reduce using rule 51 (estructurasDatos -> set .)
    END             reduce using rule 51 (estructurasDatos -> set .)
    RETURN          reduce using rule 51 (estructurasDatos -> set .)
    DOT             shift and go to state 56


state 22

    (106) if -> IF . datoscompletos operadores datoscompletos cuerpo END
    (107) if -> IF . datoscompletos operadores datoscompletos cuerpo else
    (104) datoscompletos -> . datosvarios
    (105) datoscompletos -> . tiposvariables
    (85) datosvarios -> . datos
    (86) datosvarios -> . number
    (87) datosvarios -> . VAR
    (88) datosvarios -> . LOCALVAR
    (43) tiposvariables -> . VAR
    (44) tiposvariables -> . LOCALVAR
    (45) tiposvariables -> . CONSTANT
    (46) datos -> . INTEGER
    (47) datos -> . FLOAT
    (48) datos -> . STRING
    (68) number -> . INTEGER
    (69) number -> . FLOAT

    VAR             shift and go to state 62
    LOCALVAR        shift and go to state 63
    CONSTANT        shift and go to state 29
    INTEGER         shift and go to state 64
    FLOAT           shift and go to state 65
    STRING          shift and go to state 66

    datoscompletos                 shift and go to state 57
    datosvarios                    shift and go to state 58
    tiposvariables                 shift and go to state 59
    datos                          shift and go to state 60
    number                         shift and go to state 61

state 23

    (116) unless -> UNLESS . expresionCondicional cuerpo ELSE cuerpo END
    (117) expresionCondicional -> . boolean
    (118) expresionCondicional -> . EXCLAMATION LPARENTHESES boolean RPARENTHESES
    (121) boolean -> . condiciones
    (122) boolean -> . EXCLAMATION LPARENTHESES condiciones RPARENTHESES
    (123) boolean -> . boolean operadorBinario boolean
    (124) condiciones -> . tiposvariables operadores tiposvariables
    (125) condiciones -> . datos operadores datos
    (126) condiciones -> . tiposvariables operadores datos
    (127) condiciones -> . datos operadores tiposvariables
    (43) tiposvariables -> . VAR
    (44) tiposvariables -> . LOCALVAR
    (45) tiposvariables -> . CONSTANT
    (46) datos -> . INTEGER
    (47) datos -> . FLOAT
    (48) datos -> . STRING

    EXCLAMATION     shift and go to state 69
    VAR             shift and go to state 28
    LOCALVAR        shift and go to state 73
    CONSTANT        shift and go to state 29
    INTEGER         shift and go to state 74
    FLOAT           shift and go to state 75
    STRING          shift and go to state 66

    expresionCondicional           shift and go to state 67
    boolean                        shift and go to state 68
    condiciones                    shift and go to state 70
    tiposvariables                 shift and go to state 71
    datos                          shift and go to state 72

state 24

    (64) impresion -> PUTS . datos
    (65) impresion -> PUTS . LOCALVAR
    (46) datos -> . INTEGER
    (47) datos -> . FLOAT
    (48) datos -> . STRING

    LOCALVAR        shift and go to state 77
    INTEGER         shift and go to state 74
    FLOAT           shift and go to state 75
    STRING          shift and go to state 66

    datos                          shift and go to state 76

state 25

    (66) impresion -> PRINT . datos
    (67) impresion -> PRINT . LOCALVAR
    (46) datos -> . INTEGER
    (47) datos -> . FLOAT
    (48) datos -> . STRING

    LOCALVAR        shift and go to state 79
    INTEGER         shift and go to state 74
    FLOAT           shift and go to state 75
    STRING          shift and go to state 66

    datos                          shift and go to state 78

state 26

    (83) array -> LBRACKET . RBRACKET
    (84) array -> LBRACKET . datosarray RBRACKET
    (89) datosarray -> . datosvarios
    (90) datosarray -> . datosarray COMMA datosvarios
    (85) datosvarios -> . datos
    (86) datosvarios -> . number
    (87) datosvarios -> . VAR
    (88) datosvarios -> . LOCALVAR
    (46) datos -> . INTEGER
    (47) datos -> . FLOAT
    (48) datos -> . STRING
    (68) number -> . INTEGER
    (69) number -> . FLOAT

    RBRACKET        shift and go to state 80
    VAR             shift and go to state 83
    LOCALVAR        shift and go to state 84
    INTEGER         shift and go to state 64
    FLOAT           shift and go to state 65
    STRING          shift and go to state 66

    datosarray                     shift and go to state 81
    datosvarios                    shift and go to state 82
    datos                          shift and go to state 60
    number                         shift and go to state 61

state 27

    (139) string -> STRING . PLUS STRING
    (140) string -> STRING . MULTIPLY INTEGER
    (141) string -> STRING . DOT stringOpt

    PLUS            shift and go to state 85
    MULTIPLY        shift and go to state 86
    DOT             shift and go to state 87


state 28

    (43) tiposvariables -> VAR .

    EQUAL           reduce using rule 43 (tiposvariables -> VAR .)
    DOUBLEEQUAL     reduce using rule 43 (tiposvariables -> VAR .)
    TRIPLEEQUAL     reduce using rule 43 (tiposvariables -> VAR .)
    GREATERTHAN     reduce using rule 43 (tiposvariables -> VAR .)
    NOTEQUAL        reduce using rule 43 (tiposvariables -> VAR .)
    LESSTHAN        reduce using rule 43 (tiposvariables -> VAR .)
    GREQUAL         reduce using rule 43 (tiposvariables -> VAR .)
    LEQUAL          reduce using rule 43 (tiposvariables -> VAR .)
    DOUBLEAMPERSAND reduce using rule 43 (tiposvariables -> VAR .)
    DOUBLEPIPE      reduce using rule 43 (tiposvariables -> VAR .)
    LOCALVAR        reduce using rule 43 (tiposvariables -> VAR .)
    FOR             reduce using rule 43 (tiposvariables -> VAR .)
    IF              reduce using rule 43 (tiposvariables -> VAR .)
    UNLESS          reduce using rule 43 (tiposvariables -> VAR .)
    PUTS            reduce using rule 43 (tiposvariables -> VAR .)
    PRINT           reduce using rule 43 (tiposvariables -> VAR .)
    STRING          reduce using rule 43 (tiposvariables -> VAR .)
    VAR             reduce using rule 43 (tiposvariables -> VAR .)
    CONSTANT        reduce using rule 43 (tiposvariables -> VAR .)
    LCURLYBRACKET   reduce using rule 43 (tiposvariables -> VAR .)
    LBRACKET        reduce using rule 43 (tiposvariables -> VAR .)
    SET             reduce using rule 43 (tiposvariables -> VAR .)
    ELSE            reduce using rule 43 (tiposvariables -> VAR .)
    RPARENTHESES    reduce using rule 43 (tiposvariables -> VAR .)


state 29

    (45) tiposvariables -> CONSTANT .

    EQUAL           reduce using rule 45 (tiposvariables -> CONSTANT .)
    DOUBLEEQUAL     reduce using rule 45 (tiposvariables -> CONSTANT .)
    TRIPLEEQUAL     reduce using rule 45 (tiposvariables -> CONSTANT .)
    GREATERTHAN     reduce using rule 45 (tiposvariables -> CONSTANT .)
    NOTEQUAL        reduce using rule 45 (tiposvariables -> CONSTANT .)
    LESSTHAN        reduce using rule 45 (tiposvariables -> CONSTANT .)
    GREQUAL         reduce using rule 45 (tiposvariables -> CONSTANT .)
    LEQUAL          reduce using rule 45 (tiposvariables -> CONSTANT .)
    LOCALVAR        reduce using rule 45 (tiposvariables -> CONSTANT .)
    FOR             reduce using rule 45 (tiposvariables -> CONSTANT .)
    IF              reduce using rule 45 (tiposvariables -> CONSTANT .)
    UNLESS          reduce using rule 45 (tiposvariables -> CONSTANT .)
    PUTS            reduce using rule 45 (tiposvariables -> CONSTANT .)
    PRINT           reduce using rule 45 (tiposvariables -> CONSTANT .)
    STRING          reduce using rule 45 (tiposvariables -> CONSTANT .)
    VAR             reduce using rule 45 (tiposvariables -> CONSTANT .)
    CONSTANT        reduce using rule 45 (tiposvariables -> CONSTANT .)
    LCURLYBRACKET   reduce using rule 45 (tiposvariables -> CONSTANT .)
    LBRACKET        reduce using rule 45 (tiposvariables -> CONSTANT .)
    SET             reduce using rule 45 (tiposvariables -> CONSTANT .)
    END             reduce using rule 45 (tiposvariables -> CONSTANT .)
    ELSE            reduce using rule 45 (tiposvariables -> CONSTANT .)
    DOUBLEAMPERSAND reduce using rule 45 (tiposvariables -> CONSTANT .)
    DOUBLEPIPE      reduce using rule 45 (tiposvariables -> CONSTANT .)
    RPARENTHESES    reduce using rule 45 (tiposvariables -> CONSTANT .)


state 30

    (52) hash -> LCURLYBRACKET . elementoHash RCURLYBRACKET
    (53) elementoHash -> . datos EQUAL GREATERTHAN datos maselementos
    (54) elementoHash -> .
    (46) datos -> . INTEGER
    (47) datos -> . FLOAT
    (48) datos -> . STRING

    RCURLYBRACKET   reduce using rule 54 (elementoHash -> .)
    INTEGER         shift and go to state 74
    FLOAT           shift and go to state 75
    STRING          shift and go to state 66

    elementoHash                   shift and go to state 88
    datos                          shift and go to state 89

state 31

    (128) set -> SET . LBRACKET elementoSet RBRACKET

    LBRACKET        shift and go to state 90


state 32

    (17) cuerpo -> declaracion cuerpo .

    $end            reduce using rule 17 (cuerpo -> declaracion cuerpo .)
    ELSE            reduce using rule 17 (cuerpo -> declaracion cuerpo .)
    END             reduce using rule 17 (cuerpo -> declaracion cuerpo .)
    RETURN          reduce using rule 17 (cuerpo -> declaracion cuerpo .)


state 33

    (18) cuerpo -> asignacion cuerpo .

    $end            reduce using rule 18 (cuerpo -> asignacion cuerpo .)
    ELSE            reduce using rule 18 (cuerpo -> asignacion cuerpo .)
    END             reduce using rule 18 (cuerpo -> asignacion cuerpo .)
    RETURN          reduce using rule 18 (cuerpo -> asignacion cuerpo .)


state 34

    (19) cuerpo -> loop cuerpo .

    $end            reduce using rule 19 (cuerpo -> loop cuerpo .)
    ELSE            reduce using rule 19 (cuerpo -> loop cuerpo .)
    END             reduce using rule 19 (cuerpo -> loop cuerpo .)
    RETURN          reduce using rule 19 (cuerpo -> loop cuerpo .)


state 35

    (20) cuerpo -> estructurasDatos cuerpo .

    $end            reduce using rule 20 (cuerpo -> estructurasDatos cuerpo .)
    ELSE            reduce using rule 20 (cuerpo -> estructurasDatos cuerpo .)
    END             reduce using rule 20 (cuerpo -> estructurasDatos cuerpo .)
    RETURN          reduce using rule 20 (cuerpo -> estructurasDatos cuerpo .)


state 36

    (21) cuerpo -> if cuerpo .

    $end            reduce using rule 21 (cuerpo -> if cuerpo .)
    ELSE            reduce using rule 21 (cuerpo -> if cuerpo .)
    END             reduce using rule 21 (cuerpo -> if cuerpo .)
    RETURN          reduce using rule 21 (cuerpo -> if cuerpo .)


state 37

    (22) cuerpo -> unless cuerpo .

    $end            reduce using rule 22 (cuerpo -> unless cuerpo .)
    ELSE            reduce using rule 22 (cuerpo -> unless cuerpo .)
    END             reduce using rule 22 (cuerpo -> unless cuerpo .)
    RETURN          reduce using rule 22 (cuerpo -> unless cuerpo .)


state 38

    (23) cuerpo -> impresion cuerpo .

    $end            reduce using rule 23 (cuerpo -> impresion cuerpo .)
    ELSE            reduce using rule 23 (cuerpo -> impresion cuerpo .)
    END             reduce using rule 23 (cuerpo -> impresion cuerpo .)
    RETURN          reduce using rule 23 (cuerpo -> impresion cuerpo .)


state 39

    (24) cuerpo -> operacionSet cuerpo .

    $end            reduce using rule 24 (cuerpo -> operacionSet cuerpo .)
    ELSE            reduce using rule 24 (cuerpo -> operacionSet cuerpo .)
    END             reduce using rule 24 (cuerpo -> operacionSet cuerpo .)
    RETURN          reduce using rule 24 (cuerpo -> operacionSet cuerpo .)


state 40

    (25) cuerpo -> operacionarray cuerpo .

    $end            reduce using rule 25 (cuerpo -> operacionarray cuerpo .)
    ELSE            reduce using rule 25 (cuerpo -> operacionarray cuerpo .)
    END             reduce using rule 25 (cuerpo -> operacionarray cuerpo .)
    RETURN          reduce using rule 25 (cuerpo -> operacionarray cuerpo .)


state 41

    (26) cuerpo -> operacionHash cuerpo .

    $end            reduce using rule 26 (cuerpo -> operacionHash cuerpo .)
    ELSE            reduce using rule 26 (cuerpo -> operacionHash cuerpo .)
    END             reduce using rule 26 (cuerpo -> operacionHash cuerpo .)
    RETURN          reduce using rule 26 (cuerpo -> operacionHash cuerpo .)


state 42

    (27) cuerpo -> string cuerpo .

    $end            reduce using rule 27 (cuerpo -> string cuerpo .)
    ELSE            reduce using rule 27 (cuerpo -> string cuerpo .)
    END             reduce using rule 27 (cuerpo -> string cuerpo .)
    RETURN          reduce using rule 27 (cuerpo -> string cuerpo .)


state 43

    (3) funcion -> DEF LOCALVAR . LPARENTHESES argumentos RPARENTHESES cuerpo END
    (4) funcion -> DEF LOCALVAR . LPARENTHESES argumentos RPARENTHESES cuerpo retornar END

    LPARENTHESES    shift and go to state 91


state 44

    (35) asignacion -> LOCALVAR PLUSASSIGN . datosAsignacion
    (41) datosAsignacion -> . number
    (42) datosAsignacion -> . LOCALVAR
    (68) number -> . INTEGER
    (69) number -> . FLOAT

    LOCALVAR        shift and go to state 92
    INTEGER         shift and go to state 95
    FLOAT           shift and go to state 96

    datosAsignacion                shift and go to state 93
    number                         shift and go to state 94

state 45

    (36) asignacion -> LOCALVAR MINASSIGN . datosAsignacion
    (41) datosAsignacion -> . number
    (42) datosAsignacion -> . LOCALVAR
    (68) number -> . INTEGER
    (69) number -> . FLOAT

    LOCALVAR        shift and go to state 92
    INTEGER         shift and go to state 95
    FLOAT           shift and go to state 96

    datosAsignacion                shift and go to state 97
    number                         shift and go to state 94

state 46

    (37) asignacion -> LOCALVAR DIVASSIGN . datosAsignacion
    (41) datosAsignacion -> . number
    (42) datosAsignacion -> . LOCALVAR
    (68) number -> . INTEGER
    (69) number -> . FLOAT

    LOCALVAR        shift and go to state 92
    INTEGER         shift and go to state 95
    FLOAT           shift and go to state 96

    datosAsignacion                shift and go to state 98
    number                         shift and go to state 94

state 47

    (38) asignacion -> LOCALVAR TIMESASSIGN . datosAsignacion
    (41) datosAsignacion -> . number
    (42) datosAsignacion -> . LOCALVAR
    (68) number -> . INTEGER
    (69) number -> . FLOAT

    LOCALVAR        shift and go to state 92
    INTEGER         shift and go to state 95
    FLOAT           shift and go to state 96

    datosAsignacion                shift and go to state 99
    number                         shift and go to state 94

state 48

    (39) asignacion -> LOCALVAR MODASSIGN . datosAsignacion
    (41) datosAsignacion -> . number
    (42) datosAsignacion -> . LOCALVAR
    (68) number -> . INTEGER
    (69) number -> . FLOAT

    LOCALVAR        shift and go to state 92
    INTEGER         shift and go to state 95
    FLOAT           shift and go to state 96

    datosAsignacion                shift and go to state 100
    number                         shift and go to state 94

state 49

    (40) asignacion -> LOCALVAR EXPASSIGN . datosAsignacion
    (41) datosAsignacion -> . number
    (42) datosAsignacion -> . LOCALVAR
    (68) number -> . INTEGER
    (69) number -> . FLOAT

    LOCALVAR        shift and go to state 92
    INTEGER         shift and go to state 95
    FLOAT           shift and go to state 96

    datosAsignacion                shift and go to state 101
    number                         shift and go to state 94

state 50

    (30) declaracion -> tiposvariables EQUAL . datos
    (31) declaracion -> tiposvariables EQUAL . estructurasDatos
    (32) declaracion -> tiposvariables EQUAL . expresion
    (33) declaracion -> tiposvariables EQUAL . declaracion
    (34) declaracion -> tiposvariables EQUAL . casting
    (46) datos -> . INTEGER
    (47) datos -> . FLOAT
    (48) datos -> . STRING
    (49) estructurasDatos -> . hash
    (50) estructurasDatos -> . array
    (51) estructurasDatos -> . set
    (70) expresion -> . operacion
    (71) expresion -> . LPARENTHESES operacion RPARENTHESES
    (72) expresion -> . LPARENTHESES operacion RPARENTHESES masoperaciones
    (30) declaracion -> . tiposvariables EQUAL datos
    (31) declaracion -> . tiposvariables EQUAL estructurasDatos
    (32) declaracion -> . tiposvariables EQUAL expresion
    (33) declaracion -> . tiposvariables EQUAL declaracion
    (34) declaracion -> . tiposvariables EQUAL casting
    (147) casting -> . STRING DOT TO_I
    (148) casting -> . STRING DOT TO_F
    (149) casting -> . number DOT TO_S
    (52) hash -> . LCURLYBRACKET elementoHash RCURLYBRACKET
    (83) array -> . LBRACKET RBRACKET
    (84) array -> . LBRACKET datosarray RBRACKET
    (128) set -> . SET LBRACKET elementoSet RBRACKET
    (73) operacion -> . number operador number
    (74) operacion -> . operacion masoperaciones
    (43) tiposvariables -> . VAR
    (44) tiposvariables -> . LOCALVAR
    (45) tiposvariables -> . CONSTANT
    (68) number -> . INTEGER
    (69) number -> . FLOAT

    INTEGER         shift and go to state 64
    FLOAT           shift and go to state 65
    STRING          shift and go to state 107
    LPARENTHESES    shift and go to state 112
    LCURLYBRACKET   shift and go to state 30
    LBRACKET        shift and go to state 26
    SET             shift and go to state 31
    VAR             shift and go to state 28
    LOCALVAR        shift and go to state 73
    CONSTANT        shift and go to state 29

    tiposvariables                 shift and go to state 17
    datos                          shift and go to state 102
    estructurasDatos               shift and go to state 103
    expresion                      shift and go to state 104
    declaracion                    shift and go to state 105
    casting                        shift and go to state 106
    hash                           shift and go to state 108
    array                          shift and go to state 109
    set                            shift and go to state 110
    operacion                      shift and go to state 111
    number                         shift and go to state 113

state 51

    (29) loop -> FOR LOCALVAR . IN rango cuerpo END

    IN              shift and go to state 114


state 52

    (57) operacionHash -> hash LBRACKET . datos RBRACKET
    (58) operacionHash -> hash LBRACKET . datos RBRACKET EQUAL datos
    (46) datos -> . INTEGER
    (47) datos -> . FLOAT
    (48) datos -> . STRING

    INTEGER         shift and go to state 74
    FLOAT           shift and go to state 75
    STRING          shift and go to state 66

    datos                          shift and go to state 115

state 53

    (59) operacionHash -> hash DOT . INCLUDE QUESTIONMARK LPARENTHESES datos RPARENTHESES
    (60) operacionHash -> hash DOT . DELETE LPARENTHESES datos RPARENTHESES
    (61) operacionHash -> hash DOT . KEYS

    INCLUDE         shift and go to state 116
    DELETE          shift and go to state 117
    KEYS            shift and go to state 118


state 54

    (91) operacionarray -> array LBRACKET . INTEGER RBRACKET

    INTEGER         shift and go to state 119


state 55

    (92) operacionarray -> array DOT . TAKE LPARENTHESES INTEGER RPARENTHESES
    (93) operacionarray -> array DOT . DROP LPARENTHESES INTEGER RPARENTHESES
    (94) operacionarray -> array DOT . push maspush
    (99) operacionarray -> array DOT . POP
    (100) operacionarray -> array DOT . POP LPARENTHESES INTEGER RPARENTHESES
    (101) operacionarray -> array DOT . DELETE LPARENTHESES INTEGER RPARENTHESES
    (102) operacionarray -> array DOT . LENGTH LPARENTHESES RPARENTHESES
    (103) operacionarray -> array DOT . EMPTY QUESTIONMARK
    (95) push -> . PUSH LPARENTHESES datosvarios RPARENTHESES
    (96) push -> .

    TAKE            shift and go to state 120
    DROP            shift and go to state 121
    POP             shift and go to state 123
    DELETE          shift and go to state 124
    LENGTH          shift and go to state 125
    EMPTY           shift and go to state 126
    PUSH            shift and go to state 127
    DOT             reduce using rule 96 (push -> .)
    LOCALVAR        reduce using rule 96 (push -> .)
    FOR             reduce using rule 96 (push -> .)
    IF              reduce using rule 96 (push -> .)
    UNLESS          reduce using rule 96 (push -> .)
    PUTS            reduce using rule 96 (push -> .)
    PRINT           reduce using rule 96 (push -> .)
    STRING          reduce using rule 96 (push -> .)
    VAR             reduce using rule 96 (push -> .)
    CONSTANT        reduce using rule 96 (push -> .)
    LCURLYBRACKET   reduce using rule 96 (push -> .)
    LBRACKET        reduce using rule 96 (push -> .)
    SET             reduce using rule 96 (push -> .)
    $end            reduce using rule 96 (push -> .)
    ELSE            reduce using rule 96 (push -> .)
    END             reduce using rule 96 (push -> .)
    RETURN          reduce using rule 96 (push -> .)

    push                           shift and go to state 122

state 56

    (134) operacionSet -> set DOT . ADD LPARENTHESES datos RPARENTHESES
    (135) operacionSet -> set DOT . ADD LPARENTHESES tiposvariables RPARENTHESES
    (136) operacionSet -> set DOT . CLEAR
    (137) operacionSet -> set DOT . DELETE LPARENTHESES datos RPARENTHESES
    (138) operacionSet -> set DOT . DELETE LPARENTHESES tiposvariables RPARENTHESES

    ADD             shift and go to state 128
    CLEAR           shift and go to state 129
    DELETE          shift and go to state 130


state 57

    (106) if -> IF datoscompletos . operadores datoscompletos cuerpo END
    (107) if -> IF datoscompletos . operadores datoscompletos cuerpo else
    (109) operadores -> . DOUBLEEQUAL
    (110) operadores -> . TRIPLEEQUAL
    (111) operadores -> . GREATERTHAN
    (112) operadores -> . NOTEQUAL
    (113) operadores -> . LESSTHAN
    (114) operadores -> . GREQUAL
    (115) operadores -> . LEQUAL

    DOUBLEEQUAL     shift and go to state 132
    TRIPLEEQUAL     shift and go to state 133
    GREATERTHAN     shift and go to state 134
    NOTEQUAL        shift and go to state 135
    LESSTHAN        shift and go to state 136
    GREQUAL         shift and go to state 137
    LEQUAL          shift and go to state 138

    operadores                     shift and go to state 131

state 58

    (104) datoscompletos -> datosvarios .

    DOUBLEEQUAL     reduce using rule 104 (datoscompletos -> datosvarios .)
    TRIPLEEQUAL     reduce using rule 104 (datoscompletos -> datosvarios .)
    GREATERTHAN     reduce using rule 104 (datoscompletos -> datosvarios .)
    NOTEQUAL        reduce using rule 104 (datoscompletos -> datosvarios .)
    LESSTHAN        reduce using rule 104 (datoscompletos -> datosvarios .)
    GREQUAL         reduce using rule 104 (datoscompletos -> datosvarios .)
    LEQUAL          reduce using rule 104 (datoscompletos -> datosvarios .)
    LOCALVAR        reduce using rule 104 (datoscompletos -> datosvarios .)
    FOR             reduce using rule 104 (datoscompletos -> datosvarios .)
    IF              reduce using rule 104 (datoscompletos -> datosvarios .)
    UNLESS          reduce using rule 104 (datoscompletos -> datosvarios .)
    PUTS            reduce using rule 104 (datoscompletos -> datosvarios .)
    PRINT           reduce using rule 104 (datoscompletos -> datosvarios .)
    STRING          reduce using rule 104 (datoscompletos -> datosvarios .)
    VAR             reduce using rule 104 (datoscompletos -> datosvarios .)
    CONSTANT        reduce using rule 104 (datoscompletos -> datosvarios .)
    LCURLYBRACKET   reduce using rule 104 (datoscompletos -> datosvarios .)
    LBRACKET        reduce using rule 104 (datoscompletos -> datosvarios .)
    SET             reduce using rule 104 (datoscompletos -> datosvarios .)
    END             reduce using rule 104 (datoscompletos -> datosvarios .)
    ELSE            reduce using rule 104 (datoscompletos -> datosvarios .)


state 59

    (105) datoscompletos -> tiposvariables .

    DOUBLEEQUAL     reduce using rule 105 (datoscompletos -> tiposvariables .)
    TRIPLEEQUAL     reduce using rule 105 (datoscompletos -> tiposvariables .)
    GREATERTHAN     reduce using rule 105 (datoscompletos -> tiposvariables .)
    NOTEQUAL        reduce using rule 105 (datoscompletos -> tiposvariables .)
    LESSTHAN        reduce using rule 105 (datoscompletos -> tiposvariables .)
    GREQUAL         reduce using rule 105 (datoscompletos -> tiposvariables .)
    LEQUAL          reduce using rule 105 (datoscompletos -> tiposvariables .)
    LOCALVAR        reduce using rule 105 (datoscompletos -> tiposvariables .)
    FOR             reduce using rule 105 (datoscompletos -> tiposvariables .)
    IF              reduce using rule 105 (datoscompletos -> tiposvariables .)
    UNLESS          reduce using rule 105 (datoscompletos -> tiposvariables .)
    PUTS            reduce using rule 105 (datoscompletos -> tiposvariables .)
    PRINT           reduce using rule 105 (datoscompletos -> tiposvariables .)
    STRING          reduce using rule 105 (datoscompletos -> tiposvariables .)
    VAR             reduce using rule 105 (datoscompletos -> tiposvariables .)
    CONSTANT        reduce using rule 105 (datoscompletos -> tiposvariables .)
    LCURLYBRACKET   reduce using rule 105 (datoscompletos -> tiposvariables .)
    LBRACKET        reduce using rule 105 (datoscompletos -> tiposvariables .)
    SET             reduce using rule 105 (datoscompletos -> tiposvariables .)
    END             reduce using rule 105 (datoscompletos -> tiposvariables .)
    ELSE            reduce using rule 105 (datoscompletos -> tiposvariables .)


state 60

    (85) datosvarios -> datos .

    DOUBLEEQUAL     reduce using rule 85 (datosvarios -> datos .)
    TRIPLEEQUAL     reduce using rule 85 (datosvarios -> datos .)
    GREATERTHAN     reduce using rule 85 (datosvarios -> datos .)
    NOTEQUAL        reduce using rule 85 (datosvarios -> datos .)
    LESSTHAN        reduce using rule 85 (datosvarios -> datos .)
    GREQUAL         reduce using rule 85 (datosvarios -> datos .)
    LEQUAL          reduce using rule 85 (datosvarios -> datos .)
    RBRACKET        reduce using rule 85 (datosvarios -> datos .)
    COMMA           reduce using rule 85 (datosvarios -> datos .)
    LOCALVAR        reduce using rule 85 (datosvarios -> datos .)
    FOR             reduce using rule 85 (datosvarios -> datos .)
    IF              reduce using rule 85 (datosvarios -> datos .)
    UNLESS          reduce using rule 85 (datosvarios -> datos .)
    PUTS            reduce using rule 85 (datosvarios -> datos .)
    PRINT           reduce using rule 85 (datosvarios -> datos .)
    STRING          reduce using rule 85 (datosvarios -> datos .)
    VAR             reduce using rule 85 (datosvarios -> datos .)
    CONSTANT        reduce using rule 85 (datosvarios -> datos .)
    LCURLYBRACKET   reduce using rule 85 (datosvarios -> datos .)
    LBRACKET        reduce using rule 85 (datosvarios -> datos .)
    SET             reduce using rule 85 (datosvarios -> datos .)
    END             reduce using rule 85 (datosvarios -> datos .)
    ELSE            reduce using rule 85 (datosvarios -> datos .)
    RPARENTHESES    reduce using rule 85 (datosvarios -> datos .)


state 61

    (86) datosvarios -> number .

    DOUBLEEQUAL     reduce using rule 86 (datosvarios -> number .)
    TRIPLEEQUAL     reduce using rule 86 (datosvarios -> number .)
    GREATERTHAN     reduce using rule 86 (datosvarios -> number .)
    NOTEQUAL        reduce using rule 86 (datosvarios -> number .)
    LESSTHAN        reduce using rule 86 (datosvarios -> number .)
    GREQUAL         reduce using rule 86 (datosvarios -> number .)
    LEQUAL          reduce using rule 86 (datosvarios -> number .)
    RBRACKET        reduce using rule 86 (datosvarios -> number .)
    COMMA           reduce using rule 86 (datosvarios -> number .)
    LOCALVAR        reduce using rule 86 (datosvarios -> number .)
    FOR             reduce using rule 86 (datosvarios -> number .)
    IF              reduce using rule 86 (datosvarios -> number .)
    UNLESS          reduce using rule 86 (datosvarios -> number .)
    PUTS            reduce using rule 86 (datosvarios -> number .)
    PRINT           reduce using rule 86 (datosvarios -> number .)
    STRING          reduce using rule 86 (datosvarios -> number .)
    VAR             reduce using rule 86 (datosvarios -> number .)
    CONSTANT        reduce using rule 86 (datosvarios -> number .)
    LCURLYBRACKET   reduce using rule 86 (datosvarios -> number .)
    LBRACKET        reduce using rule 86 (datosvarios -> number .)
    SET             reduce using rule 86 (datosvarios -> number .)
    END             reduce using rule 86 (datosvarios -> number .)
    ELSE            reduce using rule 86 (datosvarios -> number .)
    RPARENTHESES    reduce using rule 86 (datosvarios -> number .)


state 62

    (87) datosvarios -> VAR .
    (43) tiposvariables -> VAR .

  ! reduce/reduce conflict for DOUBLEEQUAL resolved using rule 43 (tiposvariables -> VAR .)
  ! reduce/reduce conflict for TRIPLEEQUAL resolved using rule 43 (tiposvariables -> VAR .)
  ! reduce/reduce conflict for GREATERTHAN resolved using rule 43 (tiposvariables -> VAR .)
  ! reduce/reduce conflict for NOTEQUAL resolved using rule 43 (tiposvariables -> VAR .)
  ! reduce/reduce conflict for LESSTHAN resolved using rule 43 (tiposvariables -> VAR .)
  ! reduce/reduce conflict for GREQUAL resolved using rule 43 (tiposvariables -> VAR .)
  ! reduce/reduce conflict for LEQUAL resolved using rule 43 (tiposvariables -> VAR .)
  ! reduce/reduce conflict for LOCALVAR resolved using rule 43 (tiposvariables -> VAR .)
  ! reduce/reduce conflict for FOR resolved using rule 43 (tiposvariables -> VAR .)
  ! reduce/reduce conflict for IF resolved using rule 43 (tiposvariables -> VAR .)
  ! reduce/reduce conflict for UNLESS resolved using rule 43 (tiposvariables -> VAR .)
  ! reduce/reduce conflict for PUTS resolved using rule 43 (tiposvariables -> VAR .)
  ! reduce/reduce conflict for PRINT resolved using rule 43 (tiposvariables -> VAR .)
  ! reduce/reduce conflict for STRING resolved using rule 43 (tiposvariables -> VAR .)
  ! reduce/reduce conflict for VAR resolved using rule 43 (tiposvariables -> VAR .)
  ! reduce/reduce conflict for CONSTANT resolved using rule 43 (tiposvariables -> VAR .)
  ! reduce/reduce conflict for LCURLYBRACKET resolved using rule 43 (tiposvariables -> VAR .)
  ! reduce/reduce conflict for LBRACKET resolved using rule 43 (tiposvariables -> VAR .)
  ! reduce/reduce conflict for SET resolved using rule 43 (tiposvariables -> VAR .)
  ! reduce/reduce conflict for END resolved using rule 43 (tiposvariables -> VAR .)
  ! reduce/reduce conflict for ELSE resolved using rule 43 (tiposvariables -> VAR .)
    DOUBLEEQUAL     reduce using rule 43 (tiposvariables -> VAR .)
    TRIPLEEQUAL     reduce using rule 43 (tiposvariables -> VAR .)
    GREATERTHAN     reduce using rule 43 (tiposvariables -> VAR .)
    NOTEQUAL        reduce using rule 43 (tiposvariables -> VAR .)
    LESSTHAN        reduce using rule 43 (tiposvariables -> VAR .)
    GREQUAL         reduce using rule 43 (tiposvariables -> VAR .)
    LEQUAL          reduce using rule 43 (tiposvariables -> VAR .)
    LOCALVAR        reduce using rule 43 (tiposvariables -> VAR .)
    FOR             reduce using rule 43 (tiposvariables -> VAR .)
    IF              reduce using rule 43 (tiposvariables -> VAR .)
    UNLESS          reduce using rule 43 (tiposvariables -> VAR .)
    PUTS            reduce using rule 43 (tiposvariables -> VAR .)
    PRINT           reduce using rule 43 (tiposvariables -> VAR .)
    STRING          reduce using rule 43 (tiposvariables -> VAR .)
    VAR             reduce using rule 43 (tiposvariables -> VAR .)
    CONSTANT        reduce using rule 43 (tiposvariables -> VAR .)
    LCURLYBRACKET   reduce using rule 43 (tiposvariables -> VAR .)
    LBRACKET        reduce using rule 43 (tiposvariables -> VAR .)
    SET             reduce using rule 43 (tiposvariables -> VAR .)
    END             reduce using rule 43 (tiposvariables -> VAR .)
    ELSE            reduce using rule 43 (tiposvariables -> VAR .)

  ! DOUBLEEQUAL     [ reduce using rule 87 (datosvarios -> VAR .) ]
  ! TRIPLEEQUAL     [ reduce using rule 87 (datosvarios -> VAR .) ]
  ! GREATERTHAN     [ reduce using rule 87 (datosvarios -> VAR .) ]
  ! NOTEQUAL        [ reduce using rule 87 (datosvarios -> VAR .) ]
  ! LESSTHAN        [ reduce using rule 87 (datosvarios -> VAR .) ]
  ! GREQUAL         [ reduce using rule 87 (datosvarios -> VAR .) ]
  ! LEQUAL          [ reduce using rule 87 (datosvarios -> VAR .) ]
  ! LOCALVAR        [ reduce using rule 87 (datosvarios -> VAR .) ]
  ! FOR             [ reduce using rule 87 (datosvarios -> VAR .) ]
  ! IF              [ reduce using rule 87 (datosvarios -> VAR .) ]
  ! UNLESS          [ reduce using rule 87 (datosvarios -> VAR .) ]
  ! PUTS            [ reduce using rule 87 (datosvarios -> VAR .) ]
  ! PRINT           [ reduce using rule 87 (datosvarios -> VAR .) ]
  ! STRING          [ reduce using rule 87 (datosvarios -> VAR .) ]
  ! VAR             [ reduce using rule 87 (datosvarios -> VAR .) ]
  ! CONSTANT        [ reduce using rule 87 (datosvarios -> VAR .) ]
  ! LCURLYBRACKET   [ reduce using rule 87 (datosvarios -> VAR .) ]
  ! LBRACKET        [ reduce using rule 87 (datosvarios -> VAR .) ]
  ! SET             [ reduce using rule 87 (datosvarios -> VAR .) ]
  ! END             [ reduce using rule 87 (datosvarios -> VAR .) ]
  ! ELSE            [ reduce using rule 87 (datosvarios -> VAR .) ]


state 63

    (88) datosvarios -> LOCALVAR .
    (44) tiposvariables -> LOCALVAR .

  ! reduce/reduce conflict for DOUBLEEQUAL resolved using rule 44 (tiposvariables -> LOCALVAR .)
  ! reduce/reduce conflict for TRIPLEEQUAL resolved using rule 44 (tiposvariables -> LOCALVAR .)
  ! reduce/reduce conflict for GREATERTHAN resolved using rule 44 (tiposvariables -> LOCALVAR .)
  ! reduce/reduce conflict for NOTEQUAL resolved using rule 44 (tiposvariables -> LOCALVAR .)
  ! reduce/reduce conflict for LESSTHAN resolved using rule 44 (tiposvariables -> LOCALVAR .)
  ! reduce/reduce conflict for GREQUAL resolved using rule 44 (tiposvariables -> LOCALVAR .)
  ! reduce/reduce conflict for LEQUAL resolved using rule 44 (tiposvariables -> LOCALVAR .)
  ! reduce/reduce conflict for LOCALVAR resolved using rule 44 (tiposvariables -> LOCALVAR .)
  ! reduce/reduce conflict for FOR resolved using rule 44 (tiposvariables -> LOCALVAR .)
  ! reduce/reduce conflict for IF resolved using rule 44 (tiposvariables -> LOCALVAR .)
  ! reduce/reduce conflict for UNLESS resolved using rule 44 (tiposvariables -> LOCALVAR .)
  ! reduce/reduce conflict for PUTS resolved using rule 44 (tiposvariables -> LOCALVAR .)
  ! reduce/reduce conflict for PRINT resolved using rule 44 (tiposvariables -> LOCALVAR .)
  ! reduce/reduce conflict for STRING resolved using rule 44 (tiposvariables -> LOCALVAR .)
  ! reduce/reduce conflict for VAR resolved using rule 44 (tiposvariables -> LOCALVAR .)
  ! reduce/reduce conflict for CONSTANT resolved using rule 44 (tiposvariables -> LOCALVAR .)
  ! reduce/reduce conflict for LCURLYBRACKET resolved using rule 44 (tiposvariables -> LOCALVAR .)
  ! reduce/reduce conflict for LBRACKET resolved using rule 44 (tiposvariables -> LOCALVAR .)
  ! reduce/reduce conflict for SET resolved using rule 44 (tiposvariables -> LOCALVAR .)
  ! reduce/reduce conflict for END resolved using rule 44 (tiposvariables -> LOCALVAR .)
  ! reduce/reduce conflict for ELSE resolved using rule 44 (tiposvariables -> LOCALVAR .)
    DOUBLEEQUAL     reduce using rule 44 (tiposvariables -> LOCALVAR .)
    TRIPLEEQUAL     reduce using rule 44 (tiposvariables -> LOCALVAR .)
    GREATERTHAN     reduce using rule 44 (tiposvariables -> LOCALVAR .)
    NOTEQUAL        reduce using rule 44 (tiposvariables -> LOCALVAR .)
    LESSTHAN        reduce using rule 44 (tiposvariables -> LOCALVAR .)
    GREQUAL         reduce using rule 44 (tiposvariables -> LOCALVAR .)
    LEQUAL          reduce using rule 44 (tiposvariables -> LOCALVAR .)
    LOCALVAR        reduce using rule 44 (tiposvariables -> LOCALVAR .)
    FOR             reduce using rule 44 (tiposvariables -> LOCALVAR .)
    IF              reduce using rule 44 (tiposvariables -> LOCALVAR .)
    UNLESS          reduce using rule 44 (tiposvariables -> LOCALVAR .)
    PUTS            reduce using rule 44 (tiposvariables -> LOCALVAR .)
    PRINT           reduce using rule 44 (tiposvariables -> LOCALVAR .)
    STRING          reduce using rule 44 (tiposvariables -> LOCALVAR .)
    VAR             reduce using rule 44 (tiposvariables -> LOCALVAR .)
    CONSTANT        reduce using rule 44 (tiposvariables -> LOCALVAR .)
    LCURLYBRACKET   reduce using rule 44 (tiposvariables -> LOCALVAR .)
    LBRACKET        reduce using rule 44 (tiposvariables -> LOCALVAR .)
    SET             reduce using rule 44 (tiposvariables -> LOCALVAR .)
    END             reduce using rule 44 (tiposvariables -> LOCALVAR .)
    ELSE            reduce using rule 44 (tiposvariables -> LOCALVAR .)

  ! DOUBLEEQUAL     [ reduce using rule 88 (datosvarios -> LOCALVAR .) ]
  ! TRIPLEEQUAL     [ reduce using rule 88 (datosvarios -> LOCALVAR .) ]
  ! GREATERTHAN     [ reduce using rule 88 (datosvarios -> LOCALVAR .) ]
  ! NOTEQUAL        [ reduce using rule 88 (datosvarios -> LOCALVAR .) ]
  ! LESSTHAN        [ reduce using rule 88 (datosvarios -> LOCALVAR .) ]
  ! GREQUAL         [ reduce using rule 88 (datosvarios -> LOCALVAR .) ]
  ! LEQUAL          [ reduce using rule 88 (datosvarios -> LOCALVAR .) ]
  ! LOCALVAR        [ reduce using rule 88 (datosvarios -> LOCALVAR .) ]
  ! FOR             [ reduce using rule 88 (datosvarios -> LOCALVAR .) ]
  ! IF              [ reduce using rule 88 (datosvarios -> LOCALVAR .) ]
  ! UNLESS          [ reduce using rule 88 (datosvarios -> LOCALVAR .) ]
  ! PUTS            [ reduce using rule 88 (datosvarios -> LOCALVAR .) ]
  ! PRINT           [ reduce using rule 88 (datosvarios -> LOCALVAR .) ]
  ! STRING          [ reduce using rule 88 (datosvarios -> LOCALVAR .) ]
  ! VAR             [ reduce using rule 88 (datosvarios -> LOCALVAR .) ]
  ! CONSTANT        [ reduce using rule 88 (datosvarios -> LOCALVAR .) ]
  ! LCURLYBRACKET   [ reduce using rule 88 (datosvarios -> LOCALVAR .) ]
  ! LBRACKET        [ reduce using rule 88 (datosvarios -> LOCALVAR .) ]
  ! SET             [ reduce using rule 88 (datosvarios -> LOCALVAR .) ]
  ! END             [ reduce using rule 88 (datosvarios -> LOCALVAR .) ]
  ! ELSE            [ reduce using rule 88 (datosvarios -> LOCALVAR .) ]


state 64

    (46) datos -> INTEGER .
    (68) number -> INTEGER .

  ! reduce/reduce conflict for DOUBLEEQUAL resolved using rule 46 (datos -> INTEGER .)
  ! reduce/reduce conflict for TRIPLEEQUAL resolved using rule 46 (datos -> INTEGER .)
  ! reduce/reduce conflict for GREATERTHAN resolved using rule 46 (datos -> INTEGER .)
  ! reduce/reduce conflict for NOTEQUAL resolved using rule 46 (datos -> INTEGER .)
  ! reduce/reduce conflict for LESSTHAN resolved using rule 46 (datos -> INTEGER .)
  ! reduce/reduce conflict for GREQUAL resolved using rule 46 (datos -> INTEGER .)
  ! reduce/reduce conflict for LEQUAL resolved using rule 46 (datos -> INTEGER .)
  ! reduce/reduce conflict for RBRACKET resolved using rule 46 (datos -> INTEGER .)
  ! reduce/reduce conflict for COMMA resolved using rule 46 (datos -> INTEGER .)
  ! reduce/reduce conflict for LOCALVAR resolved using rule 46 (datos -> INTEGER .)
  ! reduce/reduce conflict for FOR resolved using rule 46 (datos -> INTEGER .)
  ! reduce/reduce conflict for IF resolved using rule 46 (datos -> INTEGER .)
  ! reduce/reduce conflict for UNLESS resolved using rule 46 (datos -> INTEGER .)
  ! reduce/reduce conflict for PUTS resolved using rule 46 (datos -> INTEGER .)
  ! reduce/reduce conflict for PRINT resolved using rule 46 (datos -> INTEGER .)
  ! reduce/reduce conflict for STRING resolved using rule 46 (datos -> INTEGER .)
  ! reduce/reduce conflict for VAR resolved using rule 46 (datos -> INTEGER .)
  ! reduce/reduce conflict for CONSTANT resolved using rule 46 (datos -> INTEGER .)
  ! reduce/reduce conflict for LCURLYBRACKET resolved using rule 46 (datos -> INTEGER .)
  ! reduce/reduce conflict for LBRACKET resolved using rule 46 (datos -> INTEGER .)
  ! reduce/reduce conflict for SET resolved using rule 46 (datos -> INTEGER .)
  ! reduce/reduce conflict for END resolved using rule 46 (datos -> INTEGER .)
  ! reduce/reduce conflict for ELSE resolved using rule 46 (datos -> INTEGER .)
  ! reduce/reduce conflict for RPARENTHESES resolved using rule 46 (datos -> INTEGER .)
    DOUBLEEQUAL     reduce using rule 46 (datos -> INTEGER .)
    TRIPLEEQUAL     reduce using rule 46 (datos -> INTEGER .)
    GREATERTHAN     reduce using rule 46 (datos -> INTEGER .)
    NOTEQUAL        reduce using rule 46 (datos -> INTEGER .)
    LESSTHAN        reduce using rule 46 (datos -> INTEGER .)
    GREQUAL         reduce using rule 46 (datos -> INTEGER .)
    LEQUAL          reduce using rule 46 (datos -> INTEGER .)
    RBRACKET        reduce using rule 46 (datos -> INTEGER .)
    COMMA           reduce using rule 46 (datos -> INTEGER .)
    LOCALVAR        reduce using rule 46 (datos -> INTEGER .)
    FOR             reduce using rule 46 (datos -> INTEGER .)
    IF              reduce using rule 46 (datos -> INTEGER .)
    UNLESS          reduce using rule 46 (datos -> INTEGER .)
    PUTS            reduce using rule 46 (datos -> INTEGER .)
    PRINT           reduce using rule 46 (datos -> INTEGER .)
    STRING          reduce using rule 46 (datos -> INTEGER .)
    VAR             reduce using rule 46 (datos -> INTEGER .)
    CONSTANT        reduce using rule 46 (datos -> INTEGER .)
    LCURLYBRACKET   reduce using rule 46 (datos -> INTEGER .)
    LBRACKET        reduce using rule 46 (datos -> INTEGER .)
    SET             reduce using rule 46 (datos -> INTEGER .)
    $end            reduce using rule 46 (datos -> INTEGER .)
    ELSE            reduce using rule 46 (datos -> INTEGER .)
    END             reduce using rule 46 (datos -> INTEGER .)
    RETURN          reduce using rule 46 (datos -> INTEGER .)
    RPARENTHESES    reduce using rule 46 (datos -> INTEGER .)
    DOT             reduce using rule 68 (number -> INTEGER .)
    PLUS            reduce using rule 68 (number -> INTEGER .)
    MINUS           reduce using rule 68 (number -> INTEGER .)
    MULTIPLY        reduce using rule 68 (number -> INTEGER .)
    DIVIDE          reduce using rule 68 (number -> INTEGER .)
    PERCENTAGE      reduce using rule 68 (number -> INTEGER .)

  ! DOUBLEEQUAL     [ reduce using rule 68 (number -> INTEGER .) ]
  ! TRIPLEEQUAL     [ reduce using rule 68 (number -> INTEGER .) ]
  ! GREATERTHAN     [ reduce using rule 68 (number -> INTEGER .) ]
  ! NOTEQUAL        [ reduce using rule 68 (number -> INTEGER .) ]
  ! LESSTHAN        [ reduce using rule 68 (number -> INTEGER .) ]
  ! GREQUAL         [ reduce using rule 68 (number -> INTEGER .) ]
  ! LEQUAL          [ reduce using rule 68 (number -> INTEGER .) ]
  ! RBRACKET        [ reduce using rule 68 (number -> INTEGER .) ]
  ! COMMA           [ reduce using rule 68 (number -> INTEGER .) ]
  ! LOCALVAR        [ reduce using rule 68 (number -> INTEGER .) ]
  ! FOR             [ reduce using rule 68 (number -> INTEGER .) ]
  ! IF              [ reduce using rule 68 (number -> INTEGER .) ]
  ! UNLESS          [ reduce using rule 68 (number -> INTEGER .) ]
  ! PUTS            [ reduce using rule 68 (number -> INTEGER .) ]
  ! PRINT           [ reduce using rule 68 (number -> INTEGER .) ]
  ! STRING          [ reduce using rule 68 (number -> INTEGER .) ]
  ! VAR             [ reduce using rule 68 (number -> INTEGER .) ]
  ! CONSTANT        [ reduce using rule 68 (number -> INTEGER .) ]
  ! LCURLYBRACKET   [ reduce using rule 68 (number -> INTEGER .) ]
  ! LBRACKET        [ reduce using rule 68 (number -> INTEGER .) ]
  ! SET             [ reduce using rule 68 (number -> INTEGER .) ]
  ! END             [ reduce using rule 68 (number -> INTEGER .) ]
  ! ELSE            [ reduce using rule 68 (number -> INTEGER .) ]
  ! RPARENTHESES    [ reduce using rule 68 (number -> INTEGER .) ]


state 65

    (47) datos -> FLOAT .
    (69) number -> FLOAT .

  ! reduce/reduce conflict for DOUBLEEQUAL resolved using rule 47 (datos -> FLOAT .)
  ! reduce/reduce conflict for TRIPLEEQUAL resolved using rule 47 (datos -> FLOAT .)
  ! reduce/reduce conflict for GREATERTHAN resolved using rule 47 (datos -> FLOAT .)
  ! reduce/reduce conflict for NOTEQUAL resolved using rule 47 (datos -> FLOAT .)
  ! reduce/reduce conflict for LESSTHAN resolved using rule 47 (datos -> FLOAT .)
  ! reduce/reduce conflict for GREQUAL resolved using rule 47 (datos -> FLOAT .)
  ! reduce/reduce conflict for LEQUAL resolved using rule 47 (datos -> FLOAT .)
  ! reduce/reduce conflict for RBRACKET resolved using rule 47 (datos -> FLOAT .)
  ! reduce/reduce conflict for COMMA resolved using rule 47 (datos -> FLOAT .)
  ! reduce/reduce conflict for LOCALVAR resolved using rule 47 (datos -> FLOAT .)
  ! reduce/reduce conflict for FOR resolved using rule 47 (datos -> FLOAT .)
  ! reduce/reduce conflict for IF resolved using rule 47 (datos -> FLOAT .)
  ! reduce/reduce conflict for UNLESS resolved using rule 47 (datos -> FLOAT .)
  ! reduce/reduce conflict for PUTS resolved using rule 47 (datos -> FLOAT .)
  ! reduce/reduce conflict for PRINT resolved using rule 47 (datos -> FLOAT .)
  ! reduce/reduce conflict for STRING resolved using rule 47 (datos -> FLOAT .)
  ! reduce/reduce conflict for VAR resolved using rule 47 (datos -> FLOAT .)
  ! reduce/reduce conflict for CONSTANT resolved using rule 47 (datos -> FLOAT .)
  ! reduce/reduce conflict for LCURLYBRACKET resolved using rule 47 (datos -> FLOAT .)
  ! reduce/reduce conflict for LBRACKET resolved using rule 47 (datos -> FLOAT .)
  ! reduce/reduce conflict for SET resolved using rule 47 (datos -> FLOAT .)
  ! reduce/reduce conflict for END resolved using rule 47 (datos -> FLOAT .)
  ! reduce/reduce conflict for ELSE resolved using rule 47 (datos -> FLOAT .)
  ! reduce/reduce conflict for RPARENTHESES resolved using rule 47 (datos -> FLOAT .)
    DOUBLEEQUAL     reduce using rule 47 (datos -> FLOAT .)
    TRIPLEEQUAL     reduce using rule 47 (datos -> FLOAT .)
    GREATERTHAN     reduce using rule 47 (datos -> FLOAT .)
    NOTEQUAL        reduce using rule 47 (datos -> FLOAT .)
    LESSTHAN        reduce using rule 47 (datos -> FLOAT .)
    GREQUAL         reduce using rule 47 (datos -> FLOAT .)
    LEQUAL          reduce using rule 47 (datos -> FLOAT .)
    RBRACKET        reduce using rule 47 (datos -> FLOAT .)
    COMMA           reduce using rule 47 (datos -> FLOAT .)
    LOCALVAR        reduce using rule 47 (datos -> FLOAT .)
    FOR             reduce using rule 47 (datos -> FLOAT .)
    IF              reduce using rule 47 (datos -> FLOAT .)
    UNLESS          reduce using rule 47 (datos -> FLOAT .)
    PUTS            reduce using rule 47 (datos -> FLOAT .)
    PRINT           reduce using rule 47 (datos -> FLOAT .)
    STRING          reduce using rule 47 (datos -> FLOAT .)
    VAR             reduce using rule 47 (datos -> FLOAT .)
    CONSTANT        reduce using rule 47 (datos -> FLOAT .)
    LCURLYBRACKET   reduce using rule 47 (datos -> FLOAT .)
    LBRACKET        reduce using rule 47 (datos -> FLOAT .)
    SET             reduce using rule 47 (datos -> FLOAT .)
    $end            reduce using rule 47 (datos -> FLOAT .)
    ELSE            reduce using rule 47 (datos -> FLOAT .)
    END             reduce using rule 47 (datos -> FLOAT .)
    RETURN          reduce using rule 47 (datos -> FLOAT .)
    RPARENTHESES    reduce using rule 47 (datos -> FLOAT .)
    DOT             reduce using rule 69 (number -> FLOAT .)
    PLUS            reduce using rule 69 (number -> FLOAT .)
    MINUS           reduce using rule 69 (number -> FLOAT .)
    MULTIPLY        reduce using rule 69 (number -> FLOAT .)
    DIVIDE          reduce using rule 69 (number -> FLOAT .)
    PERCENTAGE      reduce using rule 69 (number -> FLOAT .)

  ! DOUBLEEQUAL     [ reduce using rule 69 (number -> FLOAT .) ]
  ! TRIPLEEQUAL     [ reduce using rule 69 (number -> FLOAT .) ]
  ! GREATERTHAN     [ reduce using rule 69 (number -> FLOAT .) ]
  ! NOTEQUAL        [ reduce using rule 69 (number -> FLOAT .) ]
  ! LESSTHAN        [ reduce using rule 69 (number -> FLOAT .) ]
  ! GREQUAL         [ reduce using rule 69 (number -> FLOAT .) ]
  ! LEQUAL          [ reduce using rule 69 (number -> FLOAT .) ]
  ! RBRACKET        [ reduce using rule 69 (number -> FLOAT .) ]
  ! COMMA           [ reduce using rule 69 (number -> FLOAT .) ]
  ! LOCALVAR        [ reduce using rule 69 (number -> FLOAT .) ]
  ! FOR             [ reduce using rule 69 (number -> FLOAT .) ]
  ! IF              [ reduce using rule 69 (number -> FLOAT .) ]
  ! UNLESS          [ reduce using rule 69 (number -> FLOAT .) ]
  ! PUTS            [ reduce using rule 69 (number -> FLOAT .) ]
  ! PRINT           [ reduce using rule 69 (number -> FLOAT .) ]
  ! STRING          [ reduce using rule 69 (number -> FLOAT .) ]
  ! VAR             [ reduce using rule 69 (number -> FLOAT .) ]
  ! CONSTANT        [ reduce using rule 69 (number -> FLOAT .) ]
  ! LCURLYBRACKET   [ reduce using rule 69 (number -> FLOAT .) ]
  ! LBRACKET        [ reduce using rule 69 (number -> FLOAT .) ]
  ! SET             [ reduce using rule 69 (number -> FLOAT .) ]
  ! END             [ reduce using rule 69 (number -> FLOAT .) ]
  ! ELSE            [ reduce using rule 69 (number -> FLOAT .) ]
  ! RPARENTHESES    [ reduce using rule 69 (number -> FLOAT .) ]


state 66

    (48) datos -> STRING .

    DOUBLEEQUAL     reduce using rule 48 (datos -> STRING .)
    TRIPLEEQUAL     reduce using rule 48 (datos -> STRING .)
    GREATERTHAN     reduce using rule 48 (datos -> STRING .)
    NOTEQUAL        reduce using rule 48 (datos -> STRING .)
    LESSTHAN        reduce using rule 48 (datos -> STRING .)
    GREQUAL         reduce using rule 48 (datos -> STRING .)
    LEQUAL          reduce using rule 48 (datos -> STRING .)
    LOCALVAR        reduce using rule 48 (datos -> STRING .)
    FOR             reduce using rule 48 (datos -> STRING .)
    IF              reduce using rule 48 (datos -> STRING .)
    UNLESS          reduce using rule 48 (datos -> STRING .)
    PUTS            reduce using rule 48 (datos -> STRING .)
    PRINT           reduce using rule 48 (datos -> STRING .)
    STRING          reduce using rule 48 (datos -> STRING .)
    VAR             reduce using rule 48 (datos -> STRING .)
    CONSTANT        reduce using rule 48 (datos -> STRING .)
    LCURLYBRACKET   reduce using rule 48 (datos -> STRING .)
    LBRACKET        reduce using rule 48 (datos -> STRING .)
    SET             reduce using rule 48 (datos -> STRING .)
    $end            reduce using rule 48 (datos -> STRING .)
    ELSE            reduce using rule 48 (datos -> STRING .)
    END             reduce using rule 48 (datos -> STRING .)
    RETURN          reduce using rule 48 (datos -> STRING .)
    RBRACKET        reduce using rule 48 (datos -> STRING .)
    COMMA           reduce using rule 48 (datos -> STRING .)
    EQUAL           reduce using rule 48 (datos -> STRING .)
    DOUBLEAMPERSAND reduce using rule 48 (datos -> STRING .)
    DOUBLEPIPE      reduce using rule 48 (datos -> STRING .)
    RPARENTHESES    reduce using rule 48 (datos -> STRING .)
    RCURLYBRACKET   reduce using rule 48 (datos -> STRING .)


state 67

    (116) unless -> UNLESS expresionCondicional . cuerpo ELSE cuerpo END
    (17) cuerpo -> . declaracion cuerpo
    (18) cuerpo -> . asignacion cuerpo
    (19) cuerpo -> . loop cuerpo
    (20) cuerpo -> . estructurasDatos cuerpo
    (21) cuerpo -> . if cuerpo
    (22) cuerpo -> . unless cuerpo
    (23) cuerpo -> . impresion cuerpo
    (24) cuerpo -> . operacionSet cuerpo
    (25) cuerpo -> . operacionarray cuerpo
    (26) cuerpo -> . operacionHash cuerpo
    (27) cuerpo -> . string cuerpo
    (28) cuerpo -> .
    (30) declaracion -> . tiposvariables EQUAL datos
    (31) declaracion -> . tiposvariables EQUAL estructurasDatos
    (32) declaracion -> . tiposvariables EQUAL expresion
    (33) declaracion -> . tiposvariables EQUAL declaracion
    (34) declaracion -> . tiposvariables EQUAL casting
    (35) asignacion -> . LOCALVAR PLUSASSIGN datosAsignacion
    (36) asignacion -> . LOCALVAR MINASSIGN datosAsignacion
    (37) asignacion -> . LOCALVAR DIVASSIGN datosAsignacion
    (38) asignacion -> . LOCALVAR TIMESASSIGN datosAsignacion
    (39) asignacion -> . LOCALVAR MODASSIGN datosAsignacion
    (40) asignacion -> . LOCALVAR EXPASSIGN datosAsignacion
    (29) loop -> . FOR LOCALVAR IN rango cuerpo END
    (49) estructurasDatos -> . hash
    (50) estructurasDatos -> . array
    (51) estructurasDatos -> . set
    (106) if -> . IF datoscompletos operadores datoscompletos cuerpo END
    (107) if -> . IF datoscompletos operadores datoscompletos cuerpo else
    (116) unless -> . UNLESS expresionCondicional cuerpo ELSE cuerpo END
    (64) impresion -> . PUTS datos
    (65) impresion -> . PUTS LOCALVAR
    (66) impresion -> . PRINT datos
    (67) impresion -> . PRINT LOCALVAR
    (134) operacionSet -> . set DOT ADD LPARENTHESES datos RPARENTHESES
    (135) operacionSet -> . set DOT ADD LPARENTHESES tiposvariables RPARENTHESES
    (136) operacionSet -> . set DOT CLEAR
    (137) operacionSet -> . set DOT DELETE LPARENTHESES datos RPARENTHESES
    (138) operacionSet -> . set DOT DELETE LPARENTHESES tiposvariables RPARENTHESES
    (91) operacionarray -> . array LBRACKET INTEGER RBRACKET
    (92) operacionarray -> . array DOT TAKE LPARENTHESES INTEGER RPARENTHESES
    (93) operacionarray -> . array DOT DROP LPARENTHESES INTEGER RPARENTHESES
    (94) operacionarray -> . array DOT push maspush
    (99) operacionarray -> . array DOT POP
    (100) operacionarray -> . array DOT POP LPARENTHESES INTEGER RPARENTHESES
    (101) operacionarray -> . array DOT DELETE LPARENTHESES INTEGER RPARENTHESES
    (102) operacionarray -> . array DOT LENGTH LPARENTHESES RPARENTHESES
    (103) operacionarray -> . array DOT EMPTY QUESTIONMARK
    (57) operacionHash -> . hash LBRACKET datos RBRACKET
    (58) operacionHash -> . hash LBRACKET datos RBRACKET EQUAL datos
    (59) operacionHash -> . hash DOT INCLUDE QUESTIONMARK LPARENTHESES datos RPARENTHESES
    (60) operacionHash -> . hash DOT DELETE LPARENTHESES datos RPARENTHESES
    (61) operacionHash -> . hash DOT KEYS
    (139) string -> . STRING PLUS STRING
    (140) string -> . STRING MULTIPLY INTEGER
    (141) string -> . STRING DOT stringOpt
    (43) tiposvariables -> . VAR
    (44) tiposvariables -> . LOCALVAR
    (45) tiposvariables -> . CONSTANT
    (52) hash -> . LCURLYBRACKET elementoHash RCURLYBRACKET
    (83) array -> . LBRACKET RBRACKET
    (84) array -> . LBRACKET datosarray RBRACKET
    (128) set -> . SET LBRACKET elementoSet RBRACKET

    ELSE            reduce using rule 28 (cuerpo -> .)
    LOCALVAR        shift and go to state 16
    FOR             shift and go to state 18
    IF              shift and go to state 22
    UNLESS          shift and go to state 23
    PUTS            shift and go to state 24
    PRINT           shift and go to state 25
    STRING          shift and go to state 27
    VAR             shift and go to state 28
    CONSTANT        shift and go to state 29
    LCURLYBRACKET   shift and go to state 30
    LBRACKET        shift and go to state 26
    SET             shift and go to state 31

    cuerpo                         shift and go to state 139
    declaracion                    shift and go to state 4
    asignacion                     shift and go to state 5
    loop                           shift and go to state 6
    estructurasDatos               shift and go to state 7
    if                             shift and go to state 8
    unless                         shift and go to state 9
    impresion                      shift and go to state 10
    operacionSet                   shift and go to state 11
    operacionarray                 shift and go to state 12
    operacionHash                  shift and go to state 13
    string                         shift and go to state 14
    tiposvariables                 shift and go to state 17
    hash                           shift and go to state 19
    array                          shift and go to state 20
    set                            shift and go to state 21

state 68

    (117) expresionCondicional -> boolean .
    (123) boolean -> boolean . operadorBinario boolean
    (119) operadorBinario -> . DOUBLEAMPERSAND
    (120) operadorBinario -> . DOUBLEPIPE

    LOCALVAR        reduce using rule 117 (expresionCondicional -> boolean .)
    FOR             reduce using rule 117 (expresionCondicional -> boolean .)
    IF              reduce using rule 117 (expresionCondicional -> boolean .)
    UNLESS          reduce using rule 117 (expresionCondicional -> boolean .)
    PUTS            reduce using rule 117 (expresionCondicional -> boolean .)
    PRINT           reduce using rule 117 (expresionCondicional -> boolean .)
    STRING          reduce using rule 117 (expresionCondicional -> boolean .)
    VAR             reduce using rule 117 (expresionCondicional -> boolean .)
    CONSTANT        reduce using rule 117 (expresionCondicional -> boolean .)
    LCURLYBRACKET   reduce using rule 117 (expresionCondicional -> boolean .)
    LBRACKET        reduce using rule 117 (expresionCondicional -> boolean .)
    SET             reduce using rule 117 (expresionCondicional -> boolean .)
    ELSE            reduce using rule 117 (expresionCondicional -> boolean .)
    DOUBLEAMPERSAND shift and go to state 141
    DOUBLEPIPE      shift and go to state 142

    operadorBinario                shift and go to state 140

state 69

    (118) expresionCondicional -> EXCLAMATION . LPARENTHESES boolean RPARENTHESES
    (122) boolean -> EXCLAMATION . LPARENTHESES condiciones RPARENTHESES

    LPARENTHESES    shift and go to state 143


state 70

    (121) boolean -> condiciones .

    DOUBLEAMPERSAND reduce using rule 121 (boolean -> condiciones .)
    DOUBLEPIPE      reduce using rule 121 (boolean -> condiciones .)
    LOCALVAR        reduce using rule 121 (boolean -> condiciones .)
    FOR             reduce using rule 121 (boolean -> condiciones .)
    IF              reduce using rule 121 (boolean -> condiciones .)
    UNLESS          reduce using rule 121 (boolean -> condiciones .)
    PUTS            reduce using rule 121 (boolean -> condiciones .)
    PRINT           reduce using rule 121 (boolean -> condiciones .)
    STRING          reduce using rule 121 (boolean -> condiciones .)
    VAR             reduce using rule 121 (boolean -> condiciones .)
    CONSTANT        reduce using rule 121 (boolean -> condiciones .)
    LCURLYBRACKET   reduce using rule 121 (boolean -> condiciones .)
    LBRACKET        reduce using rule 121 (boolean -> condiciones .)
    SET             reduce using rule 121 (boolean -> condiciones .)
    ELSE            reduce using rule 121 (boolean -> condiciones .)
    RPARENTHESES    reduce using rule 121 (boolean -> condiciones .)


state 71

    (124) condiciones -> tiposvariables . operadores tiposvariables
    (126) condiciones -> tiposvariables . operadores datos
    (109) operadores -> . DOUBLEEQUAL
    (110) operadores -> . TRIPLEEQUAL
    (111) operadores -> . GREATERTHAN
    (112) operadores -> . NOTEQUAL
    (113) operadores -> . LESSTHAN
    (114) operadores -> . GREQUAL
    (115) operadores -> . LEQUAL

    DOUBLEEQUAL     shift and go to state 132
    TRIPLEEQUAL     shift and go to state 133
    GREATERTHAN     shift and go to state 134
    NOTEQUAL        shift and go to state 135
    LESSTHAN        shift and go to state 136
    GREQUAL         shift and go to state 137
    LEQUAL          shift and go to state 138

    operadores                     shift and go to state 144

state 72

    (125) condiciones -> datos . operadores datos
    (127) condiciones -> datos . operadores tiposvariables
    (109) operadores -> . DOUBLEEQUAL
    (110) operadores -> . TRIPLEEQUAL
    (111) operadores -> . GREATERTHAN
    (112) operadores -> . NOTEQUAL
    (113) operadores -> . LESSTHAN
    (114) operadores -> . GREQUAL
    (115) operadores -> . LEQUAL

    DOUBLEEQUAL     shift and go to state 132
    TRIPLEEQUAL     shift and go to state 133
    GREATERTHAN     shift and go to state 134
    NOTEQUAL        shift and go to state 135
    LESSTHAN        shift and go to state 136
    GREQUAL         shift and go to state 137
    LEQUAL          shift and go to state 138

    operadores                     shift and go to state 145

state 73

    (44) tiposvariables -> LOCALVAR .

    DOUBLEEQUAL     reduce using rule 44 (tiposvariables -> LOCALVAR .)
    TRIPLEEQUAL     reduce using rule 44 (tiposvariables -> LOCALVAR .)
    GREATERTHAN     reduce using rule 44 (tiposvariables -> LOCALVAR .)
    NOTEQUAL        reduce using rule 44 (tiposvariables -> LOCALVAR .)
    LESSTHAN        reduce using rule 44 (tiposvariables -> LOCALVAR .)
    GREQUAL         reduce using rule 44 (tiposvariables -> LOCALVAR .)
    LEQUAL          reduce using rule 44 (tiposvariables -> LOCALVAR .)
    EQUAL           reduce using rule 44 (tiposvariables -> LOCALVAR .)
    DOUBLEAMPERSAND reduce using rule 44 (tiposvariables -> LOCALVAR .)
    DOUBLEPIPE      reduce using rule 44 (tiposvariables -> LOCALVAR .)
    LOCALVAR        reduce using rule 44 (tiposvariables -> LOCALVAR .)
    FOR             reduce using rule 44 (tiposvariables -> LOCALVAR .)
    IF              reduce using rule 44 (tiposvariables -> LOCALVAR .)
    UNLESS          reduce using rule 44 (tiposvariables -> LOCALVAR .)
    PUTS            reduce using rule 44 (tiposvariables -> LOCALVAR .)
    PRINT           reduce using rule 44 (tiposvariables -> LOCALVAR .)
    STRING          reduce using rule 44 (tiposvariables -> LOCALVAR .)
    VAR             reduce using rule 44 (tiposvariables -> LOCALVAR .)
    CONSTANT        reduce using rule 44 (tiposvariables -> LOCALVAR .)
    LCURLYBRACKET   reduce using rule 44 (tiposvariables -> LOCALVAR .)
    LBRACKET        reduce using rule 44 (tiposvariables -> LOCALVAR .)
    SET             reduce using rule 44 (tiposvariables -> LOCALVAR .)
    ELSE            reduce using rule 44 (tiposvariables -> LOCALVAR .)
    RPARENTHESES    reduce using rule 44 (tiposvariables -> LOCALVAR .)


state 74

    (46) datos -> INTEGER .

    DOUBLEEQUAL     reduce using rule 46 (datos -> INTEGER .)
    TRIPLEEQUAL     reduce using rule 46 (datos -> INTEGER .)
    GREATERTHAN     reduce using rule 46 (datos -> INTEGER .)
    NOTEQUAL        reduce using rule 46 (datos -> INTEGER .)
    LESSTHAN        reduce using rule 46 (datos -> INTEGER .)
    GREQUAL         reduce using rule 46 (datos -> INTEGER .)
    LEQUAL          reduce using rule 46 (datos -> INTEGER .)
    LOCALVAR        reduce using rule 46 (datos -> INTEGER .)
    FOR             reduce using rule 46 (datos -> INTEGER .)
    IF              reduce using rule 46 (datos -> INTEGER .)
    UNLESS          reduce using rule 46 (datos -> INTEGER .)
    PUTS            reduce using rule 46 (datos -> INTEGER .)
    PRINT           reduce using rule 46 (datos -> INTEGER .)
    STRING          reduce using rule 46 (datos -> INTEGER .)
    VAR             reduce using rule 46 (datos -> INTEGER .)
    CONSTANT        reduce using rule 46 (datos -> INTEGER .)
    LCURLYBRACKET   reduce using rule 46 (datos -> INTEGER .)
    LBRACKET        reduce using rule 46 (datos -> INTEGER .)
    SET             reduce using rule 46 (datos -> INTEGER .)
    $end            reduce using rule 46 (datos -> INTEGER .)
    ELSE            reduce using rule 46 (datos -> INTEGER .)
    END             reduce using rule 46 (datos -> INTEGER .)
    RETURN          reduce using rule 46 (datos -> INTEGER .)
    EQUAL           reduce using rule 46 (datos -> INTEGER .)
    RBRACKET        reduce using rule 46 (datos -> INTEGER .)
    COMMA           reduce using rule 46 (datos -> INTEGER .)
    DOUBLEAMPERSAND reduce using rule 46 (datos -> INTEGER .)
    DOUBLEPIPE      reduce using rule 46 (datos -> INTEGER .)
    RPARENTHESES    reduce using rule 46 (datos -> INTEGER .)
    RCURLYBRACKET   reduce using rule 46 (datos -> INTEGER .)


state 75

    (47) datos -> FLOAT .

    DOUBLEEQUAL     reduce using rule 47 (datos -> FLOAT .)
    TRIPLEEQUAL     reduce using rule 47 (datos -> FLOAT .)
    GREATERTHAN     reduce using rule 47 (datos -> FLOAT .)
    NOTEQUAL        reduce using rule 47 (datos -> FLOAT .)
    LESSTHAN        reduce using rule 47 (datos -> FLOAT .)
    GREQUAL         reduce using rule 47 (datos -> FLOAT .)
    LEQUAL          reduce using rule 47 (datos -> FLOAT .)
    LOCALVAR        reduce using rule 47 (datos -> FLOAT .)
    FOR             reduce using rule 47 (datos -> FLOAT .)
    IF              reduce using rule 47 (datos -> FLOAT .)
    UNLESS          reduce using rule 47 (datos -> FLOAT .)
    PUTS            reduce using rule 47 (datos -> FLOAT .)
    PRINT           reduce using rule 47 (datos -> FLOAT .)
    STRING          reduce using rule 47 (datos -> FLOAT .)
    VAR             reduce using rule 47 (datos -> FLOAT .)
    CONSTANT        reduce using rule 47 (datos -> FLOAT .)
    LCURLYBRACKET   reduce using rule 47 (datos -> FLOAT .)
    LBRACKET        reduce using rule 47 (datos -> FLOAT .)
    SET             reduce using rule 47 (datos -> FLOAT .)
    $end            reduce using rule 47 (datos -> FLOAT .)
    ELSE            reduce using rule 47 (datos -> FLOAT .)
    END             reduce using rule 47 (datos -> FLOAT .)
    RETURN          reduce using rule 47 (datos -> FLOAT .)
    EQUAL           reduce using rule 47 (datos -> FLOAT .)
    RBRACKET        reduce using rule 47 (datos -> FLOAT .)
    COMMA           reduce using rule 47 (datos -> FLOAT .)
    DOUBLEAMPERSAND reduce using rule 47 (datos -> FLOAT .)
    DOUBLEPIPE      reduce using rule 47 (datos -> FLOAT .)
    RPARENTHESES    reduce using rule 47 (datos -> FLOAT .)
    RCURLYBRACKET   reduce using rule 47 (datos -> FLOAT .)


state 76

    (64) impresion -> PUTS datos .

    LOCALVAR        reduce using rule 64 (impresion -> PUTS datos .)
    FOR             reduce using rule 64 (impresion -> PUTS datos .)
    IF              reduce using rule 64 (impresion -> PUTS datos .)
    UNLESS          reduce using rule 64 (impresion -> PUTS datos .)
    PUTS            reduce using rule 64 (impresion -> PUTS datos .)
    PRINT           reduce using rule 64 (impresion -> PUTS datos .)
    STRING          reduce using rule 64 (impresion -> PUTS datos .)
    VAR             reduce using rule 64 (impresion -> PUTS datos .)
    CONSTANT        reduce using rule 64 (impresion -> PUTS datos .)
    LCURLYBRACKET   reduce using rule 64 (impresion -> PUTS datos .)
    LBRACKET        reduce using rule 64 (impresion -> PUTS datos .)
    SET             reduce using rule 64 (impresion -> PUTS datos .)
    $end            reduce using rule 64 (impresion -> PUTS datos .)
    ELSE            reduce using rule 64 (impresion -> PUTS datos .)
    END             reduce using rule 64 (impresion -> PUTS datos .)
    RETURN          reduce using rule 64 (impresion -> PUTS datos .)


state 77

    (65) impresion -> PUTS LOCALVAR .

    LOCALVAR        reduce using rule 65 (impresion -> PUTS LOCALVAR .)
    FOR             reduce using rule 65 (impresion -> PUTS LOCALVAR .)
    IF              reduce using rule 65 (impresion -> PUTS LOCALVAR .)
    UNLESS          reduce using rule 65 (impresion -> PUTS LOCALVAR .)
    PUTS            reduce using rule 65 (impresion -> PUTS LOCALVAR .)
    PRINT           reduce using rule 65 (impresion -> PUTS LOCALVAR .)
    STRING          reduce using rule 65 (impresion -> PUTS LOCALVAR .)
    VAR             reduce using rule 65 (impresion -> PUTS LOCALVAR .)
    CONSTANT        reduce using rule 65 (impresion -> PUTS LOCALVAR .)
    LCURLYBRACKET   reduce using rule 65 (impresion -> PUTS LOCALVAR .)
    LBRACKET        reduce using rule 65 (impresion -> PUTS LOCALVAR .)
    SET             reduce using rule 65 (impresion -> PUTS LOCALVAR .)
    $end            reduce using rule 65 (impresion -> PUTS LOCALVAR .)
    ELSE            reduce using rule 65 (impresion -> PUTS LOCALVAR .)
    END             reduce using rule 65 (impresion -> PUTS LOCALVAR .)
    RETURN          reduce using rule 65 (impresion -> PUTS LOCALVAR .)


state 78

    (66) impresion -> PRINT datos .

    LOCALVAR        reduce using rule 66 (impresion -> PRINT datos .)
    FOR             reduce using rule 66 (impresion -> PRINT datos .)
    IF              reduce using rule 66 (impresion -> PRINT datos .)
    UNLESS          reduce using rule 66 (impresion -> PRINT datos .)
    PUTS            reduce using rule 66 (impresion -> PRINT datos .)
    PRINT           reduce using rule 66 (impresion -> PRINT datos .)
    STRING          reduce using rule 66 (impresion -> PRINT datos .)
    VAR             reduce using rule 66 (impresion -> PRINT datos .)
    CONSTANT        reduce using rule 66 (impresion -> PRINT datos .)
    LCURLYBRACKET   reduce using rule 66 (impresion -> PRINT datos .)
    LBRACKET        reduce using rule 66 (impresion -> PRINT datos .)
    SET             reduce using rule 66 (impresion -> PRINT datos .)
    $end            reduce using rule 66 (impresion -> PRINT datos .)
    ELSE            reduce using rule 66 (impresion -> PRINT datos .)
    END             reduce using rule 66 (impresion -> PRINT datos .)
    RETURN          reduce using rule 66 (impresion -> PRINT datos .)


state 79

    (67) impresion -> PRINT LOCALVAR .

    LOCALVAR        reduce using rule 67 (impresion -> PRINT LOCALVAR .)
    FOR             reduce using rule 67 (impresion -> PRINT LOCALVAR .)
    IF              reduce using rule 67 (impresion -> PRINT LOCALVAR .)
    UNLESS          reduce using rule 67 (impresion -> PRINT LOCALVAR .)
    PUTS            reduce using rule 67 (impresion -> PRINT LOCALVAR .)
    PRINT           reduce using rule 67 (impresion -> PRINT LOCALVAR .)
    STRING          reduce using rule 67 (impresion -> PRINT LOCALVAR .)
    VAR             reduce using rule 67 (impresion -> PRINT LOCALVAR .)
    CONSTANT        reduce using rule 67 (impresion -> PRINT LOCALVAR .)
    LCURLYBRACKET   reduce using rule 67 (impresion -> PRINT LOCALVAR .)
    LBRACKET        reduce using rule 67 (impresion -> PRINT LOCALVAR .)
    SET             reduce using rule 67 (impresion -> PRINT LOCALVAR .)
    $end            reduce using rule 67 (impresion -> PRINT LOCALVAR .)
    ELSE            reduce using rule 67 (impresion -> PRINT LOCALVAR .)
    END             reduce using rule 67 (impresion -> PRINT LOCALVAR .)
    RETURN          reduce using rule 67 (impresion -> PRINT LOCALVAR .)


state 80

    (83) array -> LBRACKET RBRACKET .

    LBRACKET        reduce using rule 83 (array -> LBRACKET RBRACKET .)
    DOT             reduce using rule 83 (array -> LBRACKET RBRACKET .)
    LOCALVAR        reduce using rule 83 (array -> LBRACKET RBRACKET .)
    FOR             reduce using rule 83 (array -> LBRACKET RBRACKET .)
    IF              reduce using rule 83 (array -> LBRACKET RBRACKET .)
    UNLESS          reduce using rule 83 (array -> LBRACKET RBRACKET .)
    PUTS            reduce using rule 83 (array -> LBRACKET RBRACKET .)
    PRINT           reduce using rule 83 (array -> LBRACKET RBRACKET .)
    STRING          reduce using rule 83 (array -> LBRACKET RBRACKET .)
    VAR             reduce using rule 83 (array -> LBRACKET RBRACKET .)
    CONSTANT        reduce using rule 83 (array -> LBRACKET RBRACKET .)
    LCURLYBRACKET   reduce using rule 83 (array -> LBRACKET RBRACKET .)
    SET             reduce using rule 83 (array -> LBRACKET RBRACKET .)
    $end            reduce using rule 83 (array -> LBRACKET RBRACKET .)
    ELSE            reduce using rule 83 (array -> LBRACKET RBRACKET .)
    END             reduce using rule 83 (array -> LBRACKET RBRACKET .)
    RETURN          reduce using rule 83 (array -> LBRACKET RBRACKET .)


state 81

    (84) array -> LBRACKET datosarray . RBRACKET
    (90) datosarray -> datosarray . COMMA datosvarios

    RBRACKET        shift and go to state 146
    COMMA           shift and go to state 147


state 82

    (89) datosarray -> datosvarios .

    RBRACKET        reduce using rule 89 (datosarray -> datosvarios .)
    COMMA           reduce using rule 89 (datosarray -> datosvarios .)


state 83

    (87) datosvarios -> VAR .

    RBRACKET        reduce using rule 87 (datosvarios -> VAR .)
    COMMA           reduce using rule 87 (datosvarios -> VAR .)
    RPARENTHESES    reduce using rule 87 (datosvarios -> VAR .)


state 84

    (88) datosvarios -> LOCALVAR .

    RBRACKET        reduce using rule 88 (datosvarios -> LOCALVAR .)
    COMMA           reduce using rule 88 (datosvarios -> LOCALVAR .)
    RPARENTHESES    reduce using rule 88 (datosvarios -> LOCALVAR .)


state 85

    (139) string -> STRING PLUS . STRING

    STRING          shift and go to state 148


state 86

    (140) string -> STRING MULTIPLY . INTEGER

    INTEGER         shift and go to state 149


state 87

    (141) string -> STRING DOT . stringOpt
    (142) stringOpt -> . UPCASE
    (143) stringOpt -> . DOWNCASE
    (144) stringOpt -> . LENGTH
    (145) stringOpt -> . CAPS
    (146) stringOpt -> . INSERT LPARENTHESES INTEGER COMMA STRING RPARENTHESES

    UPCASE          shift and go to state 151
    DOWNCASE        shift and go to state 152
    LENGTH          shift and go to state 153
    CAPS            shift and go to state 154
    INSERT          shift and go to state 155

    stringOpt                      shift and go to state 150

state 88

    (52) hash -> LCURLYBRACKET elementoHash . RCURLYBRACKET

    RCURLYBRACKET   shift and go to state 156


state 89

    (53) elementoHash -> datos . EQUAL GREATERTHAN datos maselementos

    EQUAL           shift and go to state 157


state 90

    (128) set -> SET LBRACKET . elementoSet RBRACKET
    (129) elementoSet -> .
    (130) elementoSet -> . datos
    (131) elementoSet -> . datos otroElemento
    (46) datos -> . INTEGER
    (47) datos -> . FLOAT
    (48) datos -> . STRING

    RBRACKET        reduce using rule 129 (elementoSet -> .)
    INTEGER         shift and go to state 74
    FLOAT           shift and go to state 75
    STRING          shift and go to state 66

    elementoSet                    shift and go to state 158
    datos                          shift and go to state 159

state 91

    (3) funcion -> DEF LOCALVAR LPARENTHESES . argumentos RPARENTHESES cuerpo END
    (4) funcion -> DEF LOCALVAR LPARENTHESES . argumentos RPARENTHESES cuerpo retornar END
    (5) argumentos -> . variosargumentos
    (6) argumentos -> . MULTIPLY LOCALVAR
    (7) argumentos -> . TWOSTARS LOCALVAR
    (8) argumentos -> . LOCALVAR EQUAL LCURLYBRACKET RCURLYBRACKET
    (9) argumentos -> . LOCALVAR TWOPOINTS datos
    (10) variosargumentos -> . LOCALVAR
    (11) variosargumentos -> . LOCALVAR EQUAL datos
    (12) variosargumentos -> . LOCALVAR masargumentos
    (13) variosargumentos -> . LOCALVAR EQUAL datos masargumentos

    MULTIPLY        shift and go to state 163
    TWOSTARS        shift and go to state 164
    LOCALVAR        shift and go to state 160

    argumentos                     shift and go to state 161
    variosargumentos               shift and go to state 162

state 92

    (42) datosAsignacion -> LOCALVAR .

    LOCALVAR        reduce using rule 42 (datosAsignacion -> LOCALVAR .)
    FOR             reduce using rule 42 (datosAsignacion -> LOCALVAR .)
    IF              reduce using rule 42 (datosAsignacion -> LOCALVAR .)
    UNLESS          reduce using rule 42 (datosAsignacion -> LOCALVAR .)
    PUTS            reduce using rule 42 (datosAsignacion -> LOCALVAR .)
    PRINT           reduce using rule 42 (datosAsignacion -> LOCALVAR .)
    STRING          reduce using rule 42 (datosAsignacion -> LOCALVAR .)
    VAR             reduce using rule 42 (datosAsignacion -> LOCALVAR .)
    CONSTANT        reduce using rule 42 (datosAsignacion -> LOCALVAR .)
    LCURLYBRACKET   reduce using rule 42 (datosAsignacion -> LOCALVAR .)
    LBRACKET        reduce using rule 42 (datosAsignacion -> LOCALVAR .)
    SET             reduce using rule 42 (datosAsignacion -> LOCALVAR .)
    $end            reduce using rule 42 (datosAsignacion -> LOCALVAR .)
    ELSE            reduce using rule 42 (datosAsignacion -> LOCALVAR .)
    END             reduce using rule 42 (datosAsignacion -> LOCALVAR .)
    RETURN          reduce using rule 42 (datosAsignacion -> LOCALVAR .)


state 93

    (35) asignacion -> LOCALVAR PLUSASSIGN datosAsignacion .

    LOCALVAR        reduce using rule 35 (asignacion -> LOCALVAR PLUSASSIGN datosAsignacion .)
    FOR             reduce using rule 35 (asignacion -> LOCALVAR PLUSASSIGN datosAsignacion .)
    IF              reduce using rule 35 (asignacion -> LOCALVAR PLUSASSIGN datosAsignacion .)
    UNLESS          reduce using rule 35 (asignacion -> LOCALVAR PLUSASSIGN datosAsignacion .)
    PUTS            reduce using rule 35 (asignacion -> LOCALVAR PLUSASSIGN datosAsignacion .)
    PRINT           reduce using rule 35 (asignacion -> LOCALVAR PLUSASSIGN datosAsignacion .)
    STRING          reduce using rule 35 (asignacion -> LOCALVAR PLUSASSIGN datosAsignacion .)
    VAR             reduce using rule 35 (asignacion -> LOCALVAR PLUSASSIGN datosAsignacion .)
    CONSTANT        reduce using rule 35 (asignacion -> LOCALVAR PLUSASSIGN datosAsignacion .)
    LCURLYBRACKET   reduce using rule 35 (asignacion -> LOCALVAR PLUSASSIGN datosAsignacion .)
    LBRACKET        reduce using rule 35 (asignacion -> LOCALVAR PLUSASSIGN datosAsignacion .)
    SET             reduce using rule 35 (asignacion -> LOCALVAR PLUSASSIGN datosAsignacion .)
    $end            reduce using rule 35 (asignacion -> LOCALVAR PLUSASSIGN datosAsignacion .)
    ELSE            reduce using rule 35 (asignacion -> LOCALVAR PLUSASSIGN datosAsignacion .)
    END             reduce using rule 35 (asignacion -> LOCALVAR PLUSASSIGN datosAsignacion .)
    RETURN          reduce using rule 35 (asignacion -> LOCALVAR PLUSASSIGN datosAsignacion .)


state 94

    (41) datosAsignacion -> number .

    LOCALVAR        reduce using rule 41 (datosAsignacion -> number .)
    FOR             reduce using rule 41 (datosAsignacion -> number .)
    IF              reduce using rule 41 (datosAsignacion -> number .)
    UNLESS          reduce using rule 41 (datosAsignacion -> number .)
    PUTS            reduce using rule 41 (datosAsignacion -> number .)
    PRINT           reduce using rule 41 (datosAsignacion -> number .)
    STRING          reduce using rule 41 (datosAsignacion -> number .)
    VAR             reduce using rule 41 (datosAsignacion -> number .)
    CONSTANT        reduce using rule 41 (datosAsignacion -> number .)
    LCURLYBRACKET   reduce using rule 41 (datosAsignacion -> number .)
    LBRACKET        reduce using rule 41 (datosAsignacion -> number .)
    SET             reduce using rule 41 (datosAsignacion -> number .)
    $end            reduce using rule 41 (datosAsignacion -> number .)
    ELSE            reduce using rule 41 (datosAsignacion -> number .)
    END             reduce using rule 41 (datosAsignacion -> number .)
    RETURN          reduce using rule 41 (datosAsignacion -> number .)


state 95

    (68) number -> INTEGER .

    LOCALVAR        reduce using rule 68 (number -> INTEGER .)
    FOR             reduce using rule 68 (number -> INTEGER .)
    IF              reduce using rule 68 (number -> INTEGER .)
    UNLESS          reduce using rule 68 (number -> INTEGER .)
    PUTS            reduce using rule 68 (number -> INTEGER .)
    PRINT           reduce using rule 68 (number -> INTEGER .)
    STRING          reduce using rule 68 (number -> INTEGER .)
    VAR             reduce using rule 68 (number -> INTEGER .)
    CONSTANT        reduce using rule 68 (number -> INTEGER .)
    LCURLYBRACKET   reduce using rule 68 (number -> INTEGER .)
    LBRACKET        reduce using rule 68 (number -> INTEGER .)
    SET             reduce using rule 68 (number -> INTEGER .)
    $end            reduce using rule 68 (number -> INTEGER .)
    ELSE            reduce using rule 68 (number -> INTEGER .)
    END             reduce using rule 68 (number -> INTEGER .)
    RETURN          reduce using rule 68 (number -> INTEGER .)
    PLUS            reduce using rule 68 (number -> INTEGER .)
    MINUS           reduce using rule 68 (number -> INTEGER .)
    MULTIPLY        reduce using rule 68 (number -> INTEGER .)
    DIVIDE          reduce using rule 68 (number -> INTEGER .)
    PERCENTAGE      reduce using rule 68 (number -> INTEGER .)
    RPARENTHESES    reduce using rule 68 (number -> INTEGER .)


state 96

    (69) number -> FLOAT .

    LOCALVAR        reduce using rule 69 (number -> FLOAT .)
    FOR             reduce using rule 69 (number -> FLOAT .)
    IF              reduce using rule 69 (number -> FLOAT .)
    UNLESS          reduce using rule 69 (number -> FLOAT .)
    PUTS            reduce using rule 69 (number -> FLOAT .)
    PRINT           reduce using rule 69 (number -> FLOAT .)
    STRING          reduce using rule 69 (number -> FLOAT .)
    VAR             reduce using rule 69 (number -> FLOAT .)
    CONSTANT        reduce using rule 69 (number -> FLOAT .)
    LCURLYBRACKET   reduce using rule 69 (number -> FLOAT .)
    LBRACKET        reduce using rule 69 (number -> FLOAT .)
    SET             reduce using rule 69 (number -> FLOAT .)
    $end            reduce using rule 69 (number -> FLOAT .)
    ELSE            reduce using rule 69 (number -> FLOAT .)
    END             reduce using rule 69 (number -> FLOAT .)
    RETURN          reduce using rule 69 (number -> FLOAT .)
    PLUS            reduce using rule 69 (number -> FLOAT .)
    MINUS           reduce using rule 69 (number -> FLOAT .)
    MULTIPLY        reduce using rule 69 (number -> FLOAT .)
    DIVIDE          reduce using rule 69 (number -> FLOAT .)
    PERCENTAGE      reduce using rule 69 (number -> FLOAT .)
    RPARENTHESES    reduce using rule 69 (number -> FLOAT .)


state 97

    (36) asignacion -> LOCALVAR MINASSIGN datosAsignacion .

    LOCALVAR        reduce using rule 36 (asignacion -> LOCALVAR MINASSIGN datosAsignacion .)
    FOR             reduce using rule 36 (asignacion -> LOCALVAR MINASSIGN datosAsignacion .)
    IF              reduce using rule 36 (asignacion -> LOCALVAR MINASSIGN datosAsignacion .)
    UNLESS          reduce using rule 36 (asignacion -> LOCALVAR MINASSIGN datosAsignacion .)
    PUTS            reduce using rule 36 (asignacion -> LOCALVAR MINASSIGN datosAsignacion .)
    PRINT           reduce using rule 36 (asignacion -> LOCALVAR MINASSIGN datosAsignacion .)
    STRING          reduce using rule 36 (asignacion -> LOCALVAR MINASSIGN datosAsignacion .)
    VAR             reduce using rule 36 (asignacion -> LOCALVAR MINASSIGN datosAsignacion .)
    CONSTANT        reduce using rule 36 (asignacion -> LOCALVAR MINASSIGN datosAsignacion .)
    LCURLYBRACKET   reduce using rule 36 (asignacion -> LOCALVAR MINASSIGN datosAsignacion .)
    LBRACKET        reduce using rule 36 (asignacion -> LOCALVAR MINASSIGN datosAsignacion .)
    SET             reduce using rule 36 (asignacion -> LOCALVAR MINASSIGN datosAsignacion .)
    $end            reduce using rule 36 (asignacion -> LOCALVAR MINASSIGN datosAsignacion .)
    ELSE            reduce using rule 36 (asignacion -> LOCALVAR MINASSIGN datosAsignacion .)
    END             reduce using rule 36 (asignacion -> LOCALVAR MINASSIGN datosAsignacion .)
    RETURN          reduce using rule 36 (asignacion -> LOCALVAR MINASSIGN datosAsignacion .)


state 98

    (37) asignacion -> LOCALVAR DIVASSIGN datosAsignacion .

    LOCALVAR        reduce using rule 37 (asignacion -> LOCALVAR DIVASSIGN datosAsignacion .)
    FOR             reduce using rule 37 (asignacion -> LOCALVAR DIVASSIGN datosAsignacion .)
    IF              reduce using rule 37 (asignacion -> LOCALVAR DIVASSIGN datosAsignacion .)
    UNLESS          reduce using rule 37 (asignacion -> LOCALVAR DIVASSIGN datosAsignacion .)
    PUTS            reduce using rule 37 (asignacion -> LOCALVAR DIVASSIGN datosAsignacion .)
    PRINT           reduce using rule 37 (asignacion -> LOCALVAR DIVASSIGN datosAsignacion .)
    STRING          reduce using rule 37 (asignacion -> LOCALVAR DIVASSIGN datosAsignacion .)
    VAR             reduce using rule 37 (asignacion -> LOCALVAR DIVASSIGN datosAsignacion .)
    CONSTANT        reduce using rule 37 (asignacion -> LOCALVAR DIVASSIGN datosAsignacion .)
    LCURLYBRACKET   reduce using rule 37 (asignacion -> LOCALVAR DIVASSIGN datosAsignacion .)
    LBRACKET        reduce using rule 37 (asignacion -> LOCALVAR DIVASSIGN datosAsignacion .)
    SET             reduce using rule 37 (asignacion -> LOCALVAR DIVASSIGN datosAsignacion .)
    $end            reduce using rule 37 (asignacion -> LOCALVAR DIVASSIGN datosAsignacion .)
    ELSE            reduce using rule 37 (asignacion -> LOCALVAR DIVASSIGN datosAsignacion .)
    END             reduce using rule 37 (asignacion -> LOCALVAR DIVASSIGN datosAsignacion .)
    RETURN          reduce using rule 37 (asignacion -> LOCALVAR DIVASSIGN datosAsignacion .)


state 99

    (38) asignacion -> LOCALVAR TIMESASSIGN datosAsignacion .

    LOCALVAR        reduce using rule 38 (asignacion -> LOCALVAR TIMESASSIGN datosAsignacion .)
    FOR             reduce using rule 38 (asignacion -> LOCALVAR TIMESASSIGN datosAsignacion .)
    IF              reduce using rule 38 (asignacion -> LOCALVAR TIMESASSIGN datosAsignacion .)
    UNLESS          reduce using rule 38 (asignacion -> LOCALVAR TIMESASSIGN datosAsignacion .)
    PUTS            reduce using rule 38 (asignacion -> LOCALVAR TIMESASSIGN datosAsignacion .)
    PRINT           reduce using rule 38 (asignacion -> LOCALVAR TIMESASSIGN datosAsignacion .)
    STRING          reduce using rule 38 (asignacion -> LOCALVAR TIMESASSIGN datosAsignacion .)
    VAR             reduce using rule 38 (asignacion -> LOCALVAR TIMESASSIGN datosAsignacion .)
    CONSTANT        reduce using rule 38 (asignacion -> LOCALVAR TIMESASSIGN datosAsignacion .)
    LCURLYBRACKET   reduce using rule 38 (asignacion -> LOCALVAR TIMESASSIGN datosAsignacion .)
    LBRACKET        reduce using rule 38 (asignacion -> LOCALVAR TIMESASSIGN datosAsignacion .)
    SET             reduce using rule 38 (asignacion -> LOCALVAR TIMESASSIGN datosAsignacion .)
    $end            reduce using rule 38 (asignacion -> LOCALVAR TIMESASSIGN datosAsignacion .)
    ELSE            reduce using rule 38 (asignacion -> LOCALVAR TIMESASSIGN datosAsignacion .)
    END             reduce using rule 38 (asignacion -> LOCALVAR TIMESASSIGN datosAsignacion .)
    RETURN          reduce using rule 38 (asignacion -> LOCALVAR TIMESASSIGN datosAsignacion .)


state 100

    (39) asignacion -> LOCALVAR MODASSIGN datosAsignacion .

    LOCALVAR        reduce using rule 39 (asignacion -> LOCALVAR MODASSIGN datosAsignacion .)
    FOR             reduce using rule 39 (asignacion -> LOCALVAR MODASSIGN datosAsignacion .)
    IF              reduce using rule 39 (asignacion -> LOCALVAR MODASSIGN datosAsignacion .)
    UNLESS          reduce using rule 39 (asignacion -> LOCALVAR MODASSIGN datosAsignacion .)
    PUTS            reduce using rule 39 (asignacion -> LOCALVAR MODASSIGN datosAsignacion .)
    PRINT           reduce using rule 39 (asignacion -> LOCALVAR MODASSIGN datosAsignacion .)
    STRING          reduce using rule 39 (asignacion -> LOCALVAR MODASSIGN datosAsignacion .)
    VAR             reduce using rule 39 (asignacion -> LOCALVAR MODASSIGN datosAsignacion .)
    CONSTANT        reduce using rule 39 (asignacion -> LOCALVAR MODASSIGN datosAsignacion .)
    LCURLYBRACKET   reduce using rule 39 (asignacion -> LOCALVAR MODASSIGN datosAsignacion .)
    LBRACKET        reduce using rule 39 (asignacion -> LOCALVAR MODASSIGN datosAsignacion .)
    SET             reduce using rule 39 (asignacion -> LOCALVAR MODASSIGN datosAsignacion .)
    $end            reduce using rule 39 (asignacion -> LOCALVAR MODASSIGN datosAsignacion .)
    ELSE            reduce using rule 39 (asignacion -> LOCALVAR MODASSIGN datosAsignacion .)
    END             reduce using rule 39 (asignacion -> LOCALVAR MODASSIGN datosAsignacion .)
    RETURN          reduce using rule 39 (asignacion -> LOCALVAR MODASSIGN datosAsignacion .)


state 101

    (40) asignacion -> LOCALVAR EXPASSIGN datosAsignacion .

    LOCALVAR        reduce using rule 40 (asignacion -> LOCALVAR EXPASSIGN datosAsignacion .)
    FOR             reduce using rule 40 (asignacion -> LOCALVAR EXPASSIGN datosAsignacion .)
    IF              reduce using rule 40 (asignacion -> LOCALVAR EXPASSIGN datosAsignacion .)
    UNLESS          reduce using rule 40 (asignacion -> LOCALVAR EXPASSIGN datosAsignacion .)
    PUTS            reduce using rule 40 (asignacion -> LOCALVAR EXPASSIGN datosAsignacion .)
    PRINT           reduce using rule 40 (asignacion -> LOCALVAR EXPASSIGN datosAsignacion .)
    STRING          reduce using rule 40 (asignacion -> LOCALVAR EXPASSIGN datosAsignacion .)
    VAR             reduce using rule 40 (asignacion -> LOCALVAR EXPASSIGN datosAsignacion .)
    CONSTANT        reduce using rule 40 (asignacion -> LOCALVAR EXPASSIGN datosAsignacion .)
    LCURLYBRACKET   reduce using rule 40 (asignacion -> LOCALVAR EXPASSIGN datosAsignacion .)
    LBRACKET        reduce using rule 40 (asignacion -> LOCALVAR EXPASSIGN datosAsignacion .)
    SET             reduce using rule 40 (asignacion -> LOCALVAR EXPASSIGN datosAsignacion .)
    $end            reduce using rule 40 (asignacion -> LOCALVAR EXPASSIGN datosAsignacion .)
    ELSE            reduce using rule 40 (asignacion -> LOCALVAR EXPASSIGN datosAsignacion .)
    END             reduce using rule 40 (asignacion -> LOCALVAR EXPASSIGN datosAsignacion .)
    RETURN          reduce using rule 40 (asignacion -> LOCALVAR EXPASSIGN datosAsignacion .)


state 102

    (30) declaracion -> tiposvariables EQUAL datos .

    LOCALVAR        reduce using rule 30 (declaracion -> tiposvariables EQUAL datos .)
    FOR             reduce using rule 30 (declaracion -> tiposvariables EQUAL datos .)
    IF              reduce using rule 30 (declaracion -> tiposvariables EQUAL datos .)
    UNLESS          reduce using rule 30 (declaracion -> tiposvariables EQUAL datos .)
    PUTS            reduce using rule 30 (declaracion -> tiposvariables EQUAL datos .)
    PRINT           reduce using rule 30 (declaracion -> tiposvariables EQUAL datos .)
    STRING          reduce using rule 30 (declaracion -> tiposvariables EQUAL datos .)
    VAR             reduce using rule 30 (declaracion -> tiposvariables EQUAL datos .)
    CONSTANT        reduce using rule 30 (declaracion -> tiposvariables EQUAL datos .)
    LCURLYBRACKET   reduce using rule 30 (declaracion -> tiposvariables EQUAL datos .)
    LBRACKET        reduce using rule 30 (declaracion -> tiposvariables EQUAL datos .)
    SET             reduce using rule 30 (declaracion -> tiposvariables EQUAL datos .)
    $end            reduce using rule 30 (declaracion -> tiposvariables EQUAL datos .)
    ELSE            reduce using rule 30 (declaracion -> tiposvariables EQUAL datos .)
    END             reduce using rule 30 (declaracion -> tiposvariables EQUAL datos .)
    RETURN          reduce using rule 30 (declaracion -> tiposvariables EQUAL datos .)


state 103

    (31) declaracion -> tiposvariables EQUAL estructurasDatos .

    LOCALVAR        reduce using rule 31 (declaracion -> tiposvariables EQUAL estructurasDatos .)
    FOR             reduce using rule 31 (declaracion -> tiposvariables EQUAL estructurasDatos .)
    IF              reduce using rule 31 (declaracion -> tiposvariables EQUAL estructurasDatos .)
    UNLESS          reduce using rule 31 (declaracion -> tiposvariables EQUAL estructurasDatos .)
    PUTS            reduce using rule 31 (declaracion -> tiposvariables EQUAL estructurasDatos .)
    PRINT           reduce using rule 31 (declaracion -> tiposvariables EQUAL estructurasDatos .)
    STRING          reduce using rule 31 (declaracion -> tiposvariables EQUAL estructurasDatos .)
    VAR             reduce using rule 31 (declaracion -> tiposvariables EQUAL estructurasDatos .)
    CONSTANT        reduce using rule 31 (declaracion -> tiposvariables EQUAL estructurasDatos .)
    LCURLYBRACKET   reduce using rule 31 (declaracion -> tiposvariables EQUAL estructurasDatos .)
    LBRACKET        reduce using rule 31 (declaracion -> tiposvariables EQUAL estructurasDatos .)
    SET             reduce using rule 31 (declaracion -> tiposvariables EQUAL estructurasDatos .)
    $end            reduce using rule 31 (declaracion -> tiposvariables EQUAL estructurasDatos .)
    ELSE            reduce using rule 31 (declaracion -> tiposvariables EQUAL estructurasDatos .)
    END             reduce using rule 31 (declaracion -> tiposvariables EQUAL estructurasDatos .)
    RETURN          reduce using rule 31 (declaracion -> tiposvariables EQUAL estructurasDatos .)


state 104

    (32) declaracion -> tiposvariables EQUAL expresion .

    LOCALVAR        reduce using rule 32 (declaracion -> tiposvariables EQUAL expresion .)
    FOR             reduce using rule 32 (declaracion -> tiposvariables EQUAL expresion .)
    IF              reduce using rule 32 (declaracion -> tiposvariables EQUAL expresion .)
    UNLESS          reduce using rule 32 (declaracion -> tiposvariables EQUAL expresion .)
    PUTS            reduce using rule 32 (declaracion -> tiposvariables EQUAL expresion .)
    PRINT           reduce using rule 32 (declaracion -> tiposvariables EQUAL expresion .)
    STRING          reduce using rule 32 (declaracion -> tiposvariables EQUAL expresion .)
    VAR             reduce using rule 32 (declaracion -> tiposvariables EQUAL expresion .)
    CONSTANT        reduce using rule 32 (declaracion -> tiposvariables EQUAL expresion .)
    LCURLYBRACKET   reduce using rule 32 (declaracion -> tiposvariables EQUAL expresion .)
    LBRACKET        reduce using rule 32 (declaracion -> tiposvariables EQUAL expresion .)
    SET             reduce using rule 32 (declaracion -> tiposvariables EQUAL expresion .)
    $end            reduce using rule 32 (declaracion -> tiposvariables EQUAL expresion .)
    ELSE            reduce using rule 32 (declaracion -> tiposvariables EQUAL expresion .)
    END             reduce using rule 32 (declaracion -> tiposvariables EQUAL expresion .)
    RETURN          reduce using rule 32 (declaracion -> tiposvariables EQUAL expresion .)


state 105

    (33) declaracion -> tiposvariables EQUAL declaracion .

    LOCALVAR        reduce using rule 33 (declaracion -> tiposvariables EQUAL declaracion .)
    FOR             reduce using rule 33 (declaracion -> tiposvariables EQUAL declaracion .)
    IF              reduce using rule 33 (declaracion -> tiposvariables EQUAL declaracion .)
    UNLESS          reduce using rule 33 (declaracion -> tiposvariables EQUAL declaracion .)
    PUTS            reduce using rule 33 (declaracion -> tiposvariables EQUAL declaracion .)
    PRINT           reduce using rule 33 (declaracion -> tiposvariables EQUAL declaracion .)
    STRING          reduce using rule 33 (declaracion -> tiposvariables EQUAL declaracion .)
    VAR             reduce using rule 33 (declaracion -> tiposvariables EQUAL declaracion .)
    CONSTANT        reduce using rule 33 (declaracion -> tiposvariables EQUAL declaracion .)
    LCURLYBRACKET   reduce using rule 33 (declaracion -> tiposvariables EQUAL declaracion .)
    LBRACKET        reduce using rule 33 (declaracion -> tiposvariables EQUAL declaracion .)
    SET             reduce using rule 33 (declaracion -> tiposvariables EQUAL declaracion .)
    $end            reduce using rule 33 (declaracion -> tiposvariables EQUAL declaracion .)
    ELSE            reduce using rule 33 (declaracion -> tiposvariables EQUAL declaracion .)
    END             reduce using rule 33 (declaracion -> tiposvariables EQUAL declaracion .)
    RETURN          reduce using rule 33 (declaracion -> tiposvariables EQUAL declaracion .)


state 106

    (34) declaracion -> tiposvariables EQUAL casting .

    LOCALVAR        reduce using rule 34 (declaracion -> tiposvariables EQUAL casting .)
    FOR             reduce using rule 34 (declaracion -> tiposvariables EQUAL casting .)
    IF              reduce using rule 34 (declaracion -> tiposvariables EQUAL casting .)
    UNLESS          reduce using rule 34 (declaracion -> tiposvariables EQUAL casting .)
    PUTS            reduce using rule 34 (declaracion -> tiposvariables EQUAL casting .)
    PRINT           reduce using rule 34 (declaracion -> tiposvariables EQUAL casting .)
    STRING          reduce using rule 34 (declaracion -> tiposvariables EQUAL casting .)
    VAR             reduce using rule 34 (declaracion -> tiposvariables EQUAL casting .)
    CONSTANT        reduce using rule 34 (declaracion -> tiposvariables EQUAL casting .)
    LCURLYBRACKET   reduce using rule 34 (declaracion -> tiposvariables EQUAL casting .)
    LBRACKET        reduce using rule 34 (declaracion -> tiposvariables EQUAL casting .)
    SET             reduce using rule 34 (declaracion -> tiposvariables EQUAL casting .)
    $end            reduce using rule 34 (declaracion -> tiposvariables EQUAL casting .)
    ELSE            reduce using rule 34 (declaracion -> tiposvariables EQUAL casting .)
    END             reduce using rule 34 (declaracion -> tiposvariables EQUAL casting .)
    RETURN          reduce using rule 34 (declaracion -> tiposvariables EQUAL casting .)


state 107

    (48) datos -> STRING .
    (147) casting -> STRING . DOT TO_I
    (148) casting -> STRING . DOT TO_F

    LOCALVAR        reduce using rule 48 (datos -> STRING .)
    FOR             reduce using rule 48 (datos -> STRING .)
    IF              reduce using rule 48 (datos -> STRING .)
    UNLESS          reduce using rule 48 (datos -> STRING .)
    PUTS            reduce using rule 48 (datos -> STRING .)
    PRINT           reduce using rule 48 (datos -> STRING .)
    STRING          reduce using rule 48 (datos -> STRING .)
    VAR             reduce using rule 48 (datos -> STRING .)
    CONSTANT        reduce using rule 48 (datos -> STRING .)
    LCURLYBRACKET   reduce using rule 48 (datos -> STRING .)
    LBRACKET        reduce using rule 48 (datos -> STRING .)
    SET             reduce using rule 48 (datos -> STRING .)
    $end            reduce using rule 48 (datos -> STRING .)
    ELSE            reduce using rule 48 (datos -> STRING .)
    END             reduce using rule 48 (datos -> STRING .)
    RETURN          reduce using rule 48 (datos -> STRING .)
    DOT             shift and go to state 165


state 108

    (49) estructurasDatos -> hash .

    LOCALVAR        reduce using rule 49 (estructurasDatos -> hash .)
    FOR             reduce using rule 49 (estructurasDatos -> hash .)
    IF              reduce using rule 49 (estructurasDatos -> hash .)
    UNLESS          reduce using rule 49 (estructurasDatos -> hash .)
    PUTS            reduce using rule 49 (estructurasDatos -> hash .)
    PRINT           reduce using rule 49 (estructurasDatos -> hash .)
    STRING          reduce using rule 49 (estructurasDatos -> hash .)
    VAR             reduce using rule 49 (estructurasDatos -> hash .)
    CONSTANT        reduce using rule 49 (estructurasDatos -> hash .)
    LCURLYBRACKET   reduce using rule 49 (estructurasDatos -> hash .)
    LBRACKET        reduce using rule 49 (estructurasDatos -> hash .)
    SET             reduce using rule 49 (estructurasDatos -> hash .)
    $end            reduce using rule 49 (estructurasDatos -> hash .)
    ELSE            reduce using rule 49 (estructurasDatos -> hash .)
    END             reduce using rule 49 (estructurasDatos -> hash .)
    RETURN          reduce using rule 49 (estructurasDatos -> hash .)


state 109

    (50) estructurasDatos -> array .

    LOCALVAR        reduce using rule 50 (estructurasDatos -> array .)
    FOR             reduce using rule 50 (estructurasDatos -> array .)
    IF              reduce using rule 50 (estructurasDatos -> array .)
    UNLESS          reduce using rule 50 (estructurasDatos -> array .)
    PUTS            reduce using rule 50 (estructurasDatos -> array .)
    PRINT           reduce using rule 50 (estructurasDatos -> array .)
    STRING          reduce using rule 50 (estructurasDatos -> array .)
    VAR             reduce using rule 50 (estructurasDatos -> array .)
    CONSTANT        reduce using rule 50 (estructurasDatos -> array .)
    LCURLYBRACKET   reduce using rule 50 (estructurasDatos -> array .)
    LBRACKET        reduce using rule 50 (estructurasDatos -> array .)
    SET             reduce using rule 50 (estructurasDatos -> array .)
    $end            reduce using rule 50 (estructurasDatos -> array .)
    ELSE            reduce using rule 50 (estructurasDatos -> array .)
    END             reduce using rule 50 (estructurasDatos -> array .)
    RETURN          reduce using rule 50 (estructurasDatos -> array .)


state 110

    (51) estructurasDatos -> set .

    LOCALVAR        reduce using rule 51 (estructurasDatos -> set .)
    FOR             reduce using rule 51 (estructurasDatos -> set .)
    IF              reduce using rule 51 (estructurasDatos -> set .)
    UNLESS          reduce using rule 51 (estructurasDatos -> set .)
    PUTS            reduce using rule 51 (estructurasDatos -> set .)
    PRINT           reduce using rule 51 (estructurasDatos -> set .)
    STRING          reduce using rule 51 (estructurasDatos -> set .)
    VAR             reduce using rule 51 (estructurasDatos -> set .)
    CONSTANT        reduce using rule 51 (estructurasDatos -> set .)
    LCURLYBRACKET   reduce using rule 51 (estructurasDatos -> set .)
    LBRACKET        reduce using rule 51 (estructurasDatos -> set .)
    SET             reduce using rule 51 (estructurasDatos -> set .)
    $end            reduce using rule 51 (estructurasDatos -> set .)
    ELSE            reduce using rule 51 (estructurasDatos -> set .)
    END             reduce using rule 51 (estructurasDatos -> set .)
    RETURN          reduce using rule 51 (estructurasDatos -> set .)


state 111

    (70) expresion -> operacion .
    (74) operacion -> operacion . masoperaciones
    (75) masoperaciones -> . operador expresion masoperaciones
    (76) masoperaciones -> . operador number
    (77) masoperaciones -> . operador expresion
    (78) operador -> . PLUS
    (79) operador -> . MINUS
    (80) operador -> . MULTIPLY
    (81) operador -> . DIVIDE
    (82) operador -> . PERCENTAGE

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for PERCENTAGE resolved as shift
    LOCALVAR        reduce using rule 70 (expresion -> operacion .)
    FOR             reduce using rule 70 (expresion -> operacion .)
    IF              reduce using rule 70 (expresion -> operacion .)
    UNLESS          reduce using rule 70 (expresion -> operacion .)
    PUTS            reduce using rule 70 (expresion -> operacion .)
    PRINT           reduce using rule 70 (expresion -> operacion .)
    STRING          reduce using rule 70 (expresion -> operacion .)
    VAR             reduce using rule 70 (expresion -> operacion .)
    CONSTANT        reduce using rule 70 (expresion -> operacion .)
    LCURLYBRACKET   reduce using rule 70 (expresion -> operacion .)
    LBRACKET        reduce using rule 70 (expresion -> operacion .)
    SET             reduce using rule 70 (expresion -> operacion .)
    $end            reduce using rule 70 (expresion -> operacion .)
    ELSE            reduce using rule 70 (expresion -> operacion .)
    END             reduce using rule 70 (expresion -> operacion .)
    RETURN          reduce using rule 70 (expresion -> operacion .)
    RPARENTHESES    reduce using rule 70 (expresion -> operacion .)
    PLUS            shift and go to state 168
    MINUS           shift and go to state 169
    MULTIPLY        shift and go to state 170
    DIVIDE          shift and go to state 171
    PERCENTAGE      shift and go to state 172

  ! PLUS            [ reduce using rule 70 (expresion -> operacion .) ]
  ! MINUS           [ reduce using rule 70 (expresion -> operacion .) ]
  ! MULTIPLY        [ reduce using rule 70 (expresion -> operacion .) ]
  ! DIVIDE          [ reduce using rule 70 (expresion -> operacion .) ]
  ! PERCENTAGE      [ reduce using rule 70 (expresion -> operacion .) ]

    masoperaciones                 shift and go to state 166
    operador                       shift and go to state 167

state 112

    (71) expresion -> LPARENTHESES . operacion RPARENTHESES
    (72) expresion -> LPARENTHESES . operacion RPARENTHESES masoperaciones
    (73) operacion -> . number operador number
    (74) operacion -> . operacion masoperaciones
    (68) number -> . INTEGER
    (69) number -> . FLOAT

    INTEGER         shift and go to state 95
    FLOAT           shift and go to state 96

    operacion                      shift and go to state 173
    number                         shift and go to state 174

state 113

    (149) casting -> number . DOT TO_S
    (73) operacion -> number . operador number
    (78) operador -> . PLUS
    (79) operador -> . MINUS
    (80) operador -> . MULTIPLY
    (81) operador -> . DIVIDE
    (82) operador -> . PERCENTAGE

    DOT             shift and go to state 175
    PLUS            shift and go to state 168
    MINUS           shift and go to state 169
    MULTIPLY        shift and go to state 170
    DIVIDE          shift and go to state 171
    PERCENTAGE      shift and go to state 172

    operador                       shift and go to state 176

state 114

    (29) loop -> FOR LOCALVAR IN . rango cuerpo END
    (62) rango -> . INTEGER RANGEINCLUSIVE INTEGER
    (63) rango -> . INTEGER RANGEXCLUSIVE INTEGER

    INTEGER         shift and go to state 178

    rango                          shift and go to state 177

state 115

    (57) operacionHash -> hash LBRACKET datos . RBRACKET
    (58) operacionHash -> hash LBRACKET datos . RBRACKET EQUAL datos

    RBRACKET        shift and go to state 179


state 116

    (59) operacionHash -> hash DOT INCLUDE . QUESTIONMARK LPARENTHESES datos RPARENTHESES

    QUESTIONMARK    shift and go to state 180


state 117

    (60) operacionHash -> hash DOT DELETE . LPARENTHESES datos RPARENTHESES

    LPARENTHESES    shift and go to state 181


state 118

    (61) operacionHash -> hash DOT KEYS .

    LOCALVAR        reduce using rule 61 (operacionHash -> hash DOT KEYS .)
    FOR             reduce using rule 61 (operacionHash -> hash DOT KEYS .)
    IF              reduce using rule 61 (operacionHash -> hash DOT KEYS .)
    UNLESS          reduce using rule 61 (operacionHash -> hash DOT KEYS .)
    PUTS            reduce using rule 61 (operacionHash -> hash DOT KEYS .)
    PRINT           reduce using rule 61 (operacionHash -> hash DOT KEYS .)
    STRING          reduce using rule 61 (operacionHash -> hash DOT KEYS .)
    VAR             reduce using rule 61 (operacionHash -> hash DOT KEYS .)
    CONSTANT        reduce using rule 61 (operacionHash -> hash DOT KEYS .)
    LCURLYBRACKET   reduce using rule 61 (operacionHash -> hash DOT KEYS .)
    LBRACKET        reduce using rule 61 (operacionHash -> hash DOT KEYS .)
    SET             reduce using rule 61 (operacionHash -> hash DOT KEYS .)
    $end            reduce using rule 61 (operacionHash -> hash DOT KEYS .)
    ELSE            reduce using rule 61 (operacionHash -> hash DOT KEYS .)
    END             reduce using rule 61 (operacionHash -> hash DOT KEYS .)
    RETURN          reduce using rule 61 (operacionHash -> hash DOT KEYS .)


state 119

    (91) operacionarray -> array LBRACKET INTEGER . RBRACKET

    RBRACKET        shift and go to state 182


state 120

    (92) operacionarray -> array DOT TAKE . LPARENTHESES INTEGER RPARENTHESES

    LPARENTHESES    shift and go to state 183


state 121

    (93) operacionarray -> array DOT DROP . LPARENTHESES INTEGER RPARENTHESES

    LPARENTHESES    shift and go to state 184


state 122

    (94) operacionarray -> array DOT push . maspush
    (97) maspush -> .
    (98) maspush -> . DOT push maspush

    LOCALVAR        reduce using rule 97 (maspush -> .)
    FOR             reduce using rule 97 (maspush -> .)
    IF              reduce using rule 97 (maspush -> .)
    UNLESS          reduce using rule 97 (maspush -> .)
    PUTS            reduce using rule 97 (maspush -> .)
    PRINT           reduce using rule 97 (maspush -> .)
    STRING          reduce using rule 97 (maspush -> .)
    VAR             reduce using rule 97 (maspush -> .)
    CONSTANT        reduce using rule 97 (maspush -> .)
    LCURLYBRACKET   reduce using rule 97 (maspush -> .)
    LBRACKET        reduce using rule 97 (maspush -> .)
    SET             reduce using rule 97 (maspush -> .)
    $end            reduce using rule 97 (maspush -> .)
    ELSE            reduce using rule 97 (maspush -> .)
    END             reduce using rule 97 (maspush -> .)
    RETURN          reduce using rule 97 (maspush -> .)
    DOT             shift and go to state 185

    maspush                        shift and go to state 186

state 123

    (99) operacionarray -> array DOT POP .
    (100) operacionarray -> array DOT POP . LPARENTHESES INTEGER RPARENTHESES

    LOCALVAR        reduce using rule 99 (operacionarray -> array DOT POP .)
    FOR             reduce using rule 99 (operacionarray -> array DOT POP .)
    IF              reduce using rule 99 (operacionarray -> array DOT POP .)
    UNLESS          reduce using rule 99 (operacionarray -> array DOT POP .)
    PUTS            reduce using rule 99 (operacionarray -> array DOT POP .)
    PRINT           reduce using rule 99 (operacionarray -> array DOT POP .)
    STRING          reduce using rule 99 (operacionarray -> array DOT POP .)
    VAR             reduce using rule 99 (operacionarray -> array DOT POP .)
    CONSTANT        reduce using rule 99 (operacionarray -> array DOT POP .)
    LCURLYBRACKET   reduce using rule 99 (operacionarray -> array DOT POP .)
    LBRACKET        reduce using rule 99 (operacionarray -> array DOT POP .)
    SET             reduce using rule 99 (operacionarray -> array DOT POP .)
    $end            reduce using rule 99 (operacionarray -> array DOT POP .)
    ELSE            reduce using rule 99 (operacionarray -> array DOT POP .)
    END             reduce using rule 99 (operacionarray -> array DOT POP .)
    RETURN          reduce using rule 99 (operacionarray -> array DOT POP .)
    LPARENTHESES    shift and go to state 187


state 124

    (101) operacionarray -> array DOT DELETE . LPARENTHESES INTEGER RPARENTHESES

    LPARENTHESES    shift and go to state 188


state 125

    (102) operacionarray -> array DOT LENGTH . LPARENTHESES RPARENTHESES

    LPARENTHESES    shift and go to state 189


state 126

    (103) operacionarray -> array DOT EMPTY . QUESTIONMARK

    QUESTIONMARK    shift and go to state 190


state 127

    (95) push -> PUSH . LPARENTHESES datosvarios RPARENTHESES

    LPARENTHESES    shift and go to state 191


state 128

    (134) operacionSet -> set DOT ADD . LPARENTHESES datos RPARENTHESES
    (135) operacionSet -> set DOT ADD . LPARENTHESES tiposvariables RPARENTHESES

    LPARENTHESES    shift and go to state 192


state 129

    (136) operacionSet -> set DOT CLEAR .

    LOCALVAR        reduce using rule 136 (operacionSet -> set DOT CLEAR .)
    FOR             reduce using rule 136 (operacionSet -> set DOT CLEAR .)
    IF              reduce using rule 136 (operacionSet -> set DOT CLEAR .)
    UNLESS          reduce using rule 136 (operacionSet -> set DOT CLEAR .)
    PUTS            reduce using rule 136 (operacionSet -> set DOT CLEAR .)
    PRINT           reduce using rule 136 (operacionSet -> set DOT CLEAR .)
    STRING          reduce using rule 136 (operacionSet -> set DOT CLEAR .)
    VAR             reduce using rule 136 (operacionSet -> set DOT CLEAR .)
    CONSTANT        reduce using rule 136 (operacionSet -> set DOT CLEAR .)
    LCURLYBRACKET   reduce using rule 136 (operacionSet -> set DOT CLEAR .)
    LBRACKET        reduce using rule 136 (operacionSet -> set DOT CLEAR .)
    SET             reduce using rule 136 (operacionSet -> set DOT CLEAR .)
    $end            reduce using rule 136 (operacionSet -> set DOT CLEAR .)
    ELSE            reduce using rule 136 (operacionSet -> set DOT CLEAR .)
    END             reduce using rule 136 (operacionSet -> set DOT CLEAR .)
    RETURN          reduce using rule 136 (operacionSet -> set DOT CLEAR .)


state 130

    (137) operacionSet -> set DOT DELETE . LPARENTHESES datos RPARENTHESES
    (138) operacionSet -> set DOT DELETE . LPARENTHESES tiposvariables RPARENTHESES

    LPARENTHESES    shift and go to state 193


state 131

    (106) if -> IF datoscompletos operadores . datoscompletos cuerpo END
    (107) if -> IF datoscompletos operadores . datoscompletos cuerpo else
    (104) datoscompletos -> . datosvarios
    (105) datoscompletos -> . tiposvariables
    (85) datosvarios -> . datos
    (86) datosvarios -> . number
    (87) datosvarios -> . VAR
    (88) datosvarios -> . LOCALVAR
    (43) tiposvariables -> . VAR
    (44) tiposvariables -> . LOCALVAR
    (45) tiposvariables -> . CONSTANT
    (46) datos -> . INTEGER
    (47) datos -> . FLOAT
    (48) datos -> . STRING
    (68) number -> . INTEGER
    (69) number -> . FLOAT

    VAR             shift and go to state 62
    LOCALVAR        shift and go to state 63
    CONSTANT        shift and go to state 29
    INTEGER         shift and go to state 64
    FLOAT           shift and go to state 65
    STRING          shift and go to state 66

    datoscompletos                 shift and go to state 194
    datosvarios                    shift and go to state 58
    tiposvariables                 shift and go to state 59
    datos                          shift and go to state 60
    number                         shift and go to state 61

state 132

    (109) operadores -> DOUBLEEQUAL .

    VAR             reduce using rule 109 (operadores -> DOUBLEEQUAL .)
    LOCALVAR        reduce using rule 109 (operadores -> DOUBLEEQUAL .)
    CONSTANT        reduce using rule 109 (operadores -> DOUBLEEQUAL .)
    INTEGER         reduce using rule 109 (operadores -> DOUBLEEQUAL .)
    FLOAT           reduce using rule 109 (operadores -> DOUBLEEQUAL .)
    STRING          reduce using rule 109 (operadores -> DOUBLEEQUAL .)


state 133

    (110) operadores -> TRIPLEEQUAL .

    VAR             reduce using rule 110 (operadores -> TRIPLEEQUAL .)
    LOCALVAR        reduce using rule 110 (operadores -> TRIPLEEQUAL .)
    CONSTANT        reduce using rule 110 (operadores -> TRIPLEEQUAL .)
    INTEGER         reduce using rule 110 (operadores -> TRIPLEEQUAL .)
    FLOAT           reduce using rule 110 (operadores -> TRIPLEEQUAL .)
    STRING          reduce using rule 110 (operadores -> TRIPLEEQUAL .)


state 134

    (111) operadores -> GREATERTHAN .

    VAR             reduce using rule 111 (operadores -> GREATERTHAN .)
    LOCALVAR        reduce using rule 111 (operadores -> GREATERTHAN .)
    CONSTANT        reduce using rule 111 (operadores -> GREATERTHAN .)
    INTEGER         reduce using rule 111 (operadores -> GREATERTHAN .)
    FLOAT           reduce using rule 111 (operadores -> GREATERTHAN .)
    STRING          reduce using rule 111 (operadores -> GREATERTHAN .)


state 135

    (112) operadores -> NOTEQUAL .

    VAR             reduce using rule 112 (operadores -> NOTEQUAL .)
    LOCALVAR        reduce using rule 112 (operadores -> NOTEQUAL .)
    CONSTANT        reduce using rule 112 (operadores -> NOTEQUAL .)
    INTEGER         reduce using rule 112 (operadores -> NOTEQUAL .)
    FLOAT           reduce using rule 112 (operadores -> NOTEQUAL .)
    STRING          reduce using rule 112 (operadores -> NOTEQUAL .)


state 136

    (113) operadores -> LESSTHAN .

    VAR             reduce using rule 113 (operadores -> LESSTHAN .)
    LOCALVAR        reduce using rule 113 (operadores -> LESSTHAN .)
    CONSTANT        reduce using rule 113 (operadores -> LESSTHAN .)
    INTEGER         reduce using rule 113 (operadores -> LESSTHAN .)
    FLOAT           reduce using rule 113 (operadores -> LESSTHAN .)
    STRING          reduce using rule 113 (operadores -> LESSTHAN .)


state 137

    (114) operadores -> GREQUAL .

    VAR             reduce using rule 114 (operadores -> GREQUAL .)
    LOCALVAR        reduce using rule 114 (operadores -> GREQUAL .)
    CONSTANT        reduce using rule 114 (operadores -> GREQUAL .)
    INTEGER         reduce using rule 114 (operadores -> GREQUAL .)
    FLOAT           reduce using rule 114 (operadores -> GREQUAL .)
    STRING          reduce using rule 114 (operadores -> GREQUAL .)


state 138

    (115) operadores -> LEQUAL .

    VAR             reduce using rule 115 (operadores -> LEQUAL .)
    LOCALVAR        reduce using rule 115 (operadores -> LEQUAL .)
    CONSTANT        reduce using rule 115 (operadores -> LEQUAL .)
    INTEGER         reduce using rule 115 (operadores -> LEQUAL .)
    FLOAT           reduce using rule 115 (operadores -> LEQUAL .)
    STRING          reduce using rule 115 (operadores -> LEQUAL .)


state 139

    (116) unless -> UNLESS expresionCondicional cuerpo . ELSE cuerpo END

    ELSE            shift and go to state 195


state 140

    (123) boolean -> boolean operadorBinario . boolean
    (121) boolean -> . condiciones
    (122) boolean -> . EXCLAMATION LPARENTHESES condiciones RPARENTHESES
    (123) boolean -> . boolean operadorBinario boolean
    (124) condiciones -> . tiposvariables operadores tiposvariables
    (125) condiciones -> . datos operadores datos
    (126) condiciones -> . tiposvariables operadores datos
    (127) condiciones -> . datos operadores tiposvariables
    (43) tiposvariables -> . VAR
    (44) tiposvariables -> . LOCALVAR
    (45) tiposvariables -> . CONSTANT
    (46) datos -> . INTEGER
    (47) datos -> . FLOAT
    (48) datos -> . STRING

    EXCLAMATION     shift and go to state 197
    VAR             shift and go to state 28
    LOCALVAR        shift and go to state 73
    CONSTANT        shift and go to state 29
    INTEGER         shift and go to state 74
    FLOAT           shift and go to state 75
    STRING          shift and go to state 66

    boolean                        shift and go to state 196
    condiciones                    shift and go to state 70
    tiposvariables                 shift and go to state 71
    datos                          shift and go to state 72

state 141

    (119) operadorBinario -> DOUBLEAMPERSAND .

    EXCLAMATION     reduce using rule 119 (operadorBinario -> DOUBLEAMPERSAND .)
    VAR             reduce using rule 119 (operadorBinario -> DOUBLEAMPERSAND .)
    LOCALVAR        reduce using rule 119 (operadorBinario -> DOUBLEAMPERSAND .)
    CONSTANT        reduce using rule 119 (operadorBinario -> DOUBLEAMPERSAND .)
    INTEGER         reduce using rule 119 (operadorBinario -> DOUBLEAMPERSAND .)
    FLOAT           reduce using rule 119 (operadorBinario -> DOUBLEAMPERSAND .)
    STRING          reduce using rule 119 (operadorBinario -> DOUBLEAMPERSAND .)


state 142

    (120) operadorBinario -> DOUBLEPIPE .

    EXCLAMATION     reduce using rule 120 (operadorBinario -> DOUBLEPIPE .)
    VAR             reduce using rule 120 (operadorBinario -> DOUBLEPIPE .)
    LOCALVAR        reduce using rule 120 (operadorBinario -> DOUBLEPIPE .)
    CONSTANT        reduce using rule 120 (operadorBinario -> DOUBLEPIPE .)
    INTEGER         reduce using rule 120 (operadorBinario -> DOUBLEPIPE .)
    FLOAT           reduce using rule 120 (operadorBinario -> DOUBLEPIPE .)
    STRING          reduce using rule 120 (operadorBinario -> DOUBLEPIPE .)


state 143

    (118) expresionCondicional -> EXCLAMATION LPARENTHESES . boolean RPARENTHESES
    (122) boolean -> EXCLAMATION LPARENTHESES . condiciones RPARENTHESES
    (121) boolean -> . condiciones
    (122) boolean -> . EXCLAMATION LPARENTHESES condiciones RPARENTHESES
    (123) boolean -> . boolean operadorBinario boolean
    (124) condiciones -> . tiposvariables operadores tiposvariables
    (125) condiciones -> . datos operadores datos
    (126) condiciones -> . tiposvariables operadores datos
    (127) condiciones -> . datos operadores tiposvariables
    (43) tiposvariables -> . VAR
    (44) tiposvariables -> . LOCALVAR
    (45) tiposvariables -> . CONSTANT
    (46) datos -> . INTEGER
    (47) datos -> . FLOAT
    (48) datos -> . STRING

    EXCLAMATION     shift and go to state 197
    VAR             shift and go to state 28
    LOCALVAR        shift and go to state 73
    CONSTANT        shift and go to state 29
    INTEGER         shift and go to state 74
    FLOAT           shift and go to state 75
    STRING          shift and go to state 66

    boolean                        shift and go to state 198
    condiciones                    shift and go to state 199
    tiposvariables                 shift and go to state 71
    datos                          shift and go to state 72

state 144

    (124) condiciones -> tiposvariables operadores . tiposvariables
    (126) condiciones -> tiposvariables operadores . datos
    (43) tiposvariables -> . VAR
    (44) tiposvariables -> . LOCALVAR
    (45) tiposvariables -> . CONSTANT
    (46) datos -> . INTEGER
    (47) datos -> . FLOAT
    (48) datos -> . STRING

    VAR             shift and go to state 28
    LOCALVAR        shift and go to state 73
    CONSTANT        shift and go to state 29
    INTEGER         shift and go to state 74
    FLOAT           shift and go to state 75
    STRING          shift and go to state 66

    tiposvariables                 shift and go to state 200
    datos                          shift and go to state 201

state 145

    (125) condiciones -> datos operadores . datos
    (127) condiciones -> datos operadores . tiposvariables
    (46) datos -> . INTEGER
    (47) datos -> . FLOAT
    (48) datos -> . STRING
    (43) tiposvariables -> . VAR
    (44) tiposvariables -> . LOCALVAR
    (45) tiposvariables -> . CONSTANT

    INTEGER         shift and go to state 74
    FLOAT           shift and go to state 75
    STRING          shift and go to state 66
    VAR             shift and go to state 28
    LOCALVAR        shift and go to state 73
    CONSTANT        shift and go to state 29

    datos                          shift and go to state 202
    tiposvariables                 shift and go to state 203

state 146

    (84) array -> LBRACKET datosarray RBRACKET .

    LBRACKET        reduce using rule 84 (array -> LBRACKET datosarray RBRACKET .)
    DOT             reduce using rule 84 (array -> LBRACKET datosarray RBRACKET .)
    LOCALVAR        reduce using rule 84 (array -> LBRACKET datosarray RBRACKET .)
    FOR             reduce using rule 84 (array -> LBRACKET datosarray RBRACKET .)
    IF              reduce using rule 84 (array -> LBRACKET datosarray RBRACKET .)
    UNLESS          reduce using rule 84 (array -> LBRACKET datosarray RBRACKET .)
    PUTS            reduce using rule 84 (array -> LBRACKET datosarray RBRACKET .)
    PRINT           reduce using rule 84 (array -> LBRACKET datosarray RBRACKET .)
    STRING          reduce using rule 84 (array -> LBRACKET datosarray RBRACKET .)
    VAR             reduce using rule 84 (array -> LBRACKET datosarray RBRACKET .)
    CONSTANT        reduce using rule 84 (array -> LBRACKET datosarray RBRACKET .)
    LCURLYBRACKET   reduce using rule 84 (array -> LBRACKET datosarray RBRACKET .)
    SET             reduce using rule 84 (array -> LBRACKET datosarray RBRACKET .)
    $end            reduce using rule 84 (array -> LBRACKET datosarray RBRACKET .)
    ELSE            reduce using rule 84 (array -> LBRACKET datosarray RBRACKET .)
    END             reduce using rule 84 (array -> LBRACKET datosarray RBRACKET .)
    RETURN          reduce using rule 84 (array -> LBRACKET datosarray RBRACKET .)


state 147

    (90) datosarray -> datosarray COMMA . datosvarios
    (85) datosvarios -> . datos
    (86) datosvarios -> . number
    (87) datosvarios -> . VAR
    (88) datosvarios -> . LOCALVAR
    (46) datos -> . INTEGER
    (47) datos -> . FLOAT
    (48) datos -> . STRING
    (68) number -> . INTEGER
    (69) number -> . FLOAT

    VAR             shift and go to state 83
    LOCALVAR        shift and go to state 84
    INTEGER         shift and go to state 64
    FLOAT           shift and go to state 65
    STRING          shift and go to state 66

    datosvarios                    shift and go to state 204
    datos                          shift and go to state 60
    number                         shift and go to state 61

state 148

    (139) string -> STRING PLUS STRING .

    LOCALVAR        reduce using rule 139 (string -> STRING PLUS STRING .)
    FOR             reduce using rule 139 (string -> STRING PLUS STRING .)
    IF              reduce using rule 139 (string -> STRING PLUS STRING .)
    UNLESS          reduce using rule 139 (string -> STRING PLUS STRING .)
    PUTS            reduce using rule 139 (string -> STRING PLUS STRING .)
    PRINT           reduce using rule 139 (string -> STRING PLUS STRING .)
    STRING          reduce using rule 139 (string -> STRING PLUS STRING .)
    VAR             reduce using rule 139 (string -> STRING PLUS STRING .)
    CONSTANT        reduce using rule 139 (string -> STRING PLUS STRING .)
    LCURLYBRACKET   reduce using rule 139 (string -> STRING PLUS STRING .)
    LBRACKET        reduce using rule 139 (string -> STRING PLUS STRING .)
    SET             reduce using rule 139 (string -> STRING PLUS STRING .)
    $end            reduce using rule 139 (string -> STRING PLUS STRING .)
    ELSE            reduce using rule 139 (string -> STRING PLUS STRING .)
    END             reduce using rule 139 (string -> STRING PLUS STRING .)
    RETURN          reduce using rule 139 (string -> STRING PLUS STRING .)


state 149

    (140) string -> STRING MULTIPLY INTEGER .

    LOCALVAR        reduce using rule 140 (string -> STRING MULTIPLY INTEGER .)
    FOR             reduce using rule 140 (string -> STRING MULTIPLY INTEGER .)
    IF              reduce using rule 140 (string -> STRING MULTIPLY INTEGER .)
    UNLESS          reduce using rule 140 (string -> STRING MULTIPLY INTEGER .)
    PUTS            reduce using rule 140 (string -> STRING MULTIPLY INTEGER .)
    PRINT           reduce using rule 140 (string -> STRING MULTIPLY INTEGER .)
    STRING          reduce using rule 140 (string -> STRING MULTIPLY INTEGER .)
    VAR             reduce using rule 140 (string -> STRING MULTIPLY INTEGER .)
    CONSTANT        reduce using rule 140 (string -> STRING MULTIPLY INTEGER .)
    LCURLYBRACKET   reduce using rule 140 (string -> STRING MULTIPLY INTEGER .)
    LBRACKET        reduce using rule 140 (string -> STRING MULTIPLY INTEGER .)
    SET             reduce using rule 140 (string -> STRING MULTIPLY INTEGER .)
    $end            reduce using rule 140 (string -> STRING MULTIPLY INTEGER .)
    ELSE            reduce using rule 140 (string -> STRING MULTIPLY INTEGER .)
    END             reduce using rule 140 (string -> STRING MULTIPLY INTEGER .)
    RETURN          reduce using rule 140 (string -> STRING MULTIPLY INTEGER .)


state 150

    (141) string -> STRING DOT stringOpt .

    LOCALVAR        reduce using rule 141 (string -> STRING DOT stringOpt .)
    FOR             reduce using rule 141 (string -> STRING DOT stringOpt .)
    IF              reduce using rule 141 (string -> STRING DOT stringOpt .)
    UNLESS          reduce using rule 141 (string -> STRING DOT stringOpt .)
    PUTS            reduce using rule 141 (string -> STRING DOT stringOpt .)
    PRINT           reduce using rule 141 (string -> STRING DOT stringOpt .)
    STRING          reduce using rule 141 (string -> STRING DOT stringOpt .)
    VAR             reduce using rule 141 (string -> STRING DOT stringOpt .)
    CONSTANT        reduce using rule 141 (string -> STRING DOT stringOpt .)
    LCURLYBRACKET   reduce using rule 141 (string -> STRING DOT stringOpt .)
    LBRACKET        reduce using rule 141 (string -> STRING DOT stringOpt .)
    SET             reduce using rule 141 (string -> STRING DOT stringOpt .)
    $end            reduce using rule 141 (string -> STRING DOT stringOpt .)
    ELSE            reduce using rule 141 (string -> STRING DOT stringOpt .)
    END             reduce using rule 141 (string -> STRING DOT stringOpt .)
    RETURN          reduce using rule 141 (string -> STRING DOT stringOpt .)


state 151

    (142) stringOpt -> UPCASE .

    LOCALVAR        reduce using rule 142 (stringOpt -> UPCASE .)
    FOR             reduce using rule 142 (stringOpt -> UPCASE .)
    IF              reduce using rule 142 (stringOpt -> UPCASE .)
    UNLESS          reduce using rule 142 (stringOpt -> UPCASE .)
    PUTS            reduce using rule 142 (stringOpt -> UPCASE .)
    PRINT           reduce using rule 142 (stringOpt -> UPCASE .)
    STRING          reduce using rule 142 (stringOpt -> UPCASE .)
    VAR             reduce using rule 142 (stringOpt -> UPCASE .)
    CONSTANT        reduce using rule 142 (stringOpt -> UPCASE .)
    LCURLYBRACKET   reduce using rule 142 (stringOpt -> UPCASE .)
    LBRACKET        reduce using rule 142 (stringOpt -> UPCASE .)
    SET             reduce using rule 142 (stringOpt -> UPCASE .)
    $end            reduce using rule 142 (stringOpt -> UPCASE .)
    ELSE            reduce using rule 142 (stringOpt -> UPCASE .)
    END             reduce using rule 142 (stringOpt -> UPCASE .)
    RETURN          reduce using rule 142 (stringOpt -> UPCASE .)


state 152

    (143) stringOpt -> DOWNCASE .

    LOCALVAR        reduce using rule 143 (stringOpt -> DOWNCASE .)
    FOR             reduce using rule 143 (stringOpt -> DOWNCASE .)
    IF              reduce using rule 143 (stringOpt -> DOWNCASE .)
    UNLESS          reduce using rule 143 (stringOpt -> DOWNCASE .)
    PUTS            reduce using rule 143 (stringOpt -> DOWNCASE .)
    PRINT           reduce using rule 143 (stringOpt -> DOWNCASE .)
    STRING          reduce using rule 143 (stringOpt -> DOWNCASE .)
    VAR             reduce using rule 143 (stringOpt -> DOWNCASE .)
    CONSTANT        reduce using rule 143 (stringOpt -> DOWNCASE .)
    LCURLYBRACKET   reduce using rule 143 (stringOpt -> DOWNCASE .)
    LBRACKET        reduce using rule 143 (stringOpt -> DOWNCASE .)
    SET             reduce using rule 143 (stringOpt -> DOWNCASE .)
    $end            reduce using rule 143 (stringOpt -> DOWNCASE .)
    ELSE            reduce using rule 143 (stringOpt -> DOWNCASE .)
    END             reduce using rule 143 (stringOpt -> DOWNCASE .)
    RETURN          reduce using rule 143 (stringOpt -> DOWNCASE .)


state 153

    (144) stringOpt -> LENGTH .

    LOCALVAR        reduce using rule 144 (stringOpt -> LENGTH .)
    FOR             reduce using rule 144 (stringOpt -> LENGTH .)
    IF              reduce using rule 144 (stringOpt -> LENGTH .)
    UNLESS          reduce using rule 144 (stringOpt -> LENGTH .)
    PUTS            reduce using rule 144 (stringOpt -> LENGTH .)
    PRINT           reduce using rule 144 (stringOpt -> LENGTH .)
    STRING          reduce using rule 144 (stringOpt -> LENGTH .)
    VAR             reduce using rule 144 (stringOpt -> LENGTH .)
    CONSTANT        reduce using rule 144 (stringOpt -> LENGTH .)
    LCURLYBRACKET   reduce using rule 144 (stringOpt -> LENGTH .)
    LBRACKET        reduce using rule 144 (stringOpt -> LENGTH .)
    SET             reduce using rule 144 (stringOpt -> LENGTH .)
    $end            reduce using rule 144 (stringOpt -> LENGTH .)
    ELSE            reduce using rule 144 (stringOpt -> LENGTH .)
    END             reduce using rule 144 (stringOpt -> LENGTH .)
    RETURN          reduce using rule 144 (stringOpt -> LENGTH .)


state 154

    (145) stringOpt -> CAPS .

    LOCALVAR        reduce using rule 145 (stringOpt -> CAPS .)
    FOR             reduce using rule 145 (stringOpt -> CAPS .)
    IF              reduce using rule 145 (stringOpt -> CAPS .)
    UNLESS          reduce using rule 145 (stringOpt -> CAPS .)
    PUTS            reduce using rule 145 (stringOpt -> CAPS .)
    PRINT           reduce using rule 145 (stringOpt -> CAPS .)
    STRING          reduce using rule 145 (stringOpt -> CAPS .)
    VAR             reduce using rule 145 (stringOpt -> CAPS .)
    CONSTANT        reduce using rule 145 (stringOpt -> CAPS .)
    LCURLYBRACKET   reduce using rule 145 (stringOpt -> CAPS .)
    LBRACKET        reduce using rule 145 (stringOpt -> CAPS .)
    SET             reduce using rule 145 (stringOpt -> CAPS .)
    $end            reduce using rule 145 (stringOpt -> CAPS .)
    ELSE            reduce using rule 145 (stringOpt -> CAPS .)
    END             reduce using rule 145 (stringOpt -> CAPS .)
    RETURN          reduce using rule 145 (stringOpt -> CAPS .)


state 155

    (146) stringOpt -> INSERT . LPARENTHESES INTEGER COMMA STRING RPARENTHESES

    LPARENTHESES    shift and go to state 205


state 156

    (52) hash -> LCURLYBRACKET elementoHash RCURLYBRACKET .

    LBRACKET        reduce using rule 52 (hash -> LCURLYBRACKET elementoHash RCURLYBRACKET .)
    DOT             reduce using rule 52 (hash -> LCURLYBRACKET elementoHash RCURLYBRACKET .)
    LOCALVAR        reduce using rule 52 (hash -> LCURLYBRACKET elementoHash RCURLYBRACKET .)
    FOR             reduce using rule 52 (hash -> LCURLYBRACKET elementoHash RCURLYBRACKET .)
    IF              reduce using rule 52 (hash -> LCURLYBRACKET elementoHash RCURLYBRACKET .)
    UNLESS          reduce using rule 52 (hash -> LCURLYBRACKET elementoHash RCURLYBRACKET .)
    PUTS            reduce using rule 52 (hash -> LCURLYBRACKET elementoHash RCURLYBRACKET .)
    PRINT           reduce using rule 52 (hash -> LCURLYBRACKET elementoHash RCURLYBRACKET .)
    STRING          reduce using rule 52 (hash -> LCURLYBRACKET elementoHash RCURLYBRACKET .)
    VAR             reduce using rule 52 (hash -> LCURLYBRACKET elementoHash RCURLYBRACKET .)
    CONSTANT        reduce using rule 52 (hash -> LCURLYBRACKET elementoHash RCURLYBRACKET .)
    LCURLYBRACKET   reduce using rule 52 (hash -> LCURLYBRACKET elementoHash RCURLYBRACKET .)
    SET             reduce using rule 52 (hash -> LCURLYBRACKET elementoHash RCURLYBRACKET .)
    $end            reduce using rule 52 (hash -> LCURLYBRACKET elementoHash RCURLYBRACKET .)
    ELSE            reduce using rule 52 (hash -> LCURLYBRACKET elementoHash RCURLYBRACKET .)
    END             reduce using rule 52 (hash -> LCURLYBRACKET elementoHash RCURLYBRACKET .)
    RETURN          reduce using rule 52 (hash -> LCURLYBRACKET elementoHash RCURLYBRACKET .)


state 157

    (53) elementoHash -> datos EQUAL . GREATERTHAN datos maselementos

    GREATERTHAN     shift and go to state 206


state 158

    (128) set -> SET LBRACKET elementoSet . RBRACKET

    RBRACKET        shift and go to state 207


state 159

    (130) elementoSet -> datos .
    (131) elementoSet -> datos . otroElemento
    (132) otroElemento -> .
    (133) otroElemento -> . COMMA elementoSet otroElemento

  ! reduce/reduce conflict for RBRACKET resolved using rule 130 (elementoSet -> datos .)
  ! reduce/reduce conflict for COMMA resolved using rule 130 (elementoSet -> datos .)
  ! shift/reduce conflict for COMMA resolved as shift
    RBRACKET        reduce using rule 130 (elementoSet -> datos .)
    COMMA           shift and go to state 209

  ! COMMA           [ reduce using rule 130 (elementoSet -> datos .) ]
  ! RBRACKET        [ reduce using rule 132 (otroElemento -> .) ]
  ! COMMA           [ reduce using rule 132 (otroElemento -> .) ]

    otroElemento                   shift and go to state 208

state 160

    (8) argumentos -> LOCALVAR . EQUAL LCURLYBRACKET RCURLYBRACKET
    (9) argumentos -> LOCALVAR . TWOPOINTS datos
    (10) variosargumentos -> LOCALVAR .
    (11) variosargumentos -> LOCALVAR . EQUAL datos
    (12) variosargumentos -> LOCALVAR . masargumentos
    (13) variosargumentos -> LOCALVAR . EQUAL datos masargumentos
    (14) masargumentos -> . COMMA variosargumentos

    EQUAL           shift and go to state 210
    TWOPOINTS       shift and go to state 211
    RPARENTHESES    reduce using rule 10 (variosargumentos -> LOCALVAR .)
    COMMA           shift and go to state 213

    masargumentos                  shift and go to state 212

state 161

    (3) funcion -> DEF LOCALVAR LPARENTHESES argumentos . RPARENTHESES cuerpo END
    (4) funcion -> DEF LOCALVAR LPARENTHESES argumentos . RPARENTHESES cuerpo retornar END

    RPARENTHESES    shift and go to state 214


state 162

    (5) argumentos -> variosargumentos .

    RPARENTHESES    reduce using rule 5 (argumentos -> variosargumentos .)


state 163

    (6) argumentos -> MULTIPLY . LOCALVAR

    LOCALVAR        shift and go to state 215


state 164

    (7) argumentos -> TWOSTARS . LOCALVAR

    LOCALVAR        shift and go to state 216


state 165

    (147) casting -> STRING DOT . TO_I
    (148) casting -> STRING DOT . TO_F

    TO_I            shift and go to state 217
    TO_F            shift and go to state 218


state 166

    (74) operacion -> operacion masoperaciones .

    PLUS            reduce using rule 74 (operacion -> operacion masoperaciones .)
    MINUS           reduce using rule 74 (operacion -> operacion masoperaciones .)
    MULTIPLY        reduce using rule 74 (operacion -> operacion masoperaciones .)
    DIVIDE          reduce using rule 74 (operacion -> operacion masoperaciones .)
    PERCENTAGE      reduce using rule 74 (operacion -> operacion masoperaciones .)
    LOCALVAR        reduce using rule 74 (operacion -> operacion masoperaciones .)
    FOR             reduce using rule 74 (operacion -> operacion masoperaciones .)
    IF              reduce using rule 74 (operacion -> operacion masoperaciones .)
    UNLESS          reduce using rule 74 (operacion -> operacion masoperaciones .)
    PUTS            reduce using rule 74 (operacion -> operacion masoperaciones .)
    PRINT           reduce using rule 74 (operacion -> operacion masoperaciones .)
    STRING          reduce using rule 74 (operacion -> operacion masoperaciones .)
    VAR             reduce using rule 74 (operacion -> operacion masoperaciones .)
    CONSTANT        reduce using rule 74 (operacion -> operacion masoperaciones .)
    LCURLYBRACKET   reduce using rule 74 (operacion -> operacion masoperaciones .)
    LBRACKET        reduce using rule 74 (operacion -> operacion masoperaciones .)
    SET             reduce using rule 74 (operacion -> operacion masoperaciones .)
    $end            reduce using rule 74 (operacion -> operacion masoperaciones .)
    ELSE            reduce using rule 74 (operacion -> operacion masoperaciones .)
    END             reduce using rule 74 (operacion -> operacion masoperaciones .)
    RETURN          reduce using rule 74 (operacion -> operacion masoperaciones .)
    RPARENTHESES    reduce using rule 74 (operacion -> operacion masoperaciones .)


state 167

    (75) masoperaciones -> operador . expresion masoperaciones
    (76) masoperaciones -> operador . number
    (77) masoperaciones -> operador . expresion
    (70) expresion -> . operacion
    (71) expresion -> . LPARENTHESES operacion RPARENTHESES
    (72) expresion -> . LPARENTHESES operacion RPARENTHESES masoperaciones
    (68) number -> . INTEGER
    (69) number -> . FLOAT
    (73) operacion -> . number operador number
    (74) operacion -> . operacion masoperaciones

    LPARENTHESES    shift and go to state 112
    INTEGER         shift and go to state 95
    FLOAT           shift and go to state 96

    expresion                      shift and go to state 219
    number                         shift and go to state 220
    operacion                      shift and go to state 111

state 168

    (78) operador -> PLUS .

    LPARENTHESES    reduce using rule 78 (operador -> PLUS .)
    INTEGER         reduce using rule 78 (operador -> PLUS .)
    FLOAT           reduce using rule 78 (operador -> PLUS .)


state 169

    (79) operador -> MINUS .

    LPARENTHESES    reduce using rule 79 (operador -> MINUS .)
    INTEGER         reduce using rule 79 (operador -> MINUS .)
    FLOAT           reduce using rule 79 (operador -> MINUS .)


state 170

    (80) operador -> MULTIPLY .

    LPARENTHESES    reduce using rule 80 (operador -> MULTIPLY .)
    INTEGER         reduce using rule 80 (operador -> MULTIPLY .)
    FLOAT           reduce using rule 80 (operador -> MULTIPLY .)


state 171

    (81) operador -> DIVIDE .

    LPARENTHESES    reduce using rule 81 (operador -> DIVIDE .)
    INTEGER         reduce using rule 81 (operador -> DIVIDE .)
    FLOAT           reduce using rule 81 (operador -> DIVIDE .)


state 172

    (82) operador -> PERCENTAGE .

    LPARENTHESES    reduce using rule 82 (operador -> PERCENTAGE .)
    INTEGER         reduce using rule 82 (operador -> PERCENTAGE .)
    FLOAT           reduce using rule 82 (operador -> PERCENTAGE .)


state 173

    (71) expresion -> LPARENTHESES operacion . RPARENTHESES
    (72) expresion -> LPARENTHESES operacion . RPARENTHESES masoperaciones
    (74) operacion -> operacion . masoperaciones
    (75) masoperaciones -> . operador expresion masoperaciones
    (76) masoperaciones -> . operador number
    (77) masoperaciones -> . operador expresion
    (78) operador -> . PLUS
    (79) operador -> . MINUS
    (80) operador -> . MULTIPLY
    (81) operador -> . DIVIDE
    (82) operador -> . PERCENTAGE

    RPARENTHESES    shift and go to state 221
    PLUS            shift and go to state 168
    MINUS           shift and go to state 169
    MULTIPLY        shift and go to state 170
    DIVIDE          shift and go to state 171
    PERCENTAGE      shift and go to state 172

    masoperaciones                 shift and go to state 166
    operador                       shift and go to state 167

state 174

    (73) operacion -> number . operador number
    (78) operador -> . PLUS
    (79) operador -> . MINUS
    (80) operador -> . MULTIPLY
    (81) operador -> . DIVIDE
    (82) operador -> . PERCENTAGE

    PLUS            shift and go to state 168
    MINUS           shift and go to state 169
    MULTIPLY        shift and go to state 170
    DIVIDE          shift and go to state 171
    PERCENTAGE      shift and go to state 172

    operador                       shift and go to state 176

state 175

    (149) casting -> number DOT . TO_S

    TO_S            shift and go to state 222


state 176

    (73) operacion -> number operador . number
    (68) number -> . INTEGER
    (69) number -> . FLOAT

    INTEGER         shift and go to state 95
    FLOAT           shift and go to state 96

    number                         shift and go to state 223

state 177

    (29) loop -> FOR LOCALVAR IN rango . cuerpo END
    (17) cuerpo -> . declaracion cuerpo
    (18) cuerpo -> . asignacion cuerpo
    (19) cuerpo -> . loop cuerpo
    (20) cuerpo -> . estructurasDatos cuerpo
    (21) cuerpo -> . if cuerpo
    (22) cuerpo -> . unless cuerpo
    (23) cuerpo -> . impresion cuerpo
    (24) cuerpo -> . operacionSet cuerpo
    (25) cuerpo -> . operacionarray cuerpo
    (26) cuerpo -> . operacionHash cuerpo
    (27) cuerpo -> . string cuerpo
    (28) cuerpo -> .
    (30) declaracion -> . tiposvariables EQUAL datos
    (31) declaracion -> . tiposvariables EQUAL estructurasDatos
    (32) declaracion -> . tiposvariables EQUAL expresion
    (33) declaracion -> . tiposvariables EQUAL declaracion
    (34) declaracion -> . tiposvariables EQUAL casting
    (35) asignacion -> . LOCALVAR PLUSASSIGN datosAsignacion
    (36) asignacion -> . LOCALVAR MINASSIGN datosAsignacion
    (37) asignacion -> . LOCALVAR DIVASSIGN datosAsignacion
    (38) asignacion -> . LOCALVAR TIMESASSIGN datosAsignacion
    (39) asignacion -> . LOCALVAR MODASSIGN datosAsignacion
    (40) asignacion -> . LOCALVAR EXPASSIGN datosAsignacion
    (29) loop -> . FOR LOCALVAR IN rango cuerpo END
    (49) estructurasDatos -> . hash
    (50) estructurasDatos -> . array
    (51) estructurasDatos -> . set
    (106) if -> . IF datoscompletos operadores datoscompletos cuerpo END
    (107) if -> . IF datoscompletos operadores datoscompletos cuerpo else
    (116) unless -> . UNLESS expresionCondicional cuerpo ELSE cuerpo END
    (64) impresion -> . PUTS datos
    (65) impresion -> . PUTS LOCALVAR
    (66) impresion -> . PRINT datos
    (67) impresion -> . PRINT LOCALVAR
    (134) operacionSet -> . set DOT ADD LPARENTHESES datos RPARENTHESES
    (135) operacionSet -> . set DOT ADD LPARENTHESES tiposvariables RPARENTHESES
    (136) operacionSet -> . set DOT CLEAR
    (137) operacionSet -> . set DOT DELETE LPARENTHESES datos RPARENTHESES
    (138) operacionSet -> . set DOT DELETE LPARENTHESES tiposvariables RPARENTHESES
    (91) operacionarray -> . array LBRACKET INTEGER RBRACKET
    (92) operacionarray -> . array DOT TAKE LPARENTHESES INTEGER RPARENTHESES
    (93) operacionarray -> . array DOT DROP LPARENTHESES INTEGER RPARENTHESES
    (94) operacionarray -> . array DOT push maspush
    (99) operacionarray -> . array DOT POP
    (100) operacionarray -> . array DOT POP LPARENTHESES INTEGER RPARENTHESES
    (101) operacionarray -> . array DOT DELETE LPARENTHESES INTEGER RPARENTHESES
    (102) operacionarray -> . array DOT LENGTH LPARENTHESES RPARENTHESES
    (103) operacionarray -> . array DOT EMPTY QUESTIONMARK
    (57) operacionHash -> . hash LBRACKET datos RBRACKET
    (58) operacionHash -> . hash LBRACKET datos RBRACKET EQUAL datos
    (59) operacionHash -> . hash DOT INCLUDE QUESTIONMARK LPARENTHESES datos RPARENTHESES
    (60) operacionHash -> . hash DOT DELETE LPARENTHESES datos RPARENTHESES
    (61) operacionHash -> . hash DOT KEYS
    (139) string -> . STRING PLUS STRING
    (140) string -> . STRING MULTIPLY INTEGER
    (141) string -> . STRING DOT stringOpt
    (43) tiposvariables -> . VAR
    (44) tiposvariables -> . LOCALVAR
    (45) tiposvariables -> . CONSTANT
    (52) hash -> . LCURLYBRACKET elementoHash RCURLYBRACKET
    (83) array -> . LBRACKET RBRACKET
    (84) array -> . LBRACKET datosarray RBRACKET
    (128) set -> . SET LBRACKET elementoSet RBRACKET

    END             reduce using rule 28 (cuerpo -> .)
    LOCALVAR        shift and go to state 16
    FOR             shift and go to state 18
    IF              shift and go to state 22
    UNLESS          shift and go to state 23
    PUTS            shift and go to state 24
    PRINT           shift and go to state 25
    STRING          shift and go to state 27
    VAR             shift and go to state 28
    CONSTANT        shift and go to state 29
    LCURLYBRACKET   shift and go to state 30
    LBRACKET        shift and go to state 26
    SET             shift and go to state 31

    cuerpo                         shift and go to state 224
    declaracion                    shift and go to state 4
    asignacion                     shift and go to state 5
    loop                           shift and go to state 6
    estructurasDatos               shift and go to state 7
    if                             shift and go to state 8
    unless                         shift and go to state 9
    impresion                      shift and go to state 10
    operacionSet                   shift and go to state 11
    operacionarray                 shift and go to state 12
    operacionHash                  shift and go to state 13
    string                         shift and go to state 14
    tiposvariables                 shift and go to state 17
    hash                           shift and go to state 19
    array                          shift and go to state 20
    set                            shift and go to state 21

state 178

    (62) rango -> INTEGER . RANGEINCLUSIVE INTEGER
    (63) rango -> INTEGER . RANGEXCLUSIVE INTEGER

    RANGEINCLUSIVE  shift and go to state 225
    RANGEXCLUSIVE   shift and go to state 226


state 179

    (57) operacionHash -> hash LBRACKET datos RBRACKET .
    (58) operacionHash -> hash LBRACKET datos RBRACKET . EQUAL datos

    LOCALVAR        reduce using rule 57 (operacionHash -> hash LBRACKET datos RBRACKET .)
    FOR             reduce using rule 57 (operacionHash -> hash LBRACKET datos RBRACKET .)
    IF              reduce using rule 57 (operacionHash -> hash LBRACKET datos RBRACKET .)
    UNLESS          reduce using rule 57 (operacionHash -> hash LBRACKET datos RBRACKET .)
    PUTS            reduce using rule 57 (operacionHash -> hash LBRACKET datos RBRACKET .)
    PRINT           reduce using rule 57 (operacionHash -> hash LBRACKET datos RBRACKET .)
    STRING          reduce using rule 57 (operacionHash -> hash LBRACKET datos RBRACKET .)
    VAR             reduce using rule 57 (operacionHash -> hash LBRACKET datos RBRACKET .)
    CONSTANT        reduce using rule 57 (operacionHash -> hash LBRACKET datos RBRACKET .)
    LCURLYBRACKET   reduce using rule 57 (operacionHash -> hash LBRACKET datos RBRACKET .)
    LBRACKET        reduce using rule 57 (operacionHash -> hash LBRACKET datos RBRACKET .)
    SET             reduce using rule 57 (operacionHash -> hash LBRACKET datos RBRACKET .)
    $end            reduce using rule 57 (operacionHash -> hash LBRACKET datos RBRACKET .)
    ELSE            reduce using rule 57 (operacionHash -> hash LBRACKET datos RBRACKET .)
    END             reduce using rule 57 (operacionHash -> hash LBRACKET datos RBRACKET .)
    RETURN          reduce using rule 57 (operacionHash -> hash LBRACKET datos RBRACKET .)
    EQUAL           shift and go to state 227


state 180

    (59) operacionHash -> hash DOT INCLUDE QUESTIONMARK . LPARENTHESES datos RPARENTHESES

    LPARENTHESES    shift and go to state 228


state 181

    (60) operacionHash -> hash DOT DELETE LPARENTHESES . datos RPARENTHESES
    (46) datos -> . INTEGER
    (47) datos -> . FLOAT
    (48) datos -> . STRING

    INTEGER         shift and go to state 74
    FLOAT           shift and go to state 75
    STRING          shift and go to state 66

    datos                          shift and go to state 229

state 182

    (91) operacionarray -> array LBRACKET INTEGER RBRACKET .

    LOCALVAR        reduce using rule 91 (operacionarray -> array LBRACKET INTEGER RBRACKET .)
    FOR             reduce using rule 91 (operacionarray -> array LBRACKET INTEGER RBRACKET .)
    IF              reduce using rule 91 (operacionarray -> array LBRACKET INTEGER RBRACKET .)
    UNLESS          reduce using rule 91 (operacionarray -> array LBRACKET INTEGER RBRACKET .)
    PUTS            reduce using rule 91 (operacionarray -> array LBRACKET INTEGER RBRACKET .)
    PRINT           reduce using rule 91 (operacionarray -> array LBRACKET INTEGER RBRACKET .)
    STRING          reduce using rule 91 (operacionarray -> array LBRACKET INTEGER RBRACKET .)
    VAR             reduce using rule 91 (operacionarray -> array LBRACKET INTEGER RBRACKET .)
    CONSTANT        reduce using rule 91 (operacionarray -> array LBRACKET INTEGER RBRACKET .)
    LCURLYBRACKET   reduce using rule 91 (operacionarray -> array LBRACKET INTEGER RBRACKET .)
    LBRACKET        reduce using rule 91 (operacionarray -> array LBRACKET INTEGER RBRACKET .)
    SET             reduce using rule 91 (operacionarray -> array LBRACKET INTEGER RBRACKET .)
    $end            reduce using rule 91 (operacionarray -> array LBRACKET INTEGER RBRACKET .)
    ELSE            reduce using rule 91 (operacionarray -> array LBRACKET INTEGER RBRACKET .)
    END             reduce using rule 91 (operacionarray -> array LBRACKET INTEGER RBRACKET .)
    RETURN          reduce using rule 91 (operacionarray -> array LBRACKET INTEGER RBRACKET .)


state 183

    (92) operacionarray -> array DOT TAKE LPARENTHESES . INTEGER RPARENTHESES

    INTEGER         shift and go to state 230


state 184

    (93) operacionarray -> array DOT DROP LPARENTHESES . INTEGER RPARENTHESES

    INTEGER         shift and go to state 231


state 185

    (98) maspush -> DOT . push maspush
    (95) push -> . PUSH LPARENTHESES datosvarios RPARENTHESES
    (96) push -> .

    PUSH            shift and go to state 127
    DOT             reduce using rule 96 (push -> .)
    LOCALVAR        reduce using rule 96 (push -> .)
    FOR             reduce using rule 96 (push -> .)
    IF              reduce using rule 96 (push -> .)
    UNLESS          reduce using rule 96 (push -> .)
    PUTS            reduce using rule 96 (push -> .)
    PRINT           reduce using rule 96 (push -> .)
    STRING          reduce using rule 96 (push -> .)
    VAR             reduce using rule 96 (push -> .)
    CONSTANT        reduce using rule 96 (push -> .)
    LCURLYBRACKET   reduce using rule 96 (push -> .)
    LBRACKET        reduce using rule 96 (push -> .)
    SET             reduce using rule 96 (push -> .)
    $end            reduce using rule 96 (push -> .)
    ELSE            reduce using rule 96 (push -> .)
    END             reduce using rule 96 (push -> .)
    RETURN          reduce using rule 96 (push -> .)

    push                           shift and go to state 232

state 186

    (94) operacionarray -> array DOT push maspush .

    LOCALVAR        reduce using rule 94 (operacionarray -> array DOT push maspush .)
    FOR             reduce using rule 94 (operacionarray -> array DOT push maspush .)
    IF              reduce using rule 94 (operacionarray -> array DOT push maspush .)
    UNLESS          reduce using rule 94 (operacionarray -> array DOT push maspush .)
    PUTS            reduce using rule 94 (operacionarray -> array DOT push maspush .)
    PRINT           reduce using rule 94 (operacionarray -> array DOT push maspush .)
    STRING          reduce using rule 94 (operacionarray -> array DOT push maspush .)
    VAR             reduce using rule 94 (operacionarray -> array DOT push maspush .)
    CONSTANT        reduce using rule 94 (operacionarray -> array DOT push maspush .)
    LCURLYBRACKET   reduce using rule 94 (operacionarray -> array DOT push maspush .)
    LBRACKET        reduce using rule 94 (operacionarray -> array DOT push maspush .)
    SET             reduce using rule 94 (operacionarray -> array DOT push maspush .)
    $end            reduce using rule 94 (operacionarray -> array DOT push maspush .)
    ELSE            reduce using rule 94 (operacionarray -> array DOT push maspush .)
    END             reduce using rule 94 (operacionarray -> array DOT push maspush .)
    RETURN          reduce using rule 94 (operacionarray -> array DOT push maspush .)


state 187

    (100) operacionarray -> array DOT POP LPARENTHESES . INTEGER RPARENTHESES

    INTEGER         shift and go to state 233


state 188

    (101) operacionarray -> array DOT DELETE LPARENTHESES . INTEGER RPARENTHESES

    INTEGER         shift and go to state 234


state 189

    (102) operacionarray -> array DOT LENGTH LPARENTHESES . RPARENTHESES

    RPARENTHESES    shift and go to state 235


state 190

    (103) operacionarray -> array DOT EMPTY QUESTIONMARK .

    LOCALVAR        reduce using rule 103 (operacionarray -> array DOT EMPTY QUESTIONMARK .)
    FOR             reduce using rule 103 (operacionarray -> array DOT EMPTY QUESTIONMARK .)
    IF              reduce using rule 103 (operacionarray -> array DOT EMPTY QUESTIONMARK .)
    UNLESS          reduce using rule 103 (operacionarray -> array DOT EMPTY QUESTIONMARK .)
    PUTS            reduce using rule 103 (operacionarray -> array DOT EMPTY QUESTIONMARK .)
    PRINT           reduce using rule 103 (operacionarray -> array DOT EMPTY QUESTIONMARK .)
    STRING          reduce using rule 103 (operacionarray -> array DOT EMPTY QUESTIONMARK .)
    VAR             reduce using rule 103 (operacionarray -> array DOT EMPTY QUESTIONMARK .)
    CONSTANT        reduce using rule 103 (operacionarray -> array DOT EMPTY QUESTIONMARK .)
    LCURLYBRACKET   reduce using rule 103 (operacionarray -> array DOT EMPTY QUESTIONMARK .)
    LBRACKET        reduce using rule 103 (operacionarray -> array DOT EMPTY QUESTIONMARK .)
    SET             reduce using rule 103 (operacionarray -> array DOT EMPTY QUESTIONMARK .)
    $end            reduce using rule 103 (operacionarray -> array DOT EMPTY QUESTIONMARK .)
    ELSE            reduce using rule 103 (operacionarray -> array DOT EMPTY QUESTIONMARK .)
    END             reduce using rule 103 (operacionarray -> array DOT EMPTY QUESTIONMARK .)
    RETURN          reduce using rule 103 (operacionarray -> array DOT EMPTY QUESTIONMARK .)


state 191

    (95) push -> PUSH LPARENTHESES . datosvarios RPARENTHESES
    (85) datosvarios -> . datos
    (86) datosvarios -> . number
    (87) datosvarios -> . VAR
    (88) datosvarios -> . LOCALVAR
    (46) datos -> . INTEGER
    (47) datos -> . FLOAT
    (48) datos -> . STRING
    (68) number -> . INTEGER
    (69) number -> . FLOAT

    VAR             shift and go to state 83
    LOCALVAR        shift and go to state 84
    INTEGER         shift and go to state 64
    FLOAT           shift and go to state 65
    STRING          shift and go to state 66

    datosvarios                    shift and go to state 236
    datos                          shift and go to state 60
    number                         shift and go to state 61

state 192

    (134) operacionSet -> set DOT ADD LPARENTHESES . datos RPARENTHESES
    (135) operacionSet -> set DOT ADD LPARENTHESES . tiposvariables RPARENTHESES
    (46) datos -> . INTEGER
    (47) datos -> . FLOAT
    (48) datos -> . STRING
    (43) tiposvariables -> . VAR
    (44) tiposvariables -> . LOCALVAR
    (45) tiposvariables -> . CONSTANT

    INTEGER         shift and go to state 74
    FLOAT           shift and go to state 75
    STRING          shift and go to state 66
    VAR             shift and go to state 28
    LOCALVAR        shift and go to state 73
    CONSTANT        shift and go to state 29

    datos                          shift and go to state 237
    tiposvariables                 shift and go to state 238

state 193

    (137) operacionSet -> set DOT DELETE LPARENTHESES . datos RPARENTHESES
    (138) operacionSet -> set DOT DELETE LPARENTHESES . tiposvariables RPARENTHESES
    (46) datos -> . INTEGER
    (47) datos -> . FLOAT
    (48) datos -> . STRING
    (43) tiposvariables -> . VAR
    (44) tiposvariables -> . LOCALVAR
    (45) tiposvariables -> . CONSTANT

    INTEGER         shift and go to state 74
    FLOAT           shift and go to state 75
    STRING          shift and go to state 66
    VAR             shift and go to state 28
    LOCALVAR        shift and go to state 73
    CONSTANT        shift and go to state 29

    datos                          shift and go to state 239
    tiposvariables                 shift and go to state 240

state 194

    (106) if -> IF datoscompletos operadores datoscompletos . cuerpo END
    (107) if -> IF datoscompletos operadores datoscompletos . cuerpo else
    (17) cuerpo -> . declaracion cuerpo
    (18) cuerpo -> . asignacion cuerpo
    (19) cuerpo -> . loop cuerpo
    (20) cuerpo -> . estructurasDatos cuerpo
    (21) cuerpo -> . if cuerpo
    (22) cuerpo -> . unless cuerpo
    (23) cuerpo -> . impresion cuerpo
    (24) cuerpo -> . operacionSet cuerpo
    (25) cuerpo -> . operacionarray cuerpo
    (26) cuerpo -> . operacionHash cuerpo
    (27) cuerpo -> . string cuerpo
    (28) cuerpo -> .
    (30) declaracion -> . tiposvariables EQUAL datos
    (31) declaracion -> . tiposvariables EQUAL estructurasDatos
    (32) declaracion -> . tiposvariables EQUAL expresion
    (33) declaracion -> . tiposvariables EQUAL declaracion
    (34) declaracion -> . tiposvariables EQUAL casting
    (35) asignacion -> . LOCALVAR PLUSASSIGN datosAsignacion
    (36) asignacion -> . LOCALVAR MINASSIGN datosAsignacion
    (37) asignacion -> . LOCALVAR DIVASSIGN datosAsignacion
    (38) asignacion -> . LOCALVAR TIMESASSIGN datosAsignacion
    (39) asignacion -> . LOCALVAR MODASSIGN datosAsignacion
    (40) asignacion -> . LOCALVAR EXPASSIGN datosAsignacion
    (29) loop -> . FOR LOCALVAR IN rango cuerpo END
    (49) estructurasDatos -> . hash
    (50) estructurasDatos -> . array
    (51) estructurasDatos -> . set
    (106) if -> . IF datoscompletos operadores datoscompletos cuerpo END
    (107) if -> . IF datoscompletos operadores datoscompletos cuerpo else
    (116) unless -> . UNLESS expresionCondicional cuerpo ELSE cuerpo END
    (64) impresion -> . PUTS datos
    (65) impresion -> . PUTS LOCALVAR
    (66) impresion -> . PRINT datos
    (67) impresion -> . PRINT LOCALVAR
    (134) operacionSet -> . set DOT ADD LPARENTHESES datos RPARENTHESES
    (135) operacionSet -> . set DOT ADD LPARENTHESES tiposvariables RPARENTHESES
    (136) operacionSet -> . set DOT CLEAR
    (137) operacionSet -> . set DOT DELETE LPARENTHESES datos RPARENTHESES
    (138) operacionSet -> . set DOT DELETE LPARENTHESES tiposvariables RPARENTHESES
    (91) operacionarray -> . array LBRACKET INTEGER RBRACKET
    (92) operacionarray -> . array DOT TAKE LPARENTHESES INTEGER RPARENTHESES
    (93) operacionarray -> . array DOT DROP LPARENTHESES INTEGER RPARENTHESES
    (94) operacionarray -> . array DOT push maspush
    (99) operacionarray -> . array DOT POP
    (100) operacionarray -> . array DOT POP LPARENTHESES INTEGER RPARENTHESES
    (101) operacionarray -> . array DOT DELETE LPARENTHESES INTEGER RPARENTHESES
    (102) operacionarray -> . array DOT LENGTH LPARENTHESES RPARENTHESES
    (103) operacionarray -> . array DOT EMPTY QUESTIONMARK
    (57) operacionHash -> . hash LBRACKET datos RBRACKET
    (58) operacionHash -> . hash LBRACKET datos RBRACKET EQUAL datos
    (59) operacionHash -> . hash DOT INCLUDE QUESTIONMARK LPARENTHESES datos RPARENTHESES
    (60) operacionHash -> . hash DOT DELETE LPARENTHESES datos RPARENTHESES
    (61) operacionHash -> . hash DOT KEYS
    (139) string -> . STRING PLUS STRING
    (140) string -> . STRING MULTIPLY INTEGER
    (141) string -> . STRING DOT stringOpt
    (43) tiposvariables -> . VAR
    (44) tiposvariables -> . LOCALVAR
    (45) tiposvariables -> . CONSTANT
    (52) hash -> . LCURLYBRACKET elementoHash RCURLYBRACKET
    (83) array -> . LBRACKET RBRACKET
    (84) array -> . LBRACKET datosarray RBRACKET
    (128) set -> . SET LBRACKET elementoSet RBRACKET

    END             reduce using rule 28 (cuerpo -> .)
    ELSE            reduce using rule 28 (cuerpo -> .)
    LOCALVAR        shift and go to state 16
    FOR             shift and go to state 18
    IF              shift and go to state 22
    UNLESS          shift and go to state 23
    PUTS            shift and go to state 24
    PRINT           shift and go to state 25
    STRING          shift and go to state 27
    VAR             shift and go to state 28
    CONSTANT        shift and go to state 29
    LCURLYBRACKET   shift and go to state 30
    LBRACKET        shift and go to state 26
    SET             shift and go to state 31

    cuerpo                         shift and go to state 241
    declaracion                    shift and go to state 4
    asignacion                     shift and go to state 5
    loop                           shift and go to state 6
    estructurasDatos               shift and go to state 7
    if                             shift and go to state 8
    unless                         shift and go to state 9
    impresion                      shift and go to state 10
    operacionSet                   shift and go to state 11
    operacionarray                 shift and go to state 12
    operacionHash                  shift and go to state 13
    string                         shift and go to state 14
    tiposvariables                 shift and go to state 17
    hash                           shift and go to state 19
    array                          shift and go to state 20
    set                            shift and go to state 21

state 195

    (116) unless -> UNLESS expresionCondicional cuerpo ELSE . cuerpo END
    (17) cuerpo -> . declaracion cuerpo
    (18) cuerpo -> . asignacion cuerpo
    (19) cuerpo -> . loop cuerpo
    (20) cuerpo -> . estructurasDatos cuerpo
    (21) cuerpo -> . if cuerpo
    (22) cuerpo -> . unless cuerpo
    (23) cuerpo -> . impresion cuerpo
    (24) cuerpo -> . operacionSet cuerpo
    (25) cuerpo -> . operacionarray cuerpo
    (26) cuerpo -> . operacionHash cuerpo
    (27) cuerpo -> . string cuerpo
    (28) cuerpo -> .
    (30) declaracion -> . tiposvariables EQUAL datos
    (31) declaracion -> . tiposvariables EQUAL estructurasDatos
    (32) declaracion -> . tiposvariables EQUAL expresion
    (33) declaracion -> . tiposvariables EQUAL declaracion
    (34) declaracion -> . tiposvariables EQUAL casting
    (35) asignacion -> . LOCALVAR PLUSASSIGN datosAsignacion
    (36) asignacion -> . LOCALVAR MINASSIGN datosAsignacion
    (37) asignacion -> . LOCALVAR DIVASSIGN datosAsignacion
    (38) asignacion -> . LOCALVAR TIMESASSIGN datosAsignacion
    (39) asignacion -> . LOCALVAR MODASSIGN datosAsignacion
    (40) asignacion -> . LOCALVAR EXPASSIGN datosAsignacion
    (29) loop -> . FOR LOCALVAR IN rango cuerpo END
    (49) estructurasDatos -> . hash
    (50) estructurasDatos -> . array
    (51) estructurasDatos -> . set
    (106) if -> . IF datoscompletos operadores datoscompletos cuerpo END
    (107) if -> . IF datoscompletos operadores datoscompletos cuerpo else
    (116) unless -> . UNLESS expresionCondicional cuerpo ELSE cuerpo END
    (64) impresion -> . PUTS datos
    (65) impresion -> . PUTS LOCALVAR
    (66) impresion -> . PRINT datos
    (67) impresion -> . PRINT LOCALVAR
    (134) operacionSet -> . set DOT ADD LPARENTHESES datos RPARENTHESES
    (135) operacionSet -> . set DOT ADD LPARENTHESES tiposvariables RPARENTHESES
    (136) operacionSet -> . set DOT CLEAR
    (137) operacionSet -> . set DOT DELETE LPARENTHESES datos RPARENTHESES
    (138) operacionSet -> . set DOT DELETE LPARENTHESES tiposvariables RPARENTHESES
    (91) operacionarray -> . array LBRACKET INTEGER RBRACKET
    (92) operacionarray -> . array DOT TAKE LPARENTHESES INTEGER RPARENTHESES
    (93) operacionarray -> . array DOT DROP LPARENTHESES INTEGER RPARENTHESES
    (94) operacionarray -> . array DOT push maspush
    (99) operacionarray -> . array DOT POP
    (100) operacionarray -> . array DOT POP LPARENTHESES INTEGER RPARENTHESES
    (101) operacionarray -> . array DOT DELETE LPARENTHESES INTEGER RPARENTHESES
    (102) operacionarray -> . array DOT LENGTH LPARENTHESES RPARENTHESES
    (103) operacionarray -> . array DOT EMPTY QUESTIONMARK
    (57) operacionHash -> . hash LBRACKET datos RBRACKET
    (58) operacionHash -> . hash LBRACKET datos RBRACKET EQUAL datos
    (59) operacionHash -> . hash DOT INCLUDE QUESTIONMARK LPARENTHESES datos RPARENTHESES
    (60) operacionHash -> . hash DOT DELETE LPARENTHESES datos RPARENTHESES
    (61) operacionHash -> . hash DOT KEYS
    (139) string -> . STRING PLUS STRING
    (140) string -> . STRING MULTIPLY INTEGER
    (141) string -> . STRING DOT stringOpt
    (43) tiposvariables -> . VAR
    (44) tiposvariables -> . LOCALVAR
    (45) tiposvariables -> . CONSTANT
    (52) hash -> . LCURLYBRACKET elementoHash RCURLYBRACKET
    (83) array -> . LBRACKET RBRACKET
    (84) array -> . LBRACKET datosarray RBRACKET
    (128) set -> . SET LBRACKET elementoSet RBRACKET

    END             reduce using rule 28 (cuerpo -> .)
    LOCALVAR        shift and go to state 16
    FOR             shift and go to state 18
    IF              shift and go to state 22
    UNLESS          shift and go to state 23
    PUTS            shift and go to state 24
    PRINT           shift and go to state 25
    STRING          shift and go to state 27
    VAR             shift and go to state 28
    CONSTANT        shift and go to state 29
    LCURLYBRACKET   shift and go to state 30
    LBRACKET        shift and go to state 26
    SET             shift and go to state 31

    cuerpo                         shift and go to state 242
    declaracion                    shift and go to state 4
    asignacion                     shift and go to state 5
    loop                           shift and go to state 6
    estructurasDatos               shift and go to state 7
    if                             shift and go to state 8
    unless                         shift and go to state 9
    impresion                      shift and go to state 10
    operacionSet                   shift and go to state 11
    operacionarray                 shift and go to state 12
    operacionHash                  shift and go to state 13
    string                         shift and go to state 14
    tiposvariables                 shift and go to state 17
    hash                           shift and go to state 19
    array                          shift and go to state 20
    set                            shift and go to state 21

state 196

    (123) boolean -> boolean operadorBinario boolean .
    (123) boolean -> boolean . operadorBinario boolean
    (119) operadorBinario -> . DOUBLEAMPERSAND
    (120) operadorBinario -> . DOUBLEPIPE

  ! shift/reduce conflict for DOUBLEAMPERSAND resolved as shift
  ! shift/reduce conflict for DOUBLEPIPE resolved as shift
    LOCALVAR        reduce using rule 123 (boolean -> boolean operadorBinario boolean .)
    FOR             reduce using rule 123 (boolean -> boolean operadorBinario boolean .)
    IF              reduce using rule 123 (boolean -> boolean operadorBinario boolean .)
    UNLESS          reduce using rule 123 (boolean -> boolean operadorBinario boolean .)
    PUTS            reduce using rule 123 (boolean -> boolean operadorBinario boolean .)
    PRINT           reduce using rule 123 (boolean -> boolean operadorBinario boolean .)
    STRING          reduce using rule 123 (boolean -> boolean operadorBinario boolean .)
    VAR             reduce using rule 123 (boolean -> boolean operadorBinario boolean .)
    CONSTANT        reduce using rule 123 (boolean -> boolean operadorBinario boolean .)
    LCURLYBRACKET   reduce using rule 123 (boolean -> boolean operadorBinario boolean .)
    LBRACKET        reduce using rule 123 (boolean -> boolean operadorBinario boolean .)
    SET             reduce using rule 123 (boolean -> boolean operadorBinario boolean .)
    ELSE            reduce using rule 123 (boolean -> boolean operadorBinario boolean .)
    RPARENTHESES    reduce using rule 123 (boolean -> boolean operadorBinario boolean .)
    DOUBLEAMPERSAND shift and go to state 141
    DOUBLEPIPE      shift and go to state 142

  ! DOUBLEAMPERSAND [ reduce using rule 123 (boolean -> boolean operadorBinario boolean .) ]
  ! DOUBLEPIPE      [ reduce using rule 123 (boolean -> boolean operadorBinario boolean .) ]

    operadorBinario                shift and go to state 140

state 197

    (122) boolean -> EXCLAMATION . LPARENTHESES condiciones RPARENTHESES

    LPARENTHESES    shift and go to state 243


state 198

    (118) expresionCondicional -> EXCLAMATION LPARENTHESES boolean . RPARENTHESES
    (123) boolean -> boolean . operadorBinario boolean
    (119) operadorBinario -> . DOUBLEAMPERSAND
    (120) operadorBinario -> . DOUBLEPIPE

    RPARENTHESES    shift and go to state 244
    DOUBLEAMPERSAND shift and go to state 141
    DOUBLEPIPE      shift and go to state 142

    operadorBinario                shift and go to state 140

state 199

    (122) boolean -> EXCLAMATION LPARENTHESES condiciones . RPARENTHESES
    (121) boolean -> condiciones .

  ! shift/reduce conflict for RPARENTHESES resolved as shift
    RPARENTHESES    shift and go to state 245
    DOUBLEAMPERSAND reduce using rule 121 (boolean -> condiciones .)
    DOUBLEPIPE      reduce using rule 121 (boolean -> condiciones .)

  ! RPARENTHESES    [ reduce using rule 121 (boolean -> condiciones .) ]


state 200

    (124) condiciones -> tiposvariables operadores tiposvariables .

    DOUBLEAMPERSAND reduce using rule 124 (condiciones -> tiposvariables operadores tiposvariables .)
    DOUBLEPIPE      reduce using rule 124 (condiciones -> tiposvariables operadores tiposvariables .)
    LOCALVAR        reduce using rule 124 (condiciones -> tiposvariables operadores tiposvariables .)
    FOR             reduce using rule 124 (condiciones -> tiposvariables operadores tiposvariables .)
    IF              reduce using rule 124 (condiciones -> tiposvariables operadores tiposvariables .)
    UNLESS          reduce using rule 124 (condiciones -> tiposvariables operadores tiposvariables .)
    PUTS            reduce using rule 124 (condiciones -> tiposvariables operadores tiposvariables .)
    PRINT           reduce using rule 124 (condiciones -> tiposvariables operadores tiposvariables .)
    STRING          reduce using rule 124 (condiciones -> tiposvariables operadores tiposvariables .)
    VAR             reduce using rule 124 (condiciones -> tiposvariables operadores tiposvariables .)
    CONSTANT        reduce using rule 124 (condiciones -> tiposvariables operadores tiposvariables .)
    LCURLYBRACKET   reduce using rule 124 (condiciones -> tiposvariables operadores tiposvariables .)
    LBRACKET        reduce using rule 124 (condiciones -> tiposvariables operadores tiposvariables .)
    SET             reduce using rule 124 (condiciones -> tiposvariables operadores tiposvariables .)
    ELSE            reduce using rule 124 (condiciones -> tiposvariables operadores tiposvariables .)
    RPARENTHESES    reduce using rule 124 (condiciones -> tiposvariables operadores tiposvariables .)


state 201

    (126) condiciones -> tiposvariables operadores datos .

    DOUBLEAMPERSAND reduce using rule 126 (condiciones -> tiposvariables operadores datos .)
    DOUBLEPIPE      reduce using rule 126 (condiciones -> tiposvariables operadores datos .)
    LOCALVAR        reduce using rule 126 (condiciones -> tiposvariables operadores datos .)
    FOR             reduce using rule 126 (condiciones -> tiposvariables operadores datos .)
    IF              reduce using rule 126 (condiciones -> tiposvariables operadores datos .)
    UNLESS          reduce using rule 126 (condiciones -> tiposvariables operadores datos .)
    PUTS            reduce using rule 126 (condiciones -> tiposvariables operadores datos .)
    PRINT           reduce using rule 126 (condiciones -> tiposvariables operadores datos .)
    STRING          reduce using rule 126 (condiciones -> tiposvariables operadores datos .)
    VAR             reduce using rule 126 (condiciones -> tiposvariables operadores datos .)
    CONSTANT        reduce using rule 126 (condiciones -> tiposvariables operadores datos .)
    LCURLYBRACKET   reduce using rule 126 (condiciones -> tiposvariables operadores datos .)
    LBRACKET        reduce using rule 126 (condiciones -> tiposvariables operadores datos .)
    SET             reduce using rule 126 (condiciones -> tiposvariables operadores datos .)
    ELSE            reduce using rule 126 (condiciones -> tiposvariables operadores datos .)
    RPARENTHESES    reduce using rule 126 (condiciones -> tiposvariables operadores datos .)


state 202

    (125) condiciones -> datos operadores datos .

    DOUBLEAMPERSAND reduce using rule 125 (condiciones -> datos operadores datos .)
    DOUBLEPIPE      reduce using rule 125 (condiciones -> datos operadores datos .)
    LOCALVAR        reduce using rule 125 (condiciones -> datos operadores datos .)
    FOR             reduce using rule 125 (condiciones -> datos operadores datos .)
    IF              reduce using rule 125 (condiciones -> datos operadores datos .)
    UNLESS          reduce using rule 125 (condiciones -> datos operadores datos .)
    PUTS            reduce using rule 125 (condiciones -> datos operadores datos .)
    PRINT           reduce using rule 125 (condiciones -> datos operadores datos .)
    STRING          reduce using rule 125 (condiciones -> datos operadores datos .)
    VAR             reduce using rule 125 (condiciones -> datos operadores datos .)
    CONSTANT        reduce using rule 125 (condiciones -> datos operadores datos .)
    LCURLYBRACKET   reduce using rule 125 (condiciones -> datos operadores datos .)
    LBRACKET        reduce using rule 125 (condiciones -> datos operadores datos .)
    SET             reduce using rule 125 (condiciones -> datos operadores datos .)
    ELSE            reduce using rule 125 (condiciones -> datos operadores datos .)
    RPARENTHESES    reduce using rule 125 (condiciones -> datos operadores datos .)


state 203

    (127) condiciones -> datos operadores tiposvariables .

    DOUBLEAMPERSAND reduce using rule 127 (condiciones -> datos operadores tiposvariables .)
    DOUBLEPIPE      reduce using rule 127 (condiciones -> datos operadores tiposvariables .)
    LOCALVAR        reduce using rule 127 (condiciones -> datos operadores tiposvariables .)
    FOR             reduce using rule 127 (condiciones -> datos operadores tiposvariables .)
    IF              reduce using rule 127 (condiciones -> datos operadores tiposvariables .)
    UNLESS          reduce using rule 127 (condiciones -> datos operadores tiposvariables .)
    PUTS            reduce using rule 127 (condiciones -> datos operadores tiposvariables .)
    PRINT           reduce using rule 127 (condiciones -> datos operadores tiposvariables .)
    STRING          reduce using rule 127 (condiciones -> datos operadores tiposvariables .)
    VAR             reduce using rule 127 (condiciones -> datos operadores tiposvariables .)
    CONSTANT        reduce using rule 127 (condiciones -> datos operadores tiposvariables .)
    LCURLYBRACKET   reduce using rule 127 (condiciones -> datos operadores tiposvariables .)
    LBRACKET        reduce using rule 127 (condiciones -> datos operadores tiposvariables .)
    SET             reduce using rule 127 (condiciones -> datos operadores tiposvariables .)
    ELSE            reduce using rule 127 (condiciones -> datos operadores tiposvariables .)
    RPARENTHESES    reduce using rule 127 (condiciones -> datos operadores tiposvariables .)


state 204

    (90) datosarray -> datosarray COMMA datosvarios .

    RBRACKET        reduce using rule 90 (datosarray -> datosarray COMMA datosvarios .)
    COMMA           reduce using rule 90 (datosarray -> datosarray COMMA datosvarios .)


state 205

    (146) stringOpt -> INSERT LPARENTHESES . INTEGER COMMA STRING RPARENTHESES

    INTEGER         shift and go to state 246


state 206

    (53) elementoHash -> datos EQUAL GREATERTHAN . datos maselementos
    (46) datos -> . INTEGER
    (47) datos -> . FLOAT
    (48) datos -> . STRING

    INTEGER         shift and go to state 74
    FLOAT           shift and go to state 75
    STRING          shift and go to state 66

    datos                          shift and go to state 247

state 207

    (128) set -> SET LBRACKET elementoSet RBRACKET .

    DOT             reduce using rule 128 (set -> SET LBRACKET elementoSet RBRACKET .)
    LOCALVAR        reduce using rule 128 (set -> SET LBRACKET elementoSet RBRACKET .)
    FOR             reduce using rule 128 (set -> SET LBRACKET elementoSet RBRACKET .)
    IF              reduce using rule 128 (set -> SET LBRACKET elementoSet RBRACKET .)
    UNLESS          reduce using rule 128 (set -> SET LBRACKET elementoSet RBRACKET .)
    PUTS            reduce using rule 128 (set -> SET LBRACKET elementoSet RBRACKET .)
    PRINT           reduce using rule 128 (set -> SET LBRACKET elementoSet RBRACKET .)
    STRING          reduce using rule 128 (set -> SET LBRACKET elementoSet RBRACKET .)
    VAR             reduce using rule 128 (set -> SET LBRACKET elementoSet RBRACKET .)
    CONSTANT        reduce using rule 128 (set -> SET LBRACKET elementoSet RBRACKET .)
    LCURLYBRACKET   reduce using rule 128 (set -> SET LBRACKET elementoSet RBRACKET .)
    LBRACKET        reduce using rule 128 (set -> SET LBRACKET elementoSet RBRACKET .)
    SET             reduce using rule 128 (set -> SET LBRACKET elementoSet RBRACKET .)
    $end            reduce using rule 128 (set -> SET LBRACKET elementoSet RBRACKET .)
    ELSE            reduce using rule 128 (set -> SET LBRACKET elementoSet RBRACKET .)
    END             reduce using rule 128 (set -> SET LBRACKET elementoSet RBRACKET .)
    RETURN          reduce using rule 128 (set -> SET LBRACKET elementoSet RBRACKET .)


state 208

    (131) elementoSet -> datos otroElemento .

    RBRACKET        reduce using rule 131 (elementoSet -> datos otroElemento .)
    COMMA           reduce using rule 131 (elementoSet -> datos otroElemento .)


state 209

    (133) otroElemento -> COMMA . elementoSet otroElemento
    (129) elementoSet -> .
    (130) elementoSet -> . datos
    (131) elementoSet -> . datos otroElemento
    (46) datos -> . INTEGER
    (47) datos -> . FLOAT
    (48) datos -> . STRING

    RBRACKET        reduce using rule 129 (elementoSet -> .)
    COMMA           reduce using rule 129 (elementoSet -> .)
    INTEGER         shift and go to state 74
    FLOAT           shift and go to state 75
    STRING          shift and go to state 66

    elementoSet                    shift and go to state 248
    datos                          shift and go to state 159

state 210

    (8) argumentos -> LOCALVAR EQUAL . LCURLYBRACKET RCURLYBRACKET
    (11) variosargumentos -> LOCALVAR EQUAL . datos
    (13) variosargumentos -> LOCALVAR EQUAL . datos masargumentos
    (46) datos -> . INTEGER
    (47) datos -> . FLOAT
    (48) datos -> . STRING

    LCURLYBRACKET   shift and go to state 249
    INTEGER         shift and go to state 74
    FLOAT           shift and go to state 75
    STRING          shift and go to state 66

    datos                          shift and go to state 250

state 211

    (9) argumentos -> LOCALVAR TWOPOINTS . datos
    (46) datos -> . INTEGER
    (47) datos -> . FLOAT
    (48) datos -> . STRING

    INTEGER         shift and go to state 74
    FLOAT           shift and go to state 75
    STRING          shift and go to state 66

    datos                          shift and go to state 251

state 212

    (12) variosargumentos -> LOCALVAR masargumentos .

    RPARENTHESES    reduce using rule 12 (variosargumentos -> LOCALVAR masargumentos .)


state 213

    (14) masargumentos -> COMMA . variosargumentos
    (10) variosargumentos -> . LOCALVAR
    (11) variosargumentos -> . LOCALVAR EQUAL datos
    (12) variosargumentos -> . LOCALVAR masargumentos
    (13) variosargumentos -> . LOCALVAR EQUAL datos masargumentos

    LOCALVAR        shift and go to state 253

    variosargumentos               shift and go to state 252

state 214

    (3) funcion -> DEF LOCALVAR LPARENTHESES argumentos RPARENTHESES . cuerpo END
    (4) funcion -> DEF LOCALVAR LPARENTHESES argumentos RPARENTHESES . cuerpo retornar END
    (17) cuerpo -> . declaracion cuerpo
    (18) cuerpo -> . asignacion cuerpo
    (19) cuerpo -> . loop cuerpo
    (20) cuerpo -> . estructurasDatos cuerpo
    (21) cuerpo -> . if cuerpo
    (22) cuerpo -> . unless cuerpo
    (23) cuerpo -> . impresion cuerpo
    (24) cuerpo -> . operacionSet cuerpo
    (25) cuerpo -> . operacionarray cuerpo
    (26) cuerpo -> . operacionHash cuerpo
    (27) cuerpo -> . string cuerpo
    (28) cuerpo -> .
    (30) declaracion -> . tiposvariables EQUAL datos
    (31) declaracion -> . tiposvariables EQUAL estructurasDatos
    (32) declaracion -> . tiposvariables EQUAL expresion
    (33) declaracion -> . tiposvariables EQUAL declaracion
    (34) declaracion -> . tiposvariables EQUAL casting
    (35) asignacion -> . LOCALVAR PLUSASSIGN datosAsignacion
    (36) asignacion -> . LOCALVAR MINASSIGN datosAsignacion
    (37) asignacion -> . LOCALVAR DIVASSIGN datosAsignacion
    (38) asignacion -> . LOCALVAR TIMESASSIGN datosAsignacion
    (39) asignacion -> . LOCALVAR MODASSIGN datosAsignacion
    (40) asignacion -> . LOCALVAR EXPASSIGN datosAsignacion
    (29) loop -> . FOR LOCALVAR IN rango cuerpo END
    (49) estructurasDatos -> . hash
    (50) estructurasDatos -> . array
    (51) estructurasDatos -> . set
    (106) if -> . IF datoscompletos operadores datoscompletos cuerpo END
    (107) if -> . IF datoscompletos operadores datoscompletos cuerpo else
    (116) unless -> . UNLESS expresionCondicional cuerpo ELSE cuerpo END
    (64) impresion -> . PUTS datos
    (65) impresion -> . PUTS LOCALVAR
    (66) impresion -> . PRINT datos
    (67) impresion -> . PRINT LOCALVAR
    (134) operacionSet -> . set DOT ADD LPARENTHESES datos RPARENTHESES
    (135) operacionSet -> . set DOT ADD LPARENTHESES tiposvariables RPARENTHESES
    (136) operacionSet -> . set DOT CLEAR
    (137) operacionSet -> . set DOT DELETE LPARENTHESES datos RPARENTHESES
    (138) operacionSet -> . set DOT DELETE LPARENTHESES tiposvariables RPARENTHESES
    (91) operacionarray -> . array LBRACKET INTEGER RBRACKET
    (92) operacionarray -> . array DOT TAKE LPARENTHESES INTEGER RPARENTHESES
    (93) operacionarray -> . array DOT DROP LPARENTHESES INTEGER RPARENTHESES
    (94) operacionarray -> . array DOT push maspush
    (99) operacionarray -> . array DOT POP
    (100) operacionarray -> . array DOT POP LPARENTHESES INTEGER RPARENTHESES
    (101) operacionarray -> . array DOT DELETE LPARENTHESES INTEGER RPARENTHESES
    (102) operacionarray -> . array DOT LENGTH LPARENTHESES RPARENTHESES
    (103) operacionarray -> . array DOT EMPTY QUESTIONMARK
    (57) operacionHash -> . hash LBRACKET datos RBRACKET
    (58) operacionHash -> . hash LBRACKET datos RBRACKET EQUAL datos
    (59) operacionHash -> . hash DOT INCLUDE QUESTIONMARK LPARENTHESES datos RPARENTHESES
    (60) operacionHash -> . hash DOT DELETE LPARENTHESES datos RPARENTHESES
    (61) operacionHash -> . hash DOT KEYS
    (139) string -> . STRING PLUS STRING
    (140) string -> . STRING MULTIPLY INTEGER
    (141) string -> . STRING DOT stringOpt
    (43) tiposvariables -> . VAR
    (44) tiposvariables -> . LOCALVAR
    (45) tiposvariables -> . CONSTANT
    (52) hash -> . LCURLYBRACKET elementoHash RCURLYBRACKET
    (83) array -> . LBRACKET RBRACKET
    (84) array -> . LBRACKET datosarray RBRACKET
    (128) set -> . SET LBRACKET elementoSet RBRACKET

    END             reduce using rule 28 (cuerpo -> .)
    RETURN          reduce using rule 28 (cuerpo -> .)
    LOCALVAR        shift and go to state 16
    FOR             shift and go to state 18
    IF              shift and go to state 22
    UNLESS          shift and go to state 23
    PUTS            shift and go to state 24
    PRINT           shift and go to state 25
    STRING          shift and go to state 27
    VAR             shift and go to state 28
    CONSTANT        shift and go to state 29
    LCURLYBRACKET   shift and go to state 30
    LBRACKET        shift and go to state 26
    SET             shift and go to state 31

    cuerpo                         shift and go to state 254
    declaracion                    shift and go to state 4
    asignacion                     shift and go to state 5
    loop                           shift and go to state 6
    estructurasDatos               shift and go to state 7
    if                             shift and go to state 8
    unless                         shift and go to state 9
    impresion                      shift and go to state 10
    operacionSet                   shift and go to state 11
    operacionarray                 shift and go to state 12
    operacionHash                  shift and go to state 13
    string                         shift and go to state 14
    tiposvariables                 shift and go to state 17
    hash                           shift and go to state 19
    array                          shift and go to state 20
    set                            shift and go to state 21

state 215

    (6) argumentos -> MULTIPLY LOCALVAR .

    RPARENTHESES    reduce using rule 6 (argumentos -> MULTIPLY LOCALVAR .)


state 216

    (7) argumentos -> TWOSTARS LOCALVAR .

    RPARENTHESES    reduce using rule 7 (argumentos -> TWOSTARS LOCALVAR .)


state 217

    (147) casting -> STRING DOT TO_I .

    LOCALVAR        reduce using rule 147 (casting -> STRING DOT TO_I .)
    FOR             reduce using rule 147 (casting -> STRING DOT TO_I .)
    IF              reduce using rule 147 (casting -> STRING DOT TO_I .)
    UNLESS          reduce using rule 147 (casting -> STRING DOT TO_I .)
    PUTS            reduce using rule 147 (casting -> STRING DOT TO_I .)
    PRINT           reduce using rule 147 (casting -> STRING DOT TO_I .)
    STRING          reduce using rule 147 (casting -> STRING DOT TO_I .)
    VAR             reduce using rule 147 (casting -> STRING DOT TO_I .)
    CONSTANT        reduce using rule 147 (casting -> STRING DOT TO_I .)
    LCURLYBRACKET   reduce using rule 147 (casting -> STRING DOT TO_I .)
    LBRACKET        reduce using rule 147 (casting -> STRING DOT TO_I .)
    SET             reduce using rule 147 (casting -> STRING DOT TO_I .)
    $end            reduce using rule 147 (casting -> STRING DOT TO_I .)
    ELSE            reduce using rule 147 (casting -> STRING DOT TO_I .)
    END             reduce using rule 147 (casting -> STRING DOT TO_I .)
    RETURN          reduce using rule 147 (casting -> STRING DOT TO_I .)


state 218

    (148) casting -> STRING DOT TO_F .

    LOCALVAR        reduce using rule 148 (casting -> STRING DOT TO_F .)
    FOR             reduce using rule 148 (casting -> STRING DOT TO_F .)
    IF              reduce using rule 148 (casting -> STRING DOT TO_F .)
    UNLESS          reduce using rule 148 (casting -> STRING DOT TO_F .)
    PUTS            reduce using rule 148 (casting -> STRING DOT TO_F .)
    PRINT           reduce using rule 148 (casting -> STRING DOT TO_F .)
    STRING          reduce using rule 148 (casting -> STRING DOT TO_F .)
    VAR             reduce using rule 148 (casting -> STRING DOT TO_F .)
    CONSTANT        reduce using rule 148 (casting -> STRING DOT TO_F .)
    LCURLYBRACKET   reduce using rule 148 (casting -> STRING DOT TO_F .)
    LBRACKET        reduce using rule 148 (casting -> STRING DOT TO_F .)
    SET             reduce using rule 148 (casting -> STRING DOT TO_F .)
    $end            reduce using rule 148 (casting -> STRING DOT TO_F .)
    ELSE            reduce using rule 148 (casting -> STRING DOT TO_F .)
    END             reduce using rule 148 (casting -> STRING DOT TO_F .)
    RETURN          reduce using rule 148 (casting -> STRING DOT TO_F .)


state 219

    (75) masoperaciones -> operador expresion . masoperaciones
    (77) masoperaciones -> operador expresion .
    (75) masoperaciones -> . operador expresion masoperaciones
    (76) masoperaciones -> . operador number
    (77) masoperaciones -> . operador expresion
    (78) operador -> . PLUS
    (79) operador -> . MINUS
    (80) operador -> . MULTIPLY
    (81) operador -> . DIVIDE
    (82) operador -> . PERCENTAGE

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for PERCENTAGE resolved as shift
    LOCALVAR        reduce using rule 77 (masoperaciones -> operador expresion .)
    FOR             reduce using rule 77 (masoperaciones -> operador expresion .)
    IF              reduce using rule 77 (masoperaciones -> operador expresion .)
    UNLESS          reduce using rule 77 (masoperaciones -> operador expresion .)
    PUTS            reduce using rule 77 (masoperaciones -> operador expresion .)
    PRINT           reduce using rule 77 (masoperaciones -> operador expresion .)
    STRING          reduce using rule 77 (masoperaciones -> operador expresion .)
    VAR             reduce using rule 77 (masoperaciones -> operador expresion .)
    CONSTANT        reduce using rule 77 (masoperaciones -> operador expresion .)
    LCURLYBRACKET   reduce using rule 77 (masoperaciones -> operador expresion .)
    LBRACKET        reduce using rule 77 (masoperaciones -> operador expresion .)
    SET             reduce using rule 77 (masoperaciones -> operador expresion .)
    $end            reduce using rule 77 (masoperaciones -> operador expresion .)
    ELSE            reduce using rule 77 (masoperaciones -> operador expresion .)
    END             reduce using rule 77 (masoperaciones -> operador expresion .)
    RETURN          reduce using rule 77 (masoperaciones -> operador expresion .)
    RPARENTHESES    reduce using rule 77 (masoperaciones -> operador expresion .)
    PLUS            shift and go to state 168
    MINUS           shift and go to state 169
    MULTIPLY        shift and go to state 170
    DIVIDE          shift and go to state 171
    PERCENTAGE      shift and go to state 172

  ! PLUS            [ reduce using rule 77 (masoperaciones -> operador expresion .) ]
  ! MINUS           [ reduce using rule 77 (masoperaciones -> operador expresion .) ]
  ! MULTIPLY        [ reduce using rule 77 (masoperaciones -> operador expresion .) ]
  ! DIVIDE          [ reduce using rule 77 (masoperaciones -> operador expresion .) ]
  ! PERCENTAGE      [ reduce using rule 77 (masoperaciones -> operador expresion .) ]

    operador                       shift and go to state 167
    masoperaciones                 shift and go to state 255

state 220

    (76) masoperaciones -> operador number .
    (73) operacion -> number . operador number
    (78) operador -> . PLUS
    (79) operador -> . MINUS
    (80) operador -> . MULTIPLY
    (81) operador -> . DIVIDE
    (82) operador -> . PERCENTAGE

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for PERCENTAGE resolved as shift
    LOCALVAR        reduce using rule 76 (masoperaciones -> operador number .)
    FOR             reduce using rule 76 (masoperaciones -> operador number .)
    IF              reduce using rule 76 (masoperaciones -> operador number .)
    UNLESS          reduce using rule 76 (masoperaciones -> operador number .)
    PUTS            reduce using rule 76 (masoperaciones -> operador number .)
    PRINT           reduce using rule 76 (masoperaciones -> operador number .)
    STRING          reduce using rule 76 (masoperaciones -> operador number .)
    VAR             reduce using rule 76 (masoperaciones -> operador number .)
    CONSTANT        reduce using rule 76 (masoperaciones -> operador number .)
    LCURLYBRACKET   reduce using rule 76 (masoperaciones -> operador number .)
    LBRACKET        reduce using rule 76 (masoperaciones -> operador number .)
    SET             reduce using rule 76 (masoperaciones -> operador number .)
    $end            reduce using rule 76 (masoperaciones -> operador number .)
    ELSE            reduce using rule 76 (masoperaciones -> operador number .)
    END             reduce using rule 76 (masoperaciones -> operador number .)
    RETURN          reduce using rule 76 (masoperaciones -> operador number .)
    RPARENTHESES    reduce using rule 76 (masoperaciones -> operador number .)
    PLUS            shift and go to state 168
    MINUS           shift and go to state 169
    MULTIPLY        shift and go to state 170
    DIVIDE          shift and go to state 171
    PERCENTAGE      shift and go to state 172

  ! PLUS            [ reduce using rule 76 (masoperaciones -> operador number .) ]
  ! MINUS           [ reduce using rule 76 (masoperaciones -> operador number .) ]
  ! MULTIPLY        [ reduce using rule 76 (masoperaciones -> operador number .) ]
  ! DIVIDE          [ reduce using rule 76 (masoperaciones -> operador number .) ]
  ! PERCENTAGE      [ reduce using rule 76 (masoperaciones -> operador number .) ]

    operador                       shift and go to state 176

state 221

    (71) expresion -> LPARENTHESES operacion RPARENTHESES .
    (72) expresion -> LPARENTHESES operacion RPARENTHESES . masoperaciones
    (75) masoperaciones -> . operador expresion masoperaciones
    (76) masoperaciones -> . operador number
    (77) masoperaciones -> . operador expresion
    (78) operador -> . PLUS
    (79) operador -> . MINUS
    (80) operador -> . MULTIPLY
    (81) operador -> . DIVIDE
    (82) operador -> . PERCENTAGE

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for PERCENTAGE resolved as shift
    LOCALVAR        reduce using rule 71 (expresion -> LPARENTHESES operacion RPARENTHESES .)
    FOR             reduce using rule 71 (expresion -> LPARENTHESES operacion RPARENTHESES .)
    IF              reduce using rule 71 (expresion -> LPARENTHESES operacion RPARENTHESES .)
    UNLESS          reduce using rule 71 (expresion -> LPARENTHESES operacion RPARENTHESES .)
    PUTS            reduce using rule 71 (expresion -> LPARENTHESES operacion RPARENTHESES .)
    PRINT           reduce using rule 71 (expresion -> LPARENTHESES operacion RPARENTHESES .)
    STRING          reduce using rule 71 (expresion -> LPARENTHESES operacion RPARENTHESES .)
    VAR             reduce using rule 71 (expresion -> LPARENTHESES operacion RPARENTHESES .)
    CONSTANT        reduce using rule 71 (expresion -> LPARENTHESES operacion RPARENTHESES .)
    LCURLYBRACKET   reduce using rule 71 (expresion -> LPARENTHESES operacion RPARENTHESES .)
    LBRACKET        reduce using rule 71 (expresion -> LPARENTHESES operacion RPARENTHESES .)
    SET             reduce using rule 71 (expresion -> LPARENTHESES operacion RPARENTHESES .)
    $end            reduce using rule 71 (expresion -> LPARENTHESES operacion RPARENTHESES .)
    ELSE            reduce using rule 71 (expresion -> LPARENTHESES operacion RPARENTHESES .)
    END             reduce using rule 71 (expresion -> LPARENTHESES operacion RPARENTHESES .)
    RETURN          reduce using rule 71 (expresion -> LPARENTHESES operacion RPARENTHESES .)
    RPARENTHESES    reduce using rule 71 (expresion -> LPARENTHESES operacion RPARENTHESES .)
    PLUS            shift and go to state 168
    MINUS           shift and go to state 169
    MULTIPLY        shift and go to state 170
    DIVIDE          shift and go to state 171
    PERCENTAGE      shift and go to state 172

  ! PLUS            [ reduce using rule 71 (expresion -> LPARENTHESES operacion RPARENTHESES .) ]
  ! MINUS           [ reduce using rule 71 (expresion -> LPARENTHESES operacion RPARENTHESES .) ]
  ! MULTIPLY        [ reduce using rule 71 (expresion -> LPARENTHESES operacion RPARENTHESES .) ]
  ! DIVIDE          [ reduce using rule 71 (expresion -> LPARENTHESES operacion RPARENTHESES .) ]
  ! PERCENTAGE      [ reduce using rule 71 (expresion -> LPARENTHESES operacion RPARENTHESES .) ]

    masoperaciones                 shift and go to state 256
    operador                       shift and go to state 167

state 222

    (149) casting -> number DOT TO_S .

    LOCALVAR        reduce using rule 149 (casting -> number DOT TO_S .)
    FOR             reduce using rule 149 (casting -> number DOT TO_S .)
    IF              reduce using rule 149 (casting -> number DOT TO_S .)
    UNLESS          reduce using rule 149 (casting -> number DOT TO_S .)
    PUTS            reduce using rule 149 (casting -> number DOT TO_S .)
    PRINT           reduce using rule 149 (casting -> number DOT TO_S .)
    STRING          reduce using rule 149 (casting -> number DOT TO_S .)
    VAR             reduce using rule 149 (casting -> number DOT TO_S .)
    CONSTANT        reduce using rule 149 (casting -> number DOT TO_S .)
    LCURLYBRACKET   reduce using rule 149 (casting -> number DOT TO_S .)
    LBRACKET        reduce using rule 149 (casting -> number DOT TO_S .)
    SET             reduce using rule 149 (casting -> number DOT TO_S .)
    $end            reduce using rule 149 (casting -> number DOT TO_S .)
    ELSE            reduce using rule 149 (casting -> number DOT TO_S .)
    END             reduce using rule 149 (casting -> number DOT TO_S .)
    RETURN          reduce using rule 149 (casting -> number DOT TO_S .)


state 223

    (73) operacion -> number operador number .

    PLUS            reduce using rule 73 (operacion -> number operador number .)
    MINUS           reduce using rule 73 (operacion -> number operador number .)
    MULTIPLY        reduce using rule 73 (operacion -> number operador number .)
    DIVIDE          reduce using rule 73 (operacion -> number operador number .)
    PERCENTAGE      reduce using rule 73 (operacion -> number operador number .)
    LOCALVAR        reduce using rule 73 (operacion -> number operador number .)
    FOR             reduce using rule 73 (operacion -> number operador number .)
    IF              reduce using rule 73 (operacion -> number operador number .)
    UNLESS          reduce using rule 73 (operacion -> number operador number .)
    PUTS            reduce using rule 73 (operacion -> number operador number .)
    PRINT           reduce using rule 73 (operacion -> number operador number .)
    STRING          reduce using rule 73 (operacion -> number operador number .)
    VAR             reduce using rule 73 (operacion -> number operador number .)
    CONSTANT        reduce using rule 73 (operacion -> number operador number .)
    LCURLYBRACKET   reduce using rule 73 (operacion -> number operador number .)
    LBRACKET        reduce using rule 73 (operacion -> number operador number .)
    SET             reduce using rule 73 (operacion -> number operador number .)
    $end            reduce using rule 73 (operacion -> number operador number .)
    ELSE            reduce using rule 73 (operacion -> number operador number .)
    END             reduce using rule 73 (operacion -> number operador number .)
    RETURN          reduce using rule 73 (operacion -> number operador number .)
    RPARENTHESES    reduce using rule 73 (operacion -> number operador number .)


state 224

    (29) loop -> FOR LOCALVAR IN rango cuerpo . END

    END             shift and go to state 257


state 225

    (62) rango -> INTEGER RANGEINCLUSIVE . INTEGER

    INTEGER         shift and go to state 258


state 226

    (63) rango -> INTEGER RANGEXCLUSIVE . INTEGER

    INTEGER         shift and go to state 259


state 227

    (58) operacionHash -> hash LBRACKET datos RBRACKET EQUAL . datos
    (46) datos -> . INTEGER
    (47) datos -> . FLOAT
    (48) datos -> . STRING

    INTEGER         shift and go to state 74
    FLOAT           shift and go to state 75
    STRING          shift and go to state 66

    datos                          shift and go to state 260

state 228

    (59) operacionHash -> hash DOT INCLUDE QUESTIONMARK LPARENTHESES . datos RPARENTHESES
    (46) datos -> . INTEGER
    (47) datos -> . FLOAT
    (48) datos -> . STRING

    INTEGER         shift and go to state 74
    FLOAT           shift and go to state 75
    STRING          shift and go to state 66

    datos                          shift and go to state 261

state 229

    (60) operacionHash -> hash DOT DELETE LPARENTHESES datos . RPARENTHESES

    RPARENTHESES    shift and go to state 262


state 230

    (92) operacionarray -> array DOT TAKE LPARENTHESES INTEGER . RPARENTHESES

    RPARENTHESES    shift and go to state 263


state 231

    (93) operacionarray -> array DOT DROP LPARENTHESES INTEGER . RPARENTHESES

    RPARENTHESES    shift and go to state 264


state 232

    (98) maspush -> DOT push . maspush
    (97) maspush -> .
    (98) maspush -> . DOT push maspush

    LOCALVAR        reduce using rule 97 (maspush -> .)
    FOR             reduce using rule 97 (maspush -> .)
    IF              reduce using rule 97 (maspush -> .)
    UNLESS          reduce using rule 97 (maspush -> .)
    PUTS            reduce using rule 97 (maspush -> .)
    PRINT           reduce using rule 97 (maspush -> .)
    STRING          reduce using rule 97 (maspush -> .)
    VAR             reduce using rule 97 (maspush -> .)
    CONSTANT        reduce using rule 97 (maspush -> .)
    LCURLYBRACKET   reduce using rule 97 (maspush -> .)
    LBRACKET        reduce using rule 97 (maspush -> .)
    SET             reduce using rule 97 (maspush -> .)
    $end            reduce using rule 97 (maspush -> .)
    ELSE            reduce using rule 97 (maspush -> .)
    END             reduce using rule 97 (maspush -> .)
    RETURN          reduce using rule 97 (maspush -> .)
    DOT             shift and go to state 185

    maspush                        shift and go to state 265

state 233

    (100) operacionarray -> array DOT POP LPARENTHESES INTEGER . RPARENTHESES

    RPARENTHESES    shift and go to state 266


state 234

    (101) operacionarray -> array DOT DELETE LPARENTHESES INTEGER . RPARENTHESES

    RPARENTHESES    shift and go to state 267


state 235

    (102) operacionarray -> array DOT LENGTH LPARENTHESES RPARENTHESES .

    LOCALVAR        reduce using rule 102 (operacionarray -> array DOT LENGTH LPARENTHESES RPARENTHESES .)
    FOR             reduce using rule 102 (operacionarray -> array DOT LENGTH LPARENTHESES RPARENTHESES .)
    IF              reduce using rule 102 (operacionarray -> array DOT LENGTH LPARENTHESES RPARENTHESES .)
    UNLESS          reduce using rule 102 (operacionarray -> array DOT LENGTH LPARENTHESES RPARENTHESES .)
    PUTS            reduce using rule 102 (operacionarray -> array DOT LENGTH LPARENTHESES RPARENTHESES .)
    PRINT           reduce using rule 102 (operacionarray -> array DOT LENGTH LPARENTHESES RPARENTHESES .)
    STRING          reduce using rule 102 (operacionarray -> array DOT LENGTH LPARENTHESES RPARENTHESES .)
    VAR             reduce using rule 102 (operacionarray -> array DOT LENGTH LPARENTHESES RPARENTHESES .)
    CONSTANT        reduce using rule 102 (operacionarray -> array DOT LENGTH LPARENTHESES RPARENTHESES .)
    LCURLYBRACKET   reduce using rule 102 (operacionarray -> array DOT LENGTH LPARENTHESES RPARENTHESES .)
    LBRACKET        reduce using rule 102 (operacionarray -> array DOT LENGTH LPARENTHESES RPARENTHESES .)
    SET             reduce using rule 102 (operacionarray -> array DOT LENGTH LPARENTHESES RPARENTHESES .)
    $end            reduce using rule 102 (operacionarray -> array DOT LENGTH LPARENTHESES RPARENTHESES .)
    ELSE            reduce using rule 102 (operacionarray -> array DOT LENGTH LPARENTHESES RPARENTHESES .)
    END             reduce using rule 102 (operacionarray -> array DOT LENGTH LPARENTHESES RPARENTHESES .)
    RETURN          reduce using rule 102 (operacionarray -> array DOT LENGTH LPARENTHESES RPARENTHESES .)


state 236

    (95) push -> PUSH LPARENTHESES datosvarios . RPARENTHESES

    RPARENTHESES    shift and go to state 268


state 237

    (134) operacionSet -> set DOT ADD LPARENTHESES datos . RPARENTHESES

    RPARENTHESES    shift and go to state 269


state 238

    (135) operacionSet -> set DOT ADD LPARENTHESES tiposvariables . RPARENTHESES

    RPARENTHESES    shift and go to state 270


state 239

    (137) operacionSet -> set DOT DELETE LPARENTHESES datos . RPARENTHESES

    RPARENTHESES    shift and go to state 271


state 240

    (138) operacionSet -> set DOT DELETE LPARENTHESES tiposvariables . RPARENTHESES

    RPARENTHESES    shift and go to state 272


state 241

    (106) if -> IF datoscompletos operadores datoscompletos cuerpo . END
    (107) if -> IF datoscompletos operadores datoscompletos cuerpo . else
    (108) else -> . ELSE cuerpo END

    END             shift and go to state 273
    ELSE            shift and go to state 275

    else                           shift and go to state 274

state 242

    (116) unless -> UNLESS expresionCondicional cuerpo ELSE cuerpo . END

    END             shift and go to state 276


state 243

    (122) boolean -> EXCLAMATION LPARENTHESES . condiciones RPARENTHESES
    (124) condiciones -> . tiposvariables operadores tiposvariables
    (125) condiciones -> . datos operadores datos
    (126) condiciones -> . tiposvariables operadores datos
    (127) condiciones -> . datos operadores tiposvariables
    (43) tiposvariables -> . VAR
    (44) tiposvariables -> . LOCALVAR
    (45) tiposvariables -> . CONSTANT
    (46) datos -> . INTEGER
    (47) datos -> . FLOAT
    (48) datos -> . STRING

    VAR             shift and go to state 28
    LOCALVAR        shift and go to state 73
    CONSTANT        shift and go to state 29
    INTEGER         shift and go to state 74
    FLOAT           shift and go to state 75
    STRING          shift and go to state 66

    condiciones                    shift and go to state 277
    tiposvariables                 shift and go to state 71
    datos                          shift and go to state 72

state 244

    (118) expresionCondicional -> EXCLAMATION LPARENTHESES boolean RPARENTHESES .

    LOCALVAR        reduce using rule 118 (expresionCondicional -> EXCLAMATION LPARENTHESES boolean RPARENTHESES .)
    FOR             reduce using rule 118 (expresionCondicional -> EXCLAMATION LPARENTHESES boolean RPARENTHESES .)
    IF              reduce using rule 118 (expresionCondicional -> EXCLAMATION LPARENTHESES boolean RPARENTHESES .)
    UNLESS          reduce using rule 118 (expresionCondicional -> EXCLAMATION LPARENTHESES boolean RPARENTHESES .)
    PUTS            reduce using rule 118 (expresionCondicional -> EXCLAMATION LPARENTHESES boolean RPARENTHESES .)
    PRINT           reduce using rule 118 (expresionCondicional -> EXCLAMATION LPARENTHESES boolean RPARENTHESES .)
    STRING          reduce using rule 118 (expresionCondicional -> EXCLAMATION LPARENTHESES boolean RPARENTHESES .)
    VAR             reduce using rule 118 (expresionCondicional -> EXCLAMATION LPARENTHESES boolean RPARENTHESES .)
    CONSTANT        reduce using rule 118 (expresionCondicional -> EXCLAMATION LPARENTHESES boolean RPARENTHESES .)
    LCURLYBRACKET   reduce using rule 118 (expresionCondicional -> EXCLAMATION LPARENTHESES boolean RPARENTHESES .)
    LBRACKET        reduce using rule 118 (expresionCondicional -> EXCLAMATION LPARENTHESES boolean RPARENTHESES .)
    SET             reduce using rule 118 (expresionCondicional -> EXCLAMATION LPARENTHESES boolean RPARENTHESES .)
    ELSE            reduce using rule 118 (expresionCondicional -> EXCLAMATION LPARENTHESES boolean RPARENTHESES .)


state 245

    (122) boolean -> EXCLAMATION LPARENTHESES condiciones RPARENTHESES .

    DOUBLEAMPERSAND reduce using rule 122 (boolean -> EXCLAMATION LPARENTHESES condiciones RPARENTHESES .)
    DOUBLEPIPE      reduce using rule 122 (boolean -> EXCLAMATION LPARENTHESES condiciones RPARENTHESES .)
    LOCALVAR        reduce using rule 122 (boolean -> EXCLAMATION LPARENTHESES condiciones RPARENTHESES .)
    FOR             reduce using rule 122 (boolean -> EXCLAMATION LPARENTHESES condiciones RPARENTHESES .)
    IF              reduce using rule 122 (boolean -> EXCLAMATION LPARENTHESES condiciones RPARENTHESES .)
    UNLESS          reduce using rule 122 (boolean -> EXCLAMATION LPARENTHESES condiciones RPARENTHESES .)
    PUTS            reduce using rule 122 (boolean -> EXCLAMATION LPARENTHESES condiciones RPARENTHESES .)
    PRINT           reduce using rule 122 (boolean -> EXCLAMATION LPARENTHESES condiciones RPARENTHESES .)
    STRING          reduce using rule 122 (boolean -> EXCLAMATION LPARENTHESES condiciones RPARENTHESES .)
    VAR             reduce using rule 122 (boolean -> EXCLAMATION LPARENTHESES condiciones RPARENTHESES .)
    CONSTANT        reduce using rule 122 (boolean -> EXCLAMATION LPARENTHESES condiciones RPARENTHESES .)
    LCURLYBRACKET   reduce using rule 122 (boolean -> EXCLAMATION LPARENTHESES condiciones RPARENTHESES .)
    LBRACKET        reduce using rule 122 (boolean -> EXCLAMATION LPARENTHESES condiciones RPARENTHESES .)
    SET             reduce using rule 122 (boolean -> EXCLAMATION LPARENTHESES condiciones RPARENTHESES .)
    ELSE            reduce using rule 122 (boolean -> EXCLAMATION LPARENTHESES condiciones RPARENTHESES .)
    RPARENTHESES    reduce using rule 122 (boolean -> EXCLAMATION LPARENTHESES condiciones RPARENTHESES .)


state 246

    (146) stringOpt -> INSERT LPARENTHESES INTEGER . COMMA STRING RPARENTHESES

    COMMA           shift and go to state 278


state 247

    (53) elementoHash -> datos EQUAL GREATERTHAN datos . maselementos
    (55) maselementos -> .
    (56) maselementos -> . COMMA elementoHash maselementos

  ! shift/reduce conflict for COMMA resolved as shift
    RCURLYBRACKET   reduce using rule 55 (maselementos -> .)
    COMMA           shift and go to state 280

  ! COMMA           [ reduce using rule 55 (maselementos -> .) ]

    maselementos                   shift and go to state 279

state 248

    (133) otroElemento -> COMMA elementoSet . otroElemento
    (132) otroElemento -> .
    (133) otroElemento -> . COMMA elementoSet otroElemento

  ! shift/reduce conflict for COMMA resolved as shift
    RBRACKET        reduce using rule 132 (otroElemento -> .)
    COMMA           shift and go to state 209

  ! COMMA           [ reduce using rule 132 (otroElemento -> .) ]

    otroElemento                   shift and go to state 281

state 249

    (8) argumentos -> LOCALVAR EQUAL LCURLYBRACKET . RCURLYBRACKET

    RCURLYBRACKET   shift and go to state 282


state 250

    (11) variosargumentos -> LOCALVAR EQUAL datos .
    (13) variosargumentos -> LOCALVAR EQUAL datos . masargumentos
    (14) masargumentos -> . COMMA variosargumentos

    RPARENTHESES    reduce using rule 11 (variosargumentos -> LOCALVAR EQUAL datos .)
    COMMA           shift and go to state 213

    masargumentos                  shift and go to state 283

state 251

    (9) argumentos -> LOCALVAR TWOPOINTS datos .

    RPARENTHESES    reduce using rule 9 (argumentos -> LOCALVAR TWOPOINTS datos .)


state 252

    (14) masargumentos -> COMMA variosargumentos .

    RPARENTHESES    reduce using rule 14 (masargumentos -> COMMA variosargumentos .)


state 253

    (10) variosargumentos -> LOCALVAR .
    (11) variosargumentos -> LOCALVAR . EQUAL datos
    (12) variosargumentos -> LOCALVAR . masargumentos
    (13) variosargumentos -> LOCALVAR . EQUAL datos masargumentos
    (14) masargumentos -> . COMMA variosargumentos

    RPARENTHESES    reduce using rule 10 (variosargumentos -> LOCALVAR .)
    EQUAL           shift and go to state 284
    COMMA           shift and go to state 213

    masargumentos                  shift and go to state 212

state 254

    (3) funcion -> DEF LOCALVAR LPARENTHESES argumentos RPARENTHESES cuerpo . END
    (4) funcion -> DEF LOCALVAR LPARENTHESES argumentos RPARENTHESES cuerpo . retornar END
    (15) retornar -> . RETURN LOCALVAR
    (16) retornar -> . RETURN datos

    END             shift and go to state 285
    RETURN          shift and go to state 287

    retornar                       shift and go to state 286

state 255

    (75) masoperaciones -> operador expresion masoperaciones .

    PLUS            reduce using rule 75 (masoperaciones -> operador expresion masoperaciones .)
    MINUS           reduce using rule 75 (masoperaciones -> operador expresion masoperaciones .)
    MULTIPLY        reduce using rule 75 (masoperaciones -> operador expresion masoperaciones .)
    DIVIDE          reduce using rule 75 (masoperaciones -> operador expresion masoperaciones .)
    PERCENTAGE      reduce using rule 75 (masoperaciones -> operador expresion masoperaciones .)
    LOCALVAR        reduce using rule 75 (masoperaciones -> operador expresion masoperaciones .)
    FOR             reduce using rule 75 (masoperaciones -> operador expresion masoperaciones .)
    IF              reduce using rule 75 (masoperaciones -> operador expresion masoperaciones .)
    UNLESS          reduce using rule 75 (masoperaciones -> operador expresion masoperaciones .)
    PUTS            reduce using rule 75 (masoperaciones -> operador expresion masoperaciones .)
    PRINT           reduce using rule 75 (masoperaciones -> operador expresion masoperaciones .)
    STRING          reduce using rule 75 (masoperaciones -> operador expresion masoperaciones .)
    VAR             reduce using rule 75 (masoperaciones -> operador expresion masoperaciones .)
    CONSTANT        reduce using rule 75 (masoperaciones -> operador expresion masoperaciones .)
    LCURLYBRACKET   reduce using rule 75 (masoperaciones -> operador expresion masoperaciones .)
    LBRACKET        reduce using rule 75 (masoperaciones -> operador expresion masoperaciones .)
    SET             reduce using rule 75 (masoperaciones -> operador expresion masoperaciones .)
    $end            reduce using rule 75 (masoperaciones -> operador expresion masoperaciones .)
    ELSE            reduce using rule 75 (masoperaciones -> operador expresion masoperaciones .)
    END             reduce using rule 75 (masoperaciones -> operador expresion masoperaciones .)
    RETURN          reduce using rule 75 (masoperaciones -> operador expresion masoperaciones .)
    RPARENTHESES    reduce using rule 75 (masoperaciones -> operador expresion masoperaciones .)


state 256

    (72) expresion -> LPARENTHESES operacion RPARENTHESES masoperaciones .

    LOCALVAR        reduce using rule 72 (expresion -> LPARENTHESES operacion RPARENTHESES masoperaciones .)
    FOR             reduce using rule 72 (expresion -> LPARENTHESES operacion RPARENTHESES masoperaciones .)
    IF              reduce using rule 72 (expresion -> LPARENTHESES operacion RPARENTHESES masoperaciones .)
    UNLESS          reduce using rule 72 (expresion -> LPARENTHESES operacion RPARENTHESES masoperaciones .)
    PUTS            reduce using rule 72 (expresion -> LPARENTHESES operacion RPARENTHESES masoperaciones .)
    PRINT           reduce using rule 72 (expresion -> LPARENTHESES operacion RPARENTHESES masoperaciones .)
    STRING          reduce using rule 72 (expresion -> LPARENTHESES operacion RPARENTHESES masoperaciones .)
    VAR             reduce using rule 72 (expresion -> LPARENTHESES operacion RPARENTHESES masoperaciones .)
    CONSTANT        reduce using rule 72 (expresion -> LPARENTHESES operacion RPARENTHESES masoperaciones .)
    LCURLYBRACKET   reduce using rule 72 (expresion -> LPARENTHESES operacion RPARENTHESES masoperaciones .)
    LBRACKET        reduce using rule 72 (expresion -> LPARENTHESES operacion RPARENTHESES masoperaciones .)
    SET             reduce using rule 72 (expresion -> LPARENTHESES operacion RPARENTHESES masoperaciones .)
    $end            reduce using rule 72 (expresion -> LPARENTHESES operacion RPARENTHESES masoperaciones .)
    ELSE            reduce using rule 72 (expresion -> LPARENTHESES operacion RPARENTHESES masoperaciones .)
    END             reduce using rule 72 (expresion -> LPARENTHESES operacion RPARENTHESES masoperaciones .)
    RETURN          reduce using rule 72 (expresion -> LPARENTHESES operacion RPARENTHESES masoperaciones .)
    PLUS            reduce using rule 72 (expresion -> LPARENTHESES operacion RPARENTHESES masoperaciones .)
    MINUS           reduce using rule 72 (expresion -> LPARENTHESES operacion RPARENTHESES masoperaciones .)
    MULTIPLY        reduce using rule 72 (expresion -> LPARENTHESES operacion RPARENTHESES masoperaciones .)
    DIVIDE          reduce using rule 72 (expresion -> LPARENTHESES operacion RPARENTHESES masoperaciones .)
    PERCENTAGE      reduce using rule 72 (expresion -> LPARENTHESES operacion RPARENTHESES masoperaciones .)
    RPARENTHESES    reduce using rule 72 (expresion -> LPARENTHESES operacion RPARENTHESES masoperaciones .)


state 257

    (29) loop -> FOR LOCALVAR IN rango cuerpo END .

    LOCALVAR        reduce using rule 29 (loop -> FOR LOCALVAR IN rango cuerpo END .)
    FOR             reduce using rule 29 (loop -> FOR LOCALVAR IN rango cuerpo END .)
    IF              reduce using rule 29 (loop -> FOR LOCALVAR IN rango cuerpo END .)
    UNLESS          reduce using rule 29 (loop -> FOR LOCALVAR IN rango cuerpo END .)
    PUTS            reduce using rule 29 (loop -> FOR LOCALVAR IN rango cuerpo END .)
    PRINT           reduce using rule 29 (loop -> FOR LOCALVAR IN rango cuerpo END .)
    STRING          reduce using rule 29 (loop -> FOR LOCALVAR IN rango cuerpo END .)
    VAR             reduce using rule 29 (loop -> FOR LOCALVAR IN rango cuerpo END .)
    CONSTANT        reduce using rule 29 (loop -> FOR LOCALVAR IN rango cuerpo END .)
    LCURLYBRACKET   reduce using rule 29 (loop -> FOR LOCALVAR IN rango cuerpo END .)
    LBRACKET        reduce using rule 29 (loop -> FOR LOCALVAR IN rango cuerpo END .)
    SET             reduce using rule 29 (loop -> FOR LOCALVAR IN rango cuerpo END .)
    $end            reduce using rule 29 (loop -> FOR LOCALVAR IN rango cuerpo END .)
    ELSE            reduce using rule 29 (loop -> FOR LOCALVAR IN rango cuerpo END .)
    END             reduce using rule 29 (loop -> FOR LOCALVAR IN rango cuerpo END .)
    RETURN          reduce using rule 29 (loop -> FOR LOCALVAR IN rango cuerpo END .)


state 258

    (62) rango -> INTEGER RANGEINCLUSIVE INTEGER .

    LOCALVAR        reduce using rule 62 (rango -> INTEGER RANGEINCLUSIVE INTEGER .)
    FOR             reduce using rule 62 (rango -> INTEGER RANGEINCLUSIVE INTEGER .)
    IF              reduce using rule 62 (rango -> INTEGER RANGEINCLUSIVE INTEGER .)
    UNLESS          reduce using rule 62 (rango -> INTEGER RANGEINCLUSIVE INTEGER .)
    PUTS            reduce using rule 62 (rango -> INTEGER RANGEINCLUSIVE INTEGER .)
    PRINT           reduce using rule 62 (rango -> INTEGER RANGEINCLUSIVE INTEGER .)
    STRING          reduce using rule 62 (rango -> INTEGER RANGEINCLUSIVE INTEGER .)
    VAR             reduce using rule 62 (rango -> INTEGER RANGEINCLUSIVE INTEGER .)
    CONSTANT        reduce using rule 62 (rango -> INTEGER RANGEINCLUSIVE INTEGER .)
    LCURLYBRACKET   reduce using rule 62 (rango -> INTEGER RANGEINCLUSIVE INTEGER .)
    LBRACKET        reduce using rule 62 (rango -> INTEGER RANGEINCLUSIVE INTEGER .)
    SET             reduce using rule 62 (rango -> INTEGER RANGEINCLUSIVE INTEGER .)
    END             reduce using rule 62 (rango -> INTEGER RANGEINCLUSIVE INTEGER .)


state 259

    (63) rango -> INTEGER RANGEXCLUSIVE INTEGER .

    LOCALVAR        reduce using rule 63 (rango -> INTEGER RANGEXCLUSIVE INTEGER .)
    FOR             reduce using rule 63 (rango -> INTEGER RANGEXCLUSIVE INTEGER .)
    IF              reduce using rule 63 (rango -> INTEGER RANGEXCLUSIVE INTEGER .)
    UNLESS          reduce using rule 63 (rango -> INTEGER RANGEXCLUSIVE INTEGER .)
    PUTS            reduce using rule 63 (rango -> INTEGER RANGEXCLUSIVE INTEGER .)
    PRINT           reduce using rule 63 (rango -> INTEGER RANGEXCLUSIVE INTEGER .)
    STRING          reduce using rule 63 (rango -> INTEGER RANGEXCLUSIVE INTEGER .)
    VAR             reduce using rule 63 (rango -> INTEGER RANGEXCLUSIVE INTEGER .)
    CONSTANT        reduce using rule 63 (rango -> INTEGER RANGEXCLUSIVE INTEGER .)
    LCURLYBRACKET   reduce using rule 63 (rango -> INTEGER RANGEXCLUSIVE INTEGER .)
    LBRACKET        reduce using rule 63 (rango -> INTEGER RANGEXCLUSIVE INTEGER .)
    SET             reduce using rule 63 (rango -> INTEGER RANGEXCLUSIVE INTEGER .)
    END             reduce using rule 63 (rango -> INTEGER RANGEXCLUSIVE INTEGER .)


state 260

    (58) operacionHash -> hash LBRACKET datos RBRACKET EQUAL datos .

    LOCALVAR        reduce using rule 58 (operacionHash -> hash LBRACKET datos RBRACKET EQUAL datos .)
    FOR             reduce using rule 58 (operacionHash -> hash LBRACKET datos RBRACKET EQUAL datos .)
    IF              reduce using rule 58 (operacionHash -> hash LBRACKET datos RBRACKET EQUAL datos .)
    UNLESS          reduce using rule 58 (operacionHash -> hash LBRACKET datos RBRACKET EQUAL datos .)
    PUTS            reduce using rule 58 (operacionHash -> hash LBRACKET datos RBRACKET EQUAL datos .)
    PRINT           reduce using rule 58 (operacionHash -> hash LBRACKET datos RBRACKET EQUAL datos .)
    STRING          reduce using rule 58 (operacionHash -> hash LBRACKET datos RBRACKET EQUAL datos .)
    VAR             reduce using rule 58 (operacionHash -> hash LBRACKET datos RBRACKET EQUAL datos .)
    CONSTANT        reduce using rule 58 (operacionHash -> hash LBRACKET datos RBRACKET EQUAL datos .)
    LCURLYBRACKET   reduce using rule 58 (operacionHash -> hash LBRACKET datos RBRACKET EQUAL datos .)
    LBRACKET        reduce using rule 58 (operacionHash -> hash LBRACKET datos RBRACKET EQUAL datos .)
    SET             reduce using rule 58 (operacionHash -> hash LBRACKET datos RBRACKET EQUAL datos .)
    $end            reduce using rule 58 (operacionHash -> hash LBRACKET datos RBRACKET EQUAL datos .)
    ELSE            reduce using rule 58 (operacionHash -> hash LBRACKET datos RBRACKET EQUAL datos .)
    END             reduce using rule 58 (operacionHash -> hash LBRACKET datos RBRACKET EQUAL datos .)
    RETURN          reduce using rule 58 (operacionHash -> hash LBRACKET datos RBRACKET EQUAL datos .)


state 261

    (59) operacionHash -> hash DOT INCLUDE QUESTIONMARK LPARENTHESES datos . RPARENTHESES

    RPARENTHESES    shift and go to state 288


state 262

    (60) operacionHash -> hash DOT DELETE LPARENTHESES datos RPARENTHESES .

    LOCALVAR        reduce using rule 60 (operacionHash -> hash DOT DELETE LPARENTHESES datos RPARENTHESES .)
    FOR             reduce using rule 60 (operacionHash -> hash DOT DELETE LPARENTHESES datos RPARENTHESES .)
    IF              reduce using rule 60 (operacionHash -> hash DOT DELETE LPARENTHESES datos RPARENTHESES .)
    UNLESS          reduce using rule 60 (operacionHash -> hash DOT DELETE LPARENTHESES datos RPARENTHESES .)
    PUTS            reduce using rule 60 (operacionHash -> hash DOT DELETE LPARENTHESES datos RPARENTHESES .)
    PRINT           reduce using rule 60 (operacionHash -> hash DOT DELETE LPARENTHESES datos RPARENTHESES .)
    STRING          reduce using rule 60 (operacionHash -> hash DOT DELETE LPARENTHESES datos RPARENTHESES .)
    VAR             reduce using rule 60 (operacionHash -> hash DOT DELETE LPARENTHESES datos RPARENTHESES .)
    CONSTANT        reduce using rule 60 (operacionHash -> hash DOT DELETE LPARENTHESES datos RPARENTHESES .)
    LCURLYBRACKET   reduce using rule 60 (operacionHash -> hash DOT DELETE LPARENTHESES datos RPARENTHESES .)
    LBRACKET        reduce using rule 60 (operacionHash -> hash DOT DELETE LPARENTHESES datos RPARENTHESES .)
    SET             reduce using rule 60 (operacionHash -> hash DOT DELETE LPARENTHESES datos RPARENTHESES .)
    $end            reduce using rule 60 (operacionHash -> hash DOT DELETE LPARENTHESES datos RPARENTHESES .)
    ELSE            reduce using rule 60 (operacionHash -> hash DOT DELETE LPARENTHESES datos RPARENTHESES .)
    END             reduce using rule 60 (operacionHash -> hash DOT DELETE LPARENTHESES datos RPARENTHESES .)
    RETURN          reduce using rule 60 (operacionHash -> hash DOT DELETE LPARENTHESES datos RPARENTHESES .)


state 263

    (92) operacionarray -> array DOT TAKE LPARENTHESES INTEGER RPARENTHESES .

    LOCALVAR        reduce using rule 92 (operacionarray -> array DOT TAKE LPARENTHESES INTEGER RPARENTHESES .)
    FOR             reduce using rule 92 (operacionarray -> array DOT TAKE LPARENTHESES INTEGER RPARENTHESES .)
    IF              reduce using rule 92 (operacionarray -> array DOT TAKE LPARENTHESES INTEGER RPARENTHESES .)
    UNLESS          reduce using rule 92 (operacionarray -> array DOT TAKE LPARENTHESES INTEGER RPARENTHESES .)
    PUTS            reduce using rule 92 (operacionarray -> array DOT TAKE LPARENTHESES INTEGER RPARENTHESES .)
    PRINT           reduce using rule 92 (operacionarray -> array DOT TAKE LPARENTHESES INTEGER RPARENTHESES .)
    STRING          reduce using rule 92 (operacionarray -> array DOT TAKE LPARENTHESES INTEGER RPARENTHESES .)
    VAR             reduce using rule 92 (operacionarray -> array DOT TAKE LPARENTHESES INTEGER RPARENTHESES .)
    CONSTANT        reduce using rule 92 (operacionarray -> array DOT TAKE LPARENTHESES INTEGER RPARENTHESES .)
    LCURLYBRACKET   reduce using rule 92 (operacionarray -> array DOT TAKE LPARENTHESES INTEGER RPARENTHESES .)
    LBRACKET        reduce using rule 92 (operacionarray -> array DOT TAKE LPARENTHESES INTEGER RPARENTHESES .)
    SET             reduce using rule 92 (operacionarray -> array DOT TAKE LPARENTHESES INTEGER RPARENTHESES .)
    $end            reduce using rule 92 (operacionarray -> array DOT TAKE LPARENTHESES INTEGER RPARENTHESES .)
    ELSE            reduce using rule 92 (operacionarray -> array DOT TAKE LPARENTHESES INTEGER RPARENTHESES .)
    END             reduce using rule 92 (operacionarray -> array DOT TAKE LPARENTHESES INTEGER RPARENTHESES .)
    RETURN          reduce using rule 92 (operacionarray -> array DOT TAKE LPARENTHESES INTEGER RPARENTHESES .)


state 264

    (93) operacionarray -> array DOT DROP LPARENTHESES INTEGER RPARENTHESES .

    LOCALVAR        reduce using rule 93 (operacionarray -> array DOT DROP LPARENTHESES INTEGER RPARENTHESES .)
    FOR             reduce using rule 93 (operacionarray -> array DOT DROP LPARENTHESES INTEGER RPARENTHESES .)
    IF              reduce using rule 93 (operacionarray -> array DOT DROP LPARENTHESES INTEGER RPARENTHESES .)
    UNLESS          reduce using rule 93 (operacionarray -> array DOT DROP LPARENTHESES INTEGER RPARENTHESES .)
    PUTS            reduce using rule 93 (operacionarray -> array DOT DROP LPARENTHESES INTEGER RPARENTHESES .)
    PRINT           reduce using rule 93 (operacionarray -> array DOT DROP LPARENTHESES INTEGER RPARENTHESES .)
    STRING          reduce using rule 93 (operacionarray -> array DOT DROP LPARENTHESES INTEGER RPARENTHESES .)
    VAR             reduce using rule 93 (operacionarray -> array DOT DROP LPARENTHESES INTEGER RPARENTHESES .)
    CONSTANT        reduce using rule 93 (operacionarray -> array DOT DROP LPARENTHESES INTEGER RPARENTHESES .)
    LCURLYBRACKET   reduce using rule 93 (operacionarray -> array DOT DROP LPARENTHESES INTEGER RPARENTHESES .)
    LBRACKET        reduce using rule 93 (operacionarray -> array DOT DROP LPARENTHESES INTEGER RPARENTHESES .)
    SET             reduce using rule 93 (operacionarray -> array DOT DROP LPARENTHESES INTEGER RPARENTHESES .)
    $end            reduce using rule 93 (operacionarray -> array DOT DROP LPARENTHESES INTEGER RPARENTHESES .)
    ELSE            reduce using rule 93 (operacionarray -> array DOT DROP LPARENTHESES INTEGER RPARENTHESES .)
    END             reduce using rule 93 (operacionarray -> array DOT DROP LPARENTHESES INTEGER RPARENTHESES .)
    RETURN          reduce using rule 93 (operacionarray -> array DOT DROP LPARENTHESES INTEGER RPARENTHESES .)


state 265

    (98) maspush -> DOT push maspush .

    LOCALVAR        reduce using rule 98 (maspush -> DOT push maspush .)
    FOR             reduce using rule 98 (maspush -> DOT push maspush .)
    IF              reduce using rule 98 (maspush -> DOT push maspush .)
    UNLESS          reduce using rule 98 (maspush -> DOT push maspush .)
    PUTS            reduce using rule 98 (maspush -> DOT push maspush .)
    PRINT           reduce using rule 98 (maspush -> DOT push maspush .)
    STRING          reduce using rule 98 (maspush -> DOT push maspush .)
    VAR             reduce using rule 98 (maspush -> DOT push maspush .)
    CONSTANT        reduce using rule 98 (maspush -> DOT push maspush .)
    LCURLYBRACKET   reduce using rule 98 (maspush -> DOT push maspush .)
    LBRACKET        reduce using rule 98 (maspush -> DOT push maspush .)
    SET             reduce using rule 98 (maspush -> DOT push maspush .)
    $end            reduce using rule 98 (maspush -> DOT push maspush .)
    ELSE            reduce using rule 98 (maspush -> DOT push maspush .)
    END             reduce using rule 98 (maspush -> DOT push maspush .)
    RETURN          reduce using rule 98 (maspush -> DOT push maspush .)


state 266

    (100) operacionarray -> array DOT POP LPARENTHESES INTEGER RPARENTHESES .

    LOCALVAR        reduce using rule 100 (operacionarray -> array DOT POP LPARENTHESES INTEGER RPARENTHESES .)
    FOR             reduce using rule 100 (operacionarray -> array DOT POP LPARENTHESES INTEGER RPARENTHESES .)
    IF              reduce using rule 100 (operacionarray -> array DOT POP LPARENTHESES INTEGER RPARENTHESES .)
    UNLESS          reduce using rule 100 (operacionarray -> array DOT POP LPARENTHESES INTEGER RPARENTHESES .)
    PUTS            reduce using rule 100 (operacionarray -> array DOT POP LPARENTHESES INTEGER RPARENTHESES .)
    PRINT           reduce using rule 100 (operacionarray -> array DOT POP LPARENTHESES INTEGER RPARENTHESES .)
    STRING          reduce using rule 100 (operacionarray -> array DOT POP LPARENTHESES INTEGER RPARENTHESES .)
    VAR             reduce using rule 100 (operacionarray -> array DOT POP LPARENTHESES INTEGER RPARENTHESES .)
    CONSTANT        reduce using rule 100 (operacionarray -> array DOT POP LPARENTHESES INTEGER RPARENTHESES .)
    LCURLYBRACKET   reduce using rule 100 (operacionarray -> array DOT POP LPARENTHESES INTEGER RPARENTHESES .)
    LBRACKET        reduce using rule 100 (operacionarray -> array DOT POP LPARENTHESES INTEGER RPARENTHESES .)
    SET             reduce using rule 100 (operacionarray -> array DOT POP LPARENTHESES INTEGER RPARENTHESES .)
    $end            reduce using rule 100 (operacionarray -> array DOT POP LPARENTHESES INTEGER RPARENTHESES .)
    ELSE            reduce using rule 100 (operacionarray -> array DOT POP LPARENTHESES INTEGER RPARENTHESES .)
    END             reduce using rule 100 (operacionarray -> array DOT POP LPARENTHESES INTEGER RPARENTHESES .)
    RETURN          reduce using rule 100 (operacionarray -> array DOT POP LPARENTHESES INTEGER RPARENTHESES .)


state 267

    (101) operacionarray -> array DOT DELETE LPARENTHESES INTEGER RPARENTHESES .

    LOCALVAR        reduce using rule 101 (operacionarray -> array DOT DELETE LPARENTHESES INTEGER RPARENTHESES .)
    FOR             reduce using rule 101 (operacionarray -> array DOT DELETE LPARENTHESES INTEGER RPARENTHESES .)
    IF              reduce using rule 101 (operacionarray -> array DOT DELETE LPARENTHESES INTEGER RPARENTHESES .)
    UNLESS          reduce using rule 101 (operacionarray -> array DOT DELETE LPARENTHESES INTEGER RPARENTHESES .)
    PUTS            reduce using rule 101 (operacionarray -> array DOT DELETE LPARENTHESES INTEGER RPARENTHESES .)
    PRINT           reduce using rule 101 (operacionarray -> array DOT DELETE LPARENTHESES INTEGER RPARENTHESES .)
    STRING          reduce using rule 101 (operacionarray -> array DOT DELETE LPARENTHESES INTEGER RPARENTHESES .)
    VAR             reduce using rule 101 (operacionarray -> array DOT DELETE LPARENTHESES INTEGER RPARENTHESES .)
    CONSTANT        reduce using rule 101 (operacionarray -> array DOT DELETE LPARENTHESES INTEGER RPARENTHESES .)
    LCURLYBRACKET   reduce using rule 101 (operacionarray -> array DOT DELETE LPARENTHESES INTEGER RPARENTHESES .)
    LBRACKET        reduce using rule 101 (operacionarray -> array DOT DELETE LPARENTHESES INTEGER RPARENTHESES .)
    SET             reduce using rule 101 (operacionarray -> array DOT DELETE LPARENTHESES INTEGER RPARENTHESES .)
    $end            reduce using rule 101 (operacionarray -> array DOT DELETE LPARENTHESES INTEGER RPARENTHESES .)
    ELSE            reduce using rule 101 (operacionarray -> array DOT DELETE LPARENTHESES INTEGER RPARENTHESES .)
    END             reduce using rule 101 (operacionarray -> array DOT DELETE LPARENTHESES INTEGER RPARENTHESES .)
    RETURN          reduce using rule 101 (operacionarray -> array DOT DELETE LPARENTHESES INTEGER RPARENTHESES .)


state 268

    (95) push -> PUSH LPARENTHESES datosvarios RPARENTHESES .

    DOT             reduce using rule 95 (push -> PUSH LPARENTHESES datosvarios RPARENTHESES .)
    LOCALVAR        reduce using rule 95 (push -> PUSH LPARENTHESES datosvarios RPARENTHESES .)
    FOR             reduce using rule 95 (push -> PUSH LPARENTHESES datosvarios RPARENTHESES .)
    IF              reduce using rule 95 (push -> PUSH LPARENTHESES datosvarios RPARENTHESES .)
    UNLESS          reduce using rule 95 (push -> PUSH LPARENTHESES datosvarios RPARENTHESES .)
    PUTS            reduce using rule 95 (push -> PUSH LPARENTHESES datosvarios RPARENTHESES .)
    PRINT           reduce using rule 95 (push -> PUSH LPARENTHESES datosvarios RPARENTHESES .)
    STRING          reduce using rule 95 (push -> PUSH LPARENTHESES datosvarios RPARENTHESES .)
    VAR             reduce using rule 95 (push -> PUSH LPARENTHESES datosvarios RPARENTHESES .)
    CONSTANT        reduce using rule 95 (push -> PUSH LPARENTHESES datosvarios RPARENTHESES .)
    LCURLYBRACKET   reduce using rule 95 (push -> PUSH LPARENTHESES datosvarios RPARENTHESES .)
    LBRACKET        reduce using rule 95 (push -> PUSH LPARENTHESES datosvarios RPARENTHESES .)
    SET             reduce using rule 95 (push -> PUSH LPARENTHESES datosvarios RPARENTHESES .)
    $end            reduce using rule 95 (push -> PUSH LPARENTHESES datosvarios RPARENTHESES .)
    ELSE            reduce using rule 95 (push -> PUSH LPARENTHESES datosvarios RPARENTHESES .)
    END             reduce using rule 95 (push -> PUSH LPARENTHESES datosvarios RPARENTHESES .)
    RETURN          reduce using rule 95 (push -> PUSH LPARENTHESES datosvarios RPARENTHESES .)


state 269

    (134) operacionSet -> set DOT ADD LPARENTHESES datos RPARENTHESES .

    LOCALVAR        reduce using rule 134 (operacionSet -> set DOT ADD LPARENTHESES datos RPARENTHESES .)
    FOR             reduce using rule 134 (operacionSet -> set DOT ADD LPARENTHESES datos RPARENTHESES .)
    IF              reduce using rule 134 (operacionSet -> set DOT ADD LPARENTHESES datos RPARENTHESES .)
    UNLESS          reduce using rule 134 (operacionSet -> set DOT ADD LPARENTHESES datos RPARENTHESES .)
    PUTS            reduce using rule 134 (operacionSet -> set DOT ADD LPARENTHESES datos RPARENTHESES .)
    PRINT           reduce using rule 134 (operacionSet -> set DOT ADD LPARENTHESES datos RPARENTHESES .)
    STRING          reduce using rule 134 (operacionSet -> set DOT ADD LPARENTHESES datos RPARENTHESES .)
    VAR             reduce using rule 134 (operacionSet -> set DOT ADD LPARENTHESES datos RPARENTHESES .)
    CONSTANT        reduce using rule 134 (operacionSet -> set DOT ADD LPARENTHESES datos RPARENTHESES .)
    LCURLYBRACKET   reduce using rule 134 (operacionSet -> set DOT ADD LPARENTHESES datos RPARENTHESES .)
    LBRACKET        reduce using rule 134 (operacionSet -> set DOT ADD LPARENTHESES datos RPARENTHESES .)
    SET             reduce using rule 134 (operacionSet -> set DOT ADD LPARENTHESES datos RPARENTHESES .)
    $end            reduce using rule 134 (operacionSet -> set DOT ADD LPARENTHESES datos RPARENTHESES .)
    ELSE            reduce using rule 134 (operacionSet -> set DOT ADD LPARENTHESES datos RPARENTHESES .)
    END             reduce using rule 134 (operacionSet -> set DOT ADD LPARENTHESES datos RPARENTHESES .)
    RETURN          reduce using rule 134 (operacionSet -> set DOT ADD LPARENTHESES datos RPARENTHESES .)


state 270

    (135) operacionSet -> set DOT ADD LPARENTHESES tiposvariables RPARENTHESES .

    LOCALVAR        reduce using rule 135 (operacionSet -> set DOT ADD LPARENTHESES tiposvariables RPARENTHESES .)
    FOR             reduce using rule 135 (operacionSet -> set DOT ADD LPARENTHESES tiposvariables RPARENTHESES .)
    IF              reduce using rule 135 (operacionSet -> set DOT ADD LPARENTHESES tiposvariables RPARENTHESES .)
    UNLESS          reduce using rule 135 (operacionSet -> set DOT ADD LPARENTHESES tiposvariables RPARENTHESES .)
    PUTS            reduce using rule 135 (operacionSet -> set DOT ADD LPARENTHESES tiposvariables RPARENTHESES .)
    PRINT           reduce using rule 135 (operacionSet -> set DOT ADD LPARENTHESES tiposvariables RPARENTHESES .)
    STRING          reduce using rule 135 (operacionSet -> set DOT ADD LPARENTHESES tiposvariables RPARENTHESES .)
    VAR             reduce using rule 135 (operacionSet -> set DOT ADD LPARENTHESES tiposvariables RPARENTHESES .)
    CONSTANT        reduce using rule 135 (operacionSet -> set DOT ADD LPARENTHESES tiposvariables RPARENTHESES .)
    LCURLYBRACKET   reduce using rule 135 (operacionSet -> set DOT ADD LPARENTHESES tiposvariables RPARENTHESES .)
    LBRACKET        reduce using rule 135 (operacionSet -> set DOT ADD LPARENTHESES tiposvariables RPARENTHESES .)
    SET             reduce using rule 135 (operacionSet -> set DOT ADD LPARENTHESES tiposvariables RPARENTHESES .)
    $end            reduce using rule 135 (operacionSet -> set DOT ADD LPARENTHESES tiposvariables RPARENTHESES .)
    ELSE            reduce using rule 135 (operacionSet -> set DOT ADD LPARENTHESES tiposvariables RPARENTHESES .)
    END             reduce using rule 135 (operacionSet -> set DOT ADD LPARENTHESES tiposvariables RPARENTHESES .)
    RETURN          reduce using rule 135 (operacionSet -> set DOT ADD LPARENTHESES tiposvariables RPARENTHESES .)


state 271

    (137) operacionSet -> set DOT DELETE LPARENTHESES datos RPARENTHESES .

    LOCALVAR        reduce using rule 137 (operacionSet -> set DOT DELETE LPARENTHESES datos RPARENTHESES .)
    FOR             reduce using rule 137 (operacionSet -> set DOT DELETE LPARENTHESES datos RPARENTHESES .)
    IF              reduce using rule 137 (operacionSet -> set DOT DELETE LPARENTHESES datos RPARENTHESES .)
    UNLESS          reduce using rule 137 (operacionSet -> set DOT DELETE LPARENTHESES datos RPARENTHESES .)
    PUTS            reduce using rule 137 (operacionSet -> set DOT DELETE LPARENTHESES datos RPARENTHESES .)
    PRINT           reduce using rule 137 (operacionSet -> set DOT DELETE LPARENTHESES datos RPARENTHESES .)
    STRING          reduce using rule 137 (operacionSet -> set DOT DELETE LPARENTHESES datos RPARENTHESES .)
    VAR             reduce using rule 137 (operacionSet -> set DOT DELETE LPARENTHESES datos RPARENTHESES .)
    CONSTANT        reduce using rule 137 (operacionSet -> set DOT DELETE LPARENTHESES datos RPARENTHESES .)
    LCURLYBRACKET   reduce using rule 137 (operacionSet -> set DOT DELETE LPARENTHESES datos RPARENTHESES .)
    LBRACKET        reduce using rule 137 (operacionSet -> set DOT DELETE LPARENTHESES datos RPARENTHESES .)
    SET             reduce using rule 137 (operacionSet -> set DOT DELETE LPARENTHESES datos RPARENTHESES .)
    $end            reduce using rule 137 (operacionSet -> set DOT DELETE LPARENTHESES datos RPARENTHESES .)
    ELSE            reduce using rule 137 (operacionSet -> set DOT DELETE LPARENTHESES datos RPARENTHESES .)
    END             reduce using rule 137 (operacionSet -> set DOT DELETE LPARENTHESES datos RPARENTHESES .)
    RETURN          reduce using rule 137 (operacionSet -> set DOT DELETE LPARENTHESES datos RPARENTHESES .)


state 272

    (138) operacionSet -> set DOT DELETE LPARENTHESES tiposvariables RPARENTHESES .

    LOCALVAR        reduce using rule 138 (operacionSet -> set DOT DELETE LPARENTHESES tiposvariables RPARENTHESES .)
    FOR             reduce using rule 138 (operacionSet -> set DOT DELETE LPARENTHESES tiposvariables RPARENTHESES .)
    IF              reduce using rule 138 (operacionSet -> set DOT DELETE LPARENTHESES tiposvariables RPARENTHESES .)
    UNLESS          reduce using rule 138 (operacionSet -> set DOT DELETE LPARENTHESES tiposvariables RPARENTHESES .)
    PUTS            reduce using rule 138 (operacionSet -> set DOT DELETE LPARENTHESES tiposvariables RPARENTHESES .)
    PRINT           reduce using rule 138 (operacionSet -> set DOT DELETE LPARENTHESES tiposvariables RPARENTHESES .)
    STRING          reduce using rule 138 (operacionSet -> set DOT DELETE LPARENTHESES tiposvariables RPARENTHESES .)
    VAR             reduce using rule 138 (operacionSet -> set DOT DELETE LPARENTHESES tiposvariables RPARENTHESES .)
    CONSTANT        reduce using rule 138 (operacionSet -> set DOT DELETE LPARENTHESES tiposvariables RPARENTHESES .)
    LCURLYBRACKET   reduce using rule 138 (operacionSet -> set DOT DELETE LPARENTHESES tiposvariables RPARENTHESES .)
    LBRACKET        reduce using rule 138 (operacionSet -> set DOT DELETE LPARENTHESES tiposvariables RPARENTHESES .)
    SET             reduce using rule 138 (operacionSet -> set DOT DELETE LPARENTHESES tiposvariables RPARENTHESES .)
    $end            reduce using rule 138 (operacionSet -> set DOT DELETE LPARENTHESES tiposvariables RPARENTHESES .)
    ELSE            reduce using rule 138 (operacionSet -> set DOT DELETE LPARENTHESES tiposvariables RPARENTHESES .)
    END             reduce using rule 138 (operacionSet -> set DOT DELETE LPARENTHESES tiposvariables RPARENTHESES .)
    RETURN          reduce using rule 138 (operacionSet -> set DOT DELETE LPARENTHESES tiposvariables RPARENTHESES .)


state 273

    (106) if -> IF datoscompletos operadores datoscompletos cuerpo END .

    LOCALVAR        reduce using rule 106 (if -> IF datoscompletos operadores datoscompletos cuerpo END .)
    FOR             reduce using rule 106 (if -> IF datoscompletos operadores datoscompletos cuerpo END .)
    IF              reduce using rule 106 (if -> IF datoscompletos operadores datoscompletos cuerpo END .)
    UNLESS          reduce using rule 106 (if -> IF datoscompletos operadores datoscompletos cuerpo END .)
    PUTS            reduce using rule 106 (if -> IF datoscompletos operadores datoscompletos cuerpo END .)
    PRINT           reduce using rule 106 (if -> IF datoscompletos operadores datoscompletos cuerpo END .)
    STRING          reduce using rule 106 (if -> IF datoscompletos operadores datoscompletos cuerpo END .)
    VAR             reduce using rule 106 (if -> IF datoscompletos operadores datoscompletos cuerpo END .)
    CONSTANT        reduce using rule 106 (if -> IF datoscompletos operadores datoscompletos cuerpo END .)
    LCURLYBRACKET   reduce using rule 106 (if -> IF datoscompletos operadores datoscompletos cuerpo END .)
    LBRACKET        reduce using rule 106 (if -> IF datoscompletos operadores datoscompletos cuerpo END .)
    SET             reduce using rule 106 (if -> IF datoscompletos operadores datoscompletos cuerpo END .)
    $end            reduce using rule 106 (if -> IF datoscompletos operadores datoscompletos cuerpo END .)
    ELSE            reduce using rule 106 (if -> IF datoscompletos operadores datoscompletos cuerpo END .)
    END             reduce using rule 106 (if -> IF datoscompletos operadores datoscompletos cuerpo END .)
    RETURN          reduce using rule 106 (if -> IF datoscompletos operadores datoscompletos cuerpo END .)


state 274

    (107) if -> IF datoscompletos operadores datoscompletos cuerpo else .

    LOCALVAR        reduce using rule 107 (if -> IF datoscompletos operadores datoscompletos cuerpo else .)
    FOR             reduce using rule 107 (if -> IF datoscompletos operadores datoscompletos cuerpo else .)
    IF              reduce using rule 107 (if -> IF datoscompletos operadores datoscompletos cuerpo else .)
    UNLESS          reduce using rule 107 (if -> IF datoscompletos operadores datoscompletos cuerpo else .)
    PUTS            reduce using rule 107 (if -> IF datoscompletos operadores datoscompletos cuerpo else .)
    PRINT           reduce using rule 107 (if -> IF datoscompletos operadores datoscompletos cuerpo else .)
    STRING          reduce using rule 107 (if -> IF datoscompletos operadores datoscompletos cuerpo else .)
    VAR             reduce using rule 107 (if -> IF datoscompletos operadores datoscompletos cuerpo else .)
    CONSTANT        reduce using rule 107 (if -> IF datoscompletos operadores datoscompletos cuerpo else .)
    LCURLYBRACKET   reduce using rule 107 (if -> IF datoscompletos operadores datoscompletos cuerpo else .)
    LBRACKET        reduce using rule 107 (if -> IF datoscompletos operadores datoscompletos cuerpo else .)
    SET             reduce using rule 107 (if -> IF datoscompletos operadores datoscompletos cuerpo else .)
    $end            reduce using rule 107 (if -> IF datoscompletos operadores datoscompletos cuerpo else .)
    ELSE            reduce using rule 107 (if -> IF datoscompletos operadores datoscompletos cuerpo else .)
    END             reduce using rule 107 (if -> IF datoscompletos operadores datoscompletos cuerpo else .)
    RETURN          reduce using rule 107 (if -> IF datoscompletos operadores datoscompletos cuerpo else .)


state 275

    (108) else -> ELSE . cuerpo END
    (17) cuerpo -> . declaracion cuerpo
    (18) cuerpo -> . asignacion cuerpo
    (19) cuerpo -> . loop cuerpo
    (20) cuerpo -> . estructurasDatos cuerpo
    (21) cuerpo -> . if cuerpo
    (22) cuerpo -> . unless cuerpo
    (23) cuerpo -> . impresion cuerpo
    (24) cuerpo -> . operacionSet cuerpo
    (25) cuerpo -> . operacionarray cuerpo
    (26) cuerpo -> . operacionHash cuerpo
    (27) cuerpo -> . string cuerpo
    (28) cuerpo -> .
    (30) declaracion -> . tiposvariables EQUAL datos
    (31) declaracion -> . tiposvariables EQUAL estructurasDatos
    (32) declaracion -> . tiposvariables EQUAL expresion
    (33) declaracion -> . tiposvariables EQUAL declaracion
    (34) declaracion -> . tiposvariables EQUAL casting
    (35) asignacion -> . LOCALVAR PLUSASSIGN datosAsignacion
    (36) asignacion -> . LOCALVAR MINASSIGN datosAsignacion
    (37) asignacion -> . LOCALVAR DIVASSIGN datosAsignacion
    (38) asignacion -> . LOCALVAR TIMESASSIGN datosAsignacion
    (39) asignacion -> . LOCALVAR MODASSIGN datosAsignacion
    (40) asignacion -> . LOCALVAR EXPASSIGN datosAsignacion
    (29) loop -> . FOR LOCALVAR IN rango cuerpo END
    (49) estructurasDatos -> . hash
    (50) estructurasDatos -> . array
    (51) estructurasDatos -> . set
    (106) if -> . IF datoscompletos operadores datoscompletos cuerpo END
    (107) if -> . IF datoscompletos operadores datoscompletos cuerpo else
    (116) unless -> . UNLESS expresionCondicional cuerpo ELSE cuerpo END
    (64) impresion -> . PUTS datos
    (65) impresion -> . PUTS LOCALVAR
    (66) impresion -> . PRINT datos
    (67) impresion -> . PRINT LOCALVAR
    (134) operacionSet -> . set DOT ADD LPARENTHESES datos RPARENTHESES
    (135) operacionSet -> . set DOT ADD LPARENTHESES tiposvariables RPARENTHESES
    (136) operacionSet -> . set DOT CLEAR
    (137) operacionSet -> . set DOT DELETE LPARENTHESES datos RPARENTHESES
    (138) operacionSet -> . set DOT DELETE LPARENTHESES tiposvariables RPARENTHESES
    (91) operacionarray -> . array LBRACKET INTEGER RBRACKET
    (92) operacionarray -> . array DOT TAKE LPARENTHESES INTEGER RPARENTHESES
    (93) operacionarray -> . array DOT DROP LPARENTHESES INTEGER RPARENTHESES
    (94) operacionarray -> . array DOT push maspush
    (99) operacionarray -> . array DOT POP
    (100) operacionarray -> . array DOT POP LPARENTHESES INTEGER RPARENTHESES
    (101) operacionarray -> . array DOT DELETE LPARENTHESES INTEGER RPARENTHESES
    (102) operacionarray -> . array DOT LENGTH LPARENTHESES RPARENTHESES
    (103) operacionarray -> . array DOT EMPTY QUESTIONMARK
    (57) operacionHash -> . hash LBRACKET datos RBRACKET
    (58) operacionHash -> . hash LBRACKET datos RBRACKET EQUAL datos
    (59) operacionHash -> . hash DOT INCLUDE QUESTIONMARK LPARENTHESES datos RPARENTHESES
    (60) operacionHash -> . hash DOT DELETE LPARENTHESES datos RPARENTHESES
    (61) operacionHash -> . hash DOT KEYS
    (139) string -> . STRING PLUS STRING
    (140) string -> . STRING MULTIPLY INTEGER
    (141) string -> . STRING DOT stringOpt
    (43) tiposvariables -> . VAR
    (44) tiposvariables -> . LOCALVAR
    (45) tiposvariables -> . CONSTANT
    (52) hash -> . LCURLYBRACKET elementoHash RCURLYBRACKET
    (83) array -> . LBRACKET RBRACKET
    (84) array -> . LBRACKET datosarray RBRACKET
    (128) set -> . SET LBRACKET elementoSet RBRACKET

    END             reduce using rule 28 (cuerpo -> .)
    LOCALVAR        shift and go to state 16
    FOR             shift and go to state 18
    IF              shift and go to state 22
    UNLESS          shift and go to state 23
    PUTS            shift and go to state 24
    PRINT           shift and go to state 25
    STRING          shift and go to state 27
    VAR             shift and go to state 28
    CONSTANT        shift and go to state 29
    LCURLYBRACKET   shift and go to state 30
    LBRACKET        shift and go to state 26
    SET             shift and go to state 31

    cuerpo                         shift and go to state 289
    declaracion                    shift and go to state 4
    asignacion                     shift and go to state 5
    loop                           shift and go to state 6
    estructurasDatos               shift and go to state 7
    if                             shift and go to state 8
    unless                         shift and go to state 9
    impresion                      shift and go to state 10
    operacionSet                   shift and go to state 11
    operacionarray                 shift and go to state 12
    operacionHash                  shift and go to state 13
    string                         shift and go to state 14
    tiposvariables                 shift and go to state 17
    hash                           shift and go to state 19
    array                          shift and go to state 20
    set                            shift and go to state 21

state 276

    (116) unless -> UNLESS expresionCondicional cuerpo ELSE cuerpo END .

    LOCALVAR        reduce using rule 116 (unless -> UNLESS expresionCondicional cuerpo ELSE cuerpo END .)
    FOR             reduce using rule 116 (unless -> UNLESS expresionCondicional cuerpo ELSE cuerpo END .)
    IF              reduce using rule 116 (unless -> UNLESS expresionCondicional cuerpo ELSE cuerpo END .)
    UNLESS          reduce using rule 116 (unless -> UNLESS expresionCondicional cuerpo ELSE cuerpo END .)
    PUTS            reduce using rule 116 (unless -> UNLESS expresionCondicional cuerpo ELSE cuerpo END .)
    PRINT           reduce using rule 116 (unless -> UNLESS expresionCondicional cuerpo ELSE cuerpo END .)
    STRING          reduce using rule 116 (unless -> UNLESS expresionCondicional cuerpo ELSE cuerpo END .)
    VAR             reduce using rule 116 (unless -> UNLESS expresionCondicional cuerpo ELSE cuerpo END .)
    CONSTANT        reduce using rule 116 (unless -> UNLESS expresionCondicional cuerpo ELSE cuerpo END .)
    LCURLYBRACKET   reduce using rule 116 (unless -> UNLESS expresionCondicional cuerpo ELSE cuerpo END .)
    LBRACKET        reduce using rule 116 (unless -> UNLESS expresionCondicional cuerpo ELSE cuerpo END .)
    SET             reduce using rule 116 (unless -> UNLESS expresionCondicional cuerpo ELSE cuerpo END .)
    $end            reduce using rule 116 (unless -> UNLESS expresionCondicional cuerpo ELSE cuerpo END .)
    ELSE            reduce using rule 116 (unless -> UNLESS expresionCondicional cuerpo ELSE cuerpo END .)
    END             reduce using rule 116 (unless -> UNLESS expresionCondicional cuerpo ELSE cuerpo END .)
    RETURN          reduce using rule 116 (unless -> UNLESS expresionCondicional cuerpo ELSE cuerpo END .)


state 277

    (122) boolean -> EXCLAMATION LPARENTHESES condiciones . RPARENTHESES

    RPARENTHESES    shift and go to state 245


state 278

    (146) stringOpt -> INSERT LPARENTHESES INTEGER COMMA . STRING RPARENTHESES

    STRING          shift and go to state 290


state 279

    (53) elementoHash -> datos EQUAL GREATERTHAN datos maselementos .

    RCURLYBRACKET   reduce using rule 53 (elementoHash -> datos EQUAL GREATERTHAN datos maselementos .)
    COMMA           reduce using rule 53 (elementoHash -> datos EQUAL GREATERTHAN datos maselementos .)


state 280

    (56) maselementos -> COMMA . elementoHash maselementos
    (53) elementoHash -> . datos EQUAL GREATERTHAN datos maselementos
    (54) elementoHash -> .
    (46) datos -> . INTEGER
    (47) datos -> . FLOAT
    (48) datos -> . STRING

    COMMA           reduce using rule 54 (elementoHash -> .)
    RCURLYBRACKET   reduce using rule 54 (elementoHash -> .)
    INTEGER         shift and go to state 74
    FLOAT           shift and go to state 75
    STRING          shift and go to state 66

    elementoHash                   shift and go to state 291
    datos                          shift and go to state 89

state 281

    (133) otroElemento -> COMMA elementoSet otroElemento .

    RBRACKET        reduce using rule 133 (otroElemento -> COMMA elementoSet otroElemento .)
    COMMA           reduce using rule 133 (otroElemento -> COMMA elementoSet otroElemento .)


state 282

    (8) argumentos -> LOCALVAR EQUAL LCURLYBRACKET RCURLYBRACKET .

    RPARENTHESES    reduce using rule 8 (argumentos -> LOCALVAR EQUAL LCURLYBRACKET RCURLYBRACKET .)


state 283

    (13) variosargumentos -> LOCALVAR EQUAL datos masargumentos .

    RPARENTHESES    reduce using rule 13 (variosargumentos -> LOCALVAR EQUAL datos masargumentos .)


state 284

    (11) variosargumentos -> LOCALVAR EQUAL . datos
    (13) variosargumentos -> LOCALVAR EQUAL . datos masargumentos
    (46) datos -> . INTEGER
    (47) datos -> . FLOAT
    (48) datos -> . STRING

    INTEGER         shift and go to state 74
    FLOAT           shift and go to state 75
    STRING          shift and go to state 66

    datos                          shift and go to state 250

state 285

    (3) funcion -> DEF LOCALVAR LPARENTHESES argumentos RPARENTHESES cuerpo END .

    $end            reduce using rule 3 (funcion -> DEF LOCALVAR LPARENTHESES argumentos RPARENTHESES cuerpo END .)


state 286

    (4) funcion -> DEF LOCALVAR LPARENTHESES argumentos RPARENTHESES cuerpo retornar . END

    END             shift and go to state 292


state 287

    (15) retornar -> RETURN . LOCALVAR
    (16) retornar -> RETURN . datos
    (46) datos -> . INTEGER
    (47) datos -> . FLOAT
    (48) datos -> . STRING

    LOCALVAR        shift and go to state 293
    INTEGER         shift and go to state 74
    FLOAT           shift and go to state 75
    STRING          shift and go to state 66

    datos                          shift and go to state 294

state 288

    (59) operacionHash -> hash DOT INCLUDE QUESTIONMARK LPARENTHESES datos RPARENTHESES .

    LOCALVAR        reduce using rule 59 (operacionHash -> hash DOT INCLUDE QUESTIONMARK LPARENTHESES datos RPARENTHESES .)
    FOR             reduce using rule 59 (operacionHash -> hash DOT INCLUDE QUESTIONMARK LPARENTHESES datos RPARENTHESES .)
    IF              reduce using rule 59 (operacionHash -> hash DOT INCLUDE QUESTIONMARK LPARENTHESES datos RPARENTHESES .)
    UNLESS          reduce using rule 59 (operacionHash -> hash DOT INCLUDE QUESTIONMARK LPARENTHESES datos RPARENTHESES .)
    PUTS            reduce using rule 59 (operacionHash -> hash DOT INCLUDE QUESTIONMARK LPARENTHESES datos RPARENTHESES .)
    PRINT           reduce using rule 59 (operacionHash -> hash DOT INCLUDE QUESTIONMARK LPARENTHESES datos RPARENTHESES .)
    STRING          reduce using rule 59 (operacionHash -> hash DOT INCLUDE QUESTIONMARK LPARENTHESES datos RPARENTHESES .)
    VAR             reduce using rule 59 (operacionHash -> hash DOT INCLUDE QUESTIONMARK LPARENTHESES datos RPARENTHESES .)
    CONSTANT        reduce using rule 59 (operacionHash -> hash DOT INCLUDE QUESTIONMARK LPARENTHESES datos RPARENTHESES .)
    LCURLYBRACKET   reduce using rule 59 (operacionHash -> hash DOT INCLUDE QUESTIONMARK LPARENTHESES datos RPARENTHESES .)
    LBRACKET        reduce using rule 59 (operacionHash -> hash DOT INCLUDE QUESTIONMARK LPARENTHESES datos RPARENTHESES .)
    SET             reduce using rule 59 (operacionHash -> hash DOT INCLUDE QUESTIONMARK LPARENTHESES datos RPARENTHESES .)
    $end            reduce using rule 59 (operacionHash -> hash DOT INCLUDE QUESTIONMARK LPARENTHESES datos RPARENTHESES .)
    ELSE            reduce using rule 59 (operacionHash -> hash DOT INCLUDE QUESTIONMARK LPARENTHESES datos RPARENTHESES .)
    END             reduce using rule 59 (operacionHash -> hash DOT INCLUDE QUESTIONMARK LPARENTHESES datos RPARENTHESES .)
    RETURN          reduce using rule 59 (operacionHash -> hash DOT INCLUDE QUESTIONMARK LPARENTHESES datos RPARENTHESES .)


state 289

    (108) else -> ELSE cuerpo . END

    END             shift and go to state 295


state 290

    (146) stringOpt -> INSERT LPARENTHESES INTEGER COMMA STRING . RPARENTHESES

    RPARENTHESES    shift and go to state 296


state 291

    (56) maselementos -> COMMA elementoHash . maselementos
    (55) maselementos -> .
    (56) maselementos -> . COMMA elementoHash maselementos

  ! shift/reduce conflict for COMMA resolved as shift
    RCURLYBRACKET   reduce using rule 55 (maselementos -> .)
    COMMA           shift and go to state 280

  ! COMMA           [ reduce using rule 55 (maselementos -> .) ]

    maselementos                   shift and go to state 297

state 292

    (4) funcion -> DEF LOCALVAR LPARENTHESES argumentos RPARENTHESES cuerpo retornar END .

    $end            reduce using rule 4 (funcion -> DEF LOCALVAR LPARENTHESES argumentos RPARENTHESES cuerpo retornar END .)


state 293

    (15) retornar -> RETURN LOCALVAR .

    END             reduce using rule 15 (retornar -> RETURN LOCALVAR .)


state 294

    (16) retornar -> RETURN datos .

    END             reduce using rule 16 (retornar -> RETURN datos .)


state 295

    (108) else -> ELSE cuerpo END .

    LOCALVAR        reduce using rule 108 (else -> ELSE cuerpo END .)
    FOR             reduce using rule 108 (else -> ELSE cuerpo END .)
    IF              reduce using rule 108 (else -> ELSE cuerpo END .)
    UNLESS          reduce using rule 108 (else -> ELSE cuerpo END .)
    PUTS            reduce using rule 108 (else -> ELSE cuerpo END .)
    PRINT           reduce using rule 108 (else -> ELSE cuerpo END .)
    STRING          reduce using rule 108 (else -> ELSE cuerpo END .)
    VAR             reduce using rule 108 (else -> ELSE cuerpo END .)
    CONSTANT        reduce using rule 108 (else -> ELSE cuerpo END .)
    LCURLYBRACKET   reduce using rule 108 (else -> ELSE cuerpo END .)
    LBRACKET        reduce using rule 108 (else -> ELSE cuerpo END .)
    SET             reduce using rule 108 (else -> ELSE cuerpo END .)
    $end            reduce using rule 108 (else -> ELSE cuerpo END .)
    ELSE            reduce using rule 108 (else -> ELSE cuerpo END .)
    END             reduce using rule 108 (else -> ELSE cuerpo END .)
    RETURN          reduce using rule 108 (else -> ELSE cuerpo END .)


state 296

    (146) stringOpt -> INSERT LPARENTHESES INTEGER COMMA STRING RPARENTHESES .

    LOCALVAR        reduce using rule 146 (stringOpt -> INSERT LPARENTHESES INTEGER COMMA STRING RPARENTHESES .)
    FOR             reduce using rule 146 (stringOpt -> INSERT LPARENTHESES INTEGER COMMA STRING RPARENTHESES .)
    IF              reduce using rule 146 (stringOpt -> INSERT LPARENTHESES INTEGER COMMA STRING RPARENTHESES .)
    UNLESS          reduce using rule 146 (stringOpt -> INSERT LPARENTHESES INTEGER COMMA STRING RPARENTHESES .)
    PUTS            reduce using rule 146 (stringOpt -> INSERT LPARENTHESES INTEGER COMMA STRING RPARENTHESES .)
    PRINT           reduce using rule 146 (stringOpt -> INSERT LPARENTHESES INTEGER COMMA STRING RPARENTHESES .)
    STRING          reduce using rule 146 (stringOpt -> INSERT LPARENTHESES INTEGER COMMA STRING RPARENTHESES .)
    VAR             reduce using rule 146 (stringOpt -> INSERT LPARENTHESES INTEGER COMMA STRING RPARENTHESES .)
    CONSTANT        reduce using rule 146 (stringOpt -> INSERT LPARENTHESES INTEGER COMMA STRING RPARENTHESES .)
    LCURLYBRACKET   reduce using rule 146 (stringOpt -> INSERT LPARENTHESES INTEGER COMMA STRING RPARENTHESES .)
    LBRACKET        reduce using rule 146 (stringOpt -> INSERT LPARENTHESES INTEGER COMMA STRING RPARENTHESES .)
    SET             reduce using rule 146 (stringOpt -> INSERT LPARENTHESES INTEGER COMMA STRING RPARENTHESES .)
    $end            reduce using rule 146 (stringOpt -> INSERT LPARENTHESES INTEGER COMMA STRING RPARENTHESES .)
    ELSE            reduce using rule 146 (stringOpt -> INSERT LPARENTHESES INTEGER COMMA STRING RPARENTHESES .)
    END             reduce using rule 146 (stringOpt -> INSERT LPARENTHESES INTEGER COMMA STRING RPARENTHESES .)
    RETURN          reduce using rule 146 (stringOpt -> INSERT LPARENTHESES INTEGER COMMA STRING RPARENTHESES .)


state 297

    (56) maselementos -> COMMA elementoHash maselementos .

    COMMA           reduce using rule 56 (maselementos -> COMMA elementoHash maselementos .)
    RCURLYBRACKET   reduce using rule 56 (maselementos -> COMMA elementoHash maselementos .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for LBRACKET in state 19 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 20 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 111 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 111 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 111 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 111 resolved as shift
WARNING: shift/reduce conflict for PERCENTAGE in state 111 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 159 resolved as shift
WARNING: shift/reduce conflict for DOUBLEAMPERSAND in state 196 resolved as shift
WARNING: shift/reduce conflict for DOUBLEPIPE in state 196 resolved as shift
WARNING: shift/reduce conflict for RPARENTHESES in state 199 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 219 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 219 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 219 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 219 resolved as shift
WARNING: shift/reduce conflict for PERCENTAGE in state 219 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 220 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 220 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 220 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 220 resolved as shift
WARNING: shift/reduce conflict for PERCENTAGE in state 220 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 221 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 221 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 221 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 221 resolved as shift
WARNING: shift/reduce conflict for PERCENTAGE in state 221 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 247 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 248 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 291 resolved as shift
WARNING: reduce/reduce conflict in state 62 resolved using rule (tiposvariables -> VAR)
WARNING: rejected rule (datosvarios -> VAR) in state 62
WARNING: reduce/reduce conflict in state 63 resolved using rule (tiposvariables -> LOCALVAR)
WARNING: rejected rule (datosvarios -> LOCALVAR) in state 63
WARNING: reduce/reduce conflict in state 64 resolved using rule (datos -> INTEGER)
WARNING: rejected rule (number -> INTEGER) in state 64
WARNING: reduce/reduce conflict in state 65 resolved using rule (datos -> FLOAT)
WARNING: rejected rule (number -> FLOAT) in state 65
WARNING: reduce/reduce conflict in state 159 resolved using rule (elementoSet -> datos)
WARNING: rejected rule (otroElemento -> <empty>) in state 159
