Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ALERT
    AMPERSAND
    BARRA
    BEGIN
    BEGIN_M
    CIRCUMFLEX
    COLON
    COMBCOMP
    COMMENT
    DIVASSIGN
    DIVIDE
    DOBLEQUOTE
    DOUBLEAMPERSAND
    DOUBLEEQUAL
    DOUBLELESSTHAN
    DOUBLEPIPE
    ELSE
    ELSEIF
    END_M
    EXCLAMATION
    EXPASSIGN
    FALSE
    GETS
    GREQUAL
    IF
    LBRACKET
    LEQUAL
    LESSTHAN
    MINASSIGN
    MINUS
    MODASSIGN
    NIL
    NOT
    NOTEQUAL
    OR
    PERCENTAGE
    PLUS
    PLUSASSIGN
    QUESTIONMARKPERIOD
    RBRACKET
    SEMICOLON
    SINGLEQUOTE
    TIMESASSIGN
    TRIPLEEQUAL
    TRUE
    TWOGREATERTHAN
    UNTIL
    WAVE

Grammar

Rule 0     S' -> inicio
Rule 1     inicio -> declaracion
Rule 2     inicio -> loop
Rule 3     inicio -> impresion
Rule 4     inicio -> funcion
Rule 5     funcion -> DEF LOCALVAR LPARENTHESES argumentos RPARENTHESES cuerpo END
Rule 6     funcion -> DEF LOCALVAR LPARENTHESES argumentos RPARENTHESES cuerpo retornar END
Rule 7     argumentos -> variosargumentos
Rule 8     argumentos -> MULTIPLY LOCALVAR
Rule 9     argumentos -> TWOSTARS LOCALVAR
Rule 10    argumentos -> LOCALVAR EQUAL LCURLYBRACKET RCURLYBRACKET
Rule 11    argumentos -> LOCALVAR TWOPOINTS datos
Rule 12    variosargumentos -> LOCALVAR
Rule 13    variosargumentos -> LOCALVAR EQUAL datos
Rule 14    variosargumentos -> LOCALVAR masargumentos
Rule 15    variosargumentos -> LOCALVAR EQUAL datos masargumentos
Rule 16    masargumentos -> COMMA variosargumentos
Rule 17    retornar -> RETURN LOCALVAR
Rule 18    retornar -> RETURN datos
Rule 19    loop -> FOR LOCALVAR IN rango cuerpo END
Rule 20    declaracion -> tiposvariables EQUAL datos
Rule 21    declaracion -> tiposvariables EQUAL estructuras
Rule 22    tiposvariables -> VAR
Rule 23    tiposvariables -> LOCALVAR
Rule 24    tiposvariables -> CONSTANT
Rule 25    datos -> NUMBER
Rule 26    datos -> FLOAT
Rule 27    datos -> STRING
Rule 28    variables -> NUMBER
Rule 29    variables -> FLOAT
Rule 30    variables -> STRING
Rule 31    estructuras -> hash
Rule 32    cuerpo -> declaracion
Rule 33    cuerpo -> loop
Rule 34    cuerpo -> impresion
Rule 35    hash -> LCURLYBRACKET elementoHash RCURLYBRACKET masopciones
Rule 36    elementoHash -> variables EQUAL GREATERTHAN variables maselementos
Rule 37    maselementos -> <empty>
Rule 38    maselementos -> COMMA elementoHash maselementos
Rule 39    masopciones -> <empty>
Rule 40    masopciones -> VAR DOT funcionesHash masopciones
Rule 41    funcionesHash -> INCLUDE QUESTIONMARK LPARENTHESES variables RPARENTHESES
Rule 42    funcionesHash -> DELETE LPARENTHESES variables RPARENTHESES
Rule 43    funcionesHash -> KEYS
Rule 44    rango -> NUMBER RANGEINCLUSIVE NUMBER
Rule 45    rango -> NUMBER RANGEXCLUSIVE NUMBER
Rule 46    impresion -> PUTS datos
Rule 47    impresion -> PRINT datos

Terminals, with rules where they appear

ALERT                : 
AMPERSAND            : 
BARRA                : 
BEGIN                : 
BEGIN_M              : 
CIRCUMFLEX           : 
COLON                : 
COMBCOMP             : 
COMMA                : 16 38
COMMENT              : 
CONSTANT             : 24
DEF                  : 5 6
DELETE               : 42
DIVASSIGN            : 
DIVIDE               : 
DOBLEQUOTE           : 
DOT                  : 40
DOUBLEAMPERSAND      : 
DOUBLEEQUAL          : 
DOUBLELESSTHAN       : 
DOUBLEPIPE           : 
ELSE                 : 
ELSEIF               : 
END                  : 5 6 19
END_M                : 
EQUAL                : 10 13 15 20 21 36
EXCLAMATION          : 
EXPASSIGN            : 
FALSE                : 
FLOAT                : 26 29
FOR                  : 19
GETS                 : 
GREATERTHAN          : 36
GREQUAL              : 
IF                   : 
IN                   : 19
INCLUDE              : 41
KEYS                 : 43
LBRACKET             : 
LCURLYBRACKET        : 10 35
LEQUAL               : 
LESSTHAN             : 
LOCALVAR             : 5 6 8 9 10 11 12 13 14 15 17 19 23
LPARENTHESES         : 5 6 41 42
MINASSIGN            : 
MINUS                : 
MODASSIGN            : 
MULTIPLY             : 8
NIL                  : 
NOT                  : 
NOTEQUAL             : 
NUMBER               : 25 28 44 44 45 45
OR                   : 
PERCENTAGE           : 
PLUS                 : 
PLUSASSIGN           : 
PRINT                : 47
PUTS                 : 46
QUESTIONMARK         : 41
QUESTIONMARKPERIOD   : 
RANGEINCLUSIVE       : 44
RANGEXCLUSIVE        : 45
RBRACKET             : 
RCURLYBRACKET        : 10 35
RETURN               : 17 18
RPARENTHESES         : 5 6 41 42
SEMICOLON            : 
SINGLEQUOTE          : 
STRING               : 27 30
TIMESASSIGN          : 
TRIPLEEQUAL          : 
TRUE                 : 
TWOGREATERTHAN       : 
TWOPOINTS            : 11
TWOSTARS             : 9
UNTIL                : 
VAR                  : 22 40
WAVE                 : 
error                : 

Nonterminals, with rules where they appear

argumentos           : 5 6
cuerpo               : 5 6 19
datos                : 11 13 15 18 20 46 47
declaracion          : 1 32
elementoHash         : 35 38
estructuras          : 21
funcion              : 4
funcionesHash        : 40
hash                 : 31
impresion            : 3 34
inicio               : 0
loop                 : 2 33
masargumentos        : 14 15
maselementos         : 36 38
masopciones          : 35 40
rango                : 19
retornar             : 6
tiposvariables       : 20 21
variables            : 36 36 41 42
variosargumentos     : 7 16

Parsing method: LALR

state 0

    (0) S' -> . inicio
    (1) inicio -> . declaracion
    (2) inicio -> . loop
    (3) inicio -> . impresion
    (4) inicio -> . funcion
    (20) declaracion -> . tiposvariables EQUAL datos
    (21) declaracion -> . tiposvariables EQUAL estructuras
    (19) loop -> . FOR LOCALVAR IN rango cuerpo END
    (46) impresion -> . PUTS datos
    (47) impresion -> . PRINT datos
    (5) funcion -> . DEF LOCALVAR LPARENTHESES argumentos RPARENTHESES cuerpo END
    (6) funcion -> . DEF LOCALVAR LPARENTHESES argumentos RPARENTHESES cuerpo retornar END
    (22) tiposvariables -> . VAR
    (23) tiposvariables -> . LOCALVAR
    (24) tiposvariables -> . CONSTANT

    FOR             shift and go to state 7
    PUTS            shift and go to state 9
    PRINT           shift and go to state 10
    DEF             shift and go to state 11
    VAR             shift and go to state 12
    LOCALVAR        shift and go to state 8
    CONSTANT        shift and go to state 13

    inicio                         shift and go to state 1
    declaracion                    shift and go to state 2
    loop                           shift and go to state 3
    impresion                      shift and go to state 4
    funcion                        shift and go to state 5
    tiposvariables                 shift and go to state 6

state 1

    (0) S' -> inicio .



state 2

    (1) inicio -> declaracion .

    $end            reduce using rule 1 (inicio -> declaracion .)


state 3

    (2) inicio -> loop .

    $end            reduce using rule 2 (inicio -> loop .)


state 4

    (3) inicio -> impresion .

    $end            reduce using rule 3 (inicio -> impresion .)


state 5

    (4) inicio -> funcion .

    $end            reduce using rule 4 (inicio -> funcion .)


state 6

    (20) declaracion -> tiposvariables . EQUAL datos
    (21) declaracion -> tiposvariables . EQUAL estructuras

    EQUAL           shift and go to state 14


state 7

    (19) loop -> FOR . LOCALVAR IN rango cuerpo END

    LOCALVAR        shift and go to state 15


state 8

    (23) tiposvariables -> LOCALVAR .

    EQUAL           reduce using rule 23 (tiposvariables -> LOCALVAR .)


state 9

    (46) impresion -> PUTS . datos
    (25) datos -> . NUMBER
    (26) datos -> . FLOAT
    (27) datos -> . STRING

    NUMBER          shift and go to state 17
    FLOAT           shift and go to state 18
    STRING          shift and go to state 19

    datos                          shift and go to state 16

state 10

    (47) impresion -> PRINT . datos
    (25) datos -> . NUMBER
    (26) datos -> . FLOAT
    (27) datos -> . STRING

    NUMBER          shift and go to state 17
    FLOAT           shift and go to state 18
    STRING          shift and go to state 19

    datos                          shift and go to state 20

state 11

    (5) funcion -> DEF . LOCALVAR LPARENTHESES argumentos RPARENTHESES cuerpo END
    (6) funcion -> DEF . LOCALVAR LPARENTHESES argumentos RPARENTHESES cuerpo retornar END

    LOCALVAR        shift and go to state 21


state 12

    (22) tiposvariables -> VAR .

    EQUAL           reduce using rule 22 (tiposvariables -> VAR .)


state 13

    (24) tiposvariables -> CONSTANT .

    EQUAL           reduce using rule 24 (tiposvariables -> CONSTANT .)


state 14

    (20) declaracion -> tiposvariables EQUAL . datos
    (21) declaracion -> tiposvariables EQUAL . estructuras
    (25) datos -> . NUMBER
    (26) datos -> . FLOAT
    (27) datos -> . STRING
    (31) estructuras -> . hash
    (35) hash -> . LCURLYBRACKET elementoHash RCURLYBRACKET masopciones

    NUMBER          shift and go to state 17
    FLOAT           shift and go to state 18
    STRING          shift and go to state 19
    LCURLYBRACKET   shift and go to state 25

    datos                          shift and go to state 22
    estructuras                    shift and go to state 23
    hash                           shift and go to state 24

state 15

    (19) loop -> FOR LOCALVAR . IN rango cuerpo END

    IN              shift and go to state 26


state 16

    (46) impresion -> PUTS datos .

    $end            reduce using rule 46 (impresion -> PUTS datos .)
    END             reduce using rule 46 (impresion -> PUTS datos .)
    RETURN          reduce using rule 46 (impresion -> PUTS datos .)


state 17

    (25) datos -> NUMBER .

    $end            reduce using rule 25 (datos -> NUMBER .)
    END             reduce using rule 25 (datos -> NUMBER .)
    RETURN          reduce using rule 25 (datos -> NUMBER .)
    COMMA           reduce using rule 25 (datos -> NUMBER .)
    RPARENTHESES    reduce using rule 25 (datos -> NUMBER .)


state 18

    (26) datos -> FLOAT .

    $end            reduce using rule 26 (datos -> FLOAT .)
    END             reduce using rule 26 (datos -> FLOAT .)
    RETURN          reduce using rule 26 (datos -> FLOAT .)
    COMMA           reduce using rule 26 (datos -> FLOAT .)
    RPARENTHESES    reduce using rule 26 (datos -> FLOAT .)


state 19

    (27) datos -> STRING .

    $end            reduce using rule 27 (datos -> STRING .)
    END             reduce using rule 27 (datos -> STRING .)
    RETURN          reduce using rule 27 (datos -> STRING .)
    COMMA           reduce using rule 27 (datos -> STRING .)
    RPARENTHESES    reduce using rule 27 (datos -> STRING .)


state 20

    (47) impresion -> PRINT datos .

    $end            reduce using rule 47 (impresion -> PRINT datos .)
    END             reduce using rule 47 (impresion -> PRINT datos .)
    RETURN          reduce using rule 47 (impresion -> PRINT datos .)


state 21

    (5) funcion -> DEF LOCALVAR . LPARENTHESES argumentos RPARENTHESES cuerpo END
    (6) funcion -> DEF LOCALVAR . LPARENTHESES argumentos RPARENTHESES cuerpo retornar END

    LPARENTHESES    shift and go to state 27


state 22

    (20) declaracion -> tiposvariables EQUAL datos .

    $end            reduce using rule 20 (declaracion -> tiposvariables EQUAL datos .)
    END             reduce using rule 20 (declaracion -> tiposvariables EQUAL datos .)
    RETURN          reduce using rule 20 (declaracion -> tiposvariables EQUAL datos .)


state 23

    (21) declaracion -> tiposvariables EQUAL estructuras .

    $end            reduce using rule 21 (declaracion -> tiposvariables EQUAL estructuras .)
    END             reduce using rule 21 (declaracion -> tiposvariables EQUAL estructuras .)
    RETURN          reduce using rule 21 (declaracion -> tiposvariables EQUAL estructuras .)


state 24

    (31) estructuras -> hash .

    $end            reduce using rule 31 (estructuras -> hash .)
    END             reduce using rule 31 (estructuras -> hash .)
    RETURN          reduce using rule 31 (estructuras -> hash .)


state 25

    (35) hash -> LCURLYBRACKET . elementoHash RCURLYBRACKET masopciones
    (36) elementoHash -> . variables EQUAL GREATERTHAN variables maselementos
    (28) variables -> . NUMBER
    (29) variables -> . FLOAT
    (30) variables -> . STRING

    NUMBER          shift and go to state 30
    FLOAT           shift and go to state 31
    STRING          shift and go to state 32

    elementoHash                   shift and go to state 28
    variables                      shift and go to state 29

state 26

    (19) loop -> FOR LOCALVAR IN . rango cuerpo END
    (44) rango -> . NUMBER RANGEINCLUSIVE NUMBER
    (45) rango -> . NUMBER RANGEXCLUSIVE NUMBER

    NUMBER          shift and go to state 34

    rango                          shift and go to state 33

state 27

    (5) funcion -> DEF LOCALVAR LPARENTHESES . argumentos RPARENTHESES cuerpo END
    (6) funcion -> DEF LOCALVAR LPARENTHESES . argumentos RPARENTHESES cuerpo retornar END
    (7) argumentos -> . variosargumentos
    (8) argumentos -> . MULTIPLY LOCALVAR
    (9) argumentos -> . TWOSTARS LOCALVAR
    (10) argumentos -> . LOCALVAR EQUAL LCURLYBRACKET RCURLYBRACKET
    (11) argumentos -> . LOCALVAR TWOPOINTS datos
    (12) variosargumentos -> . LOCALVAR
    (13) variosargumentos -> . LOCALVAR EQUAL datos
    (14) variosargumentos -> . LOCALVAR masargumentos
    (15) variosargumentos -> . LOCALVAR EQUAL datos masargumentos

    MULTIPLY        shift and go to state 38
    TWOSTARS        shift and go to state 39
    LOCALVAR        shift and go to state 35

    argumentos                     shift and go to state 36
    variosargumentos               shift and go to state 37

state 28

    (35) hash -> LCURLYBRACKET elementoHash . RCURLYBRACKET masopciones

    RCURLYBRACKET   shift and go to state 40


state 29

    (36) elementoHash -> variables . EQUAL GREATERTHAN variables maselementos

    EQUAL           shift and go to state 41


state 30

    (28) variables -> NUMBER .

    EQUAL           reduce using rule 28 (variables -> NUMBER .)
    COMMA           reduce using rule 28 (variables -> NUMBER .)
    RCURLYBRACKET   reduce using rule 28 (variables -> NUMBER .)
    RPARENTHESES    reduce using rule 28 (variables -> NUMBER .)


state 31

    (29) variables -> FLOAT .

    EQUAL           reduce using rule 29 (variables -> FLOAT .)
    COMMA           reduce using rule 29 (variables -> FLOAT .)
    RCURLYBRACKET   reduce using rule 29 (variables -> FLOAT .)
    RPARENTHESES    reduce using rule 29 (variables -> FLOAT .)


state 32

    (30) variables -> STRING .

    EQUAL           reduce using rule 30 (variables -> STRING .)
    COMMA           reduce using rule 30 (variables -> STRING .)
    RCURLYBRACKET   reduce using rule 30 (variables -> STRING .)
    RPARENTHESES    reduce using rule 30 (variables -> STRING .)


state 33

    (19) loop -> FOR LOCALVAR IN rango . cuerpo END
    (32) cuerpo -> . declaracion
    (33) cuerpo -> . loop
    (34) cuerpo -> . impresion
    (20) declaracion -> . tiposvariables EQUAL datos
    (21) declaracion -> . tiposvariables EQUAL estructuras
    (19) loop -> . FOR LOCALVAR IN rango cuerpo END
    (46) impresion -> . PUTS datos
    (47) impresion -> . PRINT datos
    (22) tiposvariables -> . VAR
    (23) tiposvariables -> . LOCALVAR
    (24) tiposvariables -> . CONSTANT

    FOR             shift and go to state 7
    PUTS            shift and go to state 9
    PRINT           shift and go to state 10
    VAR             shift and go to state 12
    LOCALVAR        shift and go to state 8
    CONSTANT        shift and go to state 13

    cuerpo                         shift and go to state 42
    declaracion                    shift and go to state 43
    loop                           shift and go to state 44
    impresion                      shift and go to state 45
    tiposvariables                 shift and go to state 6

state 34

    (44) rango -> NUMBER . RANGEINCLUSIVE NUMBER
    (45) rango -> NUMBER . RANGEXCLUSIVE NUMBER

    RANGEINCLUSIVE  shift and go to state 46
    RANGEXCLUSIVE   shift and go to state 47


state 35

    (10) argumentos -> LOCALVAR . EQUAL LCURLYBRACKET RCURLYBRACKET
    (11) argumentos -> LOCALVAR . TWOPOINTS datos
    (12) variosargumentos -> LOCALVAR .
    (13) variosargumentos -> LOCALVAR . EQUAL datos
    (14) variosargumentos -> LOCALVAR . masargumentos
    (15) variosargumentos -> LOCALVAR . EQUAL datos masargumentos
    (16) masargumentos -> . COMMA variosargumentos

    EQUAL           shift and go to state 48
    TWOPOINTS       shift and go to state 49
    RPARENTHESES    reduce using rule 12 (variosargumentos -> LOCALVAR .)
    COMMA           shift and go to state 51

    masargumentos                  shift and go to state 50

state 36

    (5) funcion -> DEF LOCALVAR LPARENTHESES argumentos . RPARENTHESES cuerpo END
    (6) funcion -> DEF LOCALVAR LPARENTHESES argumentos . RPARENTHESES cuerpo retornar END

    RPARENTHESES    shift and go to state 52


state 37

    (7) argumentos -> variosargumentos .

    RPARENTHESES    reduce using rule 7 (argumentos -> variosargumentos .)


state 38

    (8) argumentos -> MULTIPLY . LOCALVAR

    LOCALVAR        shift and go to state 53


state 39

    (9) argumentos -> TWOSTARS . LOCALVAR

    LOCALVAR        shift and go to state 54


state 40

    (35) hash -> LCURLYBRACKET elementoHash RCURLYBRACKET . masopciones
    (39) masopciones -> .
    (40) masopciones -> . VAR DOT funcionesHash masopciones

    $end            reduce using rule 39 (masopciones -> .)
    END             reduce using rule 39 (masopciones -> .)
    RETURN          reduce using rule 39 (masopciones -> .)
    VAR             shift and go to state 56

    masopciones                    shift and go to state 55

state 41

    (36) elementoHash -> variables EQUAL . GREATERTHAN variables maselementos

    GREATERTHAN     shift and go to state 57


state 42

    (19) loop -> FOR LOCALVAR IN rango cuerpo . END

    END             shift and go to state 58


state 43

    (32) cuerpo -> declaracion .

    END             reduce using rule 32 (cuerpo -> declaracion .)
    RETURN          reduce using rule 32 (cuerpo -> declaracion .)


state 44

    (33) cuerpo -> loop .

    END             reduce using rule 33 (cuerpo -> loop .)
    RETURN          reduce using rule 33 (cuerpo -> loop .)


state 45

    (34) cuerpo -> impresion .

    END             reduce using rule 34 (cuerpo -> impresion .)
    RETURN          reduce using rule 34 (cuerpo -> impresion .)


state 46

    (44) rango -> NUMBER RANGEINCLUSIVE . NUMBER

    NUMBER          shift and go to state 59


state 47

    (45) rango -> NUMBER RANGEXCLUSIVE . NUMBER

    NUMBER          shift and go to state 60


state 48

    (10) argumentos -> LOCALVAR EQUAL . LCURLYBRACKET RCURLYBRACKET
    (13) variosargumentos -> LOCALVAR EQUAL . datos
    (15) variosargumentos -> LOCALVAR EQUAL . datos masargumentos
    (25) datos -> . NUMBER
    (26) datos -> . FLOAT
    (27) datos -> . STRING

    LCURLYBRACKET   shift and go to state 61
    NUMBER          shift and go to state 17
    FLOAT           shift and go to state 18
    STRING          shift and go to state 19

    datos                          shift and go to state 62

state 49

    (11) argumentos -> LOCALVAR TWOPOINTS . datos
    (25) datos -> . NUMBER
    (26) datos -> . FLOAT
    (27) datos -> . STRING

    NUMBER          shift and go to state 17
    FLOAT           shift and go to state 18
    STRING          shift and go to state 19

    datos                          shift and go to state 63

state 50

    (14) variosargumentos -> LOCALVAR masargumentos .

    RPARENTHESES    reduce using rule 14 (variosargumentos -> LOCALVAR masargumentos .)


state 51

    (16) masargumentos -> COMMA . variosargumentos
    (12) variosargumentos -> . LOCALVAR
    (13) variosargumentos -> . LOCALVAR EQUAL datos
    (14) variosargumentos -> . LOCALVAR masargumentos
    (15) variosargumentos -> . LOCALVAR EQUAL datos masargumentos

    LOCALVAR        shift and go to state 65

    variosargumentos               shift and go to state 64

state 52

    (5) funcion -> DEF LOCALVAR LPARENTHESES argumentos RPARENTHESES . cuerpo END
    (6) funcion -> DEF LOCALVAR LPARENTHESES argumentos RPARENTHESES . cuerpo retornar END
    (32) cuerpo -> . declaracion
    (33) cuerpo -> . loop
    (34) cuerpo -> . impresion
    (20) declaracion -> . tiposvariables EQUAL datos
    (21) declaracion -> . tiposvariables EQUAL estructuras
    (19) loop -> . FOR LOCALVAR IN rango cuerpo END
    (46) impresion -> . PUTS datos
    (47) impresion -> . PRINT datos
    (22) tiposvariables -> . VAR
    (23) tiposvariables -> . LOCALVAR
    (24) tiposvariables -> . CONSTANT

    FOR             shift and go to state 7
    PUTS            shift and go to state 9
    PRINT           shift and go to state 10
    VAR             shift and go to state 12
    LOCALVAR        shift and go to state 8
    CONSTANT        shift and go to state 13

    cuerpo                         shift and go to state 66
    declaracion                    shift and go to state 43
    loop                           shift and go to state 44
    impresion                      shift and go to state 45
    tiposvariables                 shift and go to state 6

state 53

    (8) argumentos -> MULTIPLY LOCALVAR .

    RPARENTHESES    reduce using rule 8 (argumentos -> MULTIPLY LOCALVAR .)


state 54

    (9) argumentos -> TWOSTARS LOCALVAR .

    RPARENTHESES    reduce using rule 9 (argumentos -> TWOSTARS LOCALVAR .)


state 55

    (35) hash -> LCURLYBRACKET elementoHash RCURLYBRACKET masopciones .

    $end            reduce using rule 35 (hash -> LCURLYBRACKET elementoHash RCURLYBRACKET masopciones .)
    END             reduce using rule 35 (hash -> LCURLYBRACKET elementoHash RCURLYBRACKET masopciones .)
    RETURN          reduce using rule 35 (hash -> LCURLYBRACKET elementoHash RCURLYBRACKET masopciones .)


state 56

    (40) masopciones -> VAR . DOT funcionesHash masopciones

    DOT             shift and go to state 67


state 57

    (36) elementoHash -> variables EQUAL GREATERTHAN . variables maselementos
    (28) variables -> . NUMBER
    (29) variables -> . FLOAT
    (30) variables -> . STRING

    NUMBER          shift and go to state 30
    FLOAT           shift and go to state 31
    STRING          shift and go to state 32

    variables                      shift and go to state 68

state 58

    (19) loop -> FOR LOCALVAR IN rango cuerpo END .

    $end            reduce using rule 19 (loop -> FOR LOCALVAR IN rango cuerpo END .)
    END             reduce using rule 19 (loop -> FOR LOCALVAR IN rango cuerpo END .)
    RETURN          reduce using rule 19 (loop -> FOR LOCALVAR IN rango cuerpo END .)


state 59

    (44) rango -> NUMBER RANGEINCLUSIVE NUMBER .

    FOR             reduce using rule 44 (rango -> NUMBER RANGEINCLUSIVE NUMBER .)
    PUTS            reduce using rule 44 (rango -> NUMBER RANGEINCLUSIVE NUMBER .)
    PRINT           reduce using rule 44 (rango -> NUMBER RANGEINCLUSIVE NUMBER .)
    VAR             reduce using rule 44 (rango -> NUMBER RANGEINCLUSIVE NUMBER .)
    LOCALVAR        reduce using rule 44 (rango -> NUMBER RANGEINCLUSIVE NUMBER .)
    CONSTANT        reduce using rule 44 (rango -> NUMBER RANGEINCLUSIVE NUMBER .)


state 60

    (45) rango -> NUMBER RANGEXCLUSIVE NUMBER .

    FOR             reduce using rule 45 (rango -> NUMBER RANGEXCLUSIVE NUMBER .)
    PUTS            reduce using rule 45 (rango -> NUMBER RANGEXCLUSIVE NUMBER .)
    PRINT           reduce using rule 45 (rango -> NUMBER RANGEXCLUSIVE NUMBER .)
    VAR             reduce using rule 45 (rango -> NUMBER RANGEXCLUSIVE NUMBER .)
    LOCALVAR        reduce using rule 45 (rango -> NUMBER RANGEXCLUSIVE NUMBER .)
    CONSTANT        reduce using rule 45 (rango -> NUMBER RANGEXCLUSIVE NUMBER .)


state 61

    (10) argumentos -> LOCALVAR EQUAL LCURLYBRACKET . RCURLYBRACKET

    RCURLYBRACKET   shift and go to state 69


state 62

    (13) variosargumentos -> LOCALVAR EQUAL datos .
    (15) variosargumentos -> LOCALVAR EQUAL datos . masargumentos
    (16) masargumentos -> . COMMA variosargumentos

    RPARENTHESES    reduce using rule 13 (variosargumentos -> LOCALVAR EQUAL datos .)
    COMMA           shift and go to state 51

    masargumentos                  shift and go to state 70

state 63

    (11) argumentos -> LOCALVAR TWOPOINTS datos .

    RPARENTHESES    reduce using rule 11 (argumentos -> LOCALVAR TWOPOINTS datos .)


state 64

    (16) masargumentos -> COMMA variosargumentos .

    RPARENTHESES    reduce using rule 16 (masargumentos -> COMMA variosargumentos .)


state 65

    (12) variosargumentos -> LOCALVAR .
    (13) variosargumentos -> LOCALVAR . EQUAL datos
    (14) variosargumentos -> LOCALVAR . masargumentos
    (15) variosargumentos -> LOCALVAR . EQUAL datos masargumentos
    (16) masargumentos -> . COMMA variosargumentos

    RPARENTHESES    reduce using rule 12 (variosargumentos -> LOCALVAR .)
    EQUAL           shift and go to state 71
    COMMA           shift and go to state 51

    masargumentos                  shift and go to state 50

state 66

    (5) funcion -> DEF LOCALVAR LPARENTHESES argumentos RPARENTHESES cuerpo . END
    (6) funcion -> DEF LOCALVAR LPARENTHESES argumentos RPARENTHESES cuerpo . retornar END
    (17) retornar -> . RETURN LOCALVAR
    (18) retornar -> . RETURN datos

    END             shift and go to state 72
    RETURN          shift and go to state 74

    retornar                       shift and go to state 73

state 67

    (40) masopciones -> VAR DOT . funcionesHash masopciones
    (41) funcionesHash -> . INCLUDE QUESTIONMARK LPARENTHESES variables RPARENTHESES
    (42) funcionesHash -> . DELETE LPARENTHESES variables RPARENTHESES
    (43) funcionesHash -> . KEYS

    INCLUDE         shift and go to state 76
    DELETE          shift and go to state 77
    KEYS            shift and go to state 78

    funcionesHash                  shift and go to state 75

state 68

    (36) elementoHash -> variables EQUAL GREATERTHAN variables . maselementos
    (37) maselementos -> .
    (38) maselementos -> . COMMA elementoHash maselementos

  ! shift/reduce conflict for COMMA resolved as shift
    RCURLYBRACKET   reduce using rule 37 (maselementos -> .)
    COMMA           shift and go to state 80

  ! COMMA           [ reduce using rule 37 (maselementos -> .) ]

    maselementos                   shift and go to state 79

state 69

    (10) argumentos -> LOCALVAR EQUAL LCURLYBRACKET RCURLYBRACKET .

    RPARENTHESES    reduce using rule 10 (argumentos -> LOCALVAR EQUAL LCURLYBRACKET RCURLYBRACKET .)


state 70

    (15) variosargumentos -> LOCALVAR EQUAL datos masargumentos .

    RPARENTHESES    reduce using rule 15 (variosargumentos -> LOCALVAR EQUAL datos masargumentos .)


state 71

    (13) variosargumentos -> LOCALVAR EQUAL . datos
    (15) variosargumentos -> LOCALVAR EQUAL . datos masargumentos
    (25) datos -> . NUMBER
    (26) datos -> . FLOAT
    (27) datos -> . STRING

    NUMBER          shift and go to state 17
    FLOAT           shift and go to state 18
    STRING          shift and go to state 19

    datos                          shift and go to state 62

state 72

    (5) funcion -> DEF LOCALVAR LPARENTHESES argumentos RPARENTHESES cuerpo END .

    $end            reduce using rule 5 (funcion -> DEF LOCALVAR LPARENTHESES argumentos RPARENTHESES cuerpo END .)


state 73

    (6) funcion -> DEF LOCALVAR LPARENTHESES argumentos RPARENTHESES cuerpo retornar . END

    END             shift and go to state 81


state 74

    (17) retornar -> RETURN . LOCALVAR
    (18) retornar -> RETURN . datos
    (25) datos -> . NUMBER
    (26) datos -> . FLOAT
    (27) datos -> . STRING

    LOCALVAR        shift and go to state 82
    NUMBER          shift and go to state 17
    FLOAT           shift and go to state 18
    STRING          shift and go to state 19

    datos                          shift and go to state 83

state 75

    (40) masopciones -> VAR DOT funcionesHash . masopciones
    (39) masopciones -> .
    (40) masopciones -> . VAR DOT funcionesHash masopciones

    $end            reduce using rule 39 (masopciones -> .)
    END             reduce using rule 39 (masopciones -> .)
    RETURN          reduce using rule 39 (masopciones -> .)
    VAR             shift and go to state 56

    masopciones                    shift and go to state 84

state 76

    (41) funcionesHash -> INCLUDE . QUESTIONMARK LPARENTHESES variables RPARENTHESES

    QUESTIONMARK    shift and go to state 85


state 77

    (42) funcionesHash -> DELETE . LPARENTHESES variables RPARENTHESES

    LPARENTHESES    shift and go to state 86


state 78

    (43) funcionesHash -> KEYS .

    VAR             reduce using rule 43 (funcionesHash -> KEYS .)
    $end            reduce using rule 43 (funcionesHash -> KEYS .)
    END             reduce using rule 43 (funcionesHash -> KEYS .)
    RETURN          reduce using rule 43 (funcionesHash -> KEYS .)


state 79

    (36) elementoHash -> variables EQUAL GREATERTHAN variables maselementos .

    RCURLYBRACKET   reduce using rule 36 (elementoHash -> variables EQUAL GREATERTHAN variables maselementos .)
    COMMA           reduce using rule 36 (elementoHash -> variables EQUAL GREATERTHAN variables maselementos .)


state 80

    (38) maselementos -> COMMA . elementoHash maselementos
    (36) elementoHash -> . variables EQUAL GREATERTHAN variables maselementos
    (28) variables -> . NUMBER
    (29) variables -> . FLOAT
    (30) variables -> . STRING

    NUMBER          shift and go to state 30
    FLOAT           shift and go to state 31
    STRING          shift and go to state 32

    elementoHash                   shift and go to state 87
    variables                      shift and go to state 29

state 81

    (6) funcion -> DEF LOCALVAR LPARENTHESES argumentos RPARENTHESES cuerpo retornar END .

    $end            reduce using rule 6 (funcion -> DEF LOCALVAR LPARENTHESES argumentos RPARENTHESES cuerpo retornar END .)


state 82

    (17) retornar -> RETURN LOCALVAR .

    END             reduce using rule 17 (retornar -> RETURN LOCALVAR .)


state 83

    (18) retornar -> RETURN datos .

    END             reduce using rule 18 (retornar -> RETURN datos .)


state 84

    (40) masopciones -> VAR DOT funcionesHash masopciones .

    $end            reduce using rule 40 (masopciones -> VAR DOT funcionesHash masopciones .)
    END             reduce using rule 40 (masopciones -> VAR DOT funcionesHash masopciones .)
    RETURN          reduce using rule 40 (masopciones -> VAR DOT funcionesHash masopciones .)


state 85

    (41) funcionesHash -> INCLUDE QUESTIONMARK . LPARENTHESES variables RPARENTHESES

    LPARENTHESES    shift and go to state 88


state 86

    (42) funcionesHash -> DELETE LPARENTHESES . variables RPARENTHESES
    (28) variables -> . NUMBER
    (29) variables -> . FLOAT
    (30) variables -> . STRING

    NUMBER          shift and go to state 30
    FLOAT           shift and go to state 31
    STRING          shift and go to state 32

    variables                      shift and go to state 89

state 87

    (38) maselementos -> COMMA elementoHash . maselementos
    (37) maselementos -> .
    (38) maselementos -> . COMMA elementoHash maselementos

  ! shift/reduce conflict for COMMA resolved as shift
    RCURLYBRACKET   reduce using rule 37 (maselementos -> .)
    COMMA           shift and go to state 80

  ! COMMA           [ reduce using rule 37 (maselementos -> .) ]

    maselementos                   shift and go to state 90

state 88

    (41) funcionesHash -> INCLUDE QUESTIONMARK LPARENTHESES . variables RPARENTHESES
    (28) variables -> . NUMBER
    (29) variables -> . FLOAT
    (30) variables -> . STRING

    NUMBER          shift and go to state 30
    FLOAT           shift and go to state 31
    STRING          shift and go to state 32

    variables                      shift and go to state 91

state 89

    (42) funcionesHash -> DELETE LPARENTHESES variables . RPARENTHESES

    RPARENTHESES    shift and go to state 92


state 90

    (38) maselementos -> COMMA elementoHash maselementos .

    COMMA           reduce using rule 38 (maselementos -> COMMA elementoHash maselementos .)
    RCURLYBRACKET   reduce using rule 38 (maselementos -> COMMA elementoHash maselementos .)


state 91

    (41) funcionesHash -> INCLUDE QUESTIONMARK LPARENTHESES variables . RPARENTHESES

    RPARENTHESES    shift and go to state 93


state 92

    (42) funcionesHash -> DELETE LPARENTHESES variables RPARENTHESES .

    VAR             reduce using rule 42 (funcionesHash -> DELETE LPARENTHESES variables RPARENTHESES .)
    $end            reduce using rule 42 (funcionesHash -> DELETE LPARENTHESES variables RPARENTHESES .)
    END             reduce using rule 42 (funcionesHash -> DELETE LPARENTHESES variables RPARENTHESES .)
    RETURN          reduce using rule 42 (funcionesHash -> DELETE LPARENTHESES variables RPARENTHESES .)


state 93

    (41) funcionesHash -> INCLUDE QUESTIONMARK LPARENTHESES variables RPARENTHESES .

    VAR             reduce using rule 41 (funcionesHash -> INCLUDE QUESTIONMARK LPARENTHESES variables RPARENTHESES .)
    $end            reduce using rule 41 (funcionesHash -> INCLUDE QUESTIONMARK LPARENTHESES variables RPARENTHESES .)
    END             reduce using rule 41 (funcionesHash -> INCLUDE QUESTIONMARK LPARENTHESES variables RPARENTHESES .)
    RETURN          reduce using rule 41 (funcionesHash -> INCLUDE QUESTIONMARK LPARENTHESES variables RPARENTHESES .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for COMMA in state 68 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 87 resolved as shift
