Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ALERT
    AMPERSAND
    BEGIN
    BEGIN_M
    BOOLEAN
    CIRCUMFLEX
    COLON
    COMBCOMP
    COMMENT
    DOBLEQUOTE
    DOUBLELESSTHAN
    ELSEIF
    END_M
    FALSE
    GETS
    NIL
    NOT
    OR
    PIPE
    QUESTIONMARKPERIOD
    SEMICOLON
    SINGLEQUOTE
    TRUE
    TWOGREATERTHAN
    UNTIL
    WAVE

Grammar

Rule 0     S' -> inicio
Rule 1     inicio -> cuerpo
Rule 2     inicio -> funcion
Rule 3     funcion -> DEF LOCALVAR LPARENTHESES argumentos RPARENTHESES cuerpo END
Rule 4     funcion -> DEF LOCALVAR LPARENTHESES argumentos RPARENTHESES cuerpo retornar END
Rule 5     argumentos -> variosargumentos
Rule 6     argumentos -> MULTIPLY LOCALVAR
Rule 7     argumentos -> TWOSTARS LOCALVAR
Rule 8     argumentos -> LOCALVAR EQUAL LCURLYBRACKET RCURLYBRACKET
Rule 9     argumentos -> LOCALVAR TWOPOINTS datos
Rule 10    variosargumentos -> LOCALVAR
Rule 11    variosargumentos -> LOCALVAR EQUAL datos
Rule 12    variosargumentos -> LOCALVAR masargumentos
Rule 13    variosargumentos -> LOCALVAR EQUAL datos masargumentos
Rule 14    masargumentos -> COMMA variosargumentos
Rule 15    retornar -> RETURN LOCALVAR
Rule 16    retornar -> RETURN datos
Rule 17    cuerpo -> declaracion cuerpo
Rule 18    cuerpo -> asignacion cuerpo
Rule 19    cuerpo -> loop cuerpo
Rule 20    cuerpo -> estructurasDatos cuerpo
Rule 21    cuerpo -> if cuerpo
Rule 22    cuerpo -> unless cuerpo
Rule 23    cuerpo -> impresion cuerpo
Rule 24    cuerpo -> operacionSet cuerpo
Rule 25    cuerpo -> operacionarray cuerpo
Rule 26    cuerpo -> operacionHash cuerpo
Rule 27    cuerpo -> string cuerpo
Rule 28    cuerpo -> integer cuerpo
Rule 29    cuerpo -> <empty>
Rule 30    loop -> FOR LOCALVAR IN rango cuerpo END
Rule 31    declaracion -> tiposvariables EQUAL datos
Rule 32    declaracion -> tiposvariables EQUAL estructurasDatos
Rule 33    declaracion -> tiposvariables EQUAL expresion
Rule 34    declaracion -> tiposvariables EQUAL declaracion
Rule 35    declaracion -> tiposvariables EQUAL casting
Rule 36    asignacion -> LOCALVAR PLUSASSIGN datosAsignacion
Rule 37    asignacion -> LOCALVAR MINASSIGN datosAsignacion
Rule 38    asignacion -> LOCALVAR DIVASSIGN datosAsignacion
Rule 39    asignacion -> LOCALVAR TIMESASSIGN datosAsignacion
Rule 40    asignacion -> LOCALVAR MODASSIGN datosAsignacion
Rule 41    asignacion -> LOCALVAR EXPASSIGN datosAsignacion
Rule 42    datosAsignacion -> number
Rule 43    datosAsignacion -> LOCALVAR
Rule 44    tiposvariables -> VAR
Rule 45    tiposvariables -> LOCALVAR
Rule 46    tiposvariables -> CONSTANT
Rule 47    datos -> INTEGER
Rule 48    datos -> FLOAT
Rule 49    datos -> STRING
Rule 50    estructurasDatos -> hash
Rule 51    estructurasDatos -> array
Rule 52    estructurasDatos -> set
Rule 53    hash -> LCURLYBRACKET elementoHash RCURLYBRACKET
Rule 54    elementoHash -> datos EQUAL GREATERTHAN datos maselementos
Rule 55    elementoHash -> <empty>
Rule 56    maselementos -> <empty>
Rule 57    maselementos -> COMMA elementoHash maselementos
Rule 58    operacionHash -> hash LBRACKET datos RBRACKET
Rule 59    operacionHash -> hash LBRACKET datos RBRACKET EQUAL datos
Rule 60    operacionHash -> hash DOT INCLUDE QUESTIONMARK LPARENTHESES datos RPARENTHESES
Rule 61    operacionHash -> hash DOT DELETE LPARENTHESES datos RPARENTHESES
Rule 62    operacionHash -> hash DOT KEYS
Rule 63    rango -> INTEGER RANGEINCLUSIVE INTEGER
Rule 64    rango -> INTEGER RANGEXCLUSIVE INTEGER
Rule 65    impresion -> PUTS datos
Rule 66    impresion -> PUTS LOCALVAR
Rule 67    impresion -> PRINT datos
Rule 68    impresion -> PRINT LOCALVAR
Rule 69    number -> INTEGER
Rule 70    number -> FLOAT
Rule 71    expresion -> operacion
Rule 72    expresion -> LPARENTHESES operacion RPARENTHESES
Rule 73    expresion -> LPARENTHESES operacion RPARENTHESES masoperaciones
Rule 74    operacion -> number operador number
Rule 75    operacion -> operacion masoperaciones
Rule 76    masoperaciones -> operador expresion masoperaciones
Rule 77    masoperaciones -> operador number
Rule 78    masoperaciones -> operador expresion
Rule 79    operador -> PLUS
Rule 80    operador -> MINUS
Rule 81    operador -> MULTIPLY
Rule 82    operador -> DIVIDE
Rule 83    operador -> PERCENTAGE
Rule 84    array -> LBRACKET RBRACKET
Rule 85    array -> LBRACKET datosarray RBRACKET
Rule 86    datosvarios -> datos
Rule 87    datosvarios -> number
Rule 88    datosvarios -> VAR
Rule 89    datosvarios -> LOCALVAR
Rule 90    datosarray -> datosvarios
Rule 91    datosarray -> datosarray COMMA datosvarios
Rule 92    operacionarray -> array LBRACKET INTEGER RBRACKET
Rule 93    operacionarray -> array DOT TAKE LPARENTHESES INTEGER RPARENTHESES
Rule 94    operacionarray -> array DOT DROP LPARENTHESES INTEGER RPARENTHESES
Rule 95    operacionarray -> array DOT push maspush
Rule 96    push -> PUSH LPARENTHESES datosvarios RPARENTHESES
Rule 97    push -> <empty>
Rule 98    maspush -> <empty>
Rule 99    maspush -> DOT push maspush
Rule 100   operacionarray -> array DOT POP
Rule 101   operacionarray -> array DOT POP LPARENTHESES INTEGER RPARENTHESES
Rule 102   operacionarray -> array DOT DELETE LPARENTHESES INTEGER RPARENTHESES
Rule 103   operacionarray -> array DOT LENGTH LPARENTHESES RPARENTHESES
Rule 104   operacionarray -> array DOT EMPTY QUESTIONMARK
Rule 105   datoscompletos -> datosvarios
Rule 106   datoscompletos -> tiposvariables
Rule 107   if -> IF datoscompletos operadores datoscompletos cuerpo END
Rule 108   if -> IF datoscompletos operadores datoscompletos cuerpo else
Rule 109   else -> ELSE cuerpo END
Rule 110   operadores -> DOUBLEEQUAL
Rule 111   operadores -> TRIPLEEQUAL
Rule 112   operadores -> GREATERTHAN
Rule 113   operadores -> NOTEQUAL
Rule 114   operadores -> LESSTHAN
Rule 115   operadores -> GREQUAL
Rule 116   operadores -> LEQUAL
Rule 117   integer -> INTEGERW DOT SQRT LPARENTHESES INTEGER RPARENTHESES
Rule 118   integer -> INTEGER DOT CEIL LPARENTHESES RPARENTHESES
Rule 119   integer -> INTEGER DOT CEIL LPARENTHESES INTEGER RPARENTHESES
Rule 120   integer -> INTEGER DOT FLOOR LPARENTHESES RPARENTHESES
Rule 121   integer -> INTEGER DOT FLOOR LPARENTHESES INTEGER RPARENTHESES
Rule 122   integer -> INTEGER DOT ABS
Rule 123   float -> FLOAT DOT CEIL LPARENTHESES RPARENTHESES
Rule 124   float -> FLOAT DOT CEIL LPARENTHESES INTEGER RPARENTHESES
Rule 125   float -> FLOAT DOT FLOOR LPARENTHESES RPARENTHESES
Rule 126   float -> FLOAT DOT FLOOR LPARENTHESES INTEGER RPARENTHESES
Rule 127   float -> FLOAT DOT ABS
Rule 128   unless -> UNLESS expresionCondicional cuerpo ELSE cuerpo END
Rule 129   expresionCondicional -> boolean
Rule 130   expresionCondicional -> EXCLAMATION LPARENTHESES boolean RPARENTHESES
Rule 131   operadorBinario -> DOUBLEAMPERSAND
Rule 132   operadorBinario -> DOUBLEPIPE
Rule 133   boolean -> condiciones
Rule 134   boolean -> EXCLAMATION LPARENTHESES condiciones RPARENTHESES
Rule 135   boolean -> boolean operadorBinario boolean
Rule 136   condiciones -> tiposvariables operadores tiposvariables
Rule 137   condiciones -> datos operadores datos
Rule 138   condiciones -> tiposvariables operadores datos
Rule 139   condiciones -> datos operadores tiposvariables
Rule 140   set -> SET LBRACKET elementoSet RBRACKET
Rule 141   elementoSet -> <empty>
Rule 142   elementoSet -> datos
Rule 143   elementoSet -> datos otroElemento
Rule 144   otroElemento -> <empty>
Rule 145   otroElemento -> COMMA elementoSet otroElemento
Rule 146   operacionSet -> set DOT ADD LPARENTHESES datos RPARENTHESES
Rule 147   operacionSet -> set DOT ADD LPARENTHESES tiposvariables RPARENTHESES
Rule 148   operacionSet -> set DOT CLEAR
Rule 149   operacionSet -> set DOT DELETE LPARENTHESES datos RPARENTHESES
Rule 150   operacionSet -> set DOT DELETE LPARENTHESES tiposvariables RPARENTHESES
Rule 151   string -> STRING PLUS STRING
Rule 152   string -> STRING MULTIPLY INTEGER
Rule 153   string -> STRING DOT stringOpt
Rule 154   stringOpt -> UPCASE
Rule 155   stringOpt -> DOWNCASE
Rule 156   stringOpt -> LENGTH
Rule 157   stringOpt -> CAPS
Rule 158   stringOpt -> INSERT LPARENTHESES INTEGER COMMA STRING RPARENTHESES
Rule 159   casting -> STRING DOT TO_I
Rule 160   casting -> STRING DOT TO_F
Rule 161   casting -> number DOT TO_S

Terminals, with rules where they appear

ABS                  : 122 127
ADD                  : 146 147
ALERT                : 
AMPERSAND            : 
BEGIN                : 
BEGIN_M              : 
BOOLEAN              : 
CAPS                 : 157
CEIL                 : 118 119 123 124
CIRCUMFLEX           : 
CLEAR                : 148
COLON                : 
COMBCOMP             : 
COMMA                : 14 57 91 145 158
COMMENT              : 
CONSTANT             : 46
DEF                  : 3 4
DELETE               : 61 102 149 150
DIVASSIGN            : 38
DIVIDE               : 82
DOBLEQUOTE           : 
DOT                  : 60 61 62 93 94 95 99 100 101 102 103 104 117 118 119 120 121 122 123 124 125 126 127 146 147 148 149 150 153 159 160 161
DOUBLEAMPERSAND      : 131
DOUBLEEQUAL          : 110
DOUBLELESSTHAN       : 
DOUBLEPIPE           : 132
DOWNCASE             : 155
DROP                 : 94
ELSE                 : 109 128
ELSEIF               : 
EMPTY                : 104
END                  : 3 4 30 107 109 128
END_M                : 
EQUAL                : 8 11 13 31 32 33 34 35 54 59
EXCLAMATION          : 130 134
EXPASSIGN            : 41
FALSE                : 
FLOAT                : 48 70 123 124 125 126 127
FLOOR                : 120 121 125 126
FOR                  : 30
GETS                 : 
GREATERTHAN          : 54 112
GREQUAL              : 115
IF                   : 107 108
IN                   : 30
INCLUDE              : 60
INSERT               : 158
INTEGER              : 47 63 63 64 64 69 92 93 94 101 102 117 118 119 119 120 121 121 122 124 126 152 158
INTEGERW             : 117
KEYS                 : 62
LBRACKET             : 58 59 84 85 92 140
LCURLYBRACKET        : 8 53
LENGTH               : 103 156
LEQUAL               : 116
LESSTHAN             : 114
LOCALVAR             : 3 4 6 7 8 9 10 11 12 13 15 30 36 37 38 39 40 41 43 45 66 68 89
LPARENTHESES         : 3 4 60 61 72 73 93 94 96 101 102 103 117 118 119 120 121 123 124 125 126 130 134 146 147 149 150 158
MINASSIGN            : 37
MINUS                : 80
MODASSIGN            : 40
MULTIPLY             : 6 81 152
NIL                  : 
NOT                  : 
NOTEQUAL             : 113
OR                   : 
PERCENTAGE           : 83
PIPE                 : 
PLUS                 : 79 151
PLUSASSIGN           : 36
POP                  : 100 101
PRINT                : 67 68
PUSH                 : 96
PUTS                 : 65 66
QUESTIONMARK         : 60 104
QUESTIONMARKPERIOD   : 
RANGEINCLUSIVE       : 63
RANGEXCLUSIVE        : 64
RBRACKET             : 58 59 84 85 92 140
RCURLYBRACKET        : 8 53
RETURN               : 15 16
RPARENTHESES         : 3 4 60 61 72 73 93 94 96 101 102 103 117 118 119 120 121 123 124 125 126 130 134 146 147 149 150 158
SEMICOLON            : 
SET                  : 140
SINGLEQUOTE          : 
SQRT                 : 117
STRING               : 49 151 151 152 153 158 159 160
TAKE                 : 93
TIMESASSIGN          : 39
TO_F                 : 160
TO_I                 : 159
TO_S                 : 161
TRIPLEEQUAL          : 111
TRUE                 : 
TWOGREATERTHAN       : 
TWOPOINTS            : 9
TWOSTARS             : 7
UNLESS               : 128
UNTIL                : 
UPCASE               : 154
VAR                  : 44 88
WAVE                 : 
error                : 

Nonterminals, with rules where they appear

argumentos           : 3 4
array                : 51 92 93 94 95 100 101 102 103 104
asignacion           : 18
boolean              : 129 130 135 135
casting              : 35
condiciones          : 133 134
cuerpo               : 1 3 4 17 18 19 20 21 22 23 24 25 26 27 28 30 107 108 109 128 128
datos                : 9 11 13 16 31 54 54 58 59 59 60 61 65 67 86 137 137 138 139 142 143 146 149
datosAsignacion      : 36 37 38 39 40 41
datosarray           : 85 91
datoscompletos       : 107 107 108 108
datosvarios          : 90 91 96 105
declaracion          : 17 34
elementoHash         : 53 57
elementoSet          : 140 145
else                 : 108
estructurasDatos     : 20 32
expresion            : 33 76 78
expresionCondicional : 128
float                : 
funcion              : 2
hash                 : 50 58 59 60 61 62
if                   : 21
impresion            : 23
inicio               : 0
integer              : 28
loop                 : 19
masargumentos        : 12 13
maselementos         : 54 57
masoperaciones       : 73 75 76
maspush              : 95 99
number               : 42 74 74 77 87 161
operacion            : 71 72 73 75
operacionHash        : 26
operacionSet         : 24
operacionarray       : 25
operador             : 74 76 77 78
operadorBinario      : 135
operadores           : 107 108 136 137 138 139
otroElemento         : 143 145
push                 : 95 99
rango                : 30
retornar             : 4
set                  : 52 146 147 148 149 150
string               : 27
stringOpt            : 153
tiposvariables       : 31 32 33 34 35 106 136 136 138 139 147 150
unless               : 22
variosargumentos     : 5 14

Parsing method: LALR

state 0

    (0) S' -> . inicio
    (1) inicio -> . cuerpo
    (2) inicio -> . funcion
    (17) cuerpo -> . declaracion cuerpo
    (18) cuerpo -> . asignacion cuerpo
    (19) cuerpo -> . loop cuerpo
    (20) cuerpo -> . estructurasDatos cuerpo
    (21) cuerpo -> . if cuerpo
    (22) cuerpo -> . unless cuerpo
    (23) cuerpo -> . impresion cuerpo
    (24) cuerpo -> . operacionSet cuerpo
    (25) cuerpo -> . operacionarray cuerpo
    (26) cuerpo -> . operacionHash cuerpo
    (27) cuerpo -> . string cuerpo
    (28) cuerpo -> . integer cuerpo
    (29) cuerpo -> .
    (3) funcion -> . DEF LOCALVAR LPARENTHESES argumentos RPARENTHESES cuerpo END
    (4) funcion -> . DEF LOCALVAR LPARENTHESES argumentos RPARENTHESES cuerpo retornar END
    (31) declaracion -> . tiposvariables EQUAL datos
    (32) declaracion -> . tiposvariables EQUAL estructurasDatos
    (33) declaracion -> . tiposvariables EQUAL expresion
    (34) declaracion -> . tiposvariables EQUAL declaracion
    (35) declaracion -> . tiposvariables EQUAL casting
    (36) asignacion -> . LOCALVAR PLUSASSIGN datosAsignacion
    (37) asignacion -> . LOCALVAR MINASSIGN datosAsignacion
    (38) asignacion -> . LOCALVAR DIVASSIGN datosAsignacion
    (39) asignacion -> . LOCALVAR TIMESASSIGN datosAsignacion
    (40) asignacion -> . LOCALVAR MODASSIGN datosAsignacion
    (41) asignacion -> . LOCALVAR EXPASSIGN datosAsignacion
    (30) loop -> . FOR LOCALVAR IN rango cuerpo END
    (50) estructurasDatos -> . hash
    (51) estructurasDatos -> . array
    (52) estructurasDatos -> . set
    (107) if -> . IF datoscompletos operadores datoscompletos cuerpo END
    (108) if -> . IF datoscompletos operadores datoscompletos cuerpo else
    (128) unless -> . UNLESS expresionCondicional cuerpo ELSE cuerpo END
    (65) impresion -> . PUTS datos
    (66) impresion -> . PUTS LOCALVAR
    (67) impresion -> . PRINT datos
    (68) impresion -> . PRINT LOCALVAR
    (146) operacionSet -> . set DOT ADD LPARENTHESES datos RPARENTHESES
    (147) operacionSet -> . set DOT ADD LPARENTHESES tiposvariables RPARENTHESES
    (148) operacionSet -> . set DOT CLEAR
    (149) operacionSet -> . set DOT DELETE LPARENTHESES datos RPARENTHESES
    (150) operacionSet -> . set DOT DELETE LPARENTHESES tiposvariables RPARENTHESES
    (92) operacionarray -> . array LBRACKET INTEGER RBRACKET
    (93) operacionarray -> . array DOT TAKE LPARENTHESES INTEGER RPARENTHESES
    (94) operacionarray -> . array DOT DROP LPARENTHESES INTEGER RPARENTHESES
    (95) operacionarray -> . array DOT push maspush
    (100) operacionarray -> . array DOT POP
    (101) operacionarray -> . array DOT POP LPARENTHESES INTEGER RPARENTHESES
    (102) operacionarray -> . array DOT DELETE LPARENTHESES INTEGER RPARENTHESES
    (103) operacionarray -> . array DOT LENGTH LPARENTHESES RPARENTHESES
    (104) operacionarray -> . array DOT EMPTY QUESTIONMARK
    (58) operacionHash -> . hash LBRACKET datos RBRACKET
    (59) operacionHash -> . hash LBRACKET datos RBRACKET EQUAL datos
    (60) operacionHash -> . hash DOT INCLUDE QUESTIONMARK LPARENTHESES datos RPARENTHESES
    (61) operacionHash -> . hash DOT DELETE LPARENTHESES datos RPARENTHESES
    (62) operacionHash -> . hash DOT KEYS
    (151) string -> . STRING PLUS STRING
    (152) string -> . STRING MULTIPLY INTEGER
    (153) string -> . STRING DOT stringOpt
    (117) integer -> . INTEGERW DOT SQRT LPARENTHESES INTEGER RPARENTHESES
    (118) integer -> . INTEGER DOT CEIL LPARENTHESES RPARENTHESES
    (119) integer -> . INTEGER DOT CEIL LPARENTHESES INTEGER RPARENTHESES
    (120) integer -> . INTEGER DOT FLOOR LPARENTHESES RPARENTHESES
    (121) integer -> . INTEGER DOT FLOOR LPARENTHESES INTEGER RPARENTHESES
    (122) integer -> . INTEGER DOT ABS
    (44) tiposvariables -> . VAR
    (45) tiposvariables -> . LOCALVAR
    (46) tiposvariables -> . CONSTANT
    (53) hash -> . LCURLYBRACKET elementoHash RCURLYBRACKET
    (84) array -> . LBRACKET RBRACKET
    (85) array -> . LBRACKET datosarray RBRACKET
    (140) set -> . SET LBRACKET elementoSet RBRACKET

    $end            reduce using rule 29 (cuerpo -> .)
    DEF             shift and go to state 16
    LOCALVAR        shift and go to state 17
    FOR             shift and go to state 19
    IF              shift and go to state 23
    UNLESS          shift and go to state 24
    PUTS            shift and go to state 25
    PRINT           shift and go to state 26
    STRING          shift and go to state 29
    INTEGERW        shift and go to state 30
    INTEGER         shift and go to state 28
    VAR             shift and go to state 31
    CONSTANT        shift and go to state 32
    LCURLYBRACKET   shift and go to state 33
    LBRACKET        shift and go to state 27
    SET             shift and go to state 34

    inicio                         shift and go to state 1
    cuerpo                         shift and go to state 2
    funcion                        shift and go to state 3
    declaracion                    shift and go to state 4
    asignacion                     shift and go to state 5
    loop                           shift and go to state 6
    estructurasDatos               shift and go to state 7
    if                             shift and go to state 8
    unless                         shift and go to state 9
    impresion                      shift and go to state 10
    operacionSet                   shift and go to state 11
    operacionarray                 shift and go to state 12
    operacionHash                  shift and go to state 13
    string                         shift and go to state 14
    integer                        shift and go to state 15
    tiposvariables                 shift and go to state 18
    hash                           shift and go to state 20
    array                          shift and go to state 21
    set                            shift and go to state 22

state 1

    (0) S' -> inicio .



state 2

    (1) inicio -> cuerpo .

    $end            reduce using rule 1 (inicio -> cuerpo .)


state 3

    (2) inicio -> funcion .

    $end            reduce using rule 2 (inicio -> funcion .)


state 4

    (17) cuerpo -> declaracion . cuerpo
    (17) cuerpo -> . declaracion cuerpo
    (18) cuerpo -> . asignacion cuerpo
    (19) cuerpo -> . loop cuerpo
    (20) cuerpo -> . estructurasDatos cuerpo
    (21) cuerpo -> . if cuerpo
    (22) cuerpo -> . unless cuerpo
    (23) cuerpo -> . impresion cuerpo
    (24) cuerpo -> . operacionSet cuerpo
    (25) cuerpo -> . operacionarray cuerpo
    (26) cuerpo -> . operacionHash cuerpo
    (27) cuerpo -> . string cuerpo
    (28) cuerpo -> . integer cuerpo
    (29) cuerpo -> .
    (31) declaracion -> . tiposvariables EQUAL datos
    (32) declaracion -> . tiposvariables EQUAL estructurasDatos
    (33) declaracion -> . tiposvariables EQUAL expresion
    (34) declaracion -> . tiposvariables EQUAL declaracion
    (35) declaracion -> . tiposvariables EQUAL casting
    (36) asignacion -> . LOCALVAR PLUSASSIGN datosAsignacion
    (37) asignacion -> . LOCALVAR MINASSIGN datosAsignacion
    (38) asignacion -> . LOCALVAR DIVASSIGN datosAsignacion
    (39) asignacion -> . LOCALVAR TIMESASSIGN datosAsignacion
    (40) asignacion -> . LOCALVAR MODASSIGN datosAsignacion
    (41) asignacion -> . LOCALVAR EXPASSIGN datosAsignacion
    (30) loop -> . FOR LOCALVAR IN rango cuerpo END
    (50) estructurasDatos -> . hash
    (51) estructurasDatos -> . array
    (52) estructurasDatos -> . set
    (107) if -> . IF datoscompletos operadores datoscompletos cuerpo END
    (108) if -> . IF datoscompletos operadores datoscompletos cuerpo else
    (128) unless -> . UNLESS expresionCondicional cuerpo ELSE cuerpo END
    (65) impresion -> . PUTS datos
    (66) impresion -> . PUTS LOCALVAR
    (67) impresion -> . PRINT datos
    (68) impresion -> . PRINT LOCALVAR
    (146) operacionSet -> . set DOT ADD LPARENTHESES datos RPARENTHESES
    (147) operacionSet -> . set DOT ADD LPARENTHESES tiposvariables RPARENTHESES
    (148) operacionSet -> . set DOT CLEAR
    (149) operacionSet -> . set DOT DELETE LPARENTHESES datos RPARENTHESES
    (150) operacionSet -> . set DOT DELETE LPARENTHESES tiposvariables RPARENTHESES
    (92) operacionarray -> . array LBRACKET INTEGER RBRACKET
    (93) operacionarray -> . array DOT TAKE LPARENTHESES INTEGER RPARENTHESES
    (94) operacionarray -> . array DOT DROP LPARENTHESES INTEGER RPARENTHESES
    (95) operacionarray -> . array DOT push maspush
    (100) operacionarray -> . array DOT POP
    (101) operacionarray -> . array DOT POP LPARENTHESES INTEGER RPARENTHESES
    (102) operacionarray -> . array DOT DELETE LPARENTHESES INTEGER RPARENTHESES
    (103) operacionarray -> . array DOT LENGTH LPARENTHESES RPARENTHESES
    (104) operacionarray -> . array DOT EMPTY QUESTIONMARK
    (58) operacionHash -> . hash LBRACKET datos RBRACKET
    (59) operacionHash -> . hash LBRACKET datos RBRACKET EQUAL datos
    (60) operacionHash -> . hash DOT INCLUDE QUESTIONMARK LPARENTHESES datos RPARENTHESES
    (61) operacionHash -> . hash DOT DELETE LPARENTHESES datos RPARENTHESES
    (62) operacionHash -> . hash DOT KEYS
    (151) string -> . STRING PLUS STRING
    (152) string -> . STRING MULTIPLY INTEGER
    (153) string -> . STRING DOT stringOpt
    (117) integer -> . INTEGERW DOT SQRT LPARENTHESES INTEGER RPARENTHESES
    (118) integer -> . INTEGER DOT CEIL LPARENTHESES RPARENTHESES
    (119) integer -> . INTEGER DOT CEIL LPARENTHESES INTEGER RPARENTHESES
    (120) integer -> . INTEGER DOT FLOOR LPARENTHESES RPARENTHESES
    (121) integer -> . INTEGER DOT FLOOR LPARENTHESES INTEGER RPARENTHESES
    (122) integer -> . INTEGER DOT ABS
    (44) tiposvariables -> . VAR
    (45) tiposvariables -> . LOCALVAR
    (46) tiposvariables -> . CONSTANT
    (53) hash -> . LCURLYBRACKET elementoHash RCURLYBRACKET
    (84) array -> . LBRACKET RBRACKET
    (85) array -> . LBRACKET datosarray RBRACKET
    (140) set -> . SET LBRACKET elementoSet RBRACKET

    $end            reduce using rule 29 (cuerpo -> .)
    ELSE            reduce using rule 29 (cuerpo -> .)
    END             reduce using rule 29 (cuerpo -> .)
    RETURN          reduce using rule 29 (cuerpo -> .)
    LOCALVAR        shift and go to state 17
    FOR             shift and go to state 19
    IF              shift and go to state 23
    UNLESS          shift and go to state 24
    PUTS            shift and go to state 25
    PRINT           shift and go to state 26
    STRING          shift and go to state 29
    INTEGERW        shift and go to state 30
    INTEGER         shift and go to state 28
    VAR             shift and go to state 31
    CONSTANT        shift and go to state 32
    LCURLYBRACKET   shift and go to state 33
    LBRACKET        shift and go to state 27
    SET             shift and go to state 34

    declaracion                    shift and go to state 4
    cuerpo                         shift and go to state 35
    asignacion                     shift and go to state 5
    loop                           shift and go to state 6
    estructurasDatos               shift and go to state 7
    if                             shift and go to state 8
    unless                         shift and go to state 9
    impresion                      shift and go to state 10
    operacionSet                   shift and go to state 11
    operacionarray                 shift and go to state 12
    operacionHash                  shift and go to state 13
    string                         shift and go to state 14
    integer                        shift and go to state 15
    tiposvariables                 shift and go to state 18
    hash                           shift and go to state 20
    array                          shift and go to state 21
    set                            shift and go to state 22

state 5

    (18) cuerpo -> asignacion . cuerpo
    (17) cuerpo -> . declaracion cuerpo
    (18) cuerpo -> . asignacion cuerpo
    (19) cuerpo -> . loop cuerpo
    (20) cuerpo -> . estructurasDatos cuerpo
    (21) cuerpo -> . if cuerpo
    (22) cuerpo -> . unless cuerpo
    (23) cuerpo -> . impresion cuerpo
    (24) cuerpo -> . operacionSet cuerpo
    (25) cuerpo -> . operacionarray cuerpo
    (26) cuerpo -> . operacionHash cuerpo
    (27) cuerpo -> . string cuerpo
    (28) cuerpo -> . integer cuerpo
    (29) cuerpo -> .
    (31) declaracion -> . tiposvariables EQUAL datos
    (32) declaracion -> . tiposvariables EQUAL estructurasDatos
    (33) declaracion -> . tiposvariables EQUAL expresion
    (34) declaracion -> . tiposvariables EQUAL declaracion
    (35) declaracion -> . tiposvariables EQUAL casting
    (36) asignacion -> . LOCALVAR PLUSASSIGN datosAsignacion
    (37) asignacion -> . LOCALVAR MINASSIGN datosAsignacion
    (38) asignacion -> . LOCALVAR DIVASSIGN datosAsignacion
    (39) asignacion -> . LOCALVAR TIMESASSIGN datosAsignacion
    (40) asignacion -> . LOCALVAR MODASSIGN datosAsignacion
    (41) asignacion -> . LOCALVAR EXPASSIGN datosAsignacion
    (30) loop -> . FOR LOCALVAR IN rango cuerpo END
    (50) estructurasDatos -> . hash
    (51) estructurasDatos -> . array
    (52) estructurasDatos -> . set
    (107) if -> . IF datoscompletos operadores datoscompletos cuerpo END
    (108) if -> . IF datoscompletos operadores datoscompletos cuerpo else
    (128) unless -> . UNLESS expresionCondicional cuerpo ELSE cuerpo END
    (65) impresion -> . PUTS datos
    (66) impresion -> . PUTS LOCALVAR
    (67) impresion -> . PRINT datos
    (68) impresion -> . PRINT LOCALVAR
    (146) operacionSet -> . set DOT ADD LPARENTHESES datos RPARENTHESES
    (147) operacionSet -> . set DOT ADD LPARENTHESES tiposvariables RPARENTHESES
    (148) operacionSet -> . set DOT CLEAR
    (149) operacionSet -> . set DOT DELETE LPARENTHESES datos RPARENTHESES
    (150) operacionSet -> . set DOT DELETE LPARENTHESES tiposvariables RPARENTHESES
    (92) operacionarray -> . array LBRACKET INTEGER RBRACKET
    (93) operacionarray -> . array DOT TAKE LPARENTHESES INTEGER RPARENTHESES
    (94) operacionarray -> . array DOT DROP LPARENTHESES INTEGER RPARENTHESES
    (95) operacionarray -> . array DOT push maspush
    (100) operacionarray -> . array DOT POP
    (101) operacionarray -> . array DOT POP LPARENTHESES INTEGER RPARENTHESES
    (102) operacionarray -> . array DOT DELETE LPARENTHESES INTEGER RPARENTHESES
    (103) operacionarray -> . array DOT LENGTH LPARENTHESES RPARENTHESES
    (104) operacionarray -> . array DOT EMPTY QUESTIONMARK
    (58) operacionHash -> . hash LBRACKET datos RBRACKET
    (59) operacionHash -> . hash LBRACKET datos RBRACKET EQUAL datos
    (60) operacionHash -> . hash DOT INCLUDE QUESTIONMARK LPARENTHESES datos RPARENTHESES
    (61) operacionHash -> . hash DOT DELETE LPARENTHESES datos RPARENTHESES
    (62) operacionHash -> . hash DOT KEYS
    (151) string -> . STRING PLUS STRING
    (152) string -> . STRING MULTIPLY INTEGER
    (153) string -> . STRING DOT stringOpt
    (117) integer -> . INTEGERW DOT SQRT LPARENTHESES INTEGER RPARENTHESES
    (118) integer -> . INTEGER DOT CEIL LPARENTHESES RPARENTHESES
    (119) integer -> . INTEGER DOT CEIL LPARENTHESES INTEGER RPARENTHESES
    (120) integer -> . INTEGER DOT FLOOR LPARENTHESES RPARENTHESES
    (121) integer -> . INTEGER DOT FLOOR LPARENTHESES INTEGER RPARENTHESES
    (122) integer -> . INTEGER DOT ABS
    (44) tiposvariables -> . VAR
    (45) tiposvariables -> . LOCALVAR
    (46) tiposvariables -> . CONSTANT
    (53) hash -> . LCURLYBRACKET elementoHash RCURLYBRACKET
    (84) array -> . LBRACKET RBRACKET
    (85) array -> . LBRACKET datosarray RBRACKET
    (140) set -> . SET LBRACKET elementoSet RBRACKET

    $end            reduce using rule 29 (cuerpo -> .)
    ELSE            reduce using rule 29 (cuerpo -> .)
    END             reduce using rule 29 (cuerpo -> .)
    RETURN          reduce using rule 29 (cuerpo -> .)
    LOCALVAR        shift and go to state 17
    FOR             shift and go to state 19
    IF              shift and go to state 23
    UNLESS          shift and go to state 24
    PUTS            shift and go to state 25
    PRINT           shift and go to state 26
    STRING          shift and go to state 29
    INTEGERW        shift and go to state 30
    INTEGER         shift and go to state 28
    VAR             shift and go to state 31
    CONSTANT        shift and go to state 32
    LCURLYBRACKET   shift and go to state 33
    LBRACKET        shift and go to state 27
    SET             shift and go to state 34

    asignacion                     shift and go to state 5
    cuerpo                         shift and go to state 36
    declaracion                    shift and go to state 4
    loop                           shift and go to state 6
    estructurasDatos               shift and go to state 7
    if                             shift and go to state 8
    unless                         shift and go to state 9
    impresion                      shift and go to state 10
    operacionSet                   shift and go to state 11
    operacionarray                 shift and go to state 12
    operacionHash                  shift and go to state 13
    string                         shift and go to state 14
    integer                        shift and go to state 15
    tiposvariables                 shift and go to state 18
    hash                           shift and go to state 20
    array                          shift and go to state 21
    set                            shift and go to state 22

state 6

    (19) cuerpo -> loop . cuerpo
    (17) cuerpo -> . declaracion cuerpo
    (18) cuerpo -> . asignacion cuerpo
    (19) cuerpo -> . loop cuerpo
    (20) cuerpo -> . estructurasDatos cuerpo
    (21) cuerpo -> . if cuerpo
    (22) cuerpo -> . unless cuerpo
    (23) cuerpo -> . impresion cuerpo
    (24) cuerpo -> . operacionSet cuerpo
    (25) cuerpo -> . operacionarray cuerpo
    (26) cuerpo -> . operacionHash cuerpo
    (27) cuerpo -> . string cuerpo
    (28) cuerpo -> . integer cuerpo
    (29) cuerpo -> .
    (31) declaracion -> . tiposvariables EQUAL datos
    (32) declaracion -> . tiposvariables EQUAL estructurasDatos
    (33) declaracion -> . tiposvariables EQUAL expresion
    (34) declaracion -> . tiposvariables EQUAL declaracion
    (35) declaracion -> . tiposvariables EQUAL casting
    (36) asignacion -> . LOCALVAR PLUSASSIGN datosAsignacion
    (37) asignacion -> . LOCALVAR MINASSIGN datosAsignacion
    (38) asignacion -> . LOCALVAR DIVASSIGN datosAsignacion
    (39) asignacion -> . LOCALVAR TIMESASSIGN datosAsignacion
    (40) asignacion -> . LOCALVAR MODASSIGN datosAsignacion
    (41) asignacion -> . LOCALVAR EXPASSIGN datosAsignacion
    (30) loop -> . FOR LOCALVAR IN rango cuerpo END
    (50) estructurasDatos -> . hash
    (51) estructurasDatos -> . array
    (52) estructurasDatos -> . set
    (107) if -> . IF datoscompletos operadores datoscompletos cuerpo END
    (108) if -> . IF datoscompletos operadores datoscompletos cuerpo else
    (128) unless -> . UNLESS expresionCondicional cuerpo ELSE cuerpo END
    (65) impresion -> . PUTS datos
    (66) impresion -> . PUTS LOCALVAR
    (67) impresion -> . PRINT datos
    (68) impresion -> . PRINT LOCALVAR
    (146) operacionSet -> . set DOT ADD LPARENTHESES datos RPARENTHESES
    (147) operacionSet -> . set DOT ADD LPARENTHESES tiposvariables RPARENTHESES
    (148) operacionSet -> . set DOT CLEAR
    (149) operacionSet -> . set DOT DELETE LPARENTHESES datos RPARENTHESES
    (150) operacionSet -> . set DOT DELETE LPARENTHESES tiposvariables RPARENTHESES
    (92) operacionarray -> . array LBRACKET INTEGER RBRACKET
    (93) operacionarray -> . array DOT TAKE LPARENTHESES INTEGER RPARENTHESES
    (94) operacionarray -> . array DOT DROP LPARENTHESES INTEGER RPARENTHESES
    (95) operacionarray -> . array DOT push maspush
    (100) operacionarray -> . array DOT POP
    (101) operacionarray -> . array DOT POP LPARENTHESES INTEGER RPARENTHESES
    (102) operacionarray -> . array DOT DELETE LPARENTHESES INTEGER RPARENTHESES
    (103) operacionarray -> . array DOT LENGTH LPARENTHESES RPARENTHESES
    (104) operacionarray -> . array DOT EMPTY QUESTIONMARK
    (58) operacionHash -> . hash LBRACKET datos RBRACKET
    (59) operacionHash -> . hash LBRACKET datos RBRACKET EQUAL datos
    (60) operacionHash -> . hash DOT INCLUDE QUESTIONMARK LPARENTHESES datos RPARENTHESES
    (61) operacionHash -> . hash DOT DELETE LPARENTHESES datos RPARENTHESES
    (62) operacionHash -> . hash DOT KEYS
    (151) string -> . STRING PLUS STRING
    (152) string -> . STRING MULTIPLY INTEGER
    (153) string -> . STRING DOT stringOpt
    (117) integer -> . INTEGERW DOT SQRT LPARENTHESES INTEGER RPARENTHESES
    (118) integer -> . INTEGER DOT CEIL LPARENTHESES RPARENTHESES
    (119) integer -> . INTEGER DOT CEIL LPARENTHESES INTEGER RPARENTHESES
    (120) integer -> . INTEGER DOT FLOOR LPARENTHESES RPARENTHESES
    (121) integer -> . INTEGER DOT FLOOR LPARENTHESES INTEGER RPARENTHESES
    (122) integer -> . INTEGER DOT ABS
    (44) tiposvariables -> . VAR
    (45) tiposvariables -> . LOCALVAR
    (46) tiposvariables -> . CONSTANT
    (53) hash -> . LCURLYBRACKET elementoHash RCURLYBRACKET
    (84) array -> . LBRACKET RBRACKET
    (85) array -> . LBRACKET datosarray RBRACKET
    (140) set -> . SET LBRACKET elementoSet RBRACKET

    $end            reduce using rule 29 (cuerpo -> .)
    ELSE            reduce using rule 29 (cuerpo -> .)
    END             reduce using rule 29 (cuerpo -> .)
    RETURN          reduce using rule 29 (cuerpo -> .)
    LOCALVAR        shift and go to state 17
    FOR             shift and go to state 19
    IF              shift and go to state 23
    UNLESS          shift and go to state 24
    PUTS            shift and go to state 25
    PRINT           shift and go to state 26
    STRING          shift and go to state 29
    INTEGERW        shift and go to state 30
    INTEGER         shift and go to state 28
    VAR             shift and go to state 31
    CONSTANT        shift and go to state 32
    LCURLYBRACKET   shift and go to state 33
    LBRACKET        shift and go to state 27
    SET             shift and go to state 34

    loop                           shift and go to state 6
    cuerpo                         shift and go to state 37
    declaracion                    shift and go to state 4
    asignacion                     shift and go to state 5
    estructurasDatos               shift and go to state 7
    if                             shift and go to state 8
    unless                         shift and go to state 9
    impresion                      shift and go to state 10
    operacionSet                   shift and go to state 11
    operacionarray                 shift and go to state 12
    operacionHash                  shift and go to state 13
    string                         shift and go to state 14
    integer                        shift and go to state 15
    tiposvariables                 shift and go to state 18
    hash                           shift and go to state 20
    array                          shift and go to state 21
    set                            shift and go to state 22

state 7

    (20) cuerpo -> estructurasDatos . cuerpo
    (17) cuerpo -> . declaracion cuerpo
    (18) cuerpo -> . asignacion cuerpo
    (19) cuerpo -> . loop cuerpo
    (20) cuerpo -> . estructurasDatos cuerpo
    (21) cuerpo -> . if cuerpo
    (22) cuerpo -> . unless cuerpo
    (23) cuerpo -> . impresion cuerpo
    (24) cuerpo -> . operacionSet cuerpo
    (25) cuerpo -> . operacionarray cuerpo
    (26) cuerpo -> . operacionHash cuerpo
    (27) cuerpo -> . string cuerpo
    (28) cuerpo -> . integer cuerpo
    (29) cuerpo -> .
    (31) declaracion -> . tiposvariables EQUAL datos
    (32) declaracion -> . tiposvariables EQUAL estructurasDatos
    (33) declaracion -> . tiposvariables EQUAL expresion
    (34) declaracion -> . tiposvariables EQUAL declaracion
    (35) declaracion -> . tiposvariables EQUAL casting
    (36) asignacion -> . LOCALVAR PLUSASSIGN datosAsignacion
    (37) asignacion -> . LOCALVAR MINASSIGN datosAsignacion
    (38) asignacion -> . LOCALVAR DIVASSIGN datosAsignacion
    (39) asignacion -> . LOCALVAR TIMESASSIGN datosAsignacion
    (40) asignacion -> . LOCALVAR MODASSIGN datosAsignacion
    (41) asignacion -> . LOCALVAR EXPASSIGN datosAsignacion
    (30) loop -> . FOR LOCALVAR IN rango cuerpo END
    (50) estructurasDatos -> . hash
    (51) estructurasDatos -> . array
    (52) estructurasDatos -> . set
    (107) if -> . IF datoscompletos operadores datoscompletos cuerpo END
    (108) if -> . IF datoscompletos operadores datoscompletos cuerpo else
    (128) unless -> . UNLESS expresionCondicional cuerpo ELSE cuerpo END
    (65) impresion -> . PUTS datos
    (66) impresion -> . PUTS LOCALVAR
    (67) impresion -> . PRINT datos
    (68) impresion -> . PRINT LOCALVAR
    (146) operacionSet -> . set DOT ADD LPARENTHESES datos RPARENTHESES
    (147) operacionSet -> . set DOT ADD LPARENTHESES tiposvariables RPARENTHESES
    (148) operacionSet -> . set DOT CLEAR
    (149) operacionSet -> . set DOT DELETE LPARENTHESES datos RPARENTHESES
    (150) operacionSet -> . set DOT DELETE LPARENTHESES tiposvariables RPARENTHESES
    (92) operacionarray -> . array LBRACKET INTEGER RBRACKET
    (93) operacionarray -> . array DOT TAKE LPARENTHESES INTEGER RPARENTHESES
    (94) operacionarray -> . array DOT DROP LPARENTHESES INTEGER RPARENTHESES
    (95) operacionarray -> . array DOT push maspush
    (100) operacionarray -> . array DOT POP
    (101) operacionarray -> . array DOT POP LPARENTHESES INTEGER RPARENTHESES
    (102) operacionarray -> . array DOT DELETE LPARENTHESES INTEGER RPARENTHESES
    (103) operacionarray -> . array DOT LENGTH LPARENTHESES RPARENTHESES
    (104) operacionarray -> . array DOT EMPTY QUESTIONMARK
    (58) operacionHash -> . hash LBRACKET datos RBRACKET
    (59) operacionHash -> . hash LBRACKET datos RBRACKET EQUAL datos
    (60) operacionHash -> . hash DOT INCLUDE QUESTIONMARK LPARENTHESES datos RPARENTHESES
    (61) operacionHash -> . hash DOT DELETE LPARENTHESES datos RPARENTHESES
    (62) operacionHash -> . hash DOT KEYS
    (151) string -> . STRING PLUS STRING
    (152) string -> . STRING MULTIPLY INTEGER
    (153) string -> . STRING DOT stringOpt
    (117) integer -> . INTEGERW DOT SQRT LPARENTHESES INTEGER RPARENTHESES
    (118) integer -> . INTEGER DOT CEIL LPARENTHESES RPARENTHESES
    (119) integer -> . INTEGER DOT CEIL LPARENTHESES INTEGER RPARENTHESES
    (120) integer -> . INTEGER DOT FLOOR LPARENTHESES RPARENTHESES
    (121) integer -> . INTEGER DOT FLOOR LPARENTHESES INTEGER RPARENTHESES
    (122) integer -> . INTEGER DOT ABS
    (44) tiposvariables -> . VAR
    (45) tiposvariables -> . LOCALVAR
    (46) tiposvariables -> . CONSTANT
    (53) hash -> . LCURLYBRACKET elementoHash RCURLYBRACKET
    (84) array -> . LBRACKET RBRACKET
    (85) array -> . LBRACKET datosarray RBRACKET
    (140) set -> . SET LBRACKET elementoSet RBRACKET

    $end            reduce using rule 29 (cuerpo -> .)
    ELSE            reduce using rule 29 (cuerpo -> .)
    END             reduce using rule 29 (cuerpo -> .)
    RETURN          reduce using rule 29 (cuerpo -> .)
    LOCALVAR        shift and go to state 17
    FOR             shift and go to state 19
    IF              shift and go to state 23
    UNLESS          shift and go to state 24
    PUTS            shift and go to state 25
    PRINT           shift and go to state 26
    STRING          shift and go to state 29
    INTEGERW        shift and go to state 30
    INTEGER         shift and go to state 28
    VAR             shift and go to state 31
    CONSTANT        shift and go to state 32
    LCURLYBRACKET   shift and go to state 33
    LBRACKET        shift and go to state 27
    SET             shift and go to state 34

    estructurasDatos               shift and go to state 7
    cuerpo                         shift and go to state 38
    declaracion                    shift and go to state 4
    asignacion                     shift and go to state 5
    loop                           shift and go to state 6
    if                             shift and go to state 8
    unless                         shift and go to state 9
    impresion                      shift and go to state 10
    operacionSet                   shift and go to state 11
    operacionarray                 shift and go to state 12
    operacionHash                  shift and go to state 13
    string                         shift and go to state 14
    integer                        shift and go to state 15
    tiposvariables                 shift and go to state 18
    hash                           shift and go to state 20
    array                          shift and go to state 21
    set                            shift and go to state 22

state 8

    (21) cuerpo -> if . cuerpo
    (17) cuerpo -> . declaracion cuerpo
    (18) cuerpo -> . asignacion cuerpo
    (19) cuerpo -> . loop cuerpo
    (20) cuerpo -> . estructurasDatos cuerpo
    (21) cuerpo -> . if cuerpo
    (22) cuerpo -> . unless cuerpo
    (23) cuerpo -> . impresion cuerpo
    (24) cuerpo -> . operacionSet cuerpo
    (25) cuerpo -> . operacionarray cuerpo
    (26) cuerpo -> . operacionHash cuerpo
    (27) cuerpo -> . string cuerpo
    (28) cuerpo -> . integer cuerpo
    (29) cuerpo -> .
    (31) declaracion -> . tiposvariables EQUAL datos
    (32) declaracion -> . tiposvariables EQUAL estructurasDatos
    (33) declaracion -> . tiposvariables EQUAL expresion
    (34) declaracion -> . tiposvariables EQUAL declaracion
    (35) declaracion -> . tiposvariables EQUAL casting
    (36) asignacion -> . LOCALVAR PLUSASSIGN datosAsignacion
    (37) asignacion -> . LOCALVAR MINASSIGN datosAsignacion
    (38) asignacion -> . LOCALVAR DIVASSIGN datosAsignacion
    (39) asignacion -> . LOCALVAR TIMESASSIGN datosAsignacion
    (40) asignacion -> . LOCALVAR MODASSIGN datosAsignacion
    (41) asignacion -> . LOCALVAR EXPASSIGN datosAsignacion
    (30) loop -> . FOR LOCALVAR IN rango cuerpo END
    (50) estructurasDatos -> . hash
    (51) estructurasDatos -> . array
    (52) estructurasDatos -> . set
    (107) if -> . IF datoscompletos operadores datoscompletos cuerpo END
    (108) if -> . IF datoscompletos operadores datoscompletos cuerpo else
    (128) unless -> . UNLESS expresionCondicional cuerpo ELSE cuerpo END
    (65) impresion -> . PUTS datos
    (66) impresion -> . PUTS LOCALVAR
    (67) impresion -> . PRINT datos
    (68) impresion -> . PRINT LOCALVAR
    (146) operacionSet -> . set DOT ADD LPARENTHESES datos RPARENTHESES
    (147) operacionSet -> . set DOT ADD LPARENTHESES tiposvariables RPARENTHESES
    (148) operacionSet -> . set DOT CLEAR
    (149) operacionSet -> . set DOT DELETE LPARENTHESES datos RPARENTHESES
    (150) operacionSet -> . set DOT DELETE LPARENTHESES tiposvariables RPARENTHESES
    (92) operacionarray -> . array LBRACKET INTEGER RBRACKET
    (93) operacionarray -> . array DOT TAKE LPARENTHESES INTEGER RPARENTHESES
    (94) operacionarray -> . array DOT DROP LPARENTHESES INTEGER RPARENTHESES
    (95) operacionarray -> . array DOT push maspush
    (100) operacionarray -> . array DOT POP
    (101) operacionarray -> . array DOT POP LPARENTHESES INTEGER RPARENTHESES
    (102) operacionarray -> . array DOT DELETE LPARENTHESES INTEGER RPARENTHESES
    (103) operacionarray -> . array DOT LENGTH LPARENTHESES RPARENTHESES
    (104) operacionarray -> . array DOT EMPTY QUESTIONMARK
    (58) operacionHash -> . hash LBRACKET datos RBRACKET
    (59) operacionHash -> . hash LBRACKET datos RBRACKET EQUAL datos
    (60) operacionHash -> . hash DOT INCLUDE QUESTIONMARK LPARENTHESES datos RPARENTHESES
    (61) operacionHash -> . hash DOT DELETE LPARENTHESES datos RPARENTHESES
    (62) operacionHash -> . hash DOT KEYS
    (151) string -> . STRING PLUS STRING
    (152) string -> . STRING MULTIPLY INTEGER
    (153) string -> . STRING DOT stringOpt
    (117) integer -> . INTEGERW DOT SQRT LPARENTHESES INTEGER RPARENTHESES
    (118) integer -> . INTEGER DOT CEIL LPARENTHESES RPARENTHESES
    (119) integer -> . INTEGER DOT CEIL LPARENTHESES INTEGER RPARENTHESES
    (120) integer -> . INTEGER DOT FLOOR LPARENTHESES RPARENTHESES
    (121) integer -> . INTEGER DOT FLOOR LPARENTHESES INTEGER RPARENTHESES
    (122) integer -> . INTEGER DOT ABS
    (44) tiposvariables -> . VAR
    (45) tiposvariables -> . LOCALVAR
    (46) tiposvariables -> . CONSTANT
    (53) hash -> . LCURLYBRACKET elementoHash RCURLYBRACKET
    (84) array -> . LBRACKET RBRACKET
    (85) array -> . LBRACKET datosarray RBRACKET
    (140) set -> . SET LBRACKET elementoSet RBRACKET

    $end            reduce using rule 29 (cuerpo -> .)
    ELSE            reduce using rule 29 (cuerpo -> .)
    END             reduce using rule 29 (cuerpo -> .)
    RETURN          reduce using rule 29 (cuerpo -> .)
    LOCALVAR        shift and go to state 17
    FOR             shift and go to state 19
    IF              shift and go to state 23
    UNLESS          shift and go to state 24
    PUTS            shift and go to state 25
    PRINT           shift and go to state 26
    STRING          shift and go to state 29
    INTEGERW        shift and go to state 30
    INTEGER         shift and go to state 28
    VAR             shift and go to state 31
    CONSTANT        shift and go to state 32
    LCURLYBRACKET   shift and go to state 33
    LBRACKET        shift and go to state 27
    SET             shift and go to state 34

    if                             shift and go to state 8
    cuerpo                         shift and go to state 39
    declaracion                    shift and go to state 4
    asignacion                     shift and go to state 5
    loop                           shift and go to state 6
    estructurasDatos               shift and go to state 7
    unless                         shift and go to state 9
    impresion                      shift and go to state 10
    operacionSet                   shift and go to state 11
    operacionarray                 shift and go to state 12
    operacionHash                  shift and go to state 13
    string                         shift and go to state 14
    integer                        shift and go to state 15
    tiposvariables                 shift and go to state 18
    hash                           shift and go to state 20
    array                          shift and go to state 21
    set                            shift and go to state 22

state 9

    (22) cuerpo -> unless . cuerpo
    (17) cuerpo -> . declaracion cuerpo
    (18) cuerpo -> . asignacion cuerpo
    (19) cuerpo -> . loop cuerpo
    (20) cuerpo -> . estructurasDatos cuerpo
    (21) cuerpo -> . if cuerpo
    (22) cuerpo -> . unless cuerpo
    (23) cuerpo -> . impresion cuerpo
    (24) cuerpo -> . operacionSet cuerpo
    (25) cuerpo -> . operacionarray cuerpo
    (26) cuerpo -> . operacionHash cuerpo
    (27) cuerpo -> . string cuerpo
    (28) cuerpo -> . integer cuerpo
    (29) cuerpo -> .
    (31) declaracion -> . tiposvariables EQUAL datos
    (32) declaracion -> . tiposvariables EQUAL estructurasDatos
    (33) declaracion -> . tiposvariables EQUAL expresion
    (34) declaracion -> . tiposvariables EQUAL declaracion
    (35) declaracion -> . tiposvariables EQUAL casting
    (36) asignacion -> . LOCALVAR PLUSASSIGN datosAsignacion
    (37) asignacion -> . LOCALVAR MINASSIGN datosAsignacion
    (38) asignacion -> . LOCALVAR DIVASSIGN datosAsignacion
    (39) asignacion -> . LOCALVAR TIMESASSIGN datosAsignacion
    (40) asignacion -> . LOCALVAR MODASSIGN datosAsignacion
    (41) asignacion -> . LOCALVAR EXPASSIGN datosAsignacion
    (30) loop -> . FOR LOCALVAR IN rango cuerpo END
    (50) estructurasDatos -> . hash
    (51) estructurasDatos -> . array
    (52) estructurasDatos -> . set
    (107) if -> . IF datoscompletos operadores datoscompletos cuerpo END
    (108) if -> . IF datoscompletos operadores datoscompletos cuerpo else
    (128) unless -> . UNLESS expresionCondicional cuerpo ELSE cuerpo END
    (65) impresion -> . PUTS datos
    (66) impresion -> . PUTS LOCALVAR
    (67) impresion -> . PRINT datos
    (68) impresion -> . PRINT LOCALVAR
    (146) operacionSet -> . set DOT ADD LPARENTHESES datos RPARENTHESES
    (147) operacionSet -> . set DOT ADD LPARENTHESES tiposvariables RPARENTHESES
    (148) operacionSet -> . set DOT CLEAR
    (149) operacionSet -> . set DOT DELETE LPARENTHESES datos RPARENTHESES
    (150) operacionSet -> . set DOT DELETE LPARENTHESES tiposvariables RPARENTHESES
    (92) operacionarray -> . array LBRACKET INTEGER RBRACKET
    (93) operacionarray -> . array DOT TAKE LPARENTHESES INTEGER RPARENTHESES
    (94) operacionarray -> . array DOT DROP LPARENTHESES INTEGER RPARENTHESES
    (95) operacionarray -> . array DOT push maspush
    (100) operacionarray -> . array DOT POP
    (101) operacionarray -> . array DOT POP LPARENTHESES INTEGER RPARENTHESES
    (102) operacionarray -> . array DOT DELETE LPARENTHESES INTEGER RPARENTHESES
    (103) operacionarray -> . array DOT LENGTH LPARENTHESES RPARENTHESES
    (104) operacionarray -> . array DOT EMPTY QUESTIONMARK
    (58) operacionHash -> . hash LBRACKET datos RBRACKET
    (59) operacionHash -> . hash LBRACKET datos RBRACKET EQUAL datos
    (60) operacionHash -> . hash DOT INCLUDE QUESTIONMARK LPARENTHESES datos RPARENTHESES
    (61) operacionHash -> . hash DOT DELETE LPARENTHESES datos RPARENTHESES
    (62) operacionHash -> . hash DOT KEYS
    (151) string -> . STRING PLUS STRING
    (152) string -> . STRING MULTIPLY INTEGER
    (153) string -> . STRING DOT stringOpt
    (117) integer -> . INTEGERW DOT SQRT LPARENTHESES INTEGER RPARENTHESES
    (118) integer -> . INTEGER DOT CEIL LPARENTHESES RPARENTHESES
    (119) integer -> . INTEGER DOT CEIL LPARENTHESES INTEGER RPARENTHESES
    (120) integer -> . INTEGER DOT FLOOR LPARENTHESES RPARENTHESES
    (121) integer -> . INTEGER DOT FLOOR LPARENTHESES INTEGER RPARENTHESES
    (122) integer -> . INTEGER DOT ABS
    (44) tiposvariables -> . VAR
    (45) tiposvariables -> . LOCALVAR
    (46) tiposvariables -> . CONSTANT
    (53) hash -> . LCURLYBRACKET elementoHash RCURLYBRACKET
    (84) array -> . LBRACKET RBRACKET
    (85) array -> . LBRACKET datosarray RBRACKET
    (140) set -> . SET LBRACKET elementoSet RBRACKET

    $end            reduce using rule 29 (cuerpo -> .)
    ELSE            reduce using rule 29 (cuerpo -> .)
    END             reduce using rule 29 (cuerpo -> .)
    RETURN          reduce using rule 29 (cuerpo -> .)
    LOCALVAR        shift and go to state 17
    FOR             shift and go to state 19
    IF              shift and go to state 23
    UNLESS          shift and go to state 24
    PUTS            shift and go to state 25
    PRINT           shift and go to state 26
    STRING          shift and go to state 29
    INTEGERW        shift and go to state 30
    INTEGER         shift and go to state 28
    VAR             shift and go to state 31
    CONSTANT        shift and go to state 32
    LCURLYBRACKET   shift and go to state 33
    LBRACKET        shift and go to state 27
    SET             shift and go to state 34

    unless                         shift and go to state 9
    cuerpo                         shift and go to state 40
    declaracion                    shift and go to state 4
    asignacion                     shift and go to state 5
    loop                           shift and go to state 6
    estructurasDatos               shift and go to state 7
    if                             shift and go to state 8
    impresion                      shift and go to state 10
    operacionSet                   shift and go to state 11
    operacionarray                 shift and go to state 12
    operacionHash                  shift and go to state 13
    string                         shift and go to state 14
    integer                        shift and go to state 15
    tiposvariables                 shift and go to state 18
    hash                           shift and go to state 20
    array                          shift and go to state 21
    set                            shift and go to state 22

state 10

    (23) cuerpo -> impresion . cuerpo
    (17) cuerpo -> . declaracion cuerpo
    (18) cuerpo -> . asignacion cuerpo
    (19) cuerpo -> . loop cuerpo
    (20) cuerpo -> . estructurasDatos cuerpo
    (21) cuerpo -> . if cuerpo
    (22) cuerpo -> . unless cuerpo
    (23) cuerpo -> . impresion cuerpo
    (24) cuerpo -> . operacionSet cuerpo
    (25) cuerpo -> . operacionarray cuerpo
    (26) cuerpo -> . operacionHash cuerpo
    (27) cuerpo -> . string cuerpo
    (28) cuerpo -> . integer cuerpo
    (29) cuerpo -> .
    (31) declaracion -> . tiposvariables EQUAL datos
    (32) declaracion -> . tiposvariables EQUAL estructurasDatos
    (33) declaracion -> . tiposvariables EQUAL expresion
    (34) declaracion -> . tiposvariables EQUAL declaracion
    (35) declaracion -> . tiposvariables EQUAL casting
    (36) asignacion -> . LOCALVAR PLUSASSIGN datosAsignacion
    (37) asignacion -> . LOCALVAR MINASSIGN datosAsignacion
    (38) asignacion -> . LOCALVAR DIVASSIGN datosAsignacion
    (39) asignacion -> . LOCALVAR TIMESASSIGN datosAsignacion
    (40) asignacion -> . LOCALVAR MODASSIGN datosAsignacion
    (41) asignacion -> . LOCALVAR EXPASSIGN datosAsignacion
    (30) loop -> . FOR LOCALVAR IN rango cuerpo END
    (50) estructurasDatos -> . hash
    (51) estructurasDatos -> . array
    (52) estructurasDatos -> . set
    (107) if -> . IF datoscompletos operadores datoscompletos cuerpo END
    (108) if -> . IF datoscompletos operadores datoscompletos cuerpo else
    (128) unless -> . UNLESS expresionCondicional cuerpo ELSE cuerpo END
    (65) impresion -> . PUTS datos
    (66) impresion -> . PUTS LOCALVAR
    (67) impresion -> . PRINT datos
    (68) impresion -> . PRINT LOCALVAR
    (146) operacionSet -> . set DOT ADD LPARENTHESES datos RPARENTHESES
    (147) operacionSet -> . set DOT ADD LPARENTHESES tiposvariables RPARENTHESES
    (148) operacionSet -> . set DOT CLEAR
    (149) operacionSet -> . set DOT DELETE LPARENTHESES datos RPARENTHESES
    (150) operacionSet -> . set DOT DELETE LPARENTHESES tiposvariables RPARENTHESES
    (92) operacionarray -> . array LBRACKET INTEGER RBRACKET
    (93) operacionarray -> . array DOT TAKE LPARENTHESES INTEGER RPARENTHESES
    (94) operacionarray -> . array DOT DROP LPARENTHESES INTEGER RPARENTHESES
    (95) operacionarray -> . array DOT push maspush
    (100) operacionarray -> . array DOT POP
    (101) operacionarray -> . array DOT POP LPARENTHESES INTEGER RPARENTHESES
    (102) operacionarray -> . array DOT DELETE LPARENTHESES INTEGER RPARENTHESES
    (103) operacionarray -> . array DOT LENGTH LPARENTHESES RPARENTHESES
    (104) operacionarray -> . array DOT EMPTY QUESTIONMARK
    (58) operacionHash -> . hash LBRACKET datos RBRACKET
    (59) operacionHash -> . hash LBRACKET datos RBRACKET EQUAL datos
    (60) operacionHash -> . hash DOT INCLUDE QUESTIONMARK LPARENTHESES datos RPARENTHESES
    (61) operacionHash -> . hash DOT DELETE LPARENTHESES datos RPARENTHESES
    (62) operacionHash -> . hash DOT KEYS
    (151) string -> . STRING PLUS STRING
    (152) string -> . STRING MULTIPLY INTEGER
    (153) string -> . STRING DOT stringOpt
    (117) integer -> . INTEGERW DOT SQRT LPARENTHESES INTEGER RPARENTHESES
    (118) integer -> . INTEGER DOT CEIL LPARENTHESES RPARENTHESES
    (119) integer -> . INTEGER DOT CEIL LPARENTHESES INTEGER RPARENTHESES
    (120) integer -> . INTEGER DOT FLOOR LPARENTHESES RPARENTHESES
    (121) integer -> . INTEGER DOT FLOOR LPARENTHESES INTEGER RPARENTHESES
    (122) integer -> . INTEGER DOT ABS
    (44) tiposvariables -> . VAR
    (45) tiposvariables -> . LOCALVAR
    (46) tiposvariables -> . CONSTANT
    (53) hash -> . LCURLYBRACKET elementoHash RCURLYBRACKET
    (84) array -> . LBRACKET RBRACKET
    (85) array -> . LBRACKET datosarray RBRACKET
    (140) set -> . SET LBRACKET elementoSet RBRACKET

    $end            reduce using rule 29 (cuerpo -> .)
    ELSE            reduce using rule 29 (cuerpo -> .)
    END             reduce using rule 29 (cuerpo -> .)
    RETURN          reduce using rule 29 (cuerpo -> .)
    LOCALVAR        shift and go to state 17
    FOR             shift and go to state 19
    IF              shift and go to state 23
    UNLESS          shift and go to state 24
    PUTS            shift and go to state 25
    PRINT           shift and go to state 26
    STRING          shift and go to state 29
    INTEGERW        shift and go to state 30
    INTEGER         shift and go to state 28
    VAR             shift and go to state 31
    CONSTANT        shift and go to state 32
    LCURLYBRACKET   shift and go to state 33
    LBRACKET        shift and go to state 27
    SET             shift and go to state 34

    impresion                      shift and go to state 10
    cuerpo                         shift and go to state 41
    declaracion                    shift and go to state 4
    asignacion                     shift and go to state 5
    loop                           shift and go to state 6
    estructurasDatos               shift and go to state 7
    if                             shift and go to state 8
    unless                         shift and go to state 9
    operacionSet                   shift and go to state 11
    operacionarray                 shift and go to state 12
    operacionHash                  shift and go to state 13
    string                         shift and go to state 14
    integer                        shift and go to state 15
    tiposvariables                 shift and go to state 18
    hash                           shift and go to state 20
    array                          shift and go to state 21
    set                            shift and go to state 22

state 11

    (24) cuerpo -> operacionSet . cuerpo
    (17) cuerpo -> . declaracion cuerpo
    (18) cuerpo -> . asignacion cuerpo
    (19) cuerpo -> . loop cuerpo
    (20) cuerpo -> . estructurasDatos cuerpo
    (21) cuerpo -> . if cuerpo
    (22) cuerpo -> . unless cuerpo
    (23) cuerpo -> . impresion cuerpo
    (24) cuerpo -> . operacionSet cuerpo
    (25) cuerpo -> . operacionarray cuerpo
    (26) cuerpo -> . operacionHash cuerpo
    (27) cuerpo -> . string cuerpo
    (28) cuerpo -> . integer cuerpo
    (29) cuerpo -> .
    (31) declaracion -> . tiposvariables EQUAL datos
    (32) declaracion -> . tiposvariables EQUAL estructurasDatos
    (33) declaracion -> . tiposvariables EQUAL expresion
    (34) declaracion -> . tiposvariables EQUAL declaracion
    (35) declaracion -> . tiposvariables EQUAL casting
    (36) asignacion -> . LOCALVAR PLUSASSIGN datosAsignacion
    (37) asignacion -> . LOCALVAR MINASSIGN datosAsignacion
    (38) asignacion -> . LOCALVAR DIVASSIGN datosAsignacion
    (39) asignacion -> . LOCALVAR TIMESASSIGN datosAsignacion
    (40) asignacion -> . LOCALVAR MODASSIGN datosAsignacion
    (41) asignacion -> . LOCALVAR EXPASSIGN datosAsignacion
    (30) loop -> . FOR LOCALVAR IN rango cuerpo END
    (50) estructurasDatos -> . hash
    (51) estructurasDatos -> . array
    (52) estructurasDatos -> . set
    (107) if -> . IF datoscompletos operadores datoscompletos cuerpo END
    (108) if -> . IF datoscompletos operadores datoscompletos cuerpo else
    (128) unless -> . UNLESS expresionCondicional cuerpo ELSE cuerpo END
    (65) impresion -> . PUTS datos
    (66) impresion -> . PUTS LOCALVAR
    (67) impresion -> . PRINT datos
    (68) impresion -> . PRINT LOCALVAR
    (146) operacionSet -> . set DOT ADD LPARENTHESES datos RPARENTHESES
    (147) operacionSet -> . set DOT ADD LPARENTHESES tiposvariables RPARENTHESES
    (148) operacionSet -> . set DOT CLEAR
    (149) operacionSet -> . set DOT DELETE LPARENTHESES datos RPARENTHESES
    (150) operacionSet -> . set DOT DELETE LPARENTHESES tiposvariables RPARENTHESES
    (92) operacionarray -> . array LBRACKET INTEGER RBRACKET
    (93) operacionarray -> . array DOT TAKE LPARENTHESES INTEGER RPARENTHESES
    (94) operacionarray -> . array DOT DROP LPARENTHESES INTEGER RPARENTHESES
    (95) operacionarray -> . array DOT push maspush
    (100) operacionarray -> . array DOT POP
    (101) operacionarray -> . array DOT POP LPARENTHESES INTEGER RPARENTHESES
    (102) operacionarray -> . array DOT DELETE LPARENTHESES INTEGER RPARENTHESES
    (103) operacionarray -> . array DOT LENGTH LPARENTHESES RPARENTHESES
    (104) operacionarray -> . array DOT EMPTY QUESTIONMARK
    (58) operacionHash -> . hash LBRACKET datos RBRACKET
    (59) operacionHash -> . hash LBRACKET datos RBRACKET EQUAL datos
    (60) operacionHash -> . hash DOT INCLUDE QUESTIONMARK LPARENTHESES datos RPARENTHESES
    (61) operacionHash -> . hash DOT DELETE LPARENTHESES datos RPARENTHESES
    (62) operacionHash -> . hash DOT KEYS
    (151) string -> . STRING PLUS STRING
    (152) string -> . STRING MULTIPLY INTEGER
    (153) string -> . STRING DOT stringOpt
    (117) integer -> . INTEGERW DOT SQRT LPARENTHESES INTEGER RPARENTHESES
    (118) integer -> . INTEGER DOT CEIL LPARENTHESES RPARENTHESES
    (119) integer -> . INTEGER DOT CEIL LPARENTHESES INTEGER RPARENTHESES
    (120) integer -> . INTEGER DOT FLOOR LPARENTHESES RPARENTHESES
    (121) integer -> . INTEGER DOT FLOOR LPARENTHESES INTEGER RPARENTHESES
    (122) integer -> . INTEGER DOT ABS
    (44) tiposvariables -> . VAR
    (45) tiposvariables -> . LOCALVAR
    (46) tiposvariables -> . CONSTANT
    (53) hash -> . LCURLYBRACKET elementoHash RCURLYBRACKET
    (84) array -> . LBRACKET RBRACKET
    (85) array -> . LBRACKET datosarray RBRACKET
    (140) set -> . SET LBRACKET elementoSet RBRACKET

    $end            reduce using rule 29 (cuerpo -> .)
    ELSE            reduce using rule 29 (cuerpo -> .)
    END             reduce using rule 29 (cuerpo -> .)
    RETURN          reduce using rule 29 (cuerpo -> .)
    LOCALVAR        shift and go to state 17
    FOR             shift and go to state 19
    IF              shift and go to state 23
    UNLESS          shift and go to state 24
    PUTS            shift and go to state 25
    PRINT           shift and go to state 26
    STRING          shift and go to state 29
    INTEGERW        shift and go to state 30
    INTEGER         shift and go to state 28
    VAR             shift and go to state 31
    CONSTANT        shift and go to state 32
    LCURLYBRACKET   shift and go to state 33
    LBRACKET        shift and go to state 27
    SET             shift and go to state 34

    operacionSet                   shift and go to state 11
    cuerpo                         shift and go to state 42
    declaracion                    shift and go to state 4
    asignacion                     shift and go to state 5
    loop                           shift and go to state 6
    estructurasDatos               shift and go to state 7
    if                             shift and go to state 8
    unless                         shift and go to state 9
    impresion                      shift and go to state 10
    operacionarray                 shift and go to state 12
    operacionHash                  shift and go to state 13
    string                         shift and go to state 14
    integer                        shift and go to state 15
    tiposvariables                 shift and go to state 18
    hash                           shift and go to state 20
    array                          shift and go to state 21
    set                            shift and go to state 22

state 12

    (25) cuerpo -> operacionarray . cuerpo
    (17) cuerpo -> . declaracion cuerpo
    (18) cuerpo -> . asignacion cuerpo
    (19) cuerpo -> . loop cuerpo
    (20) cuerpo -> . estructurasDatos cuerpo
    (21) cuerpo -> . if cuerpo
    (22) cuerpo -> . unless cuerpo
    (23) cuerpo -> . impresion cuerpo
    (24) cuerpo -> . operacionSet cuerpo
    (25) cuerpo -> . operacionarray cuerpo
    (26) cuerpo -> . operacionHash cuerpo
    (27) cuerpo -> . string cuerpo
    (28) cuerpo -> . integer cuerpo
    (29) cuerpo -> .
    (31) declaracion -> . tiposvariables EQUAL datos
    (32) declaracion -> . tiposvariables EQUAL estructurasDatos
    (33) declaracion -> . tiposvariables EQUAL expresion
    (34) declaracion -> . tiposvariables EQUAL declaracion
    (35) declaracion -> . tiposvariables EQUAL casting
    (36) asignacion -> . LOCALVAR PLUSASSIGN datosAsignacion
    (37) asignacion -> . LOCALVAR MINASSIGN datosAsignacion
    (38) asignacion -> . LOCALVAR DIVASSIGN datosAsignacion
    (39) asignacion -> . LOCALVAR TIMESASSIGN datosAsignacion
    (40) asignacion -> . LOCALVAR MODASSIGN datosAsignacion
    (41) asignacion -> . LOCALVAR EXPASSIGN datosAsignacion
    (30) loop -> . FOR LOCALVAR IN rango cuerpo END
    (50) estructurasDatos -> . hash
    (51) estructurasDatos -> . array
    (52) estructurasDatos -> . set
    (107) if -> . IF datoscompletos operadores datoscompletos cuerpo END
    (108) if -> . IF datoscompletos operadores datoscompletos cuerpo else
    (128) unless -> . UNLESS expresionCondicional cuerpo ELSE cuerpo END
    (65) impresion -> . PUTS datos
    (66) impresion -> . PUTS LOCALVAR
    (67) impresion -> . PRINT datos
    (68) impresion -> . PRINT LOCALVAR
    (146) operacionSet -> . set DOT ADD LPARENTHESES datos RPARENTHESES
    (147) operacionSet -> . set DOT ADD LPARENTHESES tiposvariables RPARENTHESES
    (148) operacionSet -> . set DOT CLEAR
    (149) operacionSet -> . set DOT DELETE LPARENTHESES datos RPARENTHESES
    (150) operacionSet -> . set DOT DELETE LPARENTHESES tiposvariables RPARENTHESES
    (92) operacionarray -> . array LBRACKET INTEGER RBRACKET
    (93) operacionarray -> . array DOT TAKE LPARENTHESES INTEGER RPARENTHESES
    (94) operacionarray -> . array DOT DROP LPARENTHESES INTEGER RPARENTHESES
    (95) operacionarray -> . array DOT push maspush
    (100) operacionarray -> . array DOT POP
    (101) operacionarray -> . array DOT POP LPARENTHESES INTEGER RPARENTHESES
    (102) operacionarray -> . array DOT DELETE LPARENTHESES INTEGER RPARENTHESES
    (103) operacionarray -> . array DOT LENGTH LPARENTHESES RPARENTHESES
    (104) operacionarray -> . array DOT EMPTY QUESTIONMARK
    (58) operacionHash -> . hash LBRACKET datos RBRACKET
    (59) operacionHash -> . hash LBRACKET datos RBRACKET EQUAL datos
    (60) operacionHash -> . hash DOT INCLUDE QUESTIONMARK LPARENTHESES datos RPARENTHESES
    (61) operacionHash -> . hash DOT DELETE LPARENTHESES datos RPARENTHESES
    (62) operacionHash -> . hash DOT KEYS
    (151) string -> . STRING PLUS STRING
    (152) string -> . STRING MULTIPLY INTEGER
    (153) string -> . STRING DOT stringOpt
    (117) integer -> . INTEGERW DOT SQRT LPARENTHESES INTEGER RPARENTHESES
    (118) integer -> . INTEGER DOT CEIL LPARENTHESES RPARENTHESES
    (119) integer -> . INTEGER DOT CEIL LPARENTHESES INTEGER RPARENTHESES
    (120) integer -> . INTEGER DOT FLOOR LPARENTHESES RPARENTHESES
    (121) integer -> . INTEGER DOT FLOOR LPARENTHESES INTEGER RPARENTHESES
    (122) integer -> . INTEGER DOT ABS
    (44) tiposvariables -> . VAR
    (45) tiposvariables -> . LOCALVAR
    (46) tiposvariables -> . CONSTANT
    (53) hash -> . LCURLYBRACKET elementoHash RCURLYBRACKET
    (84) array -> . LBRACKET RBRACKET
    (85) array -> . LBRACKET datosarray RBRACKET
    (140) set -> . SET LBRACKET elementoSet RBRACKET

    $end            reduce using rule 29 (cuerpo -> .)
    ELSE            reduce using rule 29 (cuerpo -> .)
    END             reduce using rule 29 (cuerpo -> .)
    RETURN          reduce using rule 29 (cuerpo -> .)
    LOCALVAR        shift and go to state 17
    FOR             shift and go to state 19
    IF              shift and go to state 23
    UNLESS          shift and go to state 24
    PUTS            shift and go to state 25
    PRINT           shift and go to state 26
    STRING          shift and go to state 29
    INTEGERW        shift and go to state 30
    INTEGER         shift and go to state 28
    VAR             shift and go to state 31
    CONSTANT        shift and go to state 32
    LCURLYBRACKET   shift and go to state 33
    LBRACKET        shift and go to state 27
    SET             shift and go to state 34

    operacionarray                 shift and go to state 12
    cuerpo                         shift and go to state 43
    declaracion                    shift and go to state 4
    asignacion                     shift and go to state 5
    loop                           shift and go to state 6
    estructurasDatos               shift and go to state 7
    if                             shift and go to state 8
    unless                         shift and go to state 9
    impresion                      shift and go to state 10
    operacionSet                   shift and go to state 11
    operacionHash                  shift and go to state 13
    string                         shift and go to state 14
    integer                        shift and go to state 15
    tiposvariables                 shift and go to state 18
    hash                           shift and go to state 20
    array                          shift and go to state 21
    set                            shift and go to state 22

state 13

    (26) cuerpo -> operacionHash . cuerpo
    (17) cuerpo -> . declaracion cuerpo
    (18) cuerpo -> . asignacion cuerpo
    (19) cuerpo -> . loop cuerpo
    (20) cuerpo -> . estructurasDatos cuerpo
    (21) cuerpo -> . if cuerpo
    (22) cuerpo -> . unless cuerpo
    (23) cuerpo -> . impresion cuerpo
    (24) cuerpo -> . operacionSet cuerpo
    (25) cuerpo -> . operacionarray cuerpo
    (26) cuerpo -> . operacionHash cuerpo
    (27) cuerpo -> . string cuerpo
    (28) cuerpo -> . integer cuerpo
    (29) cuerpo -> .
    (31) declaracion -> . tiposvariables EQUAL datos
    (32) declaracion -> . tiposvariables EQUAL estructurasDatos
    (33) declaracion -> . tiposvariables EQUAL expresion
    (34) declaracion -> . tiposvariables EQUAL declaracion
    (35) declaracion -> . tiposvariables EQUAL casting
    (36) asignacion -> . LOCALVAR PLUSASSIGN datosAsignacion
    (37) asignacion -> . LOCALVAR MINASSIGN datosAsignacion
    (38) asignacion -> . LOCALVAR DIVASSIGN datosAsignacion
    (39) asignacion -> . LOCALVAR TIMESASSIGN datosAsignacion
    (40) asignacion -> . LOCALVAR MODASSIGN datosAsignacion
    (41) asignacion -> . LOCALVAR EXPASSIGN datosAsignacion
    (30) loop -> . FOR LOCALVAR IN rango cuerpo END
    (50) estructurasDatos -> . hash
    (51) estructurasDatos -> . array
    (52) estructurasDatos -> . set
    (107) if -> . IF datoscompletos operadores datoscompletos cuerpo END
    (108) if -> . IF datoscompletos operadores datoscompletos cuerpo else
    (128) unless -> . UNLESS expresionCondicional cuerpo ELSE cuerpo END
    (65) impresion -> . PUTS datos
    (66) impresion -> . PUTS LOCALVAR
    (67) impresion -> . PRINT datos
    (68) impresion -> . PRINT LOCALVAR
    (146) operacionSet -> . set DOT ADD LPARENTHESES datos RPARENTHESES
    (147) operacionSet -> . set DOT ADD LPARENTHESES tiposvariables RPARENTHESES
    (148) operacionSet -> . set DOT CLEAR
    (149) operacionSet -> . set DOT DELETE LPARENTHESES datos RPARENTHESES
    (150) operacionSet -> . set DOT DELETE LPARENTHESES tiposvariables RPARENTHESES
    (92) operacionarray -> . array LBRACKET INTEGER RBRACKET
    (93) operacionarray -> . array DOT TAKE LPARENTHESES INTEGER RPARENTHESES
    (94) operacionarray -> . array DOT DROP LPARENTHESES INTEGER RPARENTHESES
    (95) operacionarray -> . array DOT push maspush
    (100) operacionarray -> . array DOT POP
    (101) operacionarray -> . array DOT POP LPARENTHESES INTEGER RPARENTHESES
    (102) operacionarray -> . array DOT DELETE LPARENTHESES INTEGER RPARENTHESES
    (103) operacionarray -> . array DOT LENGTH LPARENTHESES RPARENTHESES
    (104) operacionarray -> . array DOT EMPTY QUESTIONMARK
    (58) operacionHash -> . hash LBRACKET datos RBRACKET
    (59) operacionHash -> . hash LBRACKET datos RBRACKET EQUAL datos
    (60) operacionHash -> . hash DOT INCLUDE QUESTIONMARK LPARENTHESES datos RPARENTHESES
    (61) operacionHash -> . hash DOT DELETE LPARENTHESES datos RPARENTHESES
    (62) operacionHash -> . hash DOT KEYS
    (151) string -> . STRING PLUS STRING
    (152) string -> . STRING MULTIPLY INTEGER
    (153) string -> . STRING DOT stringOpt
    (117) integer -> . INTEGERW DOT SQRT LPARENTHESES INTEGER RPARENTHESES
    (118) integer -> . INTEGER DOT CEIL LPARENTHESES RPARENTHESES
    (119) integer -> . INTEGER DOT CEIL LPARENTHESES INTEGER RPARENTHESES
    (120) integer -> . INTEGER DOT FLOOR LPARENTHESES RPARENTHESES
    (121) integer -> . INTEGER DOT FLOOR LPARENTHESES INTEGER RPARENTHESES
    (122) integer -> . INTEGER DOT ABS
    (44) tiposvariables -> . VAR
    (45) tiposvariables -> . LOCALVAR
    (46) tiposvariables -> . CONSTANT
    (53) hash -> . LCURLYBRACKET elementoHash RCURLYBRACKET
    (84) array -> . LBRACKET RBRACKET
    (85) array -> . LBRACKET datosarray RBRACKET
    (140) set -> . SET LBRACKET elementoSet RBRACKET

    $end            reduce using rule 29 (cuerpo -> .)
    ELSE            reduce using rule 29 (cuerpo -> .)
    END             reduce using rule 29 (cuerpo -> .)
    RETURN          reduce using rule 29 (cuerpo -> .)
    LOCALVAR        shift and go to state 17
    FOR             shift and go to state 19
    IF              shift and go to state 23
    UNLESS          shift and go to state 24
    PUTS            shift and go to state 25
    PRINT           shift and go to state 26
    STRING          shift and go to state 29
    INTEGERW        shift and go to state 30
    INTEGER         shift and go to state 28
    VAR             shift and go to state 31
    CONSTANT        shift and go to state 32
    LCURLYBRACKET   shift and go to state 33
    LBRACKET        shift and go to state 27
    SET             shift and go to state 34

    operacionHash                  shift and go to state 13
    cuerpo                         shift and go to state 44
    declaracion                    shift and go to state 4
    asignacion                     shift and go to state 5
    loop                           shift and go to state 6
    estructurasDatos               shift and go to state 7
    if                             shift and go to state 8
    unless                         shift and go to state 9
    impresion                      shift and go to state 10
    operacionSet                   shift and go to state 11
    operacionarray                 shift and go to state 12
    string                         shift and go to state 14
    integer                        shift and go to state 15
    tiposvariables                 shift and go to state 18
    hash                           shift and go to state 20
    array                          shift and go to state 21
    set                            shift and go to state 22

state 14

    (27) cuerpo -> string . cuerpo
    (17) cuerpo -> . declaracion cuerpo
    (18) cuerpo -> . asignacion cuerpo
    (19) cuerpo -> . loop cuerpo
    (20) cuerpo -> . estructurasDatos cuerpo
    (21) cuerpo -> . if cuerpo
    (22) cuerpo -> . unless cuerpo
    (23) cuerpo -> . impresion cuerpo
    (24) cuerpo -> . operacionSet cuerpo
    (25) cuerpo -> . operacionarray cuerpo
    (26) cuerpo -> . operacionHash cuerpo
    (27) cuerpo -> . string cuerpo
    (28) cuerpo -> . integer cuerpo
    (29) cuerpo -> .
    (31) declaracion -> . tiposvariables EQUAL datos
    (32) declaracion -> . tiposvariables EQUAL estructurasDatos
    (33) declaracion -> . tiposvariables EQUAL expresion
    (34) declaracion -> . tiposvariables EQUAL declaracion
    (35) declaracion -> . tiposvariables EQUAL casting
    (36) asignacion -> . LOCALVAR PLUSASSIGN datosAsignacion
    (37) asignacion -> . LOCALVAR MINASSIGN datosAsignacion
    (38) asignacion -> . LOCALVAR DIVASSIGN datosAsignacion
    (39) asignacion -> . LOCALVAR TIMESASSIGN datosAsignacion
    (40) asignacion -> . LOCALVAR MODASSIGN datosAsignacion
    (41) asignacion -> . LOCALVAR EXPASSIGN datosAsignacion
    (30) loop -> . FOR LOCALVAR IN rango cuerpo END
    (50) estructurasDatos -> . hash
    (51) estructurasDatos -> . array
    (52) estructurasDatos -> . set
    (107) if -> . IF datoscompletos operadores datoscompletos cuerpo END
    (108) if -> . IF datoscompletos operadores datoscompletos cuerpo else
    (128) unless -> . UNLESS expresionCondicional cuerpo ELSE cuerpo END
    (65) impresion -> . PUTS datos
    (66) impresion -> . PUTS LOCALVAR
    (67) impresion -> . PRINT datos
    (68) impresion -> . PRINT LOCALVAR
    (146) operacionSet -> . set DOT ADD LPARENTHESES datos RPARENTHESES
    (147) operacionSet -> . set DOT ADD LPARENTHESES tiposvariables RPARENTHESES
    (148) operacionSet -> . set DOT CLEAR
    (149) operacionSet -> . set DOT DELETE LPARENTHESES datos RPARENTHESES
    (150) operacionSet -> . set DOT DELETE LPARENTHESES tiposvariables RPARENTHESES
    (92) operacionarray -> . array LBRACKET INTEGER RBRACKET
    (93) operacionarray -> . array DOT TAKE LPARENTHESES INTEGER RPARENTHESES
    (94) operacionarray -> . array DOT DROP LPARENTHESES INTEGER RPARENTHESES
    (95) operacionarray -> . array DOT push maspush
    (100) operacionarray -> . array DOT POP
    (101) operacionarray -> . array DOT POP LPARENTHESES INTEGER RPARENTHESES
    (102) operacionarray -> . array DOT DELETE LPARENTHESES INTEGER RPARENTHESES
    (103) operacionarray -> . array DOT LENGTH LPARENTHESES RPARENTHESES
    (104) operacionarray -> . array DOT EMPTY QUESTIONMARK
    (58) operacionHash -> . hash LBRACKET datos RBRACKET
    (59) operacionHash -> . hash LBRACKET datos RBRACKET EQUAL datos
    (60) operacionHash -> . hash DOT INCLUDE QUESTIONMARK LPARENTHESES datos RPARENTHESES
    (61) operacionHash -> . hash DOT DELETE LPARENTHESES datos RPARENTHESES
    (62) operacionHash -> . hash DOT KEYS
    (151) string -> . STRING PLUS STRING
    (152) string -> . STRING MULTIPLY INTEGER
    (153) string -> . STRING DOT stringOpt
    (117) integer -> . INTEGERW DOT SQRT LPARENTHESES INTEGER RPARENTHESES
    (118) integer -> . INTEGER DOT CEIL LPARENTHESES RPARENTHESES
    (119) integer -> . INTEGER DOT CEIL LPARENTHESES INTEGER RPARENTHESES
    (120) integer -> . INTEGER DOT FLOOR LPARENTHESES RPARENTHESES
    (121) integer -> . INTEGER DOT FLOOR LPARENTHESES INTEGER RPARENTHESES
    (122) integer -> . INTEGER DOT ABS
    (44) tiposvariables -> . VAR
    (45) tiposvariables -> . LOCALVAR
    (46) tiposvariables -> . CONSTANT
    (53) hash -> . LCURLYBRACKET elementoHash RCURLYBRACKET
    (84) array -> . LBRACKET RBRACKET
    (85) array -> . LBRACKET datosarray RBRACKET
    (140) set -> . SET LBRACKET elementoSet RBRACKET

    $end            reduce using rule 29 (cuerpo -> .)
    ELSE            reduce using rule 29 (cuerpo -> .)
    END             reduce using rule 29 (cuerpo -> .)
    RETURN          reduce using rule 29 (cuerpo -> .)
    LOCALVAR        shift and go to state 17
    FOR             shift and go to state 19
    IF              shift and go to state 23
    UNLESS          shift and go to state 24
    PUTS            shift and go to state 25
    PRINT           shift and go to state 26
    STRING          shift and go to state 29
    INTEGERW        shift and go to state 30
    INTEGER         shift and go to state 28
    VAR             shift and go to state 31
    CONSTANT        shift and go to state 32
    LCURLYBRACKET   shift and go to state 33
    LBRACKET        shift and go to state 27
    SET             shift and go to state 34

    string                         shift and go to state 14
    cuerpo                         shift and go to state 45
    declaracion                    shift and go to state 4
    asignacion                     shift and go to state 5
    loop                           shift and go to state 6
    estructurasDatos               shift and go to state 7
    if                             shift and go to state 8
    unless                         shift and go to state 9
    impresion                      shift and go to state 10
    operacionSet                   shift and go to state 11
    operacionarray                 shift and go to state 12
    operacionHash                  shift and go to state 13
    integer                        shift and go to state 15
    tiposvariables                 shift and go to state 18
    hash                           shift and go to state 20
    array                          shift and go to state 21
    set                            shift and go to state 22

state 15

    (28) cuerpo -> integer . cuerpo
    (17) cuerpo -> . declaracion cuerpo
    (18) cuerpo -> . asignacion cuerpo
    (19) cuerpo -> . loop cuerpo
    (20) cuerpo -> . estructurasDatos cuerpo
    (21) cuerpo -> . if cuerpo
    (22) cuerpo -> . unless cuerpo
    (23) cuerpo -> . impresion cuerpo
    (24) cuerpo -> . operacionSet cuerpo
    (25) cuerpo -> . operacionarray cuerpo
    (26) cuerpo -> . operacionHash cuerpo
    (27) cuerpo -> . string cuerpo
    (28) cuerpo -> . integer cuerpo
    (29) cuerpo -> .
    (31) declaracion -> . tiposvariables EQUAL datos
    (32) declaracion -> . tiposvariables EQUAL estructurasDatos
    (33) declaracion -> . tiposvariables EQUAL expresion
    (34) declaracion -> . tiposvariables EQUAL declaracion
    (35) declaracion -> . tiposvariables EQUAL casting
    (36) asignacion -> . LOCALVAR PLUSASSIGN datosAsignacion
    (37) asignacion -> . LOCALVAR MINASSIGN datosAsignacion
    (38) asignacion -> . LOCALVAR DIVASSIGN datosAsignacion
    (39) asignacion -> . LOCALVAR TIMESASSIGN datosAsignacion
    (40) asignacion -> . LOCALVAR MODASSIGN datosAsignacion
    (41) asignacion -> . LOCALVAR EXPASSIGN datosAsignacion
    (30) loop -> . FOR LOCALVAR IN rango cuerpo END
    (50) estructurasDatos -> . hash
    (51) estructurasDatos -> . array
    (52) estructurasDatos -> . set
    (107) if -> . IF datoscompletos operadores datoscompletos cuerpo END
    (108) if -> . IF datoscompletos operadores datoscompletos cuerpo else
    (128) unless -> . UNLESS expresionCondicional cuerpo ELSE cuerpo END
    (65) impresion -> . PUTS datos
    (66) impresion -> . PUTS LOCALVAR
    (67) impresion -> . PRINT datos
    (68) impresion -> . PRINT LOCALVAR
    (146) operacionSet -> . set DOT ADD LPARENTHESES datos RPARENTHESES
    (147) operacionSet -> . set DOT ADD LPARENTHESES tiposvariables RPARENTHESES
    (148) operacionSet -> . set DOT CLEAR
    (149) operacionSet -> . set DOT DELETE LPARENTHESES datos RPARENTHESES
    (150) operacionSet -> . set DOT DELETE LPARENTHESES tiposvariables RPARENTHESES
    (92) operacionarray -> . array LBRACKET INTEGER RBRACKET
    (93) operacionarray -> . array DOT TAKE LPARENTHESES INTEGER RPARENTHESES
    (94) operacionarray -> . array DOT DROP LPARENTHESES INTEGER RPARENTHESES
    (95) operacionarray -> . array DOT push maspush
    (100) operacionarray -> . array DOT POP
    (101) operacionarray -> . array DOT POP LPARENTHESES INTEGER RPARENTHESES
    (102) operacionarray -> . array DOT DELETE LPARENTHESES INTEGER RPARENTHESES
    (103) operacionarray -> . array DOT LENGTH LPARENTHESES RPARENTHESES
    (104) operacionarray -> . array DOT EMPTY QUESTIONMARK
    (58) operacionHash -> . hash LBRACKET datos RBRACKET
    (59) operacionHash -> . hash LBRACKET datos RBRACKET EQUAL datos
    (60) operacionHash -> . hash DOT INCLUDE QUESTIONMARK LPARENTHESES datos RPARENTHESES
    (61) operacionHash -> . hash DOT DELETE LPARENTHESES datos RPARENTHESES
    (62) operacionHash -> . hash DOT KEYS
    (151) string -> . STRING PLUS STRING
    (152) string -> . STRING MULTIPLY INTEGER
    (153) string -> . STRING DOT stringOpt
    (117) integer -> . INTEGERW DOT SQRT LPARENTHESES INTEGER RPARENTHESES
    (118) integer -> . INTEGER DOT CEIL LPARENTHESES RPARENTHESES
    (119) integer -> . INTEGER DOT CEIL LPARENTHESES INTEGER RPARENTHESES
    (120) integer -> . INTEGER DOT FLOOR LPARENTHESES RPARENTHESES
    (121) integer -> . INTEGER DOT FLOOR LPARENTHESES INTEGER RPARENTHESES
    (122) integer -> . INTEGER DOT ABS
    (44) tiposvariables -> . VAR
    (45) tiposvariables -> . LOCALVAR
    (46) tiposvariables -> . CONSTANT
    (53) hash -> . LCURLYBRACKET elementoHash RCURLYBRACKET
    (84) array -> . LBRACKET RBRACKET
    (85) array -> . LBRACKET datosarray RBRACKET
    (140) set -> . SET LBRACKET elementoSet RBRACKET

    $end            reduce using rule 29 (cuerpo -> .)
    ELSE            reduce using rule 29 (cuerpo -> .)
    END             reduce using rule 29 (cuerpo -> .)
    RETURN          reduce using rule 29 (cuerpo -> .)
    LOCALVAR        shift and go to state 17
    FOR             shift and go to state 19
    IF              shift and go to state 23
    UNLESS          shift and go to state 24
    PUTS            shift and go to state 25
    PRINT           shift and go to state 26
    STRING          shift and go to state 29
    INTEGERW        shift and go to state 30
    INTEGER         shift and go to state 28
    VAR             shift and go to state 31
    CONSTANT        shift and go to state 32
    LCURLYBRACKET   shift and go to state 33
    LBRACKET        shift and go to state 27
    SET             shift and go to state 34

    integer                        shift and go to state 15
    cuerpo                         shift and go to state 46
    declaracion                    shift and go to state 4
    asignacion                     shift and go to state 5
    loop                           shift and go to state 6
    estructurasDatos               shift and go to state 7
    if                             shift and go to state 8
    unless                         shift and go to state 9
    impresion                      shift and go to state 10
    operacionSet                   shift and go to state 11
    operacionarray                 shift and go to state 12
    operacionHash                  shift and go to state 13
    string                         shift and go to state 14
    tiposvariables                 shift and go to state 18
    hash                           shift and go to state 20
    array                          shift and go to state 21
    set                            shift and go to state 22

state 16

    (3) funcion -> DEF . LOCALVAR LPARENTHESES argumentos RPARENTHESES cuerpo END
    (4) funcion -> DEF . LOCALVAR LPARENTHESES argumentos RPARENTHESES cuerpo retornar END

    LOCALVAR        shift and go to state 47


state 17

    (36) asignacion -> LOCALVAR . PLUSASSIGN datosAsignacion
    (37) asignacion -> LOCALVAR . MINASSIGN datosAsignacion
    (38) asignacion -> LOCALVAR . DIVASSIGN datosAsignacion
    (39) asignacion -> LOCALVAR . TIMESASSIGN datosAsignacion
    (40) asignacion -> LOCALVAR . MODASSIGN datosAsignacion
    (41) asignacion -> LOCALVAR . EXPASSIGN datosAsignacion
    (45) tiposvariables -> LOCALVAR .

    PLUSASSIGN      shift and go to state 48
    MINASSIGN       shift and go to state 49
    DIVASSIGN       shift and go to state 50
    TIMESASSIGN     shift and go to state 51
    MODASSIGN       shift and go to state 52
    EXPASSIGN       shift and go to state 53
    EQUAL           reduce using rule 45 (tiposvariables -> LOCALVAR .)


state 18

    (31) declaracion -> tiposvariables . EQUAL datos
    (32) declaracion -> tiposvariables . EQUAL estructurasDatos
    (33) declaracion -> tiposvariables . EQUAL expresion
    (34) declaracion -> tiposvariables . EQUAL declaracion
    (35) declaracion -> tiposvariables . EQUAL casting

    EQUAL           shift and go to state 54


state 19

    (30) loop -> FOR . LOCALVAR IN rango cuerpo END

    LOCALVAR        shift and go to state 55


state 20

    (50) estructurasDatos -> hash .
    (58) operacionHash -> hash . LBRACKET datos RBRACKET
    (59) operacionHash -> hash . LBRACKET datos RBRACKET EQUAL datos
    (60) operacionHash -> hash . DOT INCLUDE QUESTIONMARK LPARENTHESES datos RPARENTHESES
    (61) operacionHash -> hash . DOT DELETE LPARENTHESES datos RPARENTHESES
    (62) operacionHash -> hash . DOT KEYS

  ! shift/reduce conflict for LBRACKET resolved as shift
    LOCALVAR        reduce using rule 50 (estructurasDatos -> hash .)
    FOR             reduce using rule 50 (estructurasDatos -> hash .)
    IF              reduce using rule 50 (estructurasDatos -> hash .)
    UNLESS          reduce using rule 50 (estructurasDatos -> hash .)
    PUTS            reduce using rule 50 (estructurasDatos -> hash .)
    PRINT           reduce using rule 50 (estructurasDatos -> hash .)
    STRING          reduce using rule 50 (estructurasDatos -> hash .)
    INTEGERW        reduce using rule 50 (estructurasDatos -> hash .)
    INTEGER         reduce using rule 50 (estructurasDatos -> hash .)
    VAR             reduce using rule 50 (estructurasDatos -> hash .)
    CONSTANT        reduce using rule 50 (estructurasDatos -> hash .)
    LCURLYBRACKET   reduce using rule 50 (estructurasDatos -> hash .)
    SET             reduce using rule 50 (estructurasDatos -> hash .)
    $end            reduce using rule 50 (estructurasDatos -> hash .)
    ELSE            reduce using rule 50 (estructurasDatos -> hash .)
    END             reduce using rule 50 (estructurasDatos -> hash .)
    RETURN          reduce using rule 50 (estructurasDatos -> hash .)
    LBRACKET        shift and go to state 56
    DOT             shift and go to state 57

  ! LBRACKET        [ reduce using rule 50 (estructurasDatos -> hash .) ]


state 21

    (51) estructurasDatos -> array .
    (92) operacionarray -> array . LBRACKET INTEGER RBRACKET
    (93) operacionarray -> array . DOT TAKE LPARENTHESES INTEGER RPARENTHESES
    (94) operacionarray -> array . DOT DROP LPARENTHESES INTEGER RPARENTHESES
    (95) operacionarray -> array . DOT push maspush
    (100) operacionarray -> array . DOT POP
    (101) operacionarray -> array . DOT POP LPARENTHESES INTEGER RPARENTHESES
    (102) operacionarray -> array . DOT DELETE LPARENTHESES INTEGER RPARENTHESES
    (103) operacionarray -> array . DOT LENGTH LPARENTHESES RPARENTHESES
    (104) operacionarray -> array . DOT EMPTY QUESTIONMARK

  ! shift/reduce conflict for LBRACKET resolved as shift
    LOCALVAR        reduce using rule 51 (estructurasDatos -> array .)
    FOR             reduce using rule 51 (estructurasDatos -> array .)
    IF              reduce using rule 51 (estructurasDatos -> array .)
    UNLESS          reduce using rule 51 (estructurasDatos -> array .)
    PUTS            reduce using rule 51 (estructurasDatos -> array .)
    PRINT           reduce using rule 51 (estructurasDatos -> array .)
    STRING          reduce using rule 51 (estructurasDatos -> array .)
    INTEGERW        reduce using rule 51 (estructurasDatos -> array .)
    INTEGER         reduce using rule 51 (estructurasDatos -> array .)
    VAR             reduce using rule 51 (estructurasDatos -> array .)
    CONSTANT        reduce using rule 51 (estructurasDatos -> array .)
    LCURLYBRACKET   reduce using rule 51 (estructurasDatos -> array .)
    SET             reduce using rule 51 (estructurasDatos -> array .)
    $end            reduce using rule 51 (estructurasDatos -> array .)
    ELSE            reduce using rule 51 (estructurasDatos -> array .)
    END             reduce using rule 51 (estructurasDatos -> array .)
    RETURN          reduce using rule 51 (estructurasDatos -> array .)
    LBRACKET        shift and go to state 58
    DOT             shift and go to state 59

  ! LBRACKET        [ reduce using rule 51 (estructurasDatos -> array .) ]


state 22

    (52) estructurasDatos -> set .
    (146) operacionSet -> set . DOT ADD LPARENTHESES datos RPARENTHESES
    (147) operacionSet -> set . DOT ADD LPARENTHESES tiposvariables RPARENTHESES
    (148) operacionSet -> set . DOT CLEAR
    (149) operacionSet -> set . DOT DELETE LPARENTHESES datos RPARENTHESES
    (150) operacionSet -> set . DOT DELETE LPARENTHESES tiposvariables RPARENTHESES

    LOCALVAR        reduce using rule 52 (estructurasDatos -> set .)
    FOR             reduce using rule 52 (estructurasDatos -> set .)
    IF              reduce using rule 52 (estructurasDatos -> set .)
    UNLESS          reduce using rule 52 (estructurasDatos -> set .)
    PUTS            reduce using rule 52 (estructurasDatos -> set .)
    PRINT           reduce using rule 52 (estructurasDatos -> set .)
    STRING          reduce using rule 52 (estructurasDatos -> set .)
    INTEGERW        reduce using rule 52 (estructurasDatos -> set .)
    INTEGER         reduce using rule 52 (estructurasDatos -> set .)
    VAR             reduce using rule 52 (estructurasDatos -> set .)
    CONSTANT        reduce using rule 52 (estructurasDatos -> set .)
    LCURLYBRACKET   reduce using rule 52 (estructurasDatos -> set .)
    LBRACKET        reduce using rule 52 (estructurasDatos -> set .)
    SET             reduce using rule 52 (estructurasDatos -> set .)
    $end            reduce using rule 52 (estructurasDatos -> set .)
    ELSE            reduce using rule 52 (estructurasDatos -> set .)
    END             reduce using rule 52 (estructurasDatos -> set .)
    RETURN          reduce using rule 52 (estructurasDatos -> set .)
    DOT             shift and go to state 60


state 23

    (107) if -> IF . datoscompletos operadores datoscompletos cuerpo END
    (108) if -> IF . datoscompletos operadores datoscompletos cuerpo else
    (105) datoscompletos -> . datosvarios
    (106) datoscompletos -> . tiposvariables
    (86) datosvarios -> . datos
    (87) datosvarios -> . number
    (88) datosvarios -> . VAR
    (89) datosvarios -> . LOCALVAR
    (44) tiposvariables -> . VAR
    (45) tiposvariables -> . LOCALVAR
    (46) tiposvariables -> . CONSTANT
    (47) datos -> . INTEGER
    (48) datos -> . FLOAT
    (49) datos -> . STRING
    (69) number -> . INTEGER
    (70) number -> . FLOAT

    VAR             shift and go to state 66
    LOCALVAR        shift and go to state 67
    CONSTANT        shift and go to state 32
    INTEGER         shift and go to state 68
    FLOAT           shift and go to state 69
    STRING          shift and go to state 70

    datoscompletos                 shift and go to state 61
    datosvarios                    shift and go to state 62
    tiposvariables                 shift and go to state 63
    datos                          shift and go to state 64
    number                         shift and go to state 65

state 24

    (128) unless -> UNLESS . expresionCondicional cuerpo ELSE cuerpo END
    (129) expresionCondicional -> . boolean
    (130) expresionCondicional -> . EXCLAMATION LPARENTHESES boolean RPARENTHESES
    (133) boolean -> . condiciones
    (134) boolean -> . EXCLAMATION LPARENTHESES condiciones RPARENTHESES
    (135) boolean -> . boolean operadorBinario boolean
    (136) condiciones -> . tiposvariables operadores tiposvariables
    (137) condiciones -> . datos operadores datos
    (138) condiciones -> . tiposvariables operadores datos
    (139) condiciones -> . datos operadores tiposvariables
    (44) tiposvariables -> . VAR
    (45) tiposvariables -> . LOCALVAR
    (46) tiposvariables -> . CONSTANT
    (47) datos -> . INTEGER
    (48) datos -> . FLOAT
    (49) datos -> . STRING

    EXCLAMATION     shift and go to state 73
    VAR             shift and go to state 31
    LOCALVAR        shift and go to state 77
    CONSTANT        shift and go to state 32
    INTEGER         shift and go to state 78
    FLOAT           shift and go to state 79
    STRING          shift and go to state 70

    expresionCondicional           shift and go to state 71
    boolean                        shift and go to state 72
    condiciones                    shift and go to state 74
    tiposvariables                 shift and go to state 75
    datos                          shift and go to state 76

state 25

    (65) impresion -> PUTS . datos
    (66) impresion -> PUTS . LOCALVAR
    (47) datos -> . INTEGER
    (48) datos -> . FLOAT
    (49) datos -> . STRING

    LOCALVAR        shift and go to state 81
    INTEGER         shift and go to state 78
    FLOAT           shift and go to state 79
    STRING          shift and go to state 70

    datos                          shift and go to state 80

state 26

    (67) impresion -> PRINT . datos
    (68) impresion -> PRINT . LOCALVAR
    (47) datos -> . INTEGER
    (48) datos -> . FLOAT
    (49) datos -> . STRING

    LOCALVAR        shift and go to state 83
    INTEGER         shift and go to state 78
    FLOAT           shift and go to state 79
    STRING          shift and go to state 70

    datos                          shift and go to state 82

state 27

    (84) array -> LBRACKET . RBRACKET
    (85) array -> LBRACKET . datosarray RBRACKET
    (90) datosarray -> . datosvarios
    (91) datosarray -> . datosarray COMMA datosvarios
    (86) datosvarios -> . datos
    (87) datosvarios -> . number
    (88) datosvarios -> . VAR
    (89) datosvarios -> . LOCALVAR
    (47) datos -> . INTEGER
    (48) datos -> . FLOAT
    (49) datos -> . STRING
    (69) number -> . INTEGER
    (70) number -> . FLOAT

    RBRACKET        shift and go to state 84
    VAR             shift and go to state 87
    LOCALVAR        shift and go to state 88
    INTEGER         shift and go to state 68
    FLOAT           shift and go to state 69
    STRING          shift and go to state 70

    datosarray                     shift and go to state 85
    datosvarios                    shift and go to state 86
    datos                          shift and go to state 64
    number                         shift and go to state 65

state 28

    (118) integer -> INTEGER . DOT CEIL LPARENTHESES RPARENTHESES
    (119) integer -> INTEGER . DOT CEIL LPARENTHESES INTEGER RPARENTHESES
    (120) integer -> INTEGER . DOT FLOOR LPARENTHESES RPARENTHESES
    (121) integer -> INTEGER . DOT FLOOR LPARENTHESES INTEGER RPARENTHESES
    (122) integer -> INTEGER . DOT ABS

    DOT             shift and go to state 89


state 29

    (151) string -> STRING . PLUS STRING
    (152) string -> STRING . MULTIPLY INTEGER
    (153) string -> STRING . DOT stringOpt

    PLUS            shift and go to state 90
    MULTIPLY        shift and go to state 91
    DOT             shift and go to state 92


state 30

    (117) integer -> INTEGERW . DOT SQRT LPARENTHESES INTEGER RPARENTHESES

    DOT             shift and go to state 93


state 31

    (44) tiposvariables -> VAR .

    EQUAL           reduce using rule 44 (tiposvariables -> VAR .)
    DOUBLEEQUAL     reduce using rule 44 (tiposvariables -> VAR .)
    TRIPLEEQUAL     reduce using rule 44 (tiposvariables -> VAR .)
    GREATERTHAN     reduce using rule 44 (tiposvariables -> VAR .)
    NOTEQUAL        reduce using rule 44 (tiposvariables -> VAR .)
    LESSTHAN        reduce using rule 44 (tiposvariables -> VAR .)
    GREQUAL         reduce using rule 44 (tiposvariables -> VAR .)
    LEQUAL          reduce using rule 44 (tiposvariables -> VAR .)
    DOUBLEAMPERSAND reduce using rule 44 (tiposvariables -> VAR .)
    DOUBLEPIPE      reduce using rule 44 (tiposvariables -> VAR .)
    LOCALVAR        reduce using rule 44 (tiposvariables -> VAR .)
    FOR             reduce using rule 44 (tiposvariables -> VAR .)
    IF              reduce using rule 44 (tiposvariables -> VAR .)
    UNLESS          reduce using rule 44 (tiposvariables -> VAR .)
    PUTS            reduce using rule 44 (tiposvariables -> VAR .)
    PRINT           reduce using rule 44 (tiposvariables -> VAR .)
    STRING          reduce using rule 44 (tiposvariables -> VAR .)
    INTEGERW        reduce using rule 44 (tiposvariables -> VAR .)
    INTEGER         reduce using rule 44 (tiposvariables -> VAR .)
    VAR             reduce using rule 44 (tiposvariables -> VAR .)
    CONSTANT        reduce using rule 44 (tiposvariables -> VAR .)
    LCURLYBRACKET   reduce using rule 44 (tiposvariables -> VAR .)
    LBRACKET        reduce using rule 44 (tiposvariables -> VAR .)
    SET             reduce using rule 44 (tiposvariables -> VAR .)
    ELSE            reduce using rule 44 (tiposvariables -> VAR .)
    RPARENTHESES    reduce using rule 44 (tiposvariables -> VAR .)


state 32

    (46) tiposvariables -> CONSTANT .

    EQUAL           reduce using rule 46 (tiposvariables -> CONSTANT .)
    DOUBLEEQUAL     reduce using rule 46 (tiposvariables -> CONSTANT .)
    TRIPLEEQUAL     reduce using rule 46 (tiposvariables -> CONSTANT .)
    GREATERTHAN     reduce using rule 46 (tiposvariables -> CONSTANT .)
    NOTEQUAL        reduce using rule 46 (tiposvariables -> CONSTANT .)
    LESSTHAN        reduce using rule 46 (tiposvariables -> CONSTANT .)
    GREQUAL         reduce using rule 46 (tiposvariables -> CONSTANT .)
    LEQUAL          reduce using rule 46 (tiposvariables -> CONSTANT .)
    LOCALVAR        reduce using rule 46 (tiposvariables -> CONSTANT .)
    FOR             reduce using rule 46 (tiposvariables -> CONSTANT .)
    IF              reduce using rule 46 (tiposvariables -> CONSTANT .)
    UNLESS          reduce using rule 46 (tiposvariables -> CONSTANT .)
    PUTS            reduce using rule 46 (tiposvariables -> CONSTANT .)
    PRINT           reduce using rule 46 (tiposvariables -> CONSTANT .)
    STRING          reduce using rule 46 (tiposvariables -> CONSTANT .)
    INTEGERW        reduce using rule 46 (tiposvariables -> CONSTANT .)
    INTEGER         reduce using rule 46 (tiposvariables -> CONSTANT .)
    VAR             reduce using rule 46 (tiposvariables -> CONSTANT .)
    CONSTANT        reduce using rule 46 (tiposvariables -> CONSTANT .)
    LCURLYBRACKET   reduce using rule 46 (tiposvariables -> CONSTANT .)
    LBRACKET        reduce using rule 46 (tiposvariables -> CONSTANT .)
    SET             reduce using rule 46 (tiposvariables -> CONSTANT .)
    END             reduce using rule 46 (tiposvariables -> CONSTANT .)
    ELSE            reduce using rule 46 (tiposvariables -> CONSTANT .)
    DOUBLEAMPERSAND reduce using rule 46 (tiposvariables -> CONSTANT .)
    DOUBLEPIPE      reduce using rule 46 (tiposvariables -> CONSTANT .)
    RPARENTHESES    reduce using rule 46 (tiposvariables -> CONSTANT .)


state 33

    (53) hash -> LCURLYBRACKET . elementoHash RCURLYBRACKET
    (54) elementoHash -> . datos EQUAL GREATERTHAN datos maselementos
    (55) elementoHash -> .
    (47) datos -> . INTEGER
    (48) datos -> . FLOAT
    (49) datos -> . STRING

    RCURLYBRACKET   reduce using rule 55 (elementoHash -> .)
    INTEGER         shift and go to state 78
    FLOAT           shift and go to state 79
    STRING          shift and go to state 70

    elementoHash                   shift and go to state 94
    datos                          shift and go to state 95

state 34

    (140) set -> SET . LBRACKET elementoSet RBRACKET

    LBRACKET        shift and go to state 96


state 35

    (17) cuerpo -> declaracion cuerpo .

    $end            reduce using rule 17 (cuerpo -> declaracion cuerpo .)
    ELSE            reduce using rule 17 (cuerpo -> declaracion cuerpo .)
    END             reduce using rule 17 (cuerpo -> declaracion cuerpo .)
    RETURN          reduce using rule 17 (cuerpo -> declaracion cuerpo .)


state 36

    (18) cuerpo -> asignacion cuerpo .

    $end            reduce using rule 18 (cuerpo -> asignacion cuerpo .)
    ELSE            reduce using rule 18 (cuerpo -> asignacion cuerpo .)
    END             reduce using rule 18 (cuerpo -> asignacion cuerpo .)
    RETURN          reduce using rule 18 (cuerpo -> asignacion cuerpo .)


state 37

    (19) cuerpo -> loop cuerpo .

    $end            reduce using rule 19 (cuerpo -> loop cuerpo .)
    ELSE            reduce using rule 19 (cuerpo -> loop cuerpo .)
    END             reduce using rule 19 (cuerpo -> loop cuerpo .)
    RETURN          reduce using rule 19 (cuerpo -> loop cuerpo .)


state 38

    (20) cuerpo -> estructurasDatos cuerpo .

    $end            reduce using rule 20 (cuerpo -> estructurasDatos cuerpo .)
    ELSE            reduce using rule 20 (cuerpo -> estructurasDatos cuerpo .)
    END             reduce using rule 20 (cuerpo -> estructurasDatos cuerpo .)
    RETURN          reduce using rule 20 (cuerpo -> estructurasDatos cuerpo .)


state 39

    (21) cuerpo -> if cuerpo .

    $end            reduce using rule 21 (cuerpo -> if cuerpo .)
    ELSE            reduce using rule 21 (cuerpo -> if cuerpo .)
    END             reduce using rule 21 (cuerpo -> if cuerpo .)
    RETURN          reduce using rule 21 (cuerpo -> if cuerpo .)


state 40

    (22) cuerpo -> unless cuerpo .

    $end            reduce using rule 22 (cuerpo -> unless cuerpo .)
    ELSE            reduce using rule 22 (cuerpo -> unless cuerpo .)
    END             reduce using rule 22 (cuerpo -> unless cuerpo .)
    RETURN          reduce using rule 22 (cuerpo -> unless cuerpo .)


state 41

    (23) cuerpo -> impresion cuerpo .

    $end            reduce using rule 23 (cuerpo -> impresion cuerpo .)
    ELSE            reduce using rule 23 (cuerpo -> impresion cuerpo .)
    END             reduce using rule 23 (cuerpo -> impresion cuerpo .)
    RETURN          reduce using rule 23 (cuerpo -> impresion cuerpo .)


state 42

    (24) cuerpo -> operacionSet cuerpo .

    $end            reduce using rule 24 (cuerpo -> operacionSet cuerpo .)
    ELSE            reduce using rule 24 (cuerpo -> operacionSet cuerpo .)
    END             reduce using rule 24 (cuerpo -> operacionSet cuerpo .)
    RETURN          reduce using rule 24 (cuerpo -> operacionSet cuerpo .)


state 43

    (25) cuerpo -> operacionarray cuerpo .

    $end            reduce using rule 25 (cuerpo -> operacionarray cuerpo .)
    ELSE            reduce using rule 25 (cuerpo -> operacionarray cuerpo .)
    END             reduce using rule 25 (cuerpo -> operacionarray cuerpo .)
    RETURN          reduce using rule 25 (cuerpo -> operacionarray cuerpo .)


state 44

    (26) cuerpo -> operacionHash cuerpo .

    $end            reduce using rule 26 (cuerpo -> operacionHash cuerpo .)
    ELSE            reduce using rule 26 (cuerpo -> operacionHash cuerpo .)
    END             reduce using rule 26 (cuerpo -> operacionHash cuerpo .)
    RETURN          reduce using rule 26 (cuerpo -> operacionHash cuerpo .)


state 45

    (27) cuerpo -> string cuerpo .

    $end            reduce using rule 27 (cuerpo -> string cuerpo .)
    ELSE            reduce using rule 27 (cuerpo -> string cuerpo .)
    END             reduce using rule 27 (cuerpo -> string cuerpo .)
    RETURN          reduce using rule 27 (cuerpo -> string cuerpo .)


state 46

    (28) cuerpo -> integer cuerpo .

    $end            reduce using rule 28 (cuerpo -> integer cuerpo .)
    ELSE            reduce using rule 28 (cuerpo -> integer cuerpo .)
    END             reduce using rule 28 (cuerpo -> integer cuerpo .)
    RETURN          reduce using rule 28 (cuerpo -> integer cuerpo .)


state 47

    (3) funcion -> DEF LOCALVAR . LPARENTHESES argumentos RPARENTHESES cuerpo END
    (4) funcion -> DEF LOCALVAR . LPARENTHESES argumentos RPARENTHESES cuerpo retornar END

    LPARENTHESES    shift and go to state 97


state 48

    (36) asignacion -> LOCALVAR PLUSASSIGN . datosAsignacion
    (42) datosAsignacion -> . number
    (43) datosAsignacion -> . LOCALVAR
    (69) number -> . INTEGER
    (70) number -> . FLOAT

    LOCALVAR        shift and go to state 98
    INTEGER         shift and go to state 101
    FLOAT           shift and go to state 102

    datosAsignacion                shift and go to state 99
    number                         shift and go to state 100

state 49

    (37) asignacion -> LOCALVAR MINASSIGN . datosAsignacion
    (42) datosAsignacion -> . number
    (43) datosAsignacion -> . LOCALVAR
    (69) number -> . INTEGER
    (70) number -> . FLOAT

    LOCALVAR        shift and go to state 98
    INTEGER         shift and go to state 101
    FLOAT           shift and go to state 102

    datosAsignacion                shift and go to state 103
    number                         shift and go to state 100

state 50

    (38) asignacion -> LOCALVAR DIVASSIGN . datosAsignacion
    (42) datosAsignacion -> . number
    (43) datosAsignacion -> . LOCALVAR
    (69) number -> . INTEGER
    (70) number -> . FLOAT

    LOCALVAR        shift and go to state 98
    INTEGER         shift and go to state 101
    FLOAT           shift and go to state 102

    datosAsignacion                shift and go to state 104
    number                         shift and go to state 100

state 51

    (39) asignacion -> LOCALVAR TIMESASSIGN . datosAsignacion
    (42) datosAsignacion -> . number
    (43) datosAsignacion -> . LOCALVAR
    (69) number -> . INTEGER
    (70) number -> . FLOAT

    LOCALVAR        shift and go to state 98
    INTEGER         shift and go to state 101
    FLOAT           shift and go to state 102

    datosAsignacion                shift and go to state 105
    number                         shift and go to state 100

state 52

    (40) asignacion -> LOCALVAR MODASSIGN . datosAsignacion
    (42) datosAsignacion -> . number
    (43) datosAsignacion -> . LOCALVAR
    (69) number -> . INTEGER
    (70) number -> . FLOAT

    LOCALVAR        shift and go to state 98
    INTEGER         shift and go to state 101
    FLOAT           shift and go to state 102

    datosAsignacion                shift and go to state 106
    number                         shift and go to state 100

state 53

    (41) asignacion -> LOCALVAR EXPASSIGN . datosAsignacion
    (42) datosAsignacion -> . number
    (43) datosAsignacion -> . LOCALVAR
    (69) number -> . INTEGER
    (70) number -> . FLOAT

    LOCALVAR        shift and go to state 98
    INTEGER         shift and go to state 101
    FLOAT           shift and go to state 102

    datosAsignacion                shift and go to state 107
    number                         shift and go to state 100

state 54

    (31) declaracion -> tiposvariables EQUAL . datos
    (32) declaracion -> tiposvariables EQUAL . estructurasDatos
    (33) declaracion -> tiposvariables EQUAL . expresion
    (34) declaracion -> tiposvariables EQUAL . declaracion
    (35) declaracion -> tiposvariables EQUAL . casting
    (47) datos -> . INTEGER
    (48) datos -> . FLOAT
    (49) datos -> . STRING
    (50) estructurasDatos -> . hash
    (51) estructurasDatos -> . array
    (52) estructurasDatos -> . set
    (71) expresion -> . operacion
    (72) expresion -> . LPARENTHESES operacion RPARENTHESES
    (73) expresion -> . LPARENTHESES operacion RPARENTHESES masoperaciones
    (31) declaracion -> . tiposvariables EQUAL datos
    (32) declaracion -> . tiposvariables EQUAL estructurasDatos
    (33) declaracion -> . tiposvariables EQUAL expresion
    (34) declaracion -> . tiposvariables EQUAL declaracion
    (35) declaracion -> . tiposvariables EQUAL casting
    (159) casting -> . STRING DOT TO_I
    (160) casting -> . STRING DOT TO_F
    (161) casting -> . number DOT TO_S
    (53) hash -> . LCURLYBRACKET elementoHash RCURLYBRACKET
    (84) array -> . LBRACKET RBRACKET
    (85) array -> . LBRACKET datosarray RBRACKET
    (140) set -> . SET LBRACKET elementoSet RBRACKET
    (74) operacion -> . number operador number
    (75) operacion -> . operacion masoperaciones
    (44) tiposvariables -> . VAR
    (45) tiposvariables -> . LOCALVAR
    (46) tiposvariables -> . CONSTANT
    (69) number -> . INTEGER
    (70) number -> . FLOAT

    INTEGER         shift and go to state 68
    FLOAT           shift and go to state 69
    STRING          shift and go to state 113
    LPARENTHESES    shift and go to state 118
    LCURLYBRACKET   shift and go to state 33
    LBRACKET        shift and go to state 27
    SET             shift and go to state 34
    VAR             shift and go to state 31
    LOCALVAR        shift and go to state 77
    CONSTANT        shift and go to state 32

    tiposvariables                 shift and go to state 18
    datos                          shift and go to state 108
    estructurasDatos               shift and go to state 109
    expresion                      shift and go to state 110
    declaracion                    shift and go to state 111
    casting                        shift and go to state 112
    hash                           shift and go to state 114
    array                          shift and go to state 115
    set                            shift and go to state 116
    operacion                      shift and go to state 117
    number                         shift and go to state 119

state 55

    (30) loop -> FOR LOCALVAR . IN rango cuerpo END

    IN              shift and go to state 120


state 56

    (58) operacionHash -> hash LBRACKET . datos RBRACKET
    (59) operacionHash -> hash LBRACKET . datos RBRACKET EQUAL datos
    (47) datos -> . INTEGER
    (48) datos -> . FLOAT
    (49) datos -> . STRING

    INTEGER         shift and go to state 78
    FLOAT           shift and go to state 79
    STRING          shift and go to state 70

    datos                          shift and go to state 121

state 57

    (60) operacionHash -> hash DOT . INCLUDE QUESTIONMARK LPARENTHESES datos RPARENTHESES
    (61) operacionHash -> hash DOT . DELETE LPARENTHESES datos RPARENTHESES
    (62) operacionHash -> hash DOT . KEYS

    INCLUDE         shift and go to state 122
    DELETE          shift and go to state 123
    KEYS            shift and go to state 124


state 58

    (92) operacionarray -> array LBRACKET . INTEGER RBRACKET

    INTEGER         shift and go to state 125


state 59

    (93) operacionarray -> array DOT . TAKE LPARENTHESES INTEGER RPARENTHESES
    (94) operacionarray -> array DOT . DROP LPARENTHESES INTEGER RPARENTHESES
    (95) operacionarray -> array DOT . push maspush
    (100) operacionarray -> array DOT . POP
    (101) operacionarray -> array DOT . POP LPARENTHESES INTEGER RPARENTHESES
    (102) operacionarray -> array DOT . DELETE LPARENTHESES INTEGER RPARENTHESES
    (103) operacionarray -> array DOT . LENGTH LPARENTHESES RPARENTHESES
    (104) operacionarray -> array DOT . EMPTY QUESTIONMARK
    (96) push -> . PUSH LPARENTHESES datosvarios RPARENTHESES
    (97) push -> .

    TAKE            shift and go to state 126
    DROP            shift and go to state 127
    POP             shift and go to state 129
    DELETE          shift and go to state 130
    LENGTH          shift and go to state 131
    EMPTY           shift and go to state 132
    PUSH            shift and go to state 133
    DOT             reduce using rule 97 (push -> .)
    LOCALVAR        reduce using rule 97 (push -> .)
    FOR             reduce using rule 97 (push -> .)
    IF              reduce using rule 97 (push -> .)
    UNLESS          reduce using rule 97 (push -> .)
    PUTS            reduce using rule 97 (push -> .)
    PRINT           reduce using rule 97 (push -> .)
    STRING          reduce using rule 97 (push -> .)
    INTEGERW        reduce using rule 97 (push -> .)
    INTEGER         reduce using rule 97 (push -> .)
    VAR             reduce using rule 97 (push -> .)
    CONSTANT        reduce using rule 97 (push -> .)
    LCURLYBRACKET   reduce using rule 97 (push -> .)
    LBRACKET        reduce using rule 97 (push -> .)
    SET             reduce using rule 97 (push -> .)
    $end            reduce using rule 97 (push -> .)
    ELSE            reduce using rule 97 (push -> .)
    END             reduce using rule 97 (push -> .)
    RETURN          reduce using rule 97 (push -> .)

    push                           shift and go to state 128

state 60

    (146) operacionSet -> set DOT . ADD LPARENTHESES datos RPARENTHESES
    (147) operacionSet -> set DOT . ADD LPARENTHESES tiposvariables RPARENTHESES
    (148) operacionSet -> set DOT . CLEAR
    (149) operacionSet -> set DOT . DELETE LPARENTHESES datos RPARENTHESES
    (150) operacionSet -> set DOT . DELETE LPARENTHESES tiposvariables RPARENTHESES

    ADD             shift and go to state 134
    CLEAR           shift and go to state 135
    DELETE          shift and go to state 136


state 61

    (107) if -> IF datoscompletos . operadores datoscompletos cuerpo END
    (108) if -> IF datoscompletos . operadores datoscompletos cuerpo else
    (110) operadores -> . DOUBLEEQUAL
    (111) operadores -> . TRIPLEEQUAL
    (112) operadores -> . GREATERTHAN
    (113) operadores -> . NOTEQUAL
    (114) operadores -> . LESSTHAN
    (115) operadores -> . GREQUAL
    (116) operadores -> . LEQUAL

    DOUBLEEQUAL     shift and go to state 138
    TRIPLEEQUAL     shift and go to state 139
    GREATERTHAN     shift and go to state 140
    NOTEQUAL        shift and go to state 141
    LESSTHAN        shift and go to state 142
    GREQUAL         shift and go to state 143
    LEQUAL          shift and go to state 144

    operadores                     shift and go to state 137

state 62

    (105) datoscompletos -> datosvarios .

    DOUBLEEQUAL     reduce using rule 105 (datoscompletos -> datosvarios .)
    TRIPLEEQUAL     reduce using rule 105 (datoscompletos -> datosvarios .)
    GREATERTHAN     reduce using rule 105 (datoscompletos -> datosvarios .)
    NOTEQUAL        reduce using rule 105 (datoscompletos -> datosvarios .)
    LESSTHAN        reduce using rule 105 (datoscompletos -> datosvarios .)
    GREQUAL         reduce using rule 105 (datoscompletos -> datosvarios .)
    LEQUAL          reduce using rule 105 (datoscompletos -> datosvarios .)
    LOCALVAR        reduce using rule 105 (datoscompletos -> datosvarios .)
    FOR             reduce using rule 105 (datoscompletos -> datosvarios .)
    IF              reduce using rule 105 (datoscompletos -> datosvarios .)
    UNLESS          reduce using rule 105 (datoscompletos -> datosvarios .)
    PUTS            reduce using rule 105 (datoscompletos -> datosvarios .)
    PRINT           reduce using rule 105 (datoscompletos -> datosvarios .)
    STRING          reduce using rule 105 (datoscompletos -> datosvarios .)
    INTEGERW        reduce using rule 105 (datoscompletos -> datosvarios .)
    INTEGER         reduce using rule 105 (datoscompletos -> datosvarios .)
    VAR             reduce using rule 105 (datoscompletos -> datosvarios .)
    CONSTANT        reduce using rule 105 (datoscompletos -> datosvarios .)
    LCURLYBRACKET   reduce using rule 105 (datoscompletos -> datosvarios .)
    LBRACKET        reduce using rule 105 (datoscompletos -> datosvarios .)
    SET             reduce using rule 105 (datoscompletos -> datosvarios .)
    END             reduce using rule 105 (datoscompletos -> datosvarios .)
    ELSE            reduce using rule 105 (datoscompletos -> datosvarios .)


state 63

    (106) datoscompletos -> tiposvariables .

    DOUBLEEQUAL     reduce using rule 106 (datoscompletos -> tiposvariables .)
    TRIPLEEQUAL     reduce using rule 106 (datoscompletos -> tiposvariables .)
    GREATERTHAN     reduce using rule 106 (datoscompletos -> tiposvariables .)
    NOTEQUAL        reduce using rule 106 (datoscompletos -> tiposvariables .)
    LESSTHAN        reduce using rule 106 (datoscompletos -> tiposvariables .)
    GREQUAL         reduce using rule 106 (datoscompletos -> tiposvariables .)
    LEQUAL          reduce using rule 106 (datoscompletos -> tiposvariables .)
    LOCALVAR        reduce using rule 106 (datoscompletos -> tiposvariables .)
    FOR             reduce using rule 106 (datoscompletos -> tiposvariables .)
    IF              reduce using rule 106 (datoscompletos -> tiposvariables .)
    UNLESS          reduce using rule 106 (datoscompletos -> tiposvariables .)
    PUTS            reduce using rule 106 (datoscompletos -> tiposvariables .)
    PRINT           reduce using rule 106 (datoscompletos -> tiposvariables .)
    STRING          reduce using rule 106 (datoscompletos -> tiposvariables .)
    INTEGERW        reduce using rule 106 (datoscompletos -> tiposvariables .)
    INTEGER         reduce using rule 106 (datoscompletos -> tiposvariables .)
    VAR             reduce using rule 106 (datoscompletos -> tiposvariables .)
    CONSTANT        reduce using rule 106 (datoscompletos -> tiposvariables .)
    LCURLYBRACKET   reduce using rule 106 (datoscompletos -> tiposvariables .)
    LBRACKET        reduce using rule 106 (datoscompletos -> tiposvariables .)
    SET             reduce using rule 106 (datoscompletos -> tiposvariables .)
    END             reduce using rule 106 (datoscompletos -> tiposvariables .)
    ELSE            reduce using rule 106 (datoscompletos -> tiposvariables .)


state 64

    (86) datosvarios -> datos .

    DOUBLEEQUAL     reduce using rule 86 (datosvarios -> datos .)
    TRIPLEEQUAL     reduce using rule 86 (datosvarios -> datos .)
    GREATERTHAN     reduce using rule 86 (datosvarios -> datos .)
    NOTEQUAL        reduce using rule 86 (datosvarios -> datos .)
    LESSTHAN        reduce using rule 86 (datosvarios -> datos .)
    GREQUAL         reduce using rule 86 (datosvarios -> datos .)
    LEQUAL          reduce using rule 86 (datosvarios -> datos .)
    RBRACKET        reduce using rule 86 (datosvarios -> datos .)
    COMMA           reduce using rule 86 (datosvarios -> datos .)
    LOCALVAR        reduce using rule 86 (datosvarios -> datos .)
    FOR             reduce using rule 86 (datosvarios -> datos .)
    IF              reduce using rule 86 (datosvarios -> datos .)
    UNLESS          reduce using rule 86 (datosvarios -> datos .)
    PUTS            reduce using rule 86 (datosvarios -> datos .)
    PRINT           reduce using rule 86 (datosvarios -> datos .)
    STRING          reduce using rule 86 (datosvarios -> datos .)
    INTEGERW        reduce using rule 86 (datosvarios -> datos .)
    INTEGER         reduce using rule 86 (datosvarios -> datos .)
    VAR             reduce using rule 86 (datosvarios -> datos .)
    CONSTANT        reduce using rule 86 (datosvarios -> datos .)
    LCURLYBRACKET   reduce using rule 86 (datosvarios -> datos .)
    LBRACKET        reduce using rule 86 (datosvarios -> datos .)
    SET             reduce using rule 86 (datosvarios -> datos .)
    END             reduce using rule 86 (datosvarios -> datos .)
    ELSE            reduce using rule 86 (datosvarios -> datos .)
    RPARENTHESES    reduce using rule 86 (datosvarios -> datos .)


state 65

    (87) datosvarios -> number .

    DOUBLEEQUAL     reduce using rule 87 (datosvarios -> number .)
    TRIPLEEQUAL     reduce using rule 87 (datosvarios -> number .)
    GREATERTHAN     reduce using rule 87 (datosvarios -> number .)
    NOTEQUAL        reduce using rule 87 (datosvarios -> number .)
    LESSTHAN        reduce using rule 87 (datosvarios -> number .)
    GREQUAL         reduce using rule 87 (datosvarios -> number .)
    LEQUAL          reduce using rule 87 (datosvarios -> number .)
    RBRACKET        reduce using rule 87 (datosvarios -> number .)
    COMMA           reduce using rule 87 (datosvarios -> number .)
    LOCALVAR        reduce using rule 87 (datosvarios -> number .)
    FOR             reduce using rule 87 (datosvarios -> number .)
    IF              reduce using rule 87 (datosvarios -> number .)
    UNLESS          reduce using rule 87 (datosvarios -> number .)
    PUTS            reduce using rule 87 (datosvarios -> number .)
    PRINT           reduce using rule 87 (datosvarios -> number .)
    STRING          reduce using rule 87 (datosvarios -> number .)
    INTEGERW        reduce using rule 87 (datosvarios -> number .)
    INTEGER         reduce using rule 87 (datosvarios -> number .)
    VAR             reduce using rule 87 (datosvarios -> number .)
    CONSTANT        reduce using rule 87 (datosvarios -> number .)
    LCURLYBRACKET   reduce using rule 87 (datosvarios -> number .)
    LBRACKET        reduce using rule 87 (datosvarios -> number .)
    SET             reduce using rule 87 (datosvarios -> number .)
    END             reduce using rule 87 (datosvarios -> number .)
    ELSE            reduce using rule 87 (datosvarios -> number .)
    RPARENTHESES    reduce using rule 87 (datosvarios -> number .)


state 66

    (88) datosvarios -> VAR .
    (44) tiposvariables -> VAR .

  ! reduce/reduce conflict for DOUBLEEQUAL resolved using rule 44 (tiposvariables -> VAR .)
  ! reduce/reduce conflict for TRIPLEEQUAL resolved using rule 44 (tiposvariables -> VAR .)
  ! reduce/reduce conflict for GREATERTHAN resolved using rule 44 (tiposvariables -> VAR .)
  ! reduce/reduce conflict for NOTEQUAL resolved using rule 44 (tiposvariables -> VAR .)
  ! reduce/reduce conflict for LESSTHAN resolved using rule 44 (tiposvariables -> VAR .)
  ! reduce/reduce conflict for GREQUAL resolved using rule 44 (tiposvariables -> VAR .)
  ! reduce/reduce conflict for LEQUAL resolved using rule 44 (tiposvariables -> VAR .)
  ! reduce/reduce conflict for LOCALVAR resolved using rule 44 (tiposvariables -> VAR .)
  ! reduce/reduce conflict for FOR resolved using rule 44 (tiposvariables -> VAR .)
  ! reduce/reduce conflict for IF resolved using rule 44 (tiposvariables -> VAR .)
  ! reduce/reduce conflict for UNLESS resolved using rule 44 (tiposvariables -> VAR .)
  ! reduce/reduce conflict for PUTS resolved using rule 44 (tiposvariables -> VAR .)
  ! reduce/reduce conflict for PRINT resolved using rule 44 (tiposvariables -> VAR .)
  ! reduce/reduce conflict for STRING resolved using rule 44 (tiposvariables -> VAR .)
  ! reduce/reduce conflict for INTEGERW resolved using rule 44 (tiposvariables -> VAR .)
  ! reduce/reduce conflict for INTEGER resolved using rule 44 (tiposvariables -> VAR .)
  ! reduce/reduce conflict for VAR resolved using rule 44 (tiposvariables -> VAR .)
  ! reduce/reduce conflict for CONSTANT resolved using rule 44 (tiposvariables -> VAR .)
  ! reduce/reduce conflict for LCURLYBRACKET resolved using rule 44 (tiposvariables -> VAR .)
  ! reduce/reduce conflict for LBRACKET resolved using rule 44 (tiposvariables -> VAR .)
  ! reduce/reduce conflict for SET resolved using rule 44 (tiposvariables -> VAR .)
  ! reduce/reduce conflict for END resolved using rule 44 (tiposvariables -> VAR .)
  ! reduce/reduce conflict for ELSE resolved using rule 44 (tiposvariables -> VAR .)
    DOUBLEEQUAL     reduce using rule 44 (tiposvariables -> VAR .)
    TRIPLEEQUAL     reduce using rule 44 (tiposvariables -> VAR .)
    GREATERTHAN     reduce using rule 44 (tiposvariables -> VAR .)
    NOTEQUAL        reduce using rule 44 (tiposvariables -> VAR .)
    LESSTHAN        reduce using rule 44 (tiposvariables -> VAR .)
    GREQUAL         reduce using rule 44 (tiposvariables -> VAR .)
    LEQUAL          reduce using rule 44 (tiposvariables -> VAR .)
    LOCALVAR        reduce using rule 44 (tiposvariables -> VAR .)
    FOR             reduce using rule 44 (tiposvariables -> VAR .)
    IF              reduce using rule 44 (tiposvariables -> VAR .)
    UNLESS          reduce using rule 44 (tiposvariables -> VAR .)
    PUTS            reduce using rule 44 (tiposvariables -> VAR .)
    PRINT           reduce using rule 44 (tiposvariables -> VAR .)
    STRING          reduce using rule 44 (tiposvariables -> VAR .)
    INTEGERW        reduce using rule 44 (tiposvariables -> VAR .)
    INTEGER         reduce using rule 44 (tiposvariables -> VAR .)
    VAR             reduce using rule 44 (tiposvariables -> VAR .)
    CONSTANT        reduce using rule 44 (tiposvariables -> VAR .)
    LCURLYBRACKET   reduce using rule 44 (tiposvariables -> VAR .)
    LBRACKET        reduce using rule 44 (tiposvariables -> VAR .)
    SET             reduce using rule 44 (tiposvariables -> VAR .)
    END             reduce using rule 44 (tiposvariables -> VAR .)
    ELSE            reduce using rule 44 (tiposvariables -> VAR .)

  ! DOUBLEEQUAL     [ reduce using rule 88 (datosvarios -> VAR .) ]
  ! TRIPLEEQUAL     [ reduce using rule 88 (datosvarios -> VAR .) ]
  ! GREATERTHAN     [ reduce using rule 88 (datosvarios -> VAR .) ]
  ! NOTEQUAL        [ reduce using rule 88 (datosvarios -> VAR .) ]
  ! LESSTHAN        [ reduce using rule 88 (datosvarios -> VAR .) ]
  ! GREQUAL         [ reduce using rule 88 (datosvarios -> VAR .) ]
  ! LEQUAL          [ reduce using rule 88 (datosvarios -> VAR .) ]
  ! LOCALVAR        [ reduce using rule 88 (datosvarios -> VAR .) ]
  ! FOR             [ reduce using rule 88 (datosvarios -> VAR .) ]
  ! IF              [ reduce using rule 88 (datosvarios -> VAR .) ]
  ! UNLESS          [ reduce using rule 88 (datosvarios -> VAR .) ]
  ! PUTS            [ reduce using rule 88 (datosvarios -> VAR .) ]
  ! PRINT           [ reduce using rule 88 (datosvarios -> VAR .) ]
  ! STRING          [ reduce using rule 88 (datosvarios -> VAR .) ]
  ! INTEGERW        [ reduce using rule 88 (datosvarios -> VAR .) ]
  ! INTEGER         [ reduce using rule 88 (datosvarios -> VAR .) ]
  ! VAR             [ reduce using rule 88 (datosvarios -> VAR .) ]
  ! CONSTANT        [ reduce using rule 88 (datosvarios -> VAR .) ]
  ! LCURLYBRACKET   [ reduce using rule 88 (datosvarios -> VAR .) ]
  ! LBRACKET        [ reduce using rule 88 (datosvarios -> VAR .) ]
  ! SET             [ reduce using rule 88 (datosvarios -> VAR .) ]
  ! END             [ reduce using rule 88 (datosvarios -> VAR .) ]
  ! ELSE            [ reduce using rule 88 (datosvarios -> VAR .) ]


state 67

    (89) datosvarios -> LOCALVAR .
    (45) tiposvariables -> LOCALVAR .

  ! reduce/reduce conflict for DOUBLEEQUAL resolved using rule 45 (tiposvariables -> LOCALVAR .)
  ! reduce/reduce conflict for TRIPLEEQUAL resolved using rule 45 (tiposvariables -> LOCALVAR .)
  ! reduce/reduce conflict for GREATERTHAN resolved using rule 45 (tiposvariables -> LOCALVAR .)
  ! reduce/reduce conflict for NOTEQUAL resolved using rule 45 (tiposvariables -> LOCALVAR .)
  ! reduce/reduce conflict for LESSTHAN resolved using rule 45 (tiposvariables -> LOCALVAR .)
  ! reduce/reduce conflict for GREQUAL resolved using rule 45 (tiposvariables -> LOCALVAR .)
  ! reduce/reduce conflict for LEQUAL resolved using rule 45 (tiposvariables -> LOCALVAR .)
  ! reduce/reduce conflict for LOCALVAR resolved using rule 45 (tiposvariables -> LOCALVAR .)
  ! reduce/reduce conflict for FOR resolved using rule 45 (tiposvariables -> LOCALVAR .)
  ! reduce/reduce conflict for IF resolved using rule 45 (tiposvariables -> LOCALVAR .)
  ! reduce/reduce conflict for UNLESS resolved using rule 45 (tiposvariables -> LOCALVAR .)
  ! reduce/reduce conflict for PUTS resolved using rule 45 (tiposvariables -> LOCALVAR .)
  ! reduce/reduce conflict for PRINT resolved using rule 45 (tiposvariables -> LOCALVAR .)
  ! reduce/reduce conflict for STRING resolved using rule 45 (tiposvariables -> LOCALVAR .)
  ! reduce/reduce conflict for INTEGERW resolved using rule 45 (tiposvariables -> LOCALVAR .)
  ! reduce/reduce conflict for INTEGER resolved using rule 45 (tiposvariables -> LOCALVAR .)
  ! reduce/reduce conflict for VAR resolved using rule 45 (tiposvariables -> LOCALVAR .)
  ! reduce/reduce conflict for CONSTANT resolved using rule 45 (tiposvariables -> LOCALVAR .)
  ! reduce/reduce conflict for LCURLYBRACKET resolved using rule 45 (tiposvariables -> LOCALVAR .)
  ! reduce/reduce conflict for LBRACKET resolved using rule 45 (tiposvariables -> LOCALVAR .)
  ! reduce/reduce conflict for SET resolved using rule 45 (tiposvariables -> LOCALVAR .)
  ! reduce/reduce conflict for END resolved using rule 45 (tiposvariables -> LOCALVAR .)
  ! reduce/reduce conflict for ELSE resolved using rule 45 (tiposvariables -> LOCALVAR .)
    DOUBLEEQUAL     reduce using rule 45 (tiposvariables -> LOCALVAR .)
    TRIPLEEQUAL     reduce using rule 45 (tiposvariables -> LOCALVAR .)
    GREATERTHAN     reduce using rule 45 (tiposvariables -> LOCALVAR .)
    NOTEQUAL        reduce using rule 45 (tiposvariables -> LOCALVAR .)
    LESSTHAN        reduce using rule 45 (tiposvariables -> LOCALVAR .)
    GREQUAL         reduce using rule 45 (tiposvariables -> LOCALVAR .)
    LEQUAL          reduce using rule 45 (tiposvariables -> LOCALVAR .)
    LOCALVAR        reduce using rule 45 (tiposvariables -> LOCALVAR .)
    FOR             reduce using rule 45 (tiposvariables -> LOCALVAR .)
    IF              reduce using rule 45 (tiposvariables -> LOCALVAR .)
    UNLESS          reduce using rule 45 (tiposvariables -> LOCALVAR .)
    PUTS            reduce using rule 45 (tiposvariables -> LOCALVAR .)
    PRINT           reduce using rule 45 (tiposvariables -> LOCALVAR .)
    STRING          reduce using rule 45 (tiposvariables -> LOCALVAR .)
    INTEGERW        reduce using rule 45 (tiposvariables -> LOCALVAR .)
    INTEGER         reduce using rule 45 (tiposvariables -> LOCALVAR .)
    VAR             reduce using rule 45 (tiposvariables -> LOCALVAR .)
    CONSTANT        reduce using rule 45 (tiposvariables -> LOCALVAR .)
    LCURLYBRACKET   reduce using rule 45 (tiposvariables -> LOCALVAR .)
    LBRACKET        reduce using rule 45 (tiposvariables -> LOCALVAR .)
    SET             reduce using rule 45 (tiposvariables -> LOCALVAR .)
    END             reduce using rule 45 (tiposvariables -> LOCALVAR .)
    ELSE            reduce using rule 45 (tiposvariables -> LOCALVAR .)

  ! DOUBLEEQUAL     [ reduce using rule 89 (datosvarios -> LOCALVAR .) ]
  ! TRIPLEEQUAL     [ reduce using rule 89 (datosvarios -> LOCALVAR .) ]
  ! GREATERTHAN     [ reduce using rule 89 (datosvarios -> LOCALVAR .) ]
  ! NOTEQUAL        [ reduce using rule 89 (datosvarios -> LOCALVAR .) ]
  ! LESSTHAN        [ reduce using rule 89 (datosvarios -> LOCALVAR .) ]
  ! GREQUAL         [ reduce using rule 89 (datosvarios -> LOCALVAR .) ]
  ! LEQUAL          [ reduce using rule 89 (datosvarios -> LOCALVAR .) ]
  ! LOCALVAR        [ reduce using rule 89 (datosvarios -> LOCALVAR .) ]
  ! FOR             [ reduce using rule 89 (datosvarios -> LOCALVAR .) ]
  ! IF              [ reduce using rule 89 (datosvarios -> LOCALVAR .) ]
  ! UNLESS          [ reduce using rule 89 (datosvarios -> LOCALVAR .) ]
  ! PUTS            [ reduce using rule 89 (datosvarios -> LOCALVAR .) ]
  ! PRINT           [ reduce using rule 89 (datosvarios -> LOCALVAR .) ]
  ! STRING          [ reduce using rule 89 (datosvarios -> LOCALVAR .) ]
  ! INTEGERW        [ reduce using rule 89 (datosvarios -> LOCALVAR .) ]
  ! INTEGER         [ reduce using rule 89 (datosvarios -> LOCALVAR .) ]
  ! VAR             [ reduce using rule 89 (datosvarios -> LOCALVAR .) ]
  ! CONSTANT        [ reduce using rule 89 (datosvarios -> LOCALVAR .) ]
  ! LCURLYBRACKET   [ reduce using rule 89 (datosvarios -> LOCALVAR .) ]
  ! LBRACKET        [ reduce using rule 89 (datosvarios -> LOCALVAR .) ]
  ! SET             [ reduce using rule 89 (datosvarios -> LOCALVAR .) ]
  ! END             [ reduce using rule 89 (datosvarios -> LOCALVAR .) ]
  ! ELSE            [ reduce using rule 89 (datosvarios -> LOCALVAR .) ]


state 68

    (47) datos -> INTEGER .
    (69) number -> INTEGER .

  ! reduce/reduce conflict for DOUBLEEQUAL resolved using rule 47 (datos -> INTEGER .)
  ! reduce/reduce conflict for TRIPLEEQUAL resolved using rule 47 (datos -> INTEGER .)
  ! reduce/reduce conflict for GREATERTHAN resolved using rule 47 (datos -> INTEGER .)
  ! reduce/reduce conflict for NOTEQUAL resolved using rule 47 (datos -> INTEGER .)
  ! reduce/reduce conflict for LESSTHAN resolved using rule 47 (datos -> INTEGER .)
  ! reduce/reduce conflict for GREQUAL resolved using rule 47 (datos -> INTEGER .)
  ! reduce/reduce conflict for LEQUAL resolved using rule 47 (datos -> INTEGER .)
  ! reduce/reduce conflict for RBRACKET resolved using rule 47 (datos -> INTEGER .)
  ! reduce/reduce conflict for COMMA resolved using rule 47 (datos -> INTEGER .)
  ! reduce/reduce conflict for LOCALVAR resolved using rule 47 (datos -> INTEGER .)
  ! reduce/reduce conflict for FOR resolved using rule 47 (datos -> INTEGER .)
  ! reduce/reduce conflict for IF resolved using rule 47 (datos -> INTEGER .)
  ! reduce/reduce conflict for UNLESS resolved using rule 47 (datos -> INTEGER .)
  ! reduce/reduce conflict for PUTS resolved using rule 47 (datos -> INTEGER .)
  ! reduce/reduce conflict for PRINT resolved using rule 47 (datos -> INTEGER .)
  ! reduce/reduce conflict for STRING resolved using rule 47 (datos -> INTEGER .)
  ! reduce/reduce conflict for INTEGERW resolved using rule 47 (datos -> INTEGER .)
  ! reduce/reduce conflict for INTEGER resolved using rule 47 (datos -> INTEGER .)
  ! reduce/reduce conflict for VAR resolved using rule 47 (datos -> INTEGER .)
  ! reduce/reduce conflict for CONSTANT resolved using rule 47 (datos -> INTEGER .)
  ! reduce/reduce conflict for LCURLYBRACKET resolved using rule 47 (datos -> INTEGER .)
  ! reduce/reduce conflict for LBRACKET resolved using rule 47 (datos -> INTEGER .)
  ! reduce/reduce conflict for SET resolved using rule 47 (datos -> INTEGER .)
  ! reduce/reduce conflict for END resolved using rule 47 (datos -> INTEGER .)
  ! reduce/reduce conflict for ELSE resolved using rule 47 (datos -> INTEGER .)
  ! reduce/reduce conflict for RPARENTHESES resolved using rule 47 (datos -> INTEGER .)
    DOUBLEEQUAL     reduce using rule 47 (datos -> INTEGER .)
    TRIPLEEQUAL     reduce using rule 47 (datos -> INTEGER .)
    GREATERTHAN     reduce using rule 47 (datos -> INTEGER .)
    NOTEQUAL        reduce using rule 47 (datos -> INTEGER .)
    LESSTHAN        reduce using rule 47 (datos -> INTEGER .)
    GREQUAL         reduce using rule 47 (datos -> INTEGER .)
    LEQUAL          reduce using rule 47 (datos -> INTEGER .)
    RBRACKET        reduce using rule 47 (datos -> INTEGER .)
    COMMA           reduce using rule 47 (datos -> INTEGER .)
    LOCALVAR        reduce using rule 47 (datos -> INTEGER .)
    FOR             reduce using rule 47 (datos -> INTEGER .)
    IF              reduce using rule 47 (datos -> INTEGER .)
    UNLESS          reduce using rule 47 (datos -> INTEGER .)
    PUTS            reduce using rule 47 (datos -> INTEGER .)
    PRINT           reduce using rule 47 (datos -> INTEGER .)
    STRING          reduce using rule 47 (datos -> INTEGER .)
    INTEGERW        reduce using rule 47 (datos -> INTEGER .)
    INTEGER         reduce using rule 47 (datos -> INTEGER .)
    VAR             reduce using rule 47 (datos -> INTEGER .)
    CONSTANT        reduce using rule 47 (datos -> INTEGER .)
    LCURLYBRACKET   reduce using rule 47 (datos -> INTEGER .)
    LBRACKET        reduce using rule 47 (datos -> INTEGER .)
    SET             reduce using rule 47 (datos -> INTEGER .)
    $end            reduce using rule 47 (datos -> INTEGER .)
    ELSE            reduce using rule 47 (datos -> INTEGER .)
    END             reduce using rule 47 (datos -> INTEGER .)
    RETURN          reduce using rule 47 (datos -> INTEGER .)
    RPARENTHESES    reduce using rule 47 (datos -> INTEGER .)
    DOT             reduce using rule 69 (number -> INTEGER .)
    PLUS            reduce using rule 69 (number -> INTEGER .)
    MINUS           reduce using rule 69 (number -> INTEGER .)
    MULTIPLY        reduce using rule 69 (number -> INTEGER .)
    DIVIDE          reduce using rule 69 (number -> INTEGER .)
    PERCENTAGE      reduce using rule 69 (number -> INTEGER .)

  ! DOUBLEEQUAL     [ reduce using rule 69 (number -> INTEGER .) ]
  ! TRIPLEEQUAL     [ reduce using rule 69 (number -> INTEGER .) ]
  ! GREATERTHAN     [ reduce using rule 69 (number -> INTEGER .) ]
  ! NOTEQUAL        [ reduce using rule 69 (number -> INTEGER .) ]
  ! LESSTHAN        [ reduce using rule 69 (number -> INTEGER .) ]
  ! GREQUAL         [ reduce using rule 69 (number -> INTEGER .) ]
  ! LEQUAL          [ reduce using rule 69 (number -> INTEGER .) ]
  ! RBRACKET        [ reduce using rule 69 (number -> INTEGER .) ]
  ! COMMA           [ reduce using rule 69 (number -> INTEGER .) ]
  ! LOCALVAR        [ reduce using rule 69 (number -> INTEGER .) ]
  ! FOR             [ reduce using rule 69 (number -> INTEGER .) ]
  ! IF              [ reduce using rule 69 (number -> INTEGER .) ]
  ! UNLESS          [ reduce using rule 69 (number -> INTEGER .) ]
  ! PUTS            [ reduce using rule 69 (number -> INTEGER .) ]
  ! PRINT           [ reduce using rule 69 (number -> INTEGER .) ]
  ! STRING          [ reduce using rule 69 (number -> INTEGER .) ]
  ! INTEGERW        [ reduce using rule 69 (number -> INTEGER .) ]
  ! INTEGER         [ reduce using rule 69 (number -> INTEGER .) ]
  ! VAR             [ reduce using rule 69 (number -> INTEGER .) ]
  ! CONSTANT        [ reduce using rule 69 (number -> INTEGER .) ]
  ! LCURLYBRACKET   [ reduce using rule 69 (number -> INTEGER .) ]
  ! LBRACKET        [ reduce using rule 69 (number -> INTEGER .) ]
  ! SET             [ reduce using rule 69 (number -> INTEGER .) ]
  ! END             [ reduce using rule 69 (number -> INTEGER .) ]
  ! ELSE            [ reduce using rule 69 (number -> INTEGER .) ]
  ! RPARENTHESES    [ reduce using rule 69 (number -> INTEGER .) ]


state 69

    (48) datos -> FLOAT .
    (70) number -> FLOAT .

  ! reduce/reduce conflict for DOUBLEEQUAL resolved using rule 48 (datos -> FLOAT .)
  ! reduce/reduce conflict for TRIPLEEQUAL resolved using rule 48 (datos -> FLOAT .)
  ! reduce/reduce conflict for GREATERTHAN resolved using rule 48 (datos -> FLOAT .)
  ! reduce/reduce conflict for NOTEQUAL resolved using rule 48 (datos -> FLOAT .)
  ! reduce/reduce conflict for LESSTHAN resolved using rule 48 (datos -> FLOAT .)
  ! reduce/reduce conflict for GREQUAL resolved using rule 48 (datos -> FLOAT .)
  ! reduce/reduce conflict for LEQUAL resolved using rule 48 (datos -> FLOAT .)
  ! reduce/reduce conflict for RBRACKET resolved using rule 48 (datos -> FLOAT .)
  ! reduce/reduce conflict for COMMA resolved using rule 48 (datos -> FLOAT .)
  ! reduce/reduce conflict for LOCALVAR resolved using rule 48 (datos -> FLOAT .)
  ! reduce/reduce conflict for FOR resolved using rule 48 (datos -> FLOAT .)
  ! reduce/reduce conflict for IF resolved using rule 48 (datos -> FLOAT .)
  ! reduce/reduce conflict for UNLESS resolved using rule 48 (datos -> FLOAT .)
  ! reduce/reduce conflict for PUTS resolved using rule 48 (datos -> FLOAT .)
  ! reduce/reduce conflict for PRINT resolved using rule 48 (datos -> FLOAT .)
  ! reduce/reduce conflict for STRING resolved using rule 48 (datos -> FLOAT .)
  ! reduce/reduce conflict for INTEGERW resolved using rule 48 (datos -> FLOAT .)
  ! reduce/reduce conflict for INTEGER resolved using rule 48 (datos -> FLOAT .)
  ! reduce/reduce conflict for VAR resolved using rule 48 (datos -> FLOAT .)
  ! reduce/reduce conflict for CONSTANT resolved using rule 48 (datos -> FLOAT .)
  ! reduce/reduce conflict for LCURLYBRACKET resolved using rule 48 (datos -> FLOAT .)
  ! reduce/reduce conflict for LBRACKET resolved using rule 48 (datos -> FLOAT .)
  ! reduce/reduce conflict for SET resolved using rule 48 (datos -> FLOAT .)
  ! reduce/reduce conflict for END resolved using rule 48 (datos -> FLOAT .)
  ! reduce/reduce conflict for ELSE resolved using rule 48 (datos -> FLOAT .)
  ! reduce/reduce conflict for RPARENTHESES resolved using rule 48 (datos -> FLOAT .)
    DOUBLEEQUAL     reduce using rule 48 (datos -> FLOAT .)
    TRIPLEEQUAL     reduce using rule 48 (datos -> FLOAT .)
    GREATERTHAN     reduce using rule 48 (datos -> FLOAT .)
    NOTEQUAL        reduce using rule 48 (datos -> FLOAT .)
    LESSTHAN        reduce using rule 48 (datos -> FLOAT .)
    GREQUAL         reduce using rule 48 (datos -> FLOAT .)
    LEQUAL          reduce using rule 48 (datos -> FLOAT .)
    RBRACKET        reduce using rule 48 (datos -> FLOAT .)
    COMMA           reduce using rule 48 (datos -> FLOAT .)
    LOCALVAR        reduce using rule 48 (datos -> FLOAT .)
    FOR             reduce using rule 48 (datos -> FLOAT .)
    IF              reduce using rule 48 (datos -> FLOAT .)
    UNLESS          reduce using rule 48 (datos -> FLOAT .)
    PUTS            reduce using rule 48 (datos -> FLOAT .)
    PRINT           reduce using rule 48 (datos -> FLOAT .)
    STRING          reduce using rule 48 (datos -> FLOAT .)
    INTEGERW        reduce using rule 48 (datos -> FLOAT .)
    INTEGER         reduce using rule 48 (datos -> FLOAT .)
    VAR             reduce using rule 48 (datos -> FLOAT .)
    CONSTANT        reduce using rule 48 (datos -> FLOAT .)
    LCURLYBRACKET   reduce using rule 48 (datos -> FLOAT .)
    LBRACKET        reduce using rule 48 (datos -> FLOAT .)
    SET             reduce using rule 48 (datos -> FLOAT .)
    $end            reduce using rule 48 (datos -> FLOAT .)
    ELSE            reduce using rule 48 (datos -> FLOAT .)
    END             reduce using rule 48 (datos -> FLOAT .)
    RETURN          reduce using rule 48 (datos -> FLOAT .)
    RPARENTHESES    reduce using rule 48 (datos -> FLOAT .)
    DOT             reduce using rule 70 (number -> FLOAT .)
    PLUS            reduce using rule 70 (number -> FLOAT .)
    MINUS           reduce using rule 70 (number -> FLOAT .)
    MULTIPLY        reduce using rule 70 (number -> FLOAT .)
    DIVIDE          reduce using rule 70 (number -> FLOAT .)
    PERCENTAGE      reduce using rule 70 (number -> FLOAT .)

  ! DOUBLEEQUAL     [ reduce using rule 70 (number -> FLOAT .) ]
  ! TRIPLEEQUAL     [ reduce using rule 70 (number -> FLOAT .) ]
  ! GREATERTHAN     [ reduce using rule 70 (number -> FLOAT .) ]
  ! NOTEQUAL        [ reduce using rule 70 (number -> FLOAT .) ]
  ! LESSTHAN        [ reduce using rule 70 (number -> FLOAT .) ]
  ! GREQUAL         [ reduce using rule 70 (number -> FLOAT .) ]
  ! LEQUAL          [ reduce using rule 70 (number -> FLOAT .) ]
  ! RBRACKET        [ reduce using rule 70 (number -> FLOAT .) ]
  ! COMMA           [ reduce using rule 70 (number -> FLOAT .) ]
  ! LOCALVAR        [ reduce using rule 70 (number -> FLOAT .) ]
  ! FOR             [ reduce using rule 70 (number -> FLOAT .) ]
  ! IF              [ reduce using rule 70 (number -> FLOAT .) ]
  ! UNLESS          [ reduce using rule 70 (number -> FLOAT .) ]
  ! PUTS            [ reduce using rule 70 (number -> FLOAT .) ]
  ! PRINT           [ reduce using rule 70 (number -> FLOAT .) ]
  ! STRING          [ reduce using rule 70 (number -> FLOAT .) ]
  ! INTEGERW        [ reduce using rule 70 (number -> FLOAT .) ]
  ! INTEGER         [ reduce using rule 70 (number -> FLOAT .) ]
  ! VAR             [ reduce using rule 70 (number -> FLOAT .) ]
  ! CONSTANT        [ reduce using rule 70 (number -> FLOAT .) ]
  ! LCURLYBRACKET   [ reduce using rule 70 (number -> FLOAT .) ]
  ! LBRACKET        [ reduce using rule 70 (number -> FLOAT .) ]
  ! SET             [ reduce using rule 70 (number -> FLOAT .) ]
  ! END             [ reduce using rule 70 (number -> FLOAT .) ]
  ! ELSE            [ reduce using rule 70 (number -> FLOAT .) ]
  ! RPARENTHESES    [ reduce using rule 70 (number -> FLOAT .) ]


state 70

    (49) datos -> STRING .

    DOUBLEEQUAL     reduce using rule 49 (datos -> STRING .)
    TRIPLEEQUAL     reduce using rule 49 (datos -> STRING .)
    GREATERTHAN     reduce using rule 49 (datos -> STRING .)
    NOTEQUAL        reduce using rule 49 (datos -> STRING .)
    LESSTHAN        reduce using rule 49 (datos -> STRING .)
    GREQUAL         reduce using rule 49 (datos -> STRING .)
    LEQUAL          reduce using rule 49 (datos -> STRING .)
    LOCALVAR        reduce using rule 49 (datos -> STRING .)
    FOR             reduce using rule 49 (datos -> STRING .)
    IF              reduce using rule 49 (datos -> STRING .)
    UNLESS          reduce using rule 49 (datos -> STRING .)
    PUTS            reduce using rule 49 (datos -> STRING .)
    PRINT           reduce using rule 49 (datos -> STRING .)
    STRING          reduce using rule 49 (datos -> STRING .)
    INTEGERW        reduce using rule 49 (datos -> STRING .)
    INTEGER         reduce using rule 49 (datos -> STRING .)
    VAR             reduce using rule 49 (datos -> STRING .)
    CONSTANT        reduce using rule 49 (datos -> STRING .)
    LCURLYBRACKET   reduce using rule 49 (datos -> STRING .)
    LBRACKET        reduce using rule 49 (datos -> STRING .)
    SET             reduce using rule 49 (datos -> STRING .)
    $end            reduce using rule 49 (datos -> STRING .)
    ELSE            reduce using rule 49 (datos -> STRING .)
    END             reduce using rule 49 (datos -> STRING .)
    RETURN          reduce using rule 49 (datos -> STRING .)
    RBRACKET        reduce using rule 49 (datos -> STRING .)
    COMMA           reduce using rule 49 (datos -> STRING .)
    EQUAL           reduce using rule 49 (datos -> STRING .)
    DOUBLEAMPERSAND reduce using rule 49 (datos -> STRING .)
    DOUBLEPIPE      reduce using rule 49 (datos -> STRING .)
    RPARENTHESES    reduce using rule 49 (datos -> STRING .)
    RCURLYBRACKET   reduce using rule 49 (datos -> STRING .)


state 71

    (128) unless -> UNLESS expresionCondicional . cuerpo ELSE cuerpo END
    (17) cuerpo -> . declaracion cuerpo
    (18) cuerpo -> . asignacion cuerpo
    (19) cuerpo -> . loop cuerpo
    (20) cuerpo -> . estructurasDatos cuerpo
    (21) cuerpo -> . if cuerpo
    (22) cuerpo -> . unless cuerpo
    (23) cuerpo -> . impresion cuerpo
    (24) cuerpo -> . operacionSet cuerpo
    (25) cuerpo -> . operacionarray cuerpo
    (26) cuerpo -> . operacionHash cuerpo
    (27) cuerpo -> . string cuerpo
    (28) cuerpo -> . integer cuerpo
    (29) cuerpo -> .
    (31) declaracion -> . tiposvariables EQUAL datos
    (32) declaracion -> . tiposvariables EQUAL estructurasDatos
    (33) declaracion -> . tiposvariables EQUAL expresion
    (34) declaracion -> . tiposvariables EQUAL declaracion
    (35) declaracion -> . tiposvariables EQUAL casting
    (36) asignacion -> . LOCALVAR PLUSASSIGN datosAsignacion
    (37) asignacion -> . LOCALVAR MINASSIGN datosAsignacion
    (38) asignacion -> . LOCALVAR DIVASSIGN datosAsignacion
    (39) asignacion -> . LOCALVAR TIMESASSIGN datosAsignacion
    (40) asignacion -> . LOCALVAR MODASSIGN datosAsignacion
    (41) asignacion -> . LOCALVAR EXPASSIGN datosAsignacion
    (30) loop -> . FOR LOCALVAR IN rango cuerpo END
    (50) estructurasDatos -> . hash
    (51) estructurasDatos -> . array
    (52) estructurasDatos -> . set
    (107) if -> . IF datoscompletos operadores datoscompletos cuerpo END
    (108) if -> . IF datoscompletos operadores datoscompletos cuerpo else
    (128) unless -> . UNLESS expresionCondicional cuerpo ELSE cuerpo END
    (65) impresion -> . PUTS datos
    (66) impresion -> . PUTS LOCALVAR
    (67) impresion -> . PRINT datos
    (68) impresion -> . PRINT LOCALVAR
    (146) operacionSet -> . set DOT ADD LPARENTHESES datos RPARENTHESES
    (147) operacionSet -> . set DOT ADD LPARENTHESES tiposvariables RPARENTHESES
    (148) operacionSet -> . set DOT CLEAR
    (149) operacionSet -> . set DOT DELETE LPARENTHESES datos RPARENTHESES
    (150) operacionSet -> . set DOT DELETE LPARENTHESES tiposvariables RPARENTHESES
    (92) operacionarray -> . array LBRACKET INTEGER RBRACKET
    (93) operacionarray -> . array DOT TAKE LPARENTHESES INTEGER RPARENTHESES
    (94) operacionarray -> . array DOT DROP LPARENTHESES INTEGER RPARENTHESES
    (95) operacionarray -> . array DOT push maspush
    (100) operacionarray -> . array DOT POP
    (101) operacionarray -> . array DOT POP LPARENTHESES INTEGER RPARENTHESES
    (102) operacionarray -> . array DOT DELETE LPARENTHESES INTEGER RPARENTHESES
    (103) operacionarray -> . array DOT LENGTH LPARENTHESES RPARENTHESES
    (104) operacionarray -> . array DOT EMPTY QUESTIONMARK
    (58) operacionHash -> . hash LBRACKET datos RBRACKET
    (59) operacionHash -> . hash LBRACKET datos RBRACKET EQUAL datos
    (60) operacionHash -> . hash DOT INCLUDE QUESTIONMARK LPARENTHESES datos RPARENTHESES
    (61) operacionHash -> . hash DOT DELETE LPARENTHESES datos RPARENTHESES
    (62) operacionHash -> . hash DOT KEYS
    (151) string -> . STRING PLUS STRING
    (152) string -> . STRING MULTIPLY INTEGER
    (153) string -> . STRING DOT stringOpt
    (117) integer -> . INTEGERW DOT SQRT LPARENTHESES INTEGER RPARENTHESES
    (118) integer -> . INTEGER DOT CEIL LPARENTHESES RPARENTHESES
    (119) integer -> . INTEGER DOT CEIL LPARENTHESES INTEGER RPARENTHESES
    (120) integer -> . INTEGER DOT FLOOR LPARENTHESES RPARENTHESES
    (121) integer -> . INTEGER DOT FLOOR LPARENTHESES INTEGER RPARENTHESES
    (122) integer -> . INTEGER DOT ABS
    (44) tiposvariables -> . VAR
    (45) tiposvariables -> . LOCALVAR
    (46) tiposvariables -> . CONSTANT
    (53) hash -> . LCURLYBRACKET elementoHash RCURLYBRACKET
    (84) array -> . LBRACKET RBRACKET
    (85) array -> . LBRACKET datosarray RBRACKET
    (140) set -> . SET LBRACKET elementoSet RBRACKET

    ELSE            reduce using rule 29 (cuerpo -> .)
    LOCALVAR        shift and go to state 17
    FOR             shift and go to state 19
    IF              shift and go to state 23
    UNLESS          shift and go to state 24
    PUTS            shift and go to state 25
    PRINT           shift and go to state 26
    STRING          shift and go to state 29
    INTEGERW        shift and go to state 30
    INTEGER         shift and go to state 28
    VAR             shift and go to state 31
    CONSTANT        shift and go to state 32
    LCURLYBRACKET   shift and go to state 33
    LBRACKET        shift and go to state 27
    SET             shift and go to state 34

    cuerpo                         shift and go to state 145
    declaracion                    shift and go to state 4
    asignacion                     shift and go to state 5
    loop                           shift and go to state 6
    estructurasDatos               shift and go to state 7
    if                             shift and go to state 8
    unless                         shift and go to state 9
    impresion                      shift and go to state 10
    operacionSet                   shift and go to state 11
    operacionarray                 shift and go to state 12
    operacionHash                  shift and go to state 13
    string                         shift and go to state 14
    integer                        shift and go to state 15
    tiposvariables                 shift and go to state 18
    hash                           shift and go to state 20
    array                          shift and go to state 21
    set                            shift and go to state 22

state 72

    (129) expresionCondicional -> boolean .
    (135) boolean -> boolean . operadorBinario boolean
    (131) operadorBinario -> . DOUBLEAMPERSAND
    (132) operadorBinario -> . DOUBLEPIPE

    LOCALVAR        reduce using rule 129 (expresionCondicional -> boolean .)
    FOR             reduce using rule 129 (expresionCondicional -> boolean .)
    IF              reduce using rule 129 (expresionCondicional -> boolean .)
    UNLESS          reduce using rule 129 (expresionCondicional -> boolean .)
    PUTS            reduce using rule 129 (expresionCondicional -> boolean .)
    PRINT           reduce using rule 129 (expresionCondicional -> boolean .)
    STRING          reduce using rule 129 (expresionCondicional -> boolean .)
    INTEGERW        reduce using rule 129 (expresionCondicional -> boolean .)
    INTEGER         reduce using rule 129 (expresionCondicional -> boolean .)
    VAR             reduce using rule 129 (expresionCondicional -> boolean .)
    CONSTANT        reduce using rule 129 (expresionCondicional -> boolean .)
    LCURLYBRACKET   reduce using rule 129 (expresionCondicional -> boolean .)
    LBRACKET        reduce using rule 129 (expresionCondicional -> boolean .)
    SET             reduce using rule 129 (expresionCondicional -> boolean .)
    ELSE            reduce using rule 129 (expresionCondicional -> boolean .)
    DOUBLEAMPERSAND shift and go to state 147
    DOUBLEPIPE      shift and go to state 148

    operadorBinario                shift and go to state 146

state 73

    (130) expresionCondicional -> EXCLAMATION . LPARENTHESES boolean RPARENTHESES
    (134) boolean -> EXCLAMATION . LPARENTHESES condiciones RPARENTHESES

    LPARENTHESES    shift and go to state 149


state 74

    (133) boolean -> condiciones .

    DOUBLEAMPERSAND reduce using rule 133 (boolean -> condiciones .)
    DOUBLEPIPE      reduce using rule 133 (boolean -> condiciones .)
    LOCALVAR        reduce using rule 133 (boolean -> condiciones .)
    FOR             reduce using rule 133 (boolean -> condiciones .)
    IF              reduce using rule 133 (boolean -> condiciones .)
    UNLESS          reduce using rule 133 (boolean -> condiciones .)
    PUTS            reduce using rule 133 (boolean -> condiciones .)
    PRINT           reduce using rule 133 (boolean -> condiciones .)
    STRING          reduce using rule 133 (boolean -> condiciones .)
    INTEGERW        reduce using rule 133 (boolean -> condiciones .)
    INTEGER         reduce using rule 133 (boolean -> condiciones .)
    VAR             reduce using rule 133 (boolean -> condiciones .)
    CONSTANT        reduce using rule 133 (boolean -> condiciones .)
    LCURLYBRACKET   reduce using rule 133 (boolean -> condiciones .)
    LBRACKET        reduce using rule 133 (boolean -> condiciones .)
    SET             reduce using rule 133 (boolean -> condiciones .)
    ELSE            reduce using rule 133 (boolean -> condiciones .)
    RPARENTHESES    reduce using rule 133 (boolean -> condiciones .)


state 75

    (136) condiciones -> tiposvariables . operadores tiposvariables
    (138) condiciones -> tiposvariables . operadores datos
    (110) operadores -> . DOUBLEEQUAL
    (111) operadores -> . TRIPLEEQUAL
    (112) operadores -> . GREATERTHAN
    (113) operadores -> . NOTEQUAL
    (114) operadores -> . LESSTHAN
    (115) operadores -> . GREQUAL
    (116) operadores -> . LEQUAL

    DOUBLEEQUAL     shift and go to state 138
    TRIPLEEQUAL     shift and go to state 139
    GREATERTHAN     shift and go to state 140
    NOTEQUAL        shift and go to state 141
    LESSTHAN        shift and go to state 142
    GREQUAL         shift and go to state 143
    LEQUAL          shift and go to state 144

    operadores                     shift and go to state 150

state 76

    (137) condiciones -> datos . operadores datos
    (139) condiciones -> datos . operadores tiposvariables
    (110) operadores -> . DOUBLEEQUAL
    (111) operadores -> . TRIPLEEQUAL
    (112) operadores -> . GREATERTHAN
    (113) operadores -> . NOTEQUAL
    (114) operadores -> . LESSTHAN
    (115) operadores -> . GREQUAL
    (116) operadores -> . LEQUAL

    DOUBLEEQUAL     shift and go to state 138
    TRIPLEEQUAL     shift and go to state 139
    GREATERTHAN     shift and go to state 140
    NOTEQUAL        shift and go to state 141
    LESSTHAN        shift and go to state 142
    GREQUAL         shift and go to state 143
    LEQUAL          shift and go to state 144

    operadores                     shift and go to state 151

state 77

    (45) tiposvariables -> LOCALVAR .

    DOUBLEEQUAL     reduce using rule 45 (tiposvariables -> LOCALVAR .)
    TRIPLEEQUAL     reduce using rule 45 (tiposvariables -> LOCALVAR .)
    GREATERTHAN     reduce using rule 45 (tiposvariables -> LOCALVAR .)
    NOTEQUAL        reduce using rule 45 (tiposvariables -> LOCALVAR .)
    LESSTHAN        reduce using rule 45 (tiposvariables -> LOCALVAR .)
    GREQUAL         reduce using rule 45 (tiposvariables -> LOCALVAR .)
    LEQUAL          reduce using rule 45 (tiposvariables -> LOCALVAR .)
    EQUAL           reduce using rule 45 (tiposvariables -> LOCALVAR .)
    DOUBLEAMPERSAND reduce using rule 45 (tiposvariables -> LOCALVAR .)
    DOUBLEPIPE      reduce using rule 45 (tiposvariables -> LOCALVAR .)
    LOCALVAR        reduce using rule 45 (tiposvariables -> LOCALVAR .)
    FOR             reduce using rule 45 (tiposvariables -> LOCALVAR .)
    IF              reduce using rule 45 (tiposvariables -> LOCALVAR .)
    UNLESS          reduce using rule 45 (tiposvariables -> LOCALVAR .)
    PUTS            reduce using rule 45 (tiposvariables -> LOCALVAR .)
    PRINT           reduce using rule 45 (tiposvariables -> LOCALVAR .)
    STRING          reduce using rule 45 (tiposvariables -> LOCALVAR .)
    INTEGERW        reduce using rule 45 (tiposvariables -> LOCALVAR .)
    INTEGER         reduce using rule 45 (tiposvariables -> LOCALVAR .)
    VAR             reduce using rule 45 (tiposvariables -> LOCALVAR .)
    CONSTANT        reduce using rule 45 (tiposvariables -> LOCALVAR .)
    LCURLYBRACKET   reduce using rule 45 (tiposvariables -> LOCALVAR .)
    LBRACKET        reduce using rule 45 (tiposvariables -> LOCALVAR .)
    SET             reduce using rule 45 (tiposvariables -> LOCALVAR .)
    ELSE            reduce using rule 45 (tiposvariables -> LOCALVAR .)
    RPARENTHESES    reduce using rule 45 (tiposvariables -> LOCALVAR .)


state 78

    (47) datos -> INTEGER .

    DOUBLEEQUAL     reduce using rule 47 (datos -> INTEGER .)
    TRIPLEEQUAL     reduce using rule 47 (datos -> INTEGER .)
    GREATERTHAN     reduce using rule 47 (datos -> INTEGER .)
    NOTEQUAL        reduce using rule 47 (datos -> INTEGER .)
    LESSTHAN        reduce using rule 47 (datos -> INTEGER .)
    GREQUAL         reduce using rule 47 (datos -> INTEGER .)
    LEQUAL          reduce using rule 47 (datos -> INTEGER .)
    LOCALVAR        reduce using rule 47 (datos -> INTEGER .)
    FOR             reduce using rule 47 (datos -> INTEGER .)
    IF              reduce using rule 47 (datos -> INTEGER .)
    UNLESS          reduce using rule 47 (datos -> INTEGER .)
    PUTS            reduce using rule 47 (datos -> INTEGER .)
    PRINT           reduce using rule 47 (datos -> INTEGER .)
    STRING          reduce using rule 47 (datos -> INTEGER .)
    INTEGERW        reduce using rule 47 (datos -> INTEGER .)
    INTEGER         reduce using rule 47 (datos -> INTEGER .)
    VAR             reduce using rule 47 (datos -> INTEGER .)
    CONSTANT        reduce using rule 47 (datos -> INTEGER .)
    LCURLYBRACKET   reduce using rule 47 (datos -> INTEGER .)
    LBRACKET        reduce using rule 47 (datos -> INTEGER .)
    SET             reduce using rule 47 (datos -> INTEGER .)
    $end            reduce using rule 47 (datos -> INTEGER .)
    ELSE            reduce using rule 47 (datos -> INTEGER .)
    END             reduce using rule 47 (datos -> INTEGER .)
    RETURN          reduce using rule 47 (datos -> INTEGER .)
    EQUAL           reduce using rule 47 (datos -> INTEGER .)
    RBRACKET        reduce using rule 47 (datos -> INTEGER .)
    COMMA           reduce using rule 47 (datos -> INTEGER .)
    DOUBLEAMPERSAND reduce using rule 47 (datos -> INTEGER .)
    DOUBLEPIPE      reduce using rule 47 (datos -> INTEGER .)
    RPARENTHESES    reduce using rule 47 (datos -> INTEGER .)
    RCURLYBRACKET   reduce using rule 47 (datos -> INTEGER .)


state 79

    (48) datos -> FLOAT .

    DOUBLEEQUAL     reduce using rule 48 (datos -> FLOAT .)
    TRIPLEEQUAL     reduce using rule 48 (datos -> FLOAT .)
    GREATERTHAN     reduce using rule 48 (datos -> FLOAT .)
    NOTEQUAL        reduce using rule 48 (datos -> FLOAT .)
    LESSTHAN        reduce using rule 48 (datos -> FLOAT .)
    GREQUAL         reduce using rule 48 (datos -> FLOAT .)
    LEQUAL          reduce using rule 48 (datos -> FLOAT .)
    LOCALVAR        reduce using rule 48 (datos -> FLOAT .)
    FOR             reduce using rule 48 (datos -> FLOAT .)
    IF              reduce using rule 48 (datos -> FLOAT .)
    UNLESS          reduce using rule 48 (datos -> FLOAT .)
    PUTS            reduce using rule 48 (datos -> FLOAT .)
    PRINT           reduce using rule 48 (datos -> FLOAT .)
    STRING          reduce using rule 48 (datos -> FLOAT .)
    INTEGERW        reduce using rule 48 (datos -> FLOAT .)
    INTEGER         reduce using rule 48 (datos -> FLOAT .)
    VAR             reduce using rule 48 (datos -> FLOAT .)
    CONSTANT        reduce using rule 48 (datos -> FLOAT .)
    LCURLYBRACKET   reduce using rule 48 (datos -> FLOAT .)
    LBRACKET        reduce using rule 48 (datos -> FLOAT .)
    SET             reduce using rule 48 (datos -> FLOAT .)
    $end            reduce using rule 48 (datos -> FLOAT .)
    ELSE            reduce using rule 48 (datos -> FLOAT .)
    END             reduce using rule 48 (datos -> FLOAT .)
    RETURN          reduce using rule 48 (datos -> FLOAT .)
    EQUAL           reduce using rule 48 (datos -> FLOAT .)
    RBRACKET        reduce using rule 48 (datos -> FLOAT .)
    COMMA           reduce using rule 48 (datos -> FLOAT .)
    DOUBLEAMPERSAND reduce using rule 48 (datos -> FLOAT .)
    DOUBLEPIPE      reduce using rule 48 (datos -> FLOAT .)
    RPARENTHESES    reduce using rule 48 (datos -> FLOAT .)
    RCURLYBRACKET   reduce using rule 48 (datos -> FLOAT .)


state 80

    (65) impresion -> PUTS datos .

    LOCALVAR        reduce using rule 65 (impresion -> PUTS datos .)
    FOR             reduce using rule 65 (impresion -> PUTS datos .)
    IF              reduce using rule 65 (impresion -> PUTS datos .)
    UNLESS          reduce using rule 65 (impresion -> PUTS datos .)
    PUTS            reduce using rule 65 (impresion -> PUTS datos .)
    PRINT           reduce using rule 65 (impresion -> PUTS datos .)
    STRING          reduce using rule 65 (impresion -> PUTS datos .)
    INTEGERW        reduce using rule 65 (impresion -> PUTS datos .)
    INTEGER         reduce using rule 65 (impresion -> PUTS datos .)
    VAR             reduce using rule 65 (impresion -> PUTS datos .)
    CONSTANT        reduce using rule 65 (impresion -> PUTS datos .)
    LCURLYBRACKET   reduce using rule 65 (impresion -> PUTS datos .)
    LBRACKET        reduce using rule 65 (impresion -> PUTS datos .)
    SET             reduce using rule 65 (impresion -> PUTS datos .)
    $end            reduce using rule 65 (impresion -> PUTS datos .)
    ELSE            reduce using rule 65 (impresion -> PUTS datos .)
    END             reduce using rule 65 (impresion -> PUTS datos .)
    RETURN          reduce using rule 65 (impresion -> PUTS datos .)


state 81

    (66) impresion -> PUTS LOCALVAR .

    LOCALVAR        reduce using rule 66 (impresion -> PUTS LOCALVAR .)
    FOR             reduce using rule 66 (impresion -> PUTS LOCALVAR .)
    IF              reduce using rule 66 (impresion -> PUTS LOCALVAR .)
    UNLESS          reduce using rule 66 (impresion -> PUTS LOCALVAR .)
    PUTS            reduce using rule 66 (impresion -> PUTS LOCALVAR .)
    PRINT           reduce using rule 66 (impresion -> PUTS LOCALVAR .)
    STRING          reduce using rule 66 (impresion -> PUTS LOCALVAR .)
    INTEGERW        reduce using rule 66 (impresion -> PUTS LOCALVAR .)
    INTEGER         reduce using rule 66 (impresion -> PUTS LOCALVAR .)
    VAR             reduce using rule 66 (impresion -> PUTS LOCALVAR .)
    CONSTANT        reduce using rule 66 (impresion -> PUTS LOCALVAR .)
    LCURLYBRACKET   reduce using rule 66 (impresion -> PUTS LOCALVAR .)
    LBRACKET        reduce using rule 66 (impresion -> PUTS LOCALVAR .)
    SET             reduce using rule 66 (impresion -> PUTS LOCALVAR .)
    $end            reduce using rule 66 (impresion -> PUTS LOCALVAR .)
    ELSE            reduce using rule 66 (impresion -> PUTS LOCALVAR .)
    END             reduce using rule 66 (impresion -> PUTS LOCALVAR .)
    RETURN          reduce using rule 66 (impresion -> PUTS LOCALVAR .)


state 82

    (67) impresion -> PRINT datos .

    LOCALVAR        reduce using rule 67 (impresion -> PRINT datos .)
    FOR             reduce using rule 67 (impresion -> PRINT datos .)
    IF              reduce using rule 67 (impresion -> PRINT datos .)
    UNLESS          reduce using rule 67 (impresion -> PRINT datos .)
    PUTS            reduce using rule 67 (impresion -> PRINT datos .)
    PRINT           reduce using rule 67 (impresion -> PRINT datos .)
    STRING          reduce using rule 67 (impresion -> PRINT datos .)
    INTEGERW        reduce using rule 67 (impresion -> PRINT datos .)
    INTEGER         reduce using rule 67 (impresion -> PRINT datos .)
    VAR             reduce using rule 67 (impresion -> PRINT datos .)
    CONSTANT        reduce using rule 67 (impresion -> PRINT datos .)
    LCURLYBRACKET   reduce using rule 67 (impresion -> PRINT datos .)
    LBRACKET        reduce using rule 67 (impresion -> PRINT datos .)
    SET             reduce using rule 67 (impresion -> PRINT datos .)
    $end            reduce using rule 67 (impresion -> PRINT datos .)
    ELSE            reduce using rule 67 (impresion -> PRINT datos .)
    END             reduce using rule 67 (impresion -> PRINT datos .)
    RETURN          reduce using rule 67 (impresion -> PRINT datos .)


state 83

    (68) impresion -> PRINT LOCALVAR .

    LOCALVAR        reduce using rule 68 (impresion -> PRINT LOCALVAR .)
    FOR             reduce using rule 68 (impresion -> PRINT LOCALVAR .)
    IF              reduce using rule 68 (impresion -> PRINT LOCALVAR .)
    UNLESS          reduce using rule 68 (impresion -> PRINT LOCALVAR .)
    PUTS            reduce using rule 68 (impresion -> PRINT LOCALVAR .)
    PRINT           reduce using rule 68 (impresion -> PRINT LOCALVAR .)
    STRING          reduce using rule 68 (impresion -> PRINT LOCALVAR .)
    INTEGERW        reduce using rule 68 (impresion -> PRINT LOCALVAR .)
    INTEGER         reduce using rule 68 (impresion -> PRINT LOCALVAR .)
    VAR             reduce using rule 68 (impresion -> PRINT LOCALVAR .)
    CONSTANT        reduce using rule 68 (impresion -> PRINT LOCALVAR .)
    LCURLYBRACKET   reduce using rule 68 (impresion -> PRINT LOCALVAR .)
    LBRACKET        reduce using rule 68 (impresion -> PRINT LOCALVAR .)
    SET             reduce using rule 68 (impresion -> PRINT LOCALVAR .)
    $end            reduce using rule 68 (impresion -> PRINT LOCALVAR .)
    ELSE            reduce using rule 68 (impresion -> PRINT LOCALVAR .)
    END             reduce using rule 68 (impresion -> PRINT LOCALVAR .)
    RETURN          reduce using rule 68 (impresion -> PRINT LOCALVAR .)


state 84

    (84) array -> LBRACKET RBRACKET .

    LBRACKET        reduce using rule 84 (array -> LBRACKET RBRACKET .)
    DOT             reduce using rule 84 (array -> LBRACKET RBRACKET .)
    LOCALVAR        reduce using rule 84 (array -> LBRACKET RBRACKET .)
    FOR             reduce using rule 84 (array -> LBRACKET RBRACKET .)
    IF              reduce using rule 84 (array -> LBRACKET RBRACKET .)
    UNLESS          reduce using rule 84 (array -> LBRACKET RBRACKET .)
    PUTS            reduce using rule 84 (array -> LBRACKET RBRACKET .)
    PRINT           reduce using rule 84 (array -> LBRACKET RBRACKET .)
    STRING          reduce using rule 84 (array -> LBRACKET RBRACKET .)
    INTEGERW        reduce using rule 84 (array -> LBRACKET RBRACKET .)
    INTEGER         reduce using rule 84 (array -> LBRACKET RBRACKET .)
    VAR             reduce using rule 84 (array -> LBRACKET RBRACKET .)
    CONSTANT        reduce using rule 84 (array -> LBRACKET RBRACKET .)
    LCURLYBRACKET   reduce using rule 84 (array -> LBRACKET RBRACKET .)
    SET             reduce using rule 84 (array -> LBRACKET RBRACKET .)
    $end            reduce using rule 84 (array -> LBRACKET RBRACKET .)
    ELSE            reduce using rule 84 (array -> LBRACKET RBRACKET .)
    END             reduce using rule 84 (array -> LBRACKET RBRACKET .)
    RETURN          reduce using rule 84 (array -> LBRACKET RBRACKET .)


state 85

    (85) array -> LBRACKET datosarray . RBRACKET
    (91) datosarray -> datosarray . COMMA datosvarios

    RBRACKET        shift and go to state 152
    COMMA           shift and go to state 153


state 86

    (90) datosarray -> datosvarios .

    RBRACKET        reduce using rule 90 (datosarray -> datosvarios .)
    COMMA           reduce using rule 90 (datosarray -> datosvarios .)


state 87

    (88) datosvarios -> VAR .

    RBRACKET        reduce using rule 88 (datosvarios -> VAR .)
    COMMA           reduce using rule 88 (datosvarios -> VAR .)
    RPARENTHESES    reduce using rule 88 (datosvarios -> VAR .)


state 88

    (89) datosvarios -> LOCALVAR .

    RBRACKET        reduce using rule 89 (datosvarios -> LOCALVAR .)
    COMMA           reduce using rule 89 (datosvarios -> LOCALVAR .)
    RPARENTHESES    reduce using rule 89 (datosvarios -> LOCALVAR .)


state 89

    (118) integer -> INTEGER DOT . CEIL LPARENTHESES RPARENTHESES
    (119) integer -> INTEGER DOT . CEIL LPARENTHESES INTEGER RPARENTHESES
    (120) integer -> INTEGER DOT . FLOOR LPARENTHESES RPARENTHESES
    (121) integer -> INTEGER DOT . FLOOR LPARENTHESES INTEGER RPARENTHESES
    (122) integer -> INTEGER DOT . ABS

    CEIL            shift and go to state 154
    FLOOR           shift and go to state 155
    ABS             shift and go to state 156


state 90

    (151) string -> STRING PLUS . STRING

    STRING          shift and go to state 157


state 91

    (152) string -> STRING MULTIPLY . INTEGER

    INTEGER         shift and go to state 158


state 92

    (153) string -> STRING DOT . stringOpt
    (154) stringOpt -> . UPCASE
    (155) stringOpt -> . DOWNCASE
    (156) stringOpt -> . LENGTH
    (157) stringOpt -> . CAPS
    (158) stringOpt -> . INSERT LPARENTHESES INTEGER COMMA STRING RPARENTHESES

    UPCASE          shift and go to state 160
    DOWNCASE        shift and go to state 161
    LENGTH          shift and go to state 162
    CAPS            shift and go to state 163
    INSERT          shift and go to state 164

    stringOpt                      shift and go to state 159

state 93

    (117) integer -> INTEGERW DOT . SQRT LPARENTHESES INTEGER RPARENTHESES

    SQRT            shift and go to state 165


state 94

    (53) hash -> LCURLYBRACKET elementoHash . RCURLYBRACKET

    RCURLYBRACKET   shift and go to state 166


state 95

    (54) elementoHash -> datos . EQUAL GREATERTHAN datos maselementos

    EQUAL           shift and go to state 167


state 96

    (140) set -> SET LBRACKET . elementoSet RBRACKET
    (141) elementoSet -> .
    (142) elementoSet -> . datos
    (143) elementoSet -> . datos otroElemento
    (47) datos -> . INTEGER
    (48) datos -> . FLOAT
    (49) datos -> . STRING

    RBRACKET        reduce using rule 141 (elementoSet -> .)
    INTEGER         shift and go to state 78
    FLOAT           shift and go to state 79
    STRING          shift and go to state 70

    elementoSet                    shift and go to state 168
    datos                          shift and go to state 169

state 97

    (3) funcion -> DEF LOCALVAR LPARENTHESES . argumentos RPARENTHESES cuerpo END
    (4) funcion -> DEF LOCALVAR LPARENTHESES . argumentos RPARENTHESES cuerpo retornar END
    (5) argumentos -> . variosargumentos
    (6) argumentos -> . MULTIPLY LOCALVAR
    (7) argumentos -> . TWOSTARS LOCALVAR
    (8) argumentos -> . LOCALVAR EQUAL LCURLYBRACKET RCURLYBRACKET
    (9) argumentos -> . LOCALVAR TWOPOINTS datos
    (10) variosargumentos -> . LOCALVAR
    (11) variosargumentos -> . LOCALVAR EQUAL datos
    (12) variosargumentos -> . LOCALVAR masargumentos
    (13) variosargumentos -> . LOCALVAR EQUAL datos masargumentos

    MULTIPLY        shift and go to state 173
    TWOSTARS        shift and go to state 174
    LOCALVAR        shift and go to state 170

    argumentos                     shift and go to state 171
    variosargumentos               shift and go to state 172

state 98

    (43) datosAsignacion -> LOCALVAR .

    LOCALVAR        reduce using rule 43 (datosAsignacion -> LOCALVAR .)
    FOR             reduce using rule 43 (datosAsignacion -> LOCALVAR .)
    IF              reduce using rule 43 (datosAsignacion -> LOCALVAR .)
    UNLESS          reduce using rule 43 (datosAsignacion -> LOCALVAR .)
    PUTS            reduce using rule 43 (datosAsignacion -> LOCALVAR .)
    PRINT           reduce using rule 43 (datosAsignacion -> LOCALVAR .)
    STRING          reduce using rule 43 (datosAsignacion -> LOCALVAR .)
    INTEGERW        reduce using rule 43 (datosAsignacion -> LOCALVAR .)
    INTEGER         reduce using rule 43 (datosAsignacion -> LOCALVAR .)
    VAR             reduce using rule 43 (datosAsignacion -> LOCALVAR .)
    CONSTANT        reduce using rule 43 (datosAsignacion -> LOCALVAR .)
    LCURLYBRACKET   reduce using rule 43 (datosAsignacion -> LOCALVAR .)
    LBRACKET        reduce using rule 43 (datosAsignacion -> LOCALVAR .)
    SET             reduce using rule 43 (datosAsignacion -> LOCALVAR .)
    $end            reduce using rule 43 (datosAsignacion -> LOCALVAR .)
    ELSE            reduce using rule 43 (datosAsignacion -> LOCALVAR .)
    END             reduce using rule 43 (datosAsignacion -> LOCALVAR .)
    RETURN          reduce using rule 43 (datosAsignacion -> LOCALVAR .)


state 99

    (36) asignacion -> LOCALVAR PLUSASSIGN datosAsignacion .

    LOCALVAR        reduce using rule 36 (asignacion -> LOCALVAR PLUSASSIGN datosAsignacion .)
    FOR             reduce using rule 36 (asignacion -> LOCALVAR PLUSASSIGN datosAsignacion .)
    IF              reduce using rule 36 (asignacion -> LOCALVAR PLUSASSIGN datosAsignacion .)
    UNLESS          reduce using rule 36 (asignacion -> LOCALVAR PLUSASSIGN datosAsignacion .)
    PUTS            reduce using rule 36 (asignacion -> LOCALVAR PLUSASSIGN datosAsignacion .)
    PRINT           reduce using rule 36 (asignacion -> LOCALVAR PLUSASSIGN datosAsignacion .)
    STRING          reduce using rule 36 (asignacion -> LOCALVAR PLUSASSIGN datosAsignacion .)
    INTEGERW        reduce using rule 36 (asignacion -> LOCALVAR PLUSASSIGN datosAsignacion .)
    INTEGER         reduce using rule 36 (asignacion -> LOCALVAR PLUSASSIGN datosAsignacion .)
    VAR             reduce using rule 36 (asignacion -> LOCALVAR PLUSASSIGN datosAsignacion .)
    CONSTANT        reduce using rule 36 (asignacion -> LOCALVAR PLUSASSIGN datosAsignacion .)
    LCURLYBRACKET   reduce using rule 36 (asignacion -> LOCALVAR PLUSASSIGN datosAsignacion .)
    LBRACKET        reduce using rule 36 (asignacion -> LOCALVAR PLUSASSIGN datosAsignacion .)
    SET             reduce using rule 36 (asignacion -> LOCALVAR PLUSASSIGN datosAsignacion .)
    $end            reduce using rule 36 (asignacion -> LOCALVAR PLUSASSIGN datosAsignacion .)
    ELSE            reduce using rule 36 (asignacion -> LOCALVAR PLUSASSIGN datosAsignacion .)
    END             reduce using rule 36 (asignacion -> LOCALVAR PLUSASSIGN datosAsignacion .)
    RETURN          reduce using rule 36 (asignacion -> LOCALVAR PLUSASSIGN datosAsignacion .)


state 100

    (42) datosAsignacion -> number .

    LOCALVAR        reduce using rule 42 (datosAsignacion -> number .)
    FOR             reduce using rule 42 (datosAsignacion -> number .)
    IF              reduce using rule 42 (datosAsignacion -> number .)
    UNLESS          reduce using rule 42 (datosAsignacion -> number .)
    PUTS            reduce using rule 42 (datosAsignacion -> number .)
    PRINT           reduce using rule 42 (datosAsignacion -> number .)
    STRING          reduce using rule 42 (datosAsignacion -> number .)
    INTEGERW        reduce using rule 42 (datosAsignacion -> number .)
    INTEGER         reduce using rule 42 (datosAsignacion -> number .)
    VAR             reduce using rule 42 (datosAsignacion -> number .)
    CONSTANT        reduce using rule 42 (datosAsignacion -> number .)
    LCURLYBRACKET   reduce using rule 42 (datosAsignacion -> number .)
    LBRACKET        reduce using rule 42 (datosAsignacion -> number .)
    SET             reduce using rule 42 (datosAsignacion -> number .)
    $end            reduce using rule 42 (datosAsignacion -> number .)
    ELSE            reduce using rule 42 (datosAsignacion -> number .)
    END             reduce using rule 42 (datosAsignacion -> number .)
    RETURN          reduce using rule 42 (datosAsignacion -> number .)


state 101

    (69) number -> INTEGER .

    LOCALVAR        reduce using rule 69 (number -> INTEGER .)
    FOR             reduce using rule 69 (number -> INTEGER .)
    IF              reduce using rule 69 (number -> INTEGER .)
    UNLESS          reduce using rule 69 (number -> INTEGER .)
    PUTS            reduce using rule 69 (number -> INTEGER .)
    PRINT           reduce using rule 69 (number -> INTEGER .)
    STRING          reduce using rule 69 (number -> INTEGER .)
    INTEGERW        reduce using rule 69 (number -> INTEGER .)
    INTEGER         reduce using rule 69 (number -> INTEGER .)
    VAR             reduce using rule 69 (number -> INTEGER .)
    CONSTANT        reduce using rule 69 (number -> INTEGER .)
    LCURLYBRACKET   reduce using rule 69 (number -> INTEGER .)
    LBRACKET        reduce using rule 69 (number -> INTEGER .)
    SET             reduce using rule 69 (number -> INTEGER .)
    $end            reduce using rule 69 (number -> INTEGER .)
    ELSE            reduce using rule 69 (number -> INTEGER .)
    END             reduce using rule 69 (number -> INTEGER .)
    RETURN          reduce using rule 69 (number -> INTEGER .)
    PLUS            reduce using rule 69 (number -> INTEGER .)
    MINUS           reduce using rule 69 (number -> INTEGER .)
    MULTIPLY        reduce using rule 69 (number -> INTEGER .)
    DIVIDE          reduce using rule 69 (number -> INTEGER .)
    PERCENTAGE      reduce using rule 69 (number -> INTEGER .)
    RPARENTHESES    reduce using rule 69 (number -> INTEGER .)


state 102

    (70) number -> FLOAT .

    LOCALVAR        reduce using rule 70 (number -> FLOAT .)
    FOR             reduce using rule 70 (number -> FLOAT .)
    IF              reduce using rule 70 (number -> FLOAT .)
    UNLESS          reduce using rule 70 (number -> FLOAT .)
    PUTS            reduce using rule 70 (number -> FLOAT .)
    PRINT           reduce using rule 70 (number -> FLOAT .)
    STRING          reduce using rule 70 (number -> FLOAT .)
    INTEGERW        reduce using rule 70 (number -> FLOAT .)
    INTEGER         reduce using rule 70 (number -> FLOAT .)
    VAR             reduce using rule 70 (number -> FLOAT .)
    CONSTANT        reduce using rule 70 (number -> FLOAT .)
    LCURLYBRACKET   reduce using rule 70 (number -> FLOAT .)
    LBRACKET        reduce using rule 70 (number -> FLOAT .)
    SET             reduce using rule 70 (number -> FLOAT .)
    $end            reduce using rule 70 (number -> FLOAT .)
    ELSE            reduce using rule 70 (number -> FLOAT .)
    END             reduce using rule 70 (number -> FLOAT .)
    RETURN          reduce using rule 70 (number -> FLOAT .)
    PLUS            reduce using rule 70 (number -> FLOAT .)
    MINUS           reduce using rule 70 (number -> FLOAT .)
    MULTIPLY        reduce using rule 70 (number -> FLOAT .)
    DIVIDE          reduce using rule 70 (number -> FLOAT .)
    PERCENTAGE      reduce using rule 70 (number -> FLOAT .)
    RPARENTHESES    reduce using rule 70 (number -> FLOAT .)


state 103

    (37) asignacion -> LOCALVAR MINASSIGN datosAsignacion .

    LOCALVAR        reduce using rule 37 (asignacion -> LOCALVAR MINASSIGN datosAsignacion .)
    FOR             reduce using rule 37 (asignacion -> LOCALVAR MINASSIGN datosAsignacion .)
    IF              reduce using rule 37 (asignacion -> LOCALVAR MINASSIGN datosAsignacion .)
    UNLESS          reduce using rule 37 (asignacion -> LOCALVAR MINASSIGN datosAsignacion .)
    PUTS            reduce using rule 37 (asignacion -> LOCALVAR MINASSIGN datosAsignacion .)
    PRINT           reduce using rule 37 (asignacion -> LOCALVAR MINASSIGN datosAsignacion .)
    STRING          reduce using rule 37 (asignacion -> LOCALVAR MINASSIGN datosAsignacion .)
    INTEGERW        reduce using rule 37 (asignacion -> LOCALVAR MINASSIGN datosAsignacion .)
    INTEGER         reduce using rule 37 (asignacion -> LOCALVAR MINASSIGN datosAsignacion .)
    VAR             reduce using rule 37 (asignacion -> LOCALVAR MINASSIGN datosAsignacion .)
    CONSTANT        reduce using rule 37 (asignacion -> LOCALVAR MINASSIGN datosAsignacion .)
    LCURLYBRACKET   reduce using rule 37 (asignacion -> LOCALVAR MINASSIGN datosAsignacion .)
    LBRACKET        reduce using rule 37 (asignacion -> LOCALVAR MINASSIGN datosAsignacion .)
    SET             reduce using rule 37 (asignacion -> LOCALVAR MINASSIGN datosAsignacion .)
    $end            reduce using rule 37 (asignacion -> LOCALVAR MINASSIGN datosAsignacion .)
    ELSE            reduce using rule 37 (asignacion -> LOCALVAR MINASSIGN datosAsignacion .)
    END             reduce using rule 37 (asignacion -> LOCALVAR MINASSIGN datosAsignacion .)
    RETURN          reduce using rule 37 (asignacion -> LOCALVAR MINASSIGN datosAsignacion .)


state 104

    (38) asignacion -> LOCALVAR DIVASSIGN datosAsignacion .

    LOCALVAR        reduce using rule 38 (asignacion -> LOCALVAR DIVASSIGN datosAsignacion .)
    FOR             reduce using rule 38 (asignacion -> LOCALVAR DIVASSIGN datosAsignacion .)
    IF              reduce using rule 38 (asignacion -> LOCALVAR DIVASSIGN datosAsignacion .)
    UNLESS          reduce using rule 38 (asignacion -> LOCALVAR DIVASSIGN datosAsignacion .)
    PUTS            reduce using rule 38 (asignacion -> LOCALVAR DIVASSIGN datosAsignacion .)
    PRINT           reduce using rule 38 (asignacion -> LOCALVAR DIVASSIGN datosAsignacion .)
    STRING          reduce using rule 38 (asignacion -> LOCALVAR DIVASSIGN datosAsignacion .)
    INTEGERW        reduce using rule 38 (asignacion -> LOCALVAR DIVASSIGN datosAsignacion .)
    INTEGER         reduce using rule 38 (asignacion -> LOCALVAR DIVASSIGN datosAsignacion .)
    VAR             reduce using rule 38 (asignacion -> LOCALVAR DIVASSIGN datosAsignacion .)
    CONSTANT        reduce using rule 38 (asignacion -> LOCALVAR DIVASSIGN datosAsignacion .)
    LCURLYBRACKET   reduce using rule 38 (asignacion -> LOCALVAR DIVASSIGN datosAsignacion .)
    LBRACKET        reduce using rule 38 (asignacion -> LOCALVAR DIVASSIGN datosAsignacion .)
    SET             reduce using rule 38 (asignacion -> LOCALVAR DIVASSIGN datosAsignacion .)
    $end            reduce using rule 38 (asignacion -> LOCALVAR DIVASSIGN datosAsignacion .)
    ELSE            reduce using rule 38 (asignacion -> LOCALVAR DIVASSIGN datosAsignacion .)
    END             reduce using rule 38 (asignacion -> LOCALVAR DIVASSIGN datosAsignacion .)
    RETURN          reduce using rule 38 (asignacion -> LOCALVAR DIVASSIGN datosAsignacion .)


state 105

    (39) asignacion -> LOCALVAR TIMESASSIGN datosAsignacion .

    LOCALVAR        reduce using rule 39 (asignacion -> LOCALVAR TIMESASSIGN datosAsignacion .)
    FOR             reduce using rule 39 (asignacion -> LOCALVAR TIMESASSIGN datosAsignacion .)
    IF              reduce using rule 39 (asignacion -> LOCALVAR TIMESASSIGN datosAsignacion .)
    UNLESS          reduce using rule 39 (asignacion -> LOCALVAR TIMESASSIGN datosAsignacion .)
    PUTS            reduce using rule 39 (asignacion -> LOCALVAR TIMESASSIGN datosAsignacion .)
    PRINT           reduce using rule 39 (asignacion -> LOCALVAR TIMESASSIGN datosAsignacion .)
    STRING          reduce using rule 39 (asignacion -> LOCALVAR TIMESASSIGN datosAsignacion .)
    INTEGERW        reduce using rule 39 (asignacion -> LOCALVAR TIMESASSIGN datosAsignacion .)
    INTEGER         reduce using rule 39 (asignacion -> LOCALVAR TIMESASSIGN datosAsignacion .)
    VAR             reduce using rule 39 (asignacion -> LOCALVAR TIMESASSIGN datosAsignacion .)
    CONSTANT        reduce using rule 39 (asignacion -> LOCALVAR TIMESASSIGN datosAsignacion .)
    LCURLYBRACKET   reduce using rule 39 (asignacion -> LOCALVAR TIMESASSIGN datosAsignacion .)
    LBRACKET        reduce using rule 39 (asignacion -> LOCALVAR TIMESASSIGN datosAsignacion .)
    SET             reduce using rule 39 (asignacion -> LOCALVAR TIMESASSIGN datosAsignacion .)
    $end            reduce using rule 39 (asignacion -> LOCALVAR TIMESASSIGN datosAsignacion .)
    ELSE            reduce using rule 39 (asignacion -> LOCALVAR TIMESASSIGN datosAsignacion .)
    END             reduce using rule 39 (asignacion -> LOCALVAR TIMESASSIGN datosAsignacion .)
    RETURN          reduce using rule 39 (asignacion -> LOCALVAR TIMESASSIGN datosAsignacion .)


state 106

    (40) asignacion -> LOCALVAR MODASSIGN datosAsignacion .

    LOCALVAR        reduce using rule 40 (asignacion -> LOCALVAR MODASSIGN datosAsignacion .)
    FOR             reduce using rule 40 (asignacion -> LOCALVAR MODASSIGN datosAsignacion .)
    IF              reduce using rule 40 (asignacion -> LOCALVAR MODASSIGN datosAsignacion .)
    UNLESS          reduce using rule 40 (asignacion -> LOCALVAR MODASSIGN datosAsignacion .)
    PUTS            reduce using rule 40 (asignacion -> LOCALVAR MODASSIGN datosAsignacion .)
    PRINT           reduce using rule 40 (asignacion -> LOCALVAR MODASSIGN datosAsignacion .)
    STRING          reduce using rule 40 (asignacion -> LOCALVAR MODASSIGN datosAsignacion .)
    INTEGERW        reduce using rule 40 (asignacion -> LOCALVAR MODASSIGN datosAsignacion .)
    INTEGER         reduce using rule 40 (asignacion -> LOCALVAR MODASSIGN datosAsignacion .)
    VAR             reduce using rule 40 (asignacion -> LOCALVAR MODASSIGN datosAsignacion .)
    CONSTANT        reduce using rule 40 (asignacion -> LOCALVAR MODASSIGN datosAsignacion .)
    LCURLYBRACKET   reduce using rule 40 (asignacion -> LOCALVAR MODASSIGN datosAsignacion .)
    LBRACKET        reduce using rule 40 (asignacion -> LOCALVAR MODASSIGN datosAsignacion .)
    SET             reduce using rule 40 (asignacion -> LOCALVAR MODASSIGN datosAsignacion .)
    $end            reduce using rule 40 (asignacion -> LOCALVAR MODASSIGN datosAsignacion .)
    ELSE            reduce using rule 40 (asignacion -> LOCALVAR MODASSIGN datosAsignacion .)
    END             reduce using rule 40 (asignacion -> LOCALVAR MODASSIGN datosAsignacion .)
    RETURN          reduce using rule 40 (asignacion -> LOCALVAR MODASSIGN datosAsignacion .)


state 107

    (41) asignacion -> LOCALVAR EXPASSIGN datosAsignacion .

    LOCALVAR        reduce using rule 41 (asignacion -> LOCALVAR EXPASSIGN datosAsignacion .)
    FOR             reduce using rule 41 (asignacion -> LOCALVAR EXPASSIGN datosAsignacion .)
    IF              reduce using rule 41 (asignacion -> LOCALVAR EXPASSIGN datosAsignacion .)
    UNLESS          reduce using rule 41 (asignacion -> LOCALVAR EXPASSIGN datosAsignacion .)
    PUTS            reduce using rule 41 (asignacion -> LOCALVAR EXPASSIGN datosAsignacion .)
    PRINT           reduce using rule 41 (asignacion -> LOCALVAR EXPASSIGN datosAsignacion .)
    STRING          reduce using rule 41 (asignacion -> LOCALVAR EXPASSIGN datosAsignacion .)
    INTEGERW        reduce using rule 41 (asignacion -> LOCALVAR EXPASSIGN datosAsignacion .)
    INTEGER         reduce using rule 41 (asignacion -> LOCALVAR EXPASSIGN datosAsignacion .)
    VAR             reduce using rule 41 (asignacion -> LOCALVAR EXPASSIGN datosAsignacion .)
    CONSTANT        reduce using rule 41 (asignacion -> LOCALVAR EXPASSIGN datosAsignacion .)
    LCURLYBRACKET   reduce using rule 41 (asignacion -> LOCALVAR EXPASSIGN datosAsignacion .)
    LBRACKET        reduce using rule 41 (asignacion -> LOCALVAR EXPASSIGN datosAsignacion .)
    SET             reduce using rule 41 (asignacion -> LOCALVAR EXPASSIGN datosAsignacion .)
    $end            reduce using rule 41 (asignacion -> LOCALVAR EXPASSIGN datosAsignacion .)
    ELSE            reduce using rule 41 (asignacion -> LOCALVAR EXPASSIGN datosAsignacion .)
    END             reduce using rule 41 (asignacion -> LOCALVAR EXPASSIGN datosAsignacion .)
    RETURN          reduce using rule 41 (asignacion -> LOCALVAR EXPASSIGN datosAsignacion .)


state 108

    (31) declaracion -> tiposvariables EQUAL datos .

    LOCALVAR        reduce using rule 31 (declaracion -> tiposvariables EQUAL datos .)
    FOR             reduce using rule 31 (declaracion -> tiposvariables EQUAL datos .)
    IF              reduce using rule 31 (declaracion -> tiposvariables EQUAL datos .)
    UNLESS          reduce using rule 31 (declaracion -> tiposvariables EQUAL datos .)
    PUTS            reduce using rule 31 (declaracion -> tiposvariables EQUAL datos .)
    PRINT           reduce using rule 31 (declaracion -> tiposvariables EQUAL datos .)
    STRING          reduce using rule 31 (declaracion -> tiposvariables EQUAL datos .)
    INTEGERW        reduce using rule 31 (declaracion -> tiposvariables EQUAL datos .)
    INTEGER         reduce using rule 31 (declaracion -> tiposvariables EQUAL datos .)
    VAR             reduce using rule 31 (declaracion -> tiposvariables EQUAL datos .)
    CONSTANT        reduce using rule 31 (declaracion -> tiposvariables EQUAL datos .)
    LCURLYBRACKET   reduce using rule 31 (declaracion -> tiposvariables EQUAL datos .)
    LBRACKET        reduce using rule 31 (declaracion -> tiposvariables EQUAL datos .)
    SET             reduce using rule 31 (declaracion -> tiposvariables EQUAL datos .)
    $end            reduce using rule 31 (declaracion -> tiposvariables EQUAL datos .)
    ELSE            reduce using rule 31 (declaracion -> tiposvariables EQUAL datos .)
    END             reduce using rule 31 (declaracion -> tiposvariables EQUAL datos .)
    RETURN          reduce using rule 31 (declaracion -> tiposvariables EQUAL datos .)


state 109

    (32) declaracion -> tiposvariables EQUAL estructurasDatos .

    LOCALVAR        reduce using rule 32 (declaracion -> tiposvariables EQUAL estructurasDatos .)
    FOR             reduce using rule 32 (declaracion -> tiposvariables EQUAL estructurasDatos .)
    IF              reduce using rule 32 (declaracion -> tiposvariables EQUAL estructurasDatos .)
    UNLESS          reduce using rule 32 (declaracion -> tiposvariables EQUAL estructurasDatos .)
    PUTS            reduce using rule 32 (declaracion -> tiposvariables EQUAL estructurasDatos .)
    PRINT           reduce using rule 32 (declaracion -> tiposvariables EQUAL estructurasDatos .)
    STRING          reduce using rule 32 (declaracion -> tiposvariables EQUAL estructurasDatos .)
    INTEGERW        reduce using rule 32 (declaracion -> tiposvariables EQUAL estructurasDatos .)
    INTEGER         reduce using rule 32 (declaracion -> tiposvariables EQUAL estructurasDatos .)
    VAR             reduce using rule 32 (declaracion -> tiposvariables EQUAL estructurasDatos .)
    CONSTANT        reduce using rule 32 (declaracion -> tiposvariables EQUAL estructurasDatos .)
    LCURLYBRACKET   reduce using rule 32 (declaracion -> tiposvariables EQUAL estructurasDatos .)
    LBRACKET        reduce using rule 32 (declaracion -> tiposvariables EQUAL estructurasDatos .)
    SET             reduce using rule 32 (declaracion -> tiposvariables EQUAL estructurasDatos .)
    $end            reduce using rule 32 (declaracion -> tiposvariables EQUAL estructurasDatos .)
    ELSE            reduce using rule 32 (declaracion -> tiposvariables EQUAL estructurasDatos .)
    END             reduce using rule 32 (declaracion -> tiposvariables EQUAL estructurasDatos .)
    RETURN          reduce using rule 32 (declaracion -> tiposvariables EQUAL estructurasDatos .)


state 110

    (33) declaracion -> tiposvariables EQUAL expresion .

    LOCALVAR        reduce using rule 33 (declaracion -> tiposvariables EQUAL expresion .)
    FOR             reduce using rule 33 (declaracion -> tiposvariables EQUAL expresion .)
    IF              reduce using rule 33 (declaracion -> tiposvariables EQUAL expresion .)
    UNLESS          reduce using rule 33 (declaracion -> tiposvariables EQUAL expresion .)
    PUTS            reduce using rule 33 (declaracion -> tiposvariables EQUAL expresion .)
    PRINT           reduce using rule 33 (declaracion -> tiposvariables EQUAL expresion .)
    STRING          reduce using rule 33 (declaracion -> tiposvariables EQUAL expresion .)
    INTEGERW        reduce using rule 33 (declaracion -> tiposvariables EQUAL expresion .)
    INTEGER         reduce using rule 33 (declaracion -> tiposvariables EQUAL expresion .)
    VAR             reduce using rule 33 (declaracion -> tiposvariables EQUAL expresion .)
    CONSTANT        reduce using rule 33 (declaracion -> tiposvariables EQUAL expresion .)
    LCURLYBRACKET   reduce using rule 33 (declaracion -> tiposvariables EQUAL expresion .)
    LBRACKET        reduce using rule 33 (declaracion -> tiposvariables EQUAL expresion .)
    SET             reduce using rule 33 (declaracion -> tiposvariables EQUAL expresion .)
    $end            reduce using rule 33 (declaracion -> tiposvariables EQUAL expresion .)
    ELSE            reduce using rule 33 (declaracion -> tiposvariables EQUAL expresion .)
    END             reduce using rule 33 (declaracion -> tiposvariables EQUAL expresion .)
    RETURN          reduce using rule 33 (declaracion -> tiposvariables EQUAL expresion .)


state 111

    (34) declaracion -> tiposvariables EQUAL declaracion .

    LOCALVAR        reduce using rule 34 (declaracion -> tiposvariables EQUAL declaracion .)
    FOR             reduce using rule 34 (declaracion -> tiposvariables EQUAL declaracion .)
    IF              reduce using rule 34 (declaracion -> tiposvariables EQUAL declaracion .)
    UNLESS          reduce using rule 34 (declaracion -> tiposvariables EQUAL declaracion .)
    PUTS            reduce using rule 34 (declaracion -> tiposvariables EQUAL declaracion .)
    PRINT           reduce using rule 34 (declaracion -> tiposvariables EQUAL declaracion .)
    STRING          reduce using rule 34 (declaracion -> tiposvariables EQUAL declaracion .)
    INTEGERW        reduce using rule 34 (declaracion -> tiposvariables EQUAL declaracion .)
    INTEGER         reduce using rule 34 (declaracion -> tiposvariables EQUAL declaracion .)
    VAR             reduce using rule 34 (declaracion -> tiposvariables EQUAL declaracion .)
    CONSTANT        reduce using rule 34 (declaracion -> tiposvariables EQUAL declaracion .)
    LCURLYBRACKET   reduce using rule 34 (declaracion -> tiposvariables EQUAL declaracion .)
    LBRACKET        reduce using rule 34 (declaracion -> tiposvariables EQUAL declaracion .)
    SET             reduce using rule 34 (declaracion -> tiposvariables EQUAL declaracion .)
    $end            reduce using rule 34 (declaracion -> tiposvariables EQUAL declaracion .)
    ELSE            reduce using rule 34 (declaracion -> tiposvariables EQUAL declaracion .)
    END             reduce using rule 34 (declaracion -> tiposvariables EQUAL declaracion .)
    RETURN          reduce using rule 34 (declaracion -> tiposvariables EQUAL declaracion .)


state 112

    (35) declaracion -> tiposvariables EQUAL casting .

    LOCALVAR        reduce using rule 35 (declaracion -> tiposvariables EQUAL casting .)
    FOR             reduce using rule 35 (declaracion -> tiposvariables EQUAL casting .)
    IF              reduce using rule 35 (declaracion -> tiposvariables EQUAL casting .)
    UNLESS          reduce using rule 35 (declaracion -> tiposvariables EQUAL casting .)
    PUTS            reduce using rule 35 (declaracion -> tiposvariables EQUAL casting .)
    PRINT           reduce using rule 35 (declaracion -> tiposvariables EQUAL casting .)
    STRING          reduce using rule 35 (declaracion -> tiposvariables EQUAL casting .)
    INTEGERW        reduce using rule 35 (declaracion -> tiposvariables EQUAL casting .)
    INTEGER         reduce using rule 35 (declaracion -> tiposvariables EQUAL casting .)
    VAR             reduce using rule 35 (declaracion -> tiposvariables EQUAL casting .)
    CONSTANT        reduce using rule 35 (declaracion -> tiposvariables EQUAL casting .)
    LCURLYBRACKET   reduce using rule 35 (declaracion -> tiposvariables EQUAL casting .)
    LBRACKET        reduce using rule 35 (declaracion -> tiposvariables EQUAL casting .)
    SET             reduce using rule 35 (declaracion -> tiposvariables EQUAL casting .)
    $end            reduce using rule 35 (declaracion -> tiposvariables EQUAL casting .)
    ELSE            reduce using rule 35 (declaracion -> tiposvariables EQUAL casting .)
    END             reduce using rule 35 (declaracion -> tiposvariables EQUAL casting .)
    RETURN          reduce using rule 35 (declaracion -> tiposvariables EQUAL casting .)


state 113

    (49) datos -> STRING .
    (159) casting -> STRING . DOT TO_I
    (160) casting -> STRING . DOT TO_F

    LOCALVAR        reduce using rule 49 (datos -> STRING .)
    FOR             reduce using rule 49 (datos -> STRING .)
    IF              reduce using rule 49 (datos -> STRING .)
    UNLESS          reduce using rule 49 (datos -> STRING .)
    PUTS            reduce using rule 49 (datos -> STRING .)
    PRINT           reduce using rule 49 (datos -> STRING .)
    STRING          reduce using rule 49 (datos -> STRING .)
    INTEGERW        reduce using rule 49 (datos -> STRING .)
    INTEGER         reduce using rule 49 (datos -> STRING .)
    VAR             reduce using rule 49 (datos -> STRING .)
    CONSTANT        reduce using rule 49 (datos -> STRING .)
    LCURLYBRACKET   reduce using rule 49 (datos -> STRING .)
    LBRACKET        reduce using rule 49 (datos -> STRING .)
    SET             reduce using rule 49 (datos -> STRING .)
    $end            reduce using rule 49 (datos -> STRING .)
    ELSE            reduce using rule 49 (datos -> STRING .)
    END             reduce using rule 49 (datos -> STRING .)
    RETURN          reduce using rule 49 (datos -> STRING .)
    DOT             shift and go to state 175


state 114

    (50) estructurasDatos -> hash .

    LOCALVAR        reduce using rule 50 (estructurasDatos -> hash .)
    FOR             reduce using rule 50 (estructurasDatos -> hash .)
    IF              reduce using rule 50 (estructurasDatos -> hash .)
    UNLESS          reduce using rule 50 (estructurasDatos -> hash .)
    PUTS            reduce using rule 50 (estructurasDatos -> hash .)
    PRINT           reduce using rule 50 (estructurasDatos -> hash .)
    STRING          reduce using rule 50 (estructurasDatos -> hash .)
    INTEGERW        reduce using rule 50 (estructurasDatos -> hash .)
    INTEGER         reduce using rule 50 (estructurasDatos -> hash .)
    VAR             reduce using rule 50 (estructurasDatos -> hash .)
    CONSTANT        reduce using rule 50 (estructurasDatos -> hash .)
    LCURLYBRACKET   reduce using rule 50 (estructurasDatos -> hash .)
    LBRACKET        reduce using rule 50 (estructurasDatos -> hash .)
    SET             reduce using rule 50 (estructurasDatos -> hash .)
    $end            reduce using rule 50 (estructurasDatos -> hash .)
    ELSE            reduce using rule 50 (estructurasDatos -> hash .)
    END             reduce using rule 50 (estructurasDatos -> hash .)
    RETURN          reduce using rule 50 (estructurasDatos -> hash .)


state 115

    (51) estructurasDatos -> array .

    LOCALVAR        reduce using rule 51 (estructurasDatos -> array .)
    FOR             reduce using rule 51 (estructurasDatos -> array .)
    IF              reduce using rule 51 (estructurasDatos -> array .)
    UNLESS          reduce using rule 51 (estructurasDatos -> array .)
    PUTS            reduce using rule 51 (estructurasDatos -> array .)
    PRINT           reduce using rule 51 (estructurasDatos -> array .)
    STRING          reduce using rule 51 (estructurasDatos -> array .)
    INTEGERW        reduce using rule 51 (estructurasDatos -> array .)
    INTEGER         reduce using rule 51 (estructurasDatos -> array .)
    VAR             reduce using rule 51 (estructurasDatos -> array .)
    CONSTANT        reduce using rule 51 (estructurasDatos -> array .)
    LCURLYBRACKET   reduce using rule 51 (estructurasDatos -> array .)
    LBRACKET        reduce using rule 51 (estructurasDatos -> array .)
    SET             reduce using rule 51 (estructurasDatos -> array .)
    $end            reduce using rule 51 (estructurasDatos -> array .)
    ELSE            reduce using rule 51 (estructurasDatos -> array .)
    END             reduce using rule 51 (estructurasDatos -> array .)
    RETURN          reduce using rule 51 (estructurasDatos -> array .)


state 116

    (52) estructurasDatos -> set .

    LOCALVAR        reduce using rule 52 (estructurasDatos -> set .)
    FOR             reduce using rule 52 (estructurasDatos -> set .)
    IF              reduce using rule 52 (estructurasDatos -> set .)
    UNLESS          reduce using rule 52 (estructurasDatos -> set .)
    PUTS            reduce using rule 52 (estructurasDatos -> set .)
    PRINT           reduce using rule 52 (estructurasDatos -> set .)
    STRING          reduce using rule 52 (estructurasDatos -> set .)
    INTEGERW        reduce using rule 52 (estructurasDatos -> set .)
    INTEGER         reduce using rule 52 (estructurasDatos -> set .)
    VAR             reduce using rule 52 (estructurasDatos -> set .)
    CONSTANT        reduce using rule 52 (estructurasDatos -> set .)
    LCURLYBRACKET   reduce using rule 52 (estructurasDatos -> set .)
    LBRACKET        reduce using rule 52 (estructurasDatos -> set .)
    SET             reduce using rule 52 (estructurasDatos -> set .)
    $end            reduce using rule 52 (estructurasDatos -> set .)
    ELSE            reduce using rule 52 (estructurasDatos -> set .)
    END             reduce using rule 52 (estructurasDatos -> set .)
    RETURN          reduce using rule 52 (estructurasDatos -> set .)


state 117

    (71) expresion -> operacion .
    (75) operacion -> operacion . masoperaciones
    (76) masoperaciones -> . operador expresion masoperaciones
    (77) masoperaciones -> . operador number
    (78) masoperaciones -> . operador expresion
    (79) operador -> . PLUS
    (80) operador -> . MINUS
    (81) operador -> . MULTIPLY
    (82) operador -> . DIVIDE
    (83) operador -> . PERCENTAGE

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for PERCENTAGE resolved as shift
    LOCALVAR        reduce using rule 71 (expresion -> operacion .)
    FOR             reduce using rule 71 (expresion -> operacion .)
    IF              reduce using rule 71 (expresion -> operacion .)
    UNLESS          reduce using rule 71 (expresion -> operacion .)
    PUTS            reduce using rule 71 (expresion -> operacion .)
    PRINT           reduce using rule 71 (expresion -> operacion .)
    STRING          reduce using rule 71 (expresion -> operacion .)
    INTEGERW        reduce using rule 71 (expresion -> operacion .)
    INTEGER         reduce using rule 71 (expresion -> operacion .)
    VAR             reduce using rule 71 (expresion -> operacion .)
    CONSTANT        reduce using rule 71 (expresion -> operacion .)
    LCURLYBRACKET   reduce using rule 71 (expresion -> operacion .)
    LBRACKET        reduce using rule 71 (expresion -> operacion .)
    SET             reduce using rule 71 (expresion -> operacion .)
    $end            reduce using rule 71 (expresion -> operacion .)
    ELSE            reduce using rule 71 (expresion -> operacion .)
    END             reduce using rule 71 (expresion -> operacion .)
    RETURN          reduce using rule 71 (expresion -> operacion .)
    RPARENTHESES    reduce using rule 71 (expresion -> operacion .)
    PLUS            shift and go to state 178
    MINUS           shift and go to state 179
    MULTIPLY        shift and go to state 180
    DIVIDE          shift and go to state 181
    PERCENTAGE      shift and go to state 182

  ! PLUS            [ reduce using rule 71 (expresion -> operacion .) ]
  ! MINUS           [ reduce using rule 71 (expresion -> operacion .) ]
  ! MULTIPLY        [ reduce using rule 71 (expresion -> operacion .) ]
  ! DIVIDE          [ reduce using rule 71 (expresion -> operacion .) ]
  ! PERCENTAGE      [ reduce using rule 71 (expresion -> operacion .) ]

    masoperaciones                 shift and go to state 176
    operador                       shift and go to state 177

state 118

    (72) expresion -> LPARENTHESES . operacion RPARENTHESES
    (73) expresion -> LPARENTHESES . operacion RPARENTHESES masoperaciones
    (74) operacion -> . number operador number
    (75) operacion -> . operacion masoperaciones
    (69) number -> . INTEGER
    (70) number -> . FLOAT

    INTEGER         shift and go to state 101
    FLOAT           shift and go to state 102

    operacion                      shift and go to state 183
    number                         shift and go to state 184

state 119

    (161) casting -> number . DOT TO_S
    (74) operacion -> number . operador number
    (79) operador -> . PLUS
    (80) operador -> . MINUS
    (81) operador -> . MULTIPLY
    (82) operador -> . DIVIDE
    (83) operador -> . PERCENTAGE

    DOT             shift and go to state 185
    PLUS            shift and go to state 178
    MINUS           shift and go to state 179
    MULTIPLY        shift and go to state 180
    DIVIDE          shift and go to state 181
    PERCENTAGE      shift and go to state 182

    operador                       shift and go to state 186

state 120

    (30) loop -> FOR LOCALVAR IN . rango cuerpo END
    (63) rango -> . INTEGER RANGEINCLUSIVE INTEGER
    (64) rango -> . INTEGER RANGEXCLUSIVE INTEGER

    INTEGER         shift and go to state 188

    rango                          shift and go to state 187

state 121

    (58) operacionHash -> hash LBRACKET datos . RBRACKET
    (59) operacionHash -> hash LBRACKET datos . RBRACKET EQUAL datos

    RBRACKET        shift and go to state 189


state 122

    (60) operacionHash -> hash DOT INCLUDE . QUESTIONMARK LPARENTHESES datos RPARENTHESES

    QUESTIONMARK    shift and go to state 190


state 123

    (61) operacionHash -> hash DOT DELETE . LPARENTHESES datos RPARENTHESES

    LPARENTHESES    shift and go to state 191


state 124

    (62) operacionHash -> hash DOT KEYS .

    LOCALVAR        reduce using rule 62 (operacionHash -> hash DOT KEYS .)
    FOR             reduce using rule 62 (operacionHash -> hash DOT KEYS .)
    IF              reduce using rule 62 (operacionHash -> hash DOT KEYS .)
    UNLESS          reduce using rule 62 (operacionHash -> hash DOT KEYS .)
    PUTS            reduce using rule 62 (operacionHash -> hash DOT KEYS .)
    PRINT           reduce using rule 62 (operacionHash -> hash DOT KEYS .)
    STRING          reduce using rule 62 (operacionHash -> hash DOT KEYS .)
    INTEGERW        reduce using rule 62 (operacionHash -> hash DOT KEYS .)
    INTEGER         reduce using rule 62 (operacionHash -> hash DOT KEYS .)
    VAR             reduce using rule 62 (operacionHash -> hash DOT KEYS .)
    CONSTANT        reduce using rule 62 (operacionHash -> hash DOT KEYS .)
    LCURLYBRACKET   reduce using rule 62 (operacionHash -> hash DOT KEYS .)
    LBRACKET        reduce using rule 62 (operacionHash -> hash DOT KEYS .)
    SET             reduce using rule 62 (operacionHash -> hash DOT KEYS .)
    $end            reduce using rule 62 (operacionHash -> hash DOT KEYS .)
    ELSE            reduce using rule 62 (operacionHash -> hash DOT KEYS .)
    END             reduce using rule 62 (operacionHash -> hash DOT KEYS .)
    RETURN          reduce using rule 62 (operacionHash -> hash DOT KEYS .)


state 125

    (92) operacionarray -> array LBRACKET INTEGER . RBRACKET

    RBRACKET        shift and go to state 192


state 126

    (93) operacionarray -> array DOT TAKE . LPARENTHESES INTEGER RPARENTHESES

    LPARENTHESES    shift and go to state 193


state 127

    (94) operacionarray -> array DOT DROP . LPARENTHESES INTEGER RPARENTHESES

    LPARENTHESES    shift and go to state 194


state 128

    (95) operacionarray -> array DOT push . maspush
    (98) maspush -> .
    (99) maspush -> . DOT push maspush

    LOCALVAR        reduce using rule 98 (maspush -> .)
    FOR             reduce using rule 98 (maspush -> .)
    IF              reduce using rule 98 (maspush -> .)
    UNLESS          reduce using rule 98 (maspush -> .)
    PUTS            reduce using rule 98 (maspush -> .)
    PRINT           reduce using rule 98 (maspush -> .)
    STRING          reduce using rule 98 (maspush -> .)
    INTEGERW        reduce using rule 98 (maspush -> .)
    INTEGER         reduce using rule 98 (maspush -> .)
    VAR             reduce using rule 98 (maspush -> .)
    CONSTANT        reduce using rule 98 (maspush -> .)
    LCURLYBRACKET   reduce using rule 98 (maspush -> .)
    LBRACKET        reduce using rule 98 (maspush -> .)
    SET             reduce using rule 98 (maspush -> .)
    $end            reduce using rule 98 (maspush -> .)
    ELSE            reduce using rule 98 (maspush -> .)
    END             reduce using rule 98 (maspush -> .)
    RETURN          reduce using rule 98 (maspush -> .)
    DOT             shift and go to state 195

    maspush                        shift and go to state 196

state 129

    (100) operacionarray -> array DOT POP .
    (101) operacionarray -> array DOT POP . LPARENTHESES INTEGER RPARENTHESES

    LOCALVAR        reduce using rule 100 (operacionarray -> array DOT POP .)
    FOR             reduce using rule 100 (operacionarray -> array DOT POP .)
    IF              reduce using rule 100 (operacionarray -> array DOT POP .)
    UNLESS          reduce using rule 100 (operacionarray -> array DOT POP .)
    PUTS            reduce using rule 100 (operacionarray -> array DOT POP .)
    PRINT           reduce using rule 100 (operacionarray -> array DOT POP .)
    STRING          reduce using rule 100 (operacionarray -> array DOT POP .)
    INTEGERW        reduce using rule 100 (operacionarray -> array DOT POP .)
    INTEGER         reduce using rule 100 (operacionarray -> array DOT POP .)
    VAR             reduce using rule 100 (operacionarray -> array DOT POP .)
    CONSTANT        reduce using rule 100 (operacionarray -> array DOT POP .)
    LCURLYBRACKET   reduce using rule 100 (operacionarray -> array DOT POP .)
    LBRACKET        reduce using rule 100 (operacionarray -> array DOT POP .)
    SET             reduce using rule 100 (operacionarray -> array DOT POP .)
    $end            reduce using rule 100 (operacionarray -> array DOT POP .)
    ELSE            reduce using rule 100 (operacionarray -> array DOT POP .)
    END             reduce using rule 100 (operacionarray -> array DOT POP .)
    RETURN          reduce using rule 100 (operacionarray -> array DOT POP .)
    LPARENTHESES    shift and go to state 197


state 130

    (102) operacionarray -> array DOT DELETE . LPARENTHESES INTEGER RPARENTHESES

    LPARENTHESES    shift and go to state 198


state 131

    (103) operacionarray -> array DOT LENGTH . LPARENTHESES RPARENTHESES

    LPARENTHESES    shift and go to state 199


state 132

    (104) operacionarray -> array DOT EMPTY . QUESTIONMARK

    QUESTIONMARK    shift and go to state 200


state 133

    (96) push -> PUSH . LPARENTHESES datosvarios RPARENTHESES

    LPARENTHESES    shift and go to state 201


state 134

    (146) operacionSet -> set DOT ADD . LPARENTHESES datos RPARENTHESES
    (147) operacionSet -> set DOT ADD . LPARENTHESES tiposvariables RPARENTHESES

    LPARENTHESES    shift and go to state 202


state 135

    (148) operacionSet -> set DOT CLEAR .

    LOCALVAR        reduce using rule 148 (operacionSet -> set DOT CLEAR .)
    FOR             reduce using rule 148 (operacionSet -> set DOT CLEAR .)
    IF              reduce using rule 148 (operacionSet -> set DOT CLEAR .)
    UNLESS          reduce using rule 148 (operacionSet -> set DOT CLEAR .)
    PUTS            reduce using rule 148 (operacionSet -> set DOT CLEAR .)
    PRINT           reduce using rule 148 (operacionSet -> set DOT CLEAR .)
    STRING          reduce using rule 148 (operacionSet -> set DOT CLEAR .)
    INTEGERW        reduce using rule 148 (operacionSet -> set DOT CLEAR .)
    INTEGER         reduce using rule 148 (operacionSet -> set DOT CLEAR .)
    VAR             reduce using rule 148 (operacionSet -> set DOT CLEAR .)
    CONSTANT        reduce using rule 148 (operacionSet -> set DOT CLEAR .)
    LCURLYBRACKET   reduce using rule 148 (operacionSet -> set DOT CLEAR .)
    LBRACKET        reduce using rule 148 (operacionSet -> set DOT CLEAR .)
    SET             reduce using rule 148 (operacionSet -> set DOT CLEAR .)
    $end            reduce using rule 148 (operacionSet -> set DOT CLEAR .)
    ELSE            reduce using rule 148 (operacionSet -> set DOT CLEAR .)
    END             reduce using rule 148 (operacionSet -> set DOT CLEAR .)
    RETURN          reduce using rule 148 (operacionSet -> set DOT CLEAR .)


state 136

    (149) operacionSet -> set DOT DELETE . LPARENTHESES datos RPARENTHESES
    (150) operacionSet -> set DOT DELETE . LPARENTHESES tiposvariables RPARENTHESES

    LPARENTHESES    shift and go to state 203


state 137

    (107) if -> IF datoscompletos operadores . datoscompletos cuerpo END
    (108) if -> IF datoscompletos operadores . datoscompletos cuerpo else
    (105) datoscompletos -> . datosvarios
    (106) datoscompletos -> . tiposvariables
    (86) datosvarios -> . datos
    (87) datosvarios -> . number
    (88) datosvarios -> . VAR
    (89) datosvarios -> . LOCALVAR
    (44) tiposvariables -> . VAR
    (45) tiposvariables -> . LOCALVAR
    (46) tiposvariables -> . CONSTANT
    (47) datos -> . INTEGER
    (48) datos -> . FLOAT
    (49) datos -> . STRING
    (69) number -> . INTEGER
    (70) number -> . FLOAT

    VAR             shift and go to state 66
    LOCALVAR        shift and go to state 67
    CONSTANT        shift and go to state 32
    INTEGER         shift and go to state 68
    FLOAT           shift and go to state 69
    STRING          shift and go to state 70

    datoscompletos                 shift and go to state 204
    datosvarios                    shift and go to state 62
    tiposvariables                 shift and go to state 63
    datos                          shift and go to state 64
    number                         shift and go to state 65

state 138

    (110) operadores -> DOUBLEEQUAL .

    VAR             reduce using rule 110 (operadores -> DOUBLEEQUAL .)
    LOCALVAR        reduce using rule 110 (operadores -> DOUBLEEQUAL .)
    CONSTANT        reduce using rule 110 (operadores -> DOUBLEEQUAL .)
    INTEGER         reduce using rule 110 (operadores -> DOUBLEEQUAL .)
    FLOAT           reduce using rule 110 (operadores -> DOUBLEEQUAL .)
    STRING          reduce using rule 110 (operadores -> DOUBLEEQUAL .)


state 139

    (111) operadores -> TRIPLEEQUAL .

    VAR             reduce using rule 111 (operadores -> TRIPLEEQUAL .)
    LOCALVAR        reduce using rule 111 (operadores -> TRIPLEEQUAL .)
    CONSTANT        reduce using rule 111 (operadores -> TRIPLEEQUAL .)
    INTEGER         reduce using rule 111 (operadores -> TRIPLEEQUAL .)
    FLOAT           reduce using rule 111 (operadores -> TRIPLEEQUAL .)
    STRING          reduce using rule 111 (operadores -> TRIPLEEQUAL .)


state 140

    (112) operadores -> GREATERTHAN .

    VAR             reduce using rule 112 (operadores -> GREATERTHAN .)
    LOCALVAR        reduce using rule 112 (operadores -> GREATERTHAN .)
    CONSTANT        reduce using rule 112 (operadores -> GREATERTHAN .)
    INTEGER         reduce using rule 112 (operadores -> GREATERTHAN .)
    FLOAT           reduce using rule 112 (operadores -> GREATERTHAN .)
    STRING          reduce using rule 112 (operadores -> GREATERTHAN .)


state 141

    (113) operadores -> NOTEQUAL .

    VAR             reduce using rule 113 (operadores -> NOTEQUAL .)
    LOCALVAR        reduce using rule 113 (operadores -> NOTEQUAL .)
    CONSTANT        reduce using rule 113 (operadores -> NOTEQUAL .)
    INTEGER         reduce using rule 113 (operadores -> NOTEQUAL .)
    FLOAT           reduce using rule 113 (operadores -> NOTEQUAL .)
    STRING          reduce using rule 113 (operadores -> NOTEQUAL .)


state 142

    (114) operadores -> LESSTHAN .

    VAR             reduce using rule 114 (operadores -> LESSTHAN .)
    LOCALVAR        reduce using rule 114 (operadores -> LESSTHAN .)
    CONSTANT        reduce using rule 114 (operadores -> LESSTHAN .)
    INTEGER         reduce using rule 114 (operadores -> LESSTHAN .)
    FLOAT           reduce using rule 114 (operadores -> LESSTHAN .)
    STRING          reduce using rule 114 (operadores -> LESSTHAN .)


state 143

    (115) operadores -> GREQUAL .

    VAR             reduce using rule 115 (operadores -> GREQUAL .)
    LOCALVAR        reduce using rule 115 (operadores -> GREQUAL .)
    CONSTANT        reduce using rule 115 (operadores -> GREQUAL .)
    INTEGER         reduce using rule 115 (operadores -> GREQUAL .)
    FLOAT           reduce using rule 115 (operadores -> GREQUAL .)
    STRING          reduce using rule 115 (operadores -> GREQUAL .)


state 144

    (116) operadores -> LEQUAL .

    VAR             reduce using rule 116 (operadores -> LEQUAL .)
    LOCALVAR        reduce using rule 116 (operadores -> LEQUAL .)
    CONSTANT        reduce using rule 116 (operadores -> LEQUAL .)
    INTEGER         reduce using rule 116 (operadores -> LEQUAL .)
    FLOAT           reduce using rule 116 (operadores -> LEQUAL .)
    STRING          reduce using rule 116 (operadores -> LEQUAL .)


state 145

    (128) unless -> UNLESS expresionCondicional cuerpo . ELSE cuerpo END

    ELSE            shift and go to state 205


state 146

    (135) boolean -> boolean operadorBinario . boolean
    (133) boolean -> . condiciones
    (134) boolean -> . EXCLAMATION LPARENTHESES condiciones RPARENTHESES
    (135) boolean -> . boolean operadorBinario boolean
    (136) condiciones -> . tiposvariables operadores tiposvariables
    (137) condiciones -> . datos operadores datos
    (138) condiciones -> . tiposvariables operadores datos
    (139) condiciones -> . datos operadores tiposvariables
    (44) tiposvariables -> . VAR
    (45) tiposvariables -> . LOCALVAR
    (46) tiposvariables -> . CONSTANT
    (47) datos -> . INTEGER
    (48) datos -> . FLOAT
    (49) datos -> . STRING

    EXCLAMATION     shift and go to state 207
    VAR             shift and go to state 31
    LOCALVAR        shift and go to state 77
    CONSTANT        shift and go to state 32
    INTEGER         shift and go to state 78
    FLOAT           shift and go to state 79
    STRING          shift and go to state 70

    boolean                        shift and go to state 206
    condiciones                    shift and go to state 74
    tiposvariables                 shift and go to state 75
    datos                          shift and go to state 76

state 147

    (131) operadorBinario -> DOUBLEAMPERSAND .

    EXCLAMATION     reduce using rule 131 (operadorBinario -> DOUBLEAMPERSAND .)
    VAR             reduce using rule 131 (operadorBinario -> DOUBLEAMPERSAND .)
    LOCALVAR        reduce using rule 131 (operadorBinario -> DOUBLEAMPERSAND .)
    CONSTANT        reduce using rule 131 (operadorBinario -> DOUBLEAMPERSAND .)
    INTEGER         reduce using rule 131 (operadorBinario -> DOUBLEAMPERSAND .)
    FLOAT           reduce using rule 131 (operadorBinario -> DOUBLEAMPERSAND .)
    STRING          reduce using rule 131 (operadorBinario -> DOUBLEAMPERSAND .)


state 148

    (132) operadorBinario -> DOUBLEPIPE .

    EXCLAMATION     reduce using rule 132 (operadorBinario -> DOUBLEPIPE .)
    VAR             reduce using rule 132 (operadorBinario -> DOUBLEPIPE .)
    LOCALVAR        reduce using rule 132 (operadorBinario -> DOUBLEPIPE .)
    CONSTANT        reduce using rule 132 (operadorBinario -> DOUBLEPIPE .)
    INTEGER         reduce using rule 132 (operadorBinario -> DOUBLEPIPE .)
    FLOAT           reduce using rule 132 (operadorBinario -> DOUBLEPIPE .)
    STRING          reduce using rule 132 (operadorBinario -> DOUBLEPIPE .)


state 149

    (130) expresionCondicional -> EXCLAMATION LPARENTHESES . boolean RPARENTHESES
    (134) boolean -> EXCLAMATION LPARENTHESES . condiciones RPARENTHESES
    (133) boolean -> . condiciones
    (134) boolean -> . EXCLAMATION LPARENTHESES condiciones RPARENTHESES
    (135) boolean -> . boolean operadorBinario boolean
    (136) condiciones -> . tiposvariables operadores tiposvariables
    (137) condiciones -> . datos operadores datos
    (138) condiciones -> . tiposvariables operadores datos
    (139) condiciones -> . datos operadores tiposvariables
    (44) tiposvariables -> . VAR
    (45) tiposvariables -> . LOCALVAR
    (46) tiposvariables -> . CONSTANT
    (47) datos -> . INTEGER
    (48) datos -> . FLOAT
    (49) datos -> . STRING

    EXCLAMATION     shift and go to state 207
    VAR             shift and go to state 31
    LOCALVAR        shift and go to state 77
    CONSTANT        shift and go to state 32
    INTEGER         shift and go to state 78
    FLOAT           shift and go to state 79
    STRING          shift and go to state 70

    boolean                        shift and go to state 208
    condiciones                    shift and go to state 209
    tiposvariables                 shift and go to state 75
    datos                          shift and go to state 76

state 150

    (136) condiciones -> tiposvariables operadores . tiposvariables
    (138) condiciones -> tiposvariables operadores . datos
    (44) tiposvariables -> . VAR
    (45) tiposvariables -> . LOCALVAR
    (46) tiposvariables -> . CONSTANT
    (47) datos -> . INTEGER
    (48) datos -> . FLOAT
    (49) datos -> . STRING

    VAR             shift and go to state 31
    LOCALVAR        shift and go to state 77
    CONSTANT        shift and go to state 32
    INTEGER         shift and go to state 78
    FLOAT           shift and go to state 79
    STRING          shift and go to state 70

    tiposvariables                 shift and go to state 210
    datos                          shift and go to state 211

state 151

    (137) condiciones -> datos operadores . datos
    (139) condiciones -> datos operadores . tiposvariables
    (47) datos -> . INTEGER
    (48) datos -> . FLOAT
    (49) datos -> . STRING
    (44) tiposvariables -> . VAR
    (45) tiposvariables -> . LOCALVAR
    (46) tiposvariables -> . CONSTANT

    INTEGER         shift and go to state 78
    FLOAT           shift and go to state 79
    STRING          shift and go to state 70
    VAR             shift and go to state 31
    LOCALVAR        shift and go to state 77
    CONSTANT        shift and go to state 32

    datos                          shift and go to state 212
    tiposvariables                 shift and go to state 213

state 152

    (85) array -> LBRACKET datosarray RBRACKET .

    LBRACKET        reduce using rule 85 (array -> LBRACKET datosarray RBRACKET .)
    DOT             reduce using rule 85 (array -> LBRACKET datosarray RBRACKET .)
    LOCALVAR        reduce using rule 85 (array -> LBRACKET datosarray RBRACKET .)
    FOR             reduce using rule 85 (array -> LBRACKET datosarray RBRACKET .)
    IF              reduce using rule 85 (array -> LBRACKET datosarray RBRACKET .)
    UNLESS          reduce using rule 85 (array -> LBRACKET datosarray RBRACKET .)
    PUTS            reduce using rule 85 (array -> LBRACKET datosarray RBRACKET .)
    PRINT           reduce using rule 85 (array -> LBRACKET datosarray RBRACKET .)
    STRING          reduce using rule 85 (array -> LBRACKET datosarray RBRACKET .)
    INTEGERW        reduce using rule 85 (array -> LBRACKET datosarray RBRACKET .)
    INTEGER         reduce using rule 85 (array -> LBRACKET datosarray RBRACKET .)
    VAR             reduce using rule 85 (array -> LBRACKET datosarray RBRACKET .)
    CONSTANT        reduce using rule 85 (array -> LBRACKET datosarray RBRACKET .)
    LCURLYBRACKET   reduce using rule 85 (array -> LBRACKET datosarray RBRACKET .)
    SET             reduce using rule 85 (array -> LBRACKET datosarray RBRACKET .)
    $end            reduce using rule 85 (array -> LBRACKET datosarray RBRACKET .)
    ELSE            reduce using rule 85 (array -> LBRACKET datosarray RBRACKET .)
    END             reduce using rule 85 (array -> LBRACKET datosarray RBRACKET .)
    RETURN          reduce using rule 85 (array -> LBRACKET datosarray RBRACKET .)


state 153

    (91) datosarray -> datosarray COMMA . datosvarios
    (86) datosvarios -> . datos
    (87) datosvarios -> . number
    (88) datosvarios -> . VAR
    (89) datosvarios -> . LOCALVAR
    (47) datos -> . INTEGER
    (48) datos -> . FLOAT
    (49) datos -> . STRING
    (69) number -> . INTEGER
    (70) number -> . FLOAT

    VAR             shift and go to state 87
    LOCALVAR        shift and go to state 88
    INTEGER         shift and go to state 68
    FLOAT           shift and go to state 69
    STRING          shift and go to state 70

    datosvarios                    shift and go to state 214
    datos                          shift and go to state 64
    number                         shift and go to state 65

state 154

    (118) integer -> INTEGER DOT CEIL . LPARENTHESES RPARENTHESES
    (119) integer -> INTEGER DOT CEIL . LPARENTHESES INTEGER RPARENTHESES

    LPARENTHESES    shift and go to state 215


state 155

    (120) integer -> INTEGER DOT FLOOR . LPARENTHESES RPARENTHESES
    (121) integer -> INTEGER DOT FLOOR . LPARENTHESES INTEGER RPARENTHESES

    LPARENTHESES    shift and go to state 216


state 156

    (122) integer -> INTEGER DOT ABS .

    LOCALVAR        reduce using rule 122 (integer -> INTEGER DOT ABS .)
    FOR             reduce using rule 122 (integer -> INTEGER DOT ABS .)
    IF              reduce using rule 122 (integer -> INTEGER DOT ABS .)
    UNLESS          reduce using rule 122 (integer -> INTEGER DOT ABS .)
    PUTS            reduce using rule 122 (integer -> INTEGER DOT ABS .)
    PRINT           reduce using rule 122 (integer -> INTEGER DOT ABS .)
    STRING          reduce using rule 122 (integer -> INTEGER DOT ABS .)
    INTEGERW        reduce using rule 122 (integer -> INTEGER DOT ABS .)
    INTEGER         reduce using rule 122 (integer -> INTEGER DOT ABS .)
    VAR             reduce using rule 122 (integer -> INTEGER DOT ABS .)
    CONSTANT        reduce using rule 122 (integer -> INTEGER DOT ABS .)
    LCURLYBRACKET   reduce using rule 122 (integer -> INTEGER DOT ABS .)
    LBRACKET        reduce using rule 122 (integer -> INTEGER DOT ABS .)
    SET             reduce using rule 122 (integer -> INTEGER DOT ABS .)
    $end            reduce using rule 122 (integer -> INTEGER DOT ABS .)
    ELSE            reduce using rule 122 (integer -> INTEGER DOT ABS .)
    END             reduce using rule 122 (integer -> INTEGER DOT ABS .)
    RETURN          reduce using rule 122 (integer -> INTEGER DOT ABS .)


state 157

    (151) string -> STRING PLUS STRING .

    LOCALVAR        reduce using rule 151 (string -> STRING PLUS STRING .)
    FOR             reduce using rule 151 (string -> STRING PLUS STRING .)
    IF              reduce using rule 151 (string -> STRING PLUS STRING .)
    UNLESS          reduce using rule 151 (string -> STRING PLUS STRING .)
    PUTS            reduce using rule 151 (string -> STRING PLUS STRING .)
    PRINT           reduce using rule 151 (string -> STRING PLUS STRING .)
    STRING          reduce using rule 151 (string -> STRING PLUS STRING .)
    INTEGERW        reduce using rule 151 (string -> STRING PLUS STRING .)
    INTEGER         reduce using rule 151 (string -> STRING PLUS STRING .)
    VAR             reduce using rule 151 (string -> STRING PLUS STRING .)
    CONSTANT        reduce using rule 151 (string -> STRING PLUS STRING .)
    LCURLYBRACKET   reduce using rule 151 (string -> STRING PLUS STRING .)
    LBRACKET        reduce using rule 151 (string -> STRING PLUS STRING .)
    SET             reduce using rule 151 (string -> STRING PLUS STRING .)
    $end            reduce using rule 151 (string -> STRING PLUS STRING .)
    ELSE            reduce using rule 151 (string -> STRING PLUS STRING .)
    END             reduce using rule 151 (string -> STRING PLUS STRING .)
    RETURN          reduce using rule 151 (string -> STRING PLUS STRING .)


state 158

    (152) string -> STRING MULTIPLY INTEGER .

    LOCALVAR        reduce using rule 152 (string -> STRING MULTIPLY INTEGER .)
    FOR             reduce using rule 152 (string -> STRING MULTIPLY INTEGER .)
    IF              reduce using rule 152 (string -> STRING MULTIPLY INTEGER .)
    UNLESS          reduce using rule 152 (string -> STRING MULTIPLY INTEGER .)
    PUTS            reduce using rule 152 (string -> STRING MULTIPLY INTEGER .)
    PRINT           reduce using rule 152 (string -> STRING MULTIPLY INTEGER .)
    STRING          reduce using rule 152 (string -> STRING MULTIPLY INTEGER .)
    INTEGERW        reduce using rule 152 (string -> STRING MULTIPLY INTEGER .)
    INTEGER         reduce using rule 152 (string -> STRING MULTIPLY INTEGER .)
    VAR             reduce using rule 152 (string -> STRING MULTIPLY INTEGER .)
    CONSTANT        reduce using rule 152 (string -> STRING MULTIPLY INTEGER .)
    LCURLYBRACKET   reduce using rule 152 (string -> STRING MULTIPLY INTEGER .)
    LBRACKET        reduce using rule 152 (string -> STRING MULTIPLY INTEGER .)
    SET             reduce using rule 152 (string -> STRING MULTIPLY INTEGER .)
    $end            reduce using rule 152 (string -> STRING MULTIPLY INTEGER .)
    ELSE            reduce using rule 152 (string -> STRING MULTIPLY INTEGER .)
    END             reduce using rule 152 (string -> STRING MULTIPLY INTEGER .)
    RETURN          reduce using rule 152 (string -> STRING MULTIPLY INTEGER .)


state 159

    (153) string -> STRING DOT stringOpt .

    LOCALVAR        reduce using rule 153 (string -> STRING DOT stringOpt .)
    FOR             reduce using rule 153 (string -> STRING DOT stringOpt .)
    IF              reduce using rule 153 (string -> STRING DOT stringOpt .)
    UNLESS          reduce using rule 153 (string -> STRING DOT stringOpt .)
    PUTS            reduce using rule 153 (string -> STRING DOT stringOpt .)
    PRINT           reduce using rule 153 (string -> STRING DOT stringOpt .)
    STRING          reduce using rule 153 (string -> STRING DOT stringOpt .)
    INTEGERW        reduce using rule 153 (string -> STRING DOT stringOpt .)
    INTEGER         reduce using rule 153 (string -> STRING DOT stringOpt .)
    VAR             reduce using rule 153 (string -> STRING DOT stringOpt .)
    CONSTANT        reduce using rule 153 (string -> STRING DOT stringOpt .)
    LCURLYBRACKET   reduce using rule 153 (string -> STRING DOT stringOpt .)
    LBRACKET        reduce using rule 153 (string -> STRING DOT stringOpt .)
    SET             reduce using rule 153 (string -> STRING DOT stringOpt .)
    $end            reduce using rule 153 (string -> STRING DOT stringOpt .)
    ELSE            reduce using rule 153 (string -> STRING DOT stringOpt .)
    END             reduce using rule 153 (string -> STRING DOT stringOpt .)
    RETURN          reduce using rule 153 (string -> STRING DOT stringOpt .)


state 160

    (154) stringOpt -> UPCASE .

    LOCALVAR        reduce using rule 154 (stringOpt -> UPCASE .)
    FOR             reduce using rule 154 (stringOpt -> UPCASE .)
    IF              reduce using rule 154 (stringOpt -> UPCASE .)
    UNLESS          reduce using rule 154 (stringOpt -> UPCASE .)
    PUTS            reduce using rule 154 (stringOpt -> UPCASE .)
    PRINT           reduce using rule 154 (stringOpt -> UPCASE .)
    STRING          reduce using rule 154 (stringOpt -> UPCASE .)
    INTEGERW        reduce using rule 154 (stringOpt -> UPCASE .)
    INTEGER         reduce using rule 154 (stringOpt -> UPCASE .)
    VAR             reduce using rule 154 (stringOpt -> UPCASE .)
    CONSTANT        reduce using rule 154 (stringOpt -> UPCASE .)
    LCURLYBRACKET   reduce using rule 154 (stringOpt -> UPCASE .)
    LBRACKET        reduce using rule 154 (stringOpt -> UPCASE .)
    SET             reduce using rule 154 (stringOpt -> UPCASE .)
    $end            reduce using rule 154 (stringOpt -> UPCASE .)
    ELSE            reduce using rule 154 (stringOpt -> UPCASE .)
    END             reduce using rule 154 (stringOpt -> UPCASE .)
    RETURN          reduce using rule 154 (stringOpt -> UPCASE .)


state 161

    (155) stringOpt -> DOWNCASE .

    LOCALVAR        reduce using rule 155 (stringOpt -> DOWNCASE .)
    FOR             reduce using rule 155 (stringOpt -> DOWNCASE .)
    IF              reduce using rule 155 (stringOpt -> DOWNCASE .)
    UNLESS          reduce using rule 155 (stringOpt -> DOWNCASE .)
    PUTS            reduce using rule 155 (stringOpt -> DOWNCASE .)
    PRINT           reduce using rule 155 (stringOpt -> DOWNCASE .)
    STRING          reduce using rule 155 (stringOpt -> DOWNCASE .)
    INTEGERW        reduce using rule 155 (stringOpt -> DOWNCASE .)
    INTEGER         reduce using rule 155 (stringOpt -> DOWNCASE .)
    VAR             reduce using rule 155 (stringOpt -> DOWNCASE .)
    CONSTANT        reduce using rule 155 (stringOpt -> DOWNCASE .)
    LCURLYBRACKET   reduce using rule 155 (stringOpt -> DOWNCASE .)
    LBRACKET        reduce using rule 155 (stringOpt -> DOWNCASE .)
    SET             reduce using rule 155 (stringOpt -> DOWNCASE .)
    $end            reduce using rule 155 (stringOpt -> DOWNCASE .)
    ELSE            reduce using rule 155 (stringOpt -> DOWNCASE .)
    END             reduce using rule 155 (stringOpt -> DOWNCASE .)
    RETURN          reduce using rule 155 (stringOpt -> DOWNCASE .)


state 162

    (156) stringOpt -> LENGTH .

    LOCALVAR        reduce using rule 156 (stringOpt -> LENGTH .)
    FOR             reduce using rule 156 (stringOpt -> LENGTH .)
    IF              reduce using rule 156 (stringOpt -> LENGTH .)
    UNLESS          reduce using rule 156 (stringOpt -> LENGTH .)
    PUTS            reduce using rule 156 (stringOpt -> LENGTH .)
    PRINT           reduce using rule 156 (stringOpt -> LENGTH .)
    STRING          reduce using rule 156 (stringOpt -> LENGTH .)
    INTEGERW        reduce using rule 156 (stringOpt -> LENGTH .)
    INTEGER         reduce using rule 156 (stringOpt -> LENGTH .)
    VAR             reduce using rule 156 (stringOpt -> LENGTH .)
    CONSTANT        reduce using rule 156 (stringOpt -> LENGTH .)
    LCURLYBRACKET   reduce using rule 156 (stringOpt -> LENGTH .)
    LBRACKET        reduce using rule 156 (stringOpt -> LENGTH .)
    SET             reduce using rule 156 (stringOpt -> LENGTH .)
    $end            reduce using rule 156 (stringOpt -> LENGTH .)
    ELSE            reduce using rule 156 (stringOpt -> LENGTH .)
    END             reduce using rule 156 (stringOpt -> LENGTH .)
    RETURN          reduce using rule 156 (stringOpt -> LENGTH .)


state 163

    (157) stringOpt -> CAPS .

    LOCALVAR        reduce using rule 157 (stringOpt -> CAPS .)
    FOR             reduce using rule 157 (stringOpt -> CAPS .)
    IF              reduce using rule 157 (stringOpt -> CAPS .)
    UNLESS          reduce using rule 157 (stringOpt -> CAPS .)
    PUTS            reduce using rule 157 (stringOpt -> CAPS .)
    PRINT           reduce using rule 157 (stringOpt -> CAPS .)
    STRING          reduce using rule 157 (stringOpt -> CAPS .)
    INTEGERW        reduce using rule 157 (stringOpt -> CAPS .)
    INTEGER         reduce using rule 157 (stringOpt -> CAPS .)
    VAR             reduce using rule 157 (stringOpt -> CAPS .)
    CONSTANT        reduce using rule 157 (stringOpt -> CAPS .)
    LCURLYBRACKET   reduce using rule 157 (stringOpt -> CAPS .)
    LBRACKET        reduce using rule 157 (stringOpt -> CAPS .)
    SET             reduce using rule 157 (stringOpt -> CAPS .)
    $end            reduce using rule 157 (stringOpt -> CAPS .)
    ELSE            reduce using rule 157 (stringOpt -> CAPS .)
    END             reduce using rule 157 (stringOpt -> CAPS .)
    RETURN          reduce using rule 157 (stringOpt -> CAPS .)


state 164

    (158) stringOpt -> INSERT . LPARENTHESES INTEGER COMMA STRING RPARENTHESES

    LPARENTHESES    shift and go to state 217


state 165

    (117) integer -> INTEGERW DOT SQRT . LPARENTHESES INTEGER RPARENTHESES

    LPARENTHESES    shift and go to state 218


state 166

    (53) hash -> LCURLYBRACKET elementoHash RCURLYBRACKET .

    LBRACKET        reduce using rule 53 (hash -> LCURLYBRACKET elementoHash RCURLYBRACKET .)
    DOT             reduce using rule 53 (hash -> LCURLYBRACKET elementoHash RCURLYBRACKET .)
    LOCALVAR        reduce using rule 53 (hash -> LCURLYBRACKET elementoHash RCURLYBRACKET .)
    FOR             reduce using rule 53 (hash -> LCURLYBRACKET elementoHash RCURLYBRACKET .)
    IF              reduce using rule 53 (hash -> LCURLYBRACKET elementoHash RCURLYBRACKET .)
    UNLESS          reduce using rule 53 (hash -> LCURLYBRACKET elementoHash RCURLYBRACKET .)
    PUTS            reduce using rule 53 (hash -> LCURLYBRACKET elementoHash RCURLYBRACKET .)
    PRINT           reduce using rule 53 (hash -> LCURLYBRACKET elementoHash RCURLYBRACKET .)
    STRING          reduce using rule 53 (hash -> LCURLYBRACKET elementoHash RCURLYBRACKET .)
    INTEGERW        reduce using rule 53 (hash -> LCURLYBRACKET elementoHash RCURLYBRACKET .)
    INTEGER         reduce using rule 53 (hash -> LCURLYBRACKET elementoHash RCURLYBRACKET .)
    VAR             reduce using rule 53 (hash -> LCURLYBRACKET elementoHash RCURLYBRACKET .)
    CONSTANT        reduce using rule 53 (hash -> LCURLYBRACKET elementoHash RCURLYBRACKET .)
    LCURLYBRACKET   reduce using rule 53 (hash -> LCURLYBRACKET elementoHash RCURLYBRACKET .)
    SET             reduce using rule 53 (hash -> LCURLYBRACKET elementoHash RCURLYBRACKET .)
    $end            reduce using rule 53 (hash -> LCURLYBRACKET elementoHash RCURLYBRACKET .)
    ELSE            reduce using rule 53 (hash -> LCURLYBRACKET elementoHash RCURLYBRACKET .)
    END             reduce using rule 53 (hash -> LCURLYBRACKET elementoHash RCURLYBRACKET .)
    RETURN          reduce using rule 53 (hash -> LCURLYBRACKET elementoHash RCURLYBRACKET .)


state 167

    (54) elementoHash -> datos EQUAL . GREATERTHAN datos maselementos

    GREATERTHAN     shift and go to state 219


state 168

    (140) set -> SET LBRACKET elementoSet . RBRACKET

    RBRACKET        shift and go to state 220


state 169

    (142) elementoSet -> datos .
    (143) elementoSet -> datos . otroElemento
    (144) otroElemento -> .
    (145) otroElemento -> . COMMA elementoSet otroElemento

  ! reduce/reduce conflict for RBRACKET resolved using rule 142 (elementoSet -> datos .)
  ! reduce/reduce conflict for COMMA resolved using rule 142 (elementoSet -> datos .)
  ! shift/reduce conflict for COMMA resolved as shift
    RBRACKET        reduce using rule 142 (elementoSet -> datos .)
    COMMA           shift and go to state 222

  ! COMMA           [ reduce using rule 142 (elementoSet -> datos .) ]
  ! RBRACKET        [ reduce using rule 144 (otroElemento -> .) ]
  ! COMMA           [ reduce using rule 144 (otroElemento -> .) ]

    otroElemento                   shift and go to state 221

state 170

    (8) argumentos -> LOCALVAR . EQUAL LCURLYBRACKET RCURLYBRACKET
    (9) argumentos -> LOCALVAR . TWOPOINTS datos
    (10) variosargumentos -> LOCALVAR .
    (11) variosargumentos -> LOCALVAR . EQUAL datos
    (12) variosargumentos -> LOCALVAR . masargumentos
    (13) variosargumentos -> LOCALVAR . EQUAL datos masargumentos
    (14) masargumentos -> . COMMA variosargumentos

    EQUAL           shift and go to state 223
    TWOPOINTS       shift and go to state 224
    RPARENTHESES    reduce using rule 10 (variosargumentos -> LOCALVAR .)
    COMMA           shift and go to state 226

    masargumentos                  shift and go to state 225

state 171

    (3) funcion -> DEF LOCALVAR LPARENTHESES argumentos . RPARENTHESES cuerpo END
    (4) funcion -> DEF LOCALVAR LPARENTHESES argumentos . RPARENTHESES cuerpo retornar END

    RPARENTHESES    shift and go to state 227


state 172

    (5) argumentos -> variosargumentos .

    RPARENTHESES    reduce using rule 5 (argumentos -> variosargumentos .)


state 173

    (6) argumentos -> MULTIPLY . LOCALVAR

    LOCALVAR        shift and go to state 228


state 174

    (7) argumentos -> TWOSTARS . LOCALVAR

    LOCALVAR        shift and go to state 229


state 175

    (159) casting -> STRING DOT . TO_I
    (160) casting -> STRING DOT . TO_F

    TO_I            shift and go to state 230
    TO_F            shift and go to state 231


state 176

    (75) operacion -> operacion masoperaciones .

    PLUS            reduce using rule 75 (operacion -> operacion masoperaciones .)
    MINUS           reduce using rule 75 (operacion -> operacion masoperaciones .)
    MULTIPLY        reduce using rule 75 (operacion -> operacion masoperaciones .)
    DIVIDE          reduce using rule 75 (operacion -> operacion masoperaciones .)
    PERCENTAGE      reduce using rule 75 (operacion -> operacion masoperaciones .)
    LOCALVAR        reduce using rule 75 (operacion -> operacion masoperaciones .)
    FOR             reduce using rule 75 (operacion -> operacion masoperaciones .)
    IF              reduce using rule 75 (operacion -> operacion masoperaciones .)
    UNLESS          reduce using rule 75 (operacion -> operacion masoperaciones .)
    PUTS            reduce using rule 75 (operacion -> operacion masoperaciones .)
    PRINT           reduce using rule 75 (operacion -> operacion masoperaciones .)
    STRING          reduce using rule 75 (operacion -> operacion masoperaciones .)
    INTEGERW        reduce using rule 75 (operacion -> operacion masoperaciones .)
    INTEGER         reduce using rule 75 (operacion -> operacion masoperaciones .)
    VAR             reduce using rule 75 (operacion -> operacion masoperaciones .)
    CONSTANT        reduce using rule 75 (operacion -> operacion masoperaciones .)
    LCURLYBRACKET   reduce using rule 75 (operacion -> operacion masoperaciones .)
    LBRACKET        reduce using rule 75 (operacion -> operacion masoperaciones .)
    SET             reduce using rule 75 (operacion -> operacion masoperaciones .)
    $end            reduce using rule 75 (operacion -> operacion masoperaciones .)
    ELSE            reduce using rule 75 (operacion -> operacion masoperaciones .)
    END             reduce using rule 75 (operacion -> operacion masoperaciones .)
    RETURN          reduce using rule 75 (operacion -> operacion masoperaciones .)
    RPARENTHESES    reduce using rule 75 (operacion -> operacion masoperaciones .)


state 177

    (76) masoperaciones -> operador . expresion masoperaciones
    (77) masoperaciones -> operador . number
    (78) masoperaciones -> operador . expresion
    (71) expresion -> . operacion
    (72) expresion -> . LPARENTHESES operacion RPARENTHESES
    (73) expresion -> . LPARENTHESES operacion RPARENTHESES masoperaciones
    (69) number -> . INTEGER
    (70) number -> . FLOAT
    (74) operacion -> . number operador number
    (75) operacion -> . operacion masoperaciones

    LPARENTHESES    shift and go to state 118
    INTEGER         shift and go to state 101
    FLOAT           shift and go to state 102

    expresion                      shift and go to state 232
    number                         shift and go to state 233
    operacion                      shift and go to state 117

state 178

    (79) operador -> PLUS .

    LPARENTHESES    reduce using rule 79 (operador -> PLUS .)
    INTEGER         reduce using rule 79 (operador -> PLUS .)
    FLOAT           reduce using rule 79 (operador -> PLUS .)


state 179

    (80) operador -> MINUS .

    LPARENTHESES    reduce using rule 80 (operador -> MINUS .)
    INTEGER         reduce using rule 80 (operador -> MINUS .)
    FLOAT           reduce using rule 80 (operador -> MINUS .)


state 180

    (81) operador -> MULTIPLY .

    LPARENTHESES    reduce using rule 81 (operador -> MULTIPLY .)
    INTEGER         reduce using rule 81 (operador -> MULTIPLY .)
    FLOAT           reduce using rule 81 (operador -> MULTIPLY .)


state 181

    (82) operador -> DIVIDE .

    LPARENTHESES    reduce using rule 82 (operador -> DIVIDE .)
    INTEGER         reduce using rule 82 (operador -> DIVIDE .)
    FLOAT           reduce using rule 82 (operador -> DIVIDE .)


state 182

    (83) operador -> PERCENTAGE .

    LPARENTHESES    reduce using rule 83 (operador -> PERCENTAGE .)
    INTEGER         reduce using rule 83 (operador -> PERCENTAGE .)
    FLOAT           reduce using rule 83 (operador -> PERCENTAGE .)


state 183

    (72) expresion -> LPARENTHESES operacion . RPARENTHESES
    (73) expresion -> LPARENTHESES operacion . RPARENTHESES masoperaciones
    (75) operacion -> operacion . masoperaciones
    (76) masoperaciones -> . operador expresion masoperaciones
    (77) masoperaciones -> . operador number
    (78) masoperaciones -> . operador expresion
    (79) operador -> . PLUS
    (80) operador -> . MINUS
    (81) operador -> . MULTIPLY
    (82) operador -> . DIVIDE
    (83) operador -> . PERCENTAGE

    RPARENTHESES    shift and go to state 234
    PLUS            shift and go to state 178
    MINUS           shift and go to state 179
    MULTIPLY        shift and go to state 180
    DIVIDE          shift and go to state 181
    PERCENTAGE      shift and go to state 182

    masoperaciones                 shift and go to state 176
    operador                       shift and go to state 177

state 184

    (74) operacion -> number . operador number
    (79) operador -> . PLUS
    (80) operador -> . MINUS
    (81) operador -> . MULTIPLY
    (82) operador -> . DIVIDE
    (83) operador -> . PERCENTAGE

    PLUS            shift and go to state 178
    MINUS           shift and go to state 179
    MULTIPLY        shift and go to state 180
    DIVIDE          shift and go to state 181
    PERCENTAGE      shift and go to state 182

    operador                       shift and go to state 186

state 185

    (161) casting -> number DOT . TO_S

    TO_S            shift and go to state 235


state 186

    (74) operacion -> number operador . number
    (69) number -> . INTEGER
    (70) number -> . FLOAT

    INTEGER         shift and go to state 101
    FLOAT           shift and go to state 102

    number                         shift and go to state 236

state 187

    (30) loop -> FOR LOCALVAR IN rango . cuerpo END
    (17) cuerpo -> . declaracion cuerpo
    (18) cuerpo -> . asignacion cuerpo
    (19) cuerpo -> . loop cuerpo
    (20) cuerpo -> . estructurasDatos cuerpo
    (21) cuerpo -> . if cuerpo
    (22) cuerpo -> . unless cuerpo
    (23) cuerpo -> . impresion cuerpo
    (24) cuerpo -> . operacionSet cuerpo
    (25) cuerpo -> . operacionarray cuerpo
    (26) cuerpo -> . operacionHash cuerpo
    (27) cuerpo -> . string cuerpo
    (28) cuerpo -> . integer cuerpo
    (29) cuerpo -> .
    (31) declaracion -> . tiposvariables EQUAL datos
    (32) declaracion -> . tiposvariables EQUAL estructurasDatos
    (33) declaracion -> . tiposvariables EQUAL expresion
    (34) declaracion -> . tiposvariables EQUAL declaracion
    (35) declaracion -> . tiposvariables EQUAL casting
    (36) asignacion -> . LOCALVAR PLUSASSIGN datosAsignacion
    (37) asignacion -> . LOCALVAR MINASSIGN datosAsignacion
    (38) asignacion -> . LOCALVAR DIVASSIGN datosAsignacion
    (39) asignacion -> . LOCALVAR TIMESASSIGN datosAsignacion
    (40) asignacion -> . LOCALVAR MODASSIGN datosAsignacion
    (41) asignacion -> . LOCALVAR EXPASSIGN datosAsignacion
    (30) loop -> . FOR LOCALVAR IN rango cuerpo END
    (50) estructurasDatos -> . hash
    (51) estructurasDatos -> . array
    (52) estructurasDatos -> . set
    (107) if -> . IF datoscompletos operadores datoscompletos cuerpo END
    (108) if -> . IF datoscompletos operadores datoscompletos cuerpo else
    (128) unless -> . UNLESS expresionCondicional cuerpo ELSE cuerpo END
    (65) impresion -> . PUTS datos
    (66) impresion -> . PUTS LOCALVAR
    (67) impresion -> . PRINT datos
    (68) impresion -> . PRINT LOCALVAR
    (146) operacionSet -> . set DOT ADD LPARENTHESES datos RPARENTHESES
    (147) operacionSet -> . set DOT ADD LPARENTHESES tiposvariables RPARENTHESES
    (148) operacionSet -> . set DOT CLEAR
    (149) operacionSet -> . set DOT DELETE LPARENTHESES datos RPARENTHESES
    (150) operacionSet -> . set DOT DELETE LPARENTHESES tiposvariables RPARENTHESES
    (92) operacionarray -> . array LBRACKET INTEGER RBRACKET
    (93) operacionarray -> . array DOT TAKE LPARENTHESES INTEGER RPARENTHESES
    (94) operacionarray -> . array DOT DROP LPARENTHESES INTEGER RPARENTHESES
    (95) operacionarray -> . array DOT push maspush
    (100) operacionarray -> . array DOT POP
    (101) operacionarray -> . array DOT POP LPARENTHESES INTEGER RPARENTHESES
    (102) operacionarray -> . array DOT DELETE LPARENTHESES INTEGER RPARENTHESES
    (103) operacionarray -> . array DOT LENGTH LPARENTHESES RPARENTHESES
    (104) operacionarray -> . array DOT EMPTY QUESTIONMARK
    (58) operacionHash -> . hash LBRACKET datos RBRACKET
    (59) operacionHash -> . hash LBRACKET datos RBRACKET EQUAL datos
    (60) operacionHash -> . hash DOT INCLUDE QUESTIONMARK LPARENTHESES datos RPARENTHESES
    (61) operacionHash -> . hash DOT DELETE LPARENTHESES datos RPARENTHESES
    (62) operacionHash -> . hash DOT KEYS
    (151) string -> . STRING PLUS STRING
    (152) string -> . STRING MULTIPLY INTEGER
    (153) string -> . STRING DOT stringOpt
    (117) integer -> . INTEGERW DOT SQRT LPARENTHESES INTEGER RPARENTHESES
    (118) integer -> . INTEGER DOT CEIL LPARENTHESES RPARENTHESES
    (119) integer -> . INTEGER DOT CEIL LPARENTHESES INTEGER RPARENTHESES
    (120) integer -> . INTEGER DOT FLOOR LPARENTHESES RPARENTHESES
    (121) integer -> . INTEGER DOT FLOOR LPARENTHESES INTEGER RPARENTHESES
    (122) integer -> . INTEGER DOT ABS
    (44) tiposvariables -> . VAR
    (45) tiposvariables -> . LOCALVAR
    (46) tiposvariables -> . CONSTANT
    (53) hash -> . LCURLYBRACKET elementoHash RCURLYBRACKET
    (84) array -> . LBRACKET RBRACKET
    (85) array -> . LBRACKET datosarray RBRACKET
    (140) set -> . SET LBRACKET elementoSet RBRACKET

    END             reduce using rule 29 (cuerpo -> .)
    LOCALVAR        shift and go to state 17
    FOR             shift and go to state 19
    IF              shift and go to state 23
    UNLESS          shift and go to state 24
    PUTS            shift and go to state 25
    PRINT           shift and go to state 26
    STRING          shift and go to state 29
    INTEGERW        shift and go to state 30
    INTEGER         shift and go to state 28
    VAR             shift and go to state 31
    CONSTANT        shift and go to state 32
    LCURLYBRACKET   shift and go to state 33
    LBRACKET        shift and go to state 27
    SET             shift and go to state 34

    cuerpo                         shift and go to state 237
    declaracion                    shift and go to state 4
    asignacion                     shift and go to state 5
    loop                           shift and go to state 6
    estructurasDatos               shift and go to state 7
    if                             shift and go to state 8
    unless                         shift and go to state 9
    impresion                      shift and go to state 10
    operacionSet                   shift and go to state 11
    operacionarray                 shift and go to state 12
    operacionHash                  shift and go to state 13
    string                         shift and go to state 14
    integer                        shift and go to state 15
    tiposvariables                 shift and go to state 18
    hash                           shift and go to state 20
    array                          shift and go to state 21
    set                            shift and go to state 22

state 188

    (63) rango -> INTEGER . RANGEINCLUSIVE INTEGER
    (64) rango -> INTEGER . RANGEXCLUSIVE INTEGER

    RANGEINCLUSIVE  shift and go to state 238
    RANGEXCLUSIVE   shift and go to state 239


state 189

    (58) operacionHash -> hash LBRACKET datos RBRACKET .
    (59) operacionHash -> hash LBRACKET datos RBRACKET . EQUAL datos

    LOCALVAR        reduce using rule 58 (operacionHash -> hash LBRACKET datos RBRACKET .)
    FOR             reduce using rule 58 (operacionHash -> hash LBRACKET datos RBRACKET .)
    IF              reduce using rule 58 (operacionHash -> hash LBRACKET datos RBRACKET .)
    UNLESS          reduce using rule 58 (operacionHash -> hash LBRACKET datos RBRACKET .)
    PUTS            reduce using rule 58 (operacionHash -> hash LBRACKET datos RBRACKET .)
    PRINT           reduce using rule 58 (operacionHash -> hash LBRACKET datos RBRACKET .)
    STRING          reduce using rule 58 (operacionHash -> hash LBRACKET datos RBRACKET .)
    INTEGERW        reduce using rule 58 (operacionHash -> hash LBRACKET datos RBRACKET .)
    INTEGER         reduce using rule 58 (operacionHash -> hash LBRACKET datos RBRACKET .)
    VAR             reduce using rule 58 (operacionHash -> hash LBRACKET datos RBRACKET .)
    CONSTANT        reduce using rule 58 (operacionHash -> hash LBRACKET datos RBRACKET .)
    LCURLYBRACKET   reduce using rule 58 (operacionHash -> hash LBRACKET datos RBRACKET .)
    LBRACKET        reduce using rule 58 (operacionHash -> hash LBRACKET datos RBRACKET .)
    SET             reduce using rule 58 (operacionHash -> hash LBRACKET datos RBRACKET .)
    $end            reduce using rule 58 (operacionHash -> hash LBRACKET datos RBRACKET .)
    ELSE            reduce using rule 58 (operacionHash -> hash LBRACKET datos RBRACKET .)
    END             reduce using rule 58 (operacionHash -> hash LBRACKET datos RBRACKET .)
    RETURN          reduce using rule 58 (operacionHash -> hash LBRACKET datos RBRACKET .)
    EQUAL           shift and go to state 240


state 190

    (60) operacionHash -> hash DOT INCLUDE QUESTIONMARK . LPARENTHESES datos RPARENTHESES

    LPARENTHESES    shift and go to state 241


state 191

    (61) operacionHash -> hash DOT DELETE LPARENTHESES . datos RPARENTHESES
    (47) datos -> . INTEGER
    (48) datos -> . FLOAT
    (49) datos -> . STRING

    INTEGER         shift and go to state 78
    FLOAT           shift and go to state 79
    STRING          shift and go to state 70

    datos                          shift and go to state 242

state 192

    (92) operacionarray -> array LBRACKET INTEGER RBRACKET .

    LOCALVAR        reduce using rule 92 (operacionarray -> array LBRACKET INTEGER RBRACKET .)
    FOR             reduce using rule 92 (operacionarray -> array LBRACKET INTEGER RBRACKET .)
    IF              reduce using rule 92 (operacionarray -> array LBRACKET INTEGER RBRACKET .)
    UNLESS          reduce using rule 92 (operacionarray -> array LBRACKET INTEGER RBRACKET .)
    PUTS            reduce using rule 92 (operacionarray -> array LBRACKET INTEGER RBRACKET .)
    PRINT           reduce using rule 92 (operacionarray -> array LBRACKET INTEGER RBRACKET .)
    STRING          reduce using rule 92 (operacionarray -> array LBRACKET INTEGER RBRACKET .)
    INTEGERW        reduce using rule 92 (operacionarray -> array LBRACKET INTEGER RBRACKET .)
    INTEGER         reduce using rule 92 (operacionarray -> array LBRACKET INTEGER RBRACKET .)
    VAR             reduce using rule 92 (operacionarray -> array LBRACKET INTEGER RBRACKET .)
    CONSTANT        reduce using rule 92 (operacionarray -> array LBRACKET INTEGER RBRACKET .)
    LCURLYBRACKET   reduce using rule 92 (operacionarray -> array LBRACKET INTEGER RBRACKET .)
    LBRACKET        reduce using rule 92 (operacionarray -> array LBRACKET INTEGER RBRACKET .)
    SET             reduce using rule 92 (operacionarray -> array LBRACKET INTEGER RBRACKET .)
    $end            reduce using rule 92 (operacionarray -> array LBRACKET INTEGER RBRACKET .)
    ELSE            reduce using rule 92 (operacionarray -> array LBRACKET INTEGER RBRACKET .)
    END             reduce using rule 92 (operacionarray -> array LBRACKET INTEGER RBRACKET .)
    RETURN          reduce using rule 92 (operacionarray -> array LBRACKET INTEGER RBRACKET .)


state 193

    (93) operacionarray -> array DOT TAKE LPARENTHESES . INTEGER RPARENTHESES

    INTEGER         shift and go to state 243


state 194

    (94) operacionarray -> array DOT DROP LPARENTHESES . INTEGER RPARENTHESES

    INTEGER         shift and go to state 244


state 195

    (99) maspush -> DOT . push maspush
    (96) push -> . PUSH LPARENTHESES datosvarios RPARENTHESES
    (97) push -> .

    PUSH            shift and go to state 133
    DOT             reduce using rule 97 (push -> .)
    LOCALVAR        reduce using rule 97 (push -> .)
    FOR             reduce using rule 97 (push -> .)
    IF              reduce using rule 97 (push -> .)
    UNLESS          reduce using rule 97 (push -> .)
    PUTS            reduce using rule 97 (push -> .)
    PRINT           reduce using rule 97 (push -> .)
    STRING          reduce using rule 97 (push -> .)
    INTEGERW        reduce using rule 97 (push -> .)
    INTEGER         reduce using rule 97 (push -> .)
    VAR             reduce using rule 97 (push -> .)
    CONSTANT        reduce using rule 97 (push -> .)
    LCURLYBRACKET   reduce using rule 97 (push -> .)
    LBRACKET        reduce using rule 97 (push -> .)
    SET             reduce using rule 97 (push -> .)
    $end            reduce using rule 97 (push -> .)
    ELSE            reduce using rule 97 (push -> .)
    END             reduce using rule 97 (push -> .)
    RETURN          reduce using rule 97 (push -> .)

    push                           shift and go to state 245

state 196

    (95) operacionarray -> array DOT push maspush .

    LOCALVAR        reduce using rule 95 (operacionarray -> array DOT push maspush .)
    FOR             reduce using rule 95 (operacionarray -> array DOT push maspush .)
    IF              reduce using rule 95 (operacionarray -> array DOT push maspush .)
    UNLESS          reduce using rule 95 (operacionarray -> array DOT push maspush .)
    PUTS            reduce using rule 95 (operacionarray -> array DOT push maspush .)
    PRINT           reduce using rule 95 (operacionarray -> array DOT push maspush .)
    STRING          reduce using rule 95 (operacionarray -> array DOT push maspush .)
    INTEGERW        reduce using rule 95 (operacionarray -> array DOT push maspush .)
    INTEGER         reduce using rule 95 (operacionarray -> array DOT push maspush .)
    VAR             reduce using rule 95 (operacionarray -> array DOT push maspush .)
    CONSTANT        reduce using rule 95 (operacionarray -> array DOT push maspush .)
    LCURLYBRACKET   reduce using rule 95 (operacionarray -> array DOT push maspush .)
    LBRACKET        reduce using rule 95 (operacionarray -> array DOT push maspush .)
    SET             reduce using rule 95 (operacionarray -> array DOT push maspush .)
    $end            reduce using rule 95 (operacionarray -> array DOT push maspush .)
    ELSE            reduce using rule 95 (operacionarray -> array DOT push maspush .)
    END             reduce using rule 95 (operacionarray -> array DOT push maspush .)
    RETURN          reduce using rule 95 (operacionarray -> array DOT push maspush .)


state 197

    (101) operacionarray -> array DOT POP LPARENTHESES . INTEGER RPARENTHESES

    INTEGER         shift and go to state 246


state 198

    (102) operacionarray -> array DOT DELETE LPARENTHESES . INTEGER RPARENTHESES

    INTEGER         shift and go to state 247


state 199

    (103) operacionarray -> array DOT LENGTH LPARENTHESES . RPARENTHESES

    RPARENTHESES    shift and go to state 248


state 200

    (104) operacionarray -> array DOT EMPTY QUESTIONMARK .

    LOCALVAR        reduce using rule 104 (operacionarray -> array DOT EMPTY QUESTIONMARK .)
    FOR             reduce using rule 104 (operacionarray -> array DOT EMPTY QUESTIONMARK .)
    IF              reduce using rule 104 (operacionarray -> array DOT EMPTY QUESTIONMARK .)
    UNLESS          reduce using rule 104 (operacionarray -> array DOT EMPTY QUESTIONMARK .)
    PUTS            reduce using rule 104 (operacionarray -> array DOT EMPTY QUESTIONMARK .)
    PRINT           reduce using rule 104 (operacionarray -> array DOT EMPTY QUESTIONMARK .)
    STRING          reduce using rule 104 (operacionarray -> array DOT EMPTY QUESTIONMARK .)
    INTEGERW        reduce using rule 104 (operacionarray -> array DOT EMPTY QUESTIONMARK .)
    INTEGER         reduce using rule 104 (operacionarray -> array DOT EMPTY QUESTIONMARK .)
    VAR             reduce using rule 104 (operacionarray -> array DOT EMPTY QUESTIONMARK .)
    CONSTANT        reduce using rule 104 (operacionarray -> array DOT EMPTY QUESTIONMARK .)
    LCURLYBRACKET   reduce using rule 104 (operacionarray -> array DOT EMPTY QUESTIONMARK .)
    LBRACKET        reduce using rule 104 (operacionarray -> array DOT EMPTY QUESTIONMARK .)
    SET             reduce using rule 104 (operacionarray -> array DOT EMPTY QUESTIONMARK .)
    $end            reduce using rule 104 (operacionarray -> array DOT EMPTY QUESTIONMARK .)
    ELSE            reduce using rule 104 (operacionarray -> array DOT EMPTY QUESTIONMARK .)
    END             reduce using rule 104 (operacionarray -> array DOT EMPTY QUESTIONMARK .)
    RETURN          reduce using rule 104 (operacionarray -> array DOT EMPTY QUESTIONMARK .)


state 201

    (96) push -> PUSH LPARENTHESES . datosvarios RPARENTHESES
    (86) datosvarios -> . datos
    (87) datosvarios -> . number
    (88) datosvarios -> . VAR
    (89) datosvarios -> . LOCALVAR
    (47) datos -> . INTEGER
    (48) datos -> . FLOAT
    (49) datos -> . STRING
    (69) number -> . INTEGER
    (70) number -> . FLOAT

    VAR             shift and go to state 87
    LOCALVAR        shift and go to state 88
    INTEGER         shift and go to state 68
    FLOAT           shift and go to state 69
    STRING          shift and go to state 70

    datosvarios                    shift and go to state 249
    datos                          shift and go to state 64
    number                         shift and go to state 65

state 202

    (146) operacionSet -> set DOT ADD LPARENTHESES . datos RPARENTHESES
    (147) operacionSet -> set DOT ADD LPARENTHESES . tiposvariables RPARENTHESES
    (47) datos -> . INTEGER
    (48) datos -> . FLOAT
    (49) datos -> . STRING
    (44) tiposvariables -> . VAR
    (45) tiposvariables -> . LOCALVAR
    (46) tiposvariables -> . CONSTANT

    INTEGER         shift and go to state 78
    FLOAT           shift and go to state 79
    STRING          shift and go to state 70
    VAR             shift and go to state 31
    LOCALVAR        shift and go to state 77
    CONSTANT        shift and go to state 32

    datos                          shift and go to state 250
    tiposvariables                 shift and go to state 251

state 203

    (149) operacionSet -> set DOT DELETE LPARENTHESES . datos RPARENTHESES
    (150) operacionSet -> set DOT DELETE LPARENTHESES . tiposvariables RPARENTHESES
    (47) datos -> . INTEGER
    (48) datos -> . FLOAT
    (49) datos -> . STRING
    (44) tiposvariables -> . VAR
    (45) tiposvariables -> . LOCALVAR
    (46) tiposvariables -> . CONSTANT

    INTEGER         shift and go to state 78
    FLOAT           shift and go to state 79
    STRING          shift and go to state 70
    VAR             shift and go to state 31
    LOCALVAR        shift and go to state 77
    CONSTANT        shift and go to state 32

    datos                          shift and go to state 252
    tiposvariables                 shift and go to state 253

state 204

    (107) if -> IF datoscompletos operadores datoscompletos . cuerpo END
    (108) if -> IF datoscompletos operadores datoscompletos . cuerpo else
    (17) cuerpo -> . declaracion cuerpo
    (18) cuerpo -> . asignacion cuerpo
    (19) cuerpo -> . loop cuerpo
    (20) cuerpo -> . estructurasDatos cuerpo
    (21) cuerpo -> . if cuerpo
    (22) cuerpo -> . unless cuerpo
    (23) cuerpo -> . impresion cuerpo
    (24) cuerpo -> . operacionSet cuerpo
    (25) cuerpo -> . operacionarray cuerpo
    (26) cuerpo -> . operacionHash cuerpo
    (27) cuerpo -> . string cuerpo
    (28) cuerpo -> . integer cuerpo
    (29) cuerpo -> .
    (31) declaracion -> . tiposvariables EQUAL datos
    (32) declaracion -> . tiposvariables EQUAL estructurasDatos
    (33) declaracion -> . tiposvariables EQUAL expresion
    (34) declaracion -> . tiposvariables EQUAL declaracion
    (35) declaracion -> . tiposvariables EQUAL casting
    (36) asignacion -> . LOCALVAR PLUSASSIGN datosAsignacion
    (37) asignacion -> . LOCALVAR MINASSIGN datosAsignacion
    (38) asignacion -> . LOCALVAR DIVASSIGN datosAsignacion
    (39) asignacion -> . LOCALVAR TIMESASSIGN datosAsignacion
    (40) asignacion -> . LOCALVAR MODASSIGN datosAsignacion
    (41) asignacion -> . LOCALVAR EXPASSIGN datosAsignacion
    (30) loop -> . FOR LOCALVAR IN rango cuerpo END
    (50) estructurasDatos -> . hash
    (51) estructurasDatos -> . array
    (52) estructurasDatos -> . set
    (107) if -> . IF datoscompletos operadores datoscompletos cuerpo END
    (108) if -> . IF datoscompletos operadores datoscompletos cuerpo else
    (128) unless -> . UNLESS expresionCondicional cuerpo ELSE cuerpo END
    (65) impresion -> . PUTS datos
    (66) impresion -> . PUTS LOCALVAR
    (67) impresion -> . PRINT datos
    (68) impresion -> . PRINT LOCALVAR
    (146) operacionSet -> . set DOT ADD LPARENTHESES datos RPARENTHESES
    (147) operacionSet -> . set DOT ADD LPARENTHESES tiposvariables RPARENTHESES
    (148) operacionSet -> . set DOT CLEAR
    (149) operacionSet -> . set DOT DELETE LPARENTHESES datos RPARENTHESES
    (150) operacionSet -> . set DOT DELETE LPARENTHESES tiposvariables RPARENTHESES
    (92) operacionarray -> . array LBRACKET INTEGER RBRACKET
    (93) operacionarray -> . array DOT TAKE LPARENTHESES INTEGER RPARENTHESES
    (94) operacionarray -> . array DOT DROP LPARENTHESES INTEGER RPARENTHESES
    (95) operacionarray -> . array DOT push maspush
    (100) operacionarray -> . array DOT POP
    (101) operacionarray -> . array DOT POP LPARENTHESES INTEGER RPARENTHESES
    (102) operacionarray -> . array DOT DELETE LPARENTHESES INTEGER RPARENTHESES
    (103) operacionarray -> . array DOT LENGTH LPARENTHESES RPARENTHESES
    (104) operacionarray -> . array DOT EMPTY QUESTIONMARK
    (58) operacionHash -> . hash LBRACKET datos RBRACKET
    (59) operacionHash -> . hash LBRACKET datos RBRACKET EQUAL datos
    (60) operacionHash -> . hash DOT INCLUDE QUESTIONMARK LPARENTHESES datos RPARENTHESES
    (61) operacionHash -> . hash DOT DELETE LPARENTHESES datos RPARENTHESES
    (62) operacionHash -> . hash DOT KEYS
    (151) string -> . STRING PLUS STRING
    (152) string -> . STRING MULTIPLY INTEGER
    (153) string -> . STRING DOT stringOpt
    (117) integer -> . INTEGERW DOT SQRT LPARENTHESES INTEGER RPARENTHESES
    (118) integer -> . INTEGER DOT CEIL LPARENTHESES RPARENTHESES
    (119) integer -> . INTEGER DOT CEIL LPARENTHESES INTEGER RPARENTHESES
    (120) integer -> . INTEGER DOT FLOOR LPARENTHESES RPARENTHESES
    (121) integer -> . INTEGER DOT FLOOR LPARENTHESES INTEGER RPARENTHESES
    (122) integer -> . INTEGER DOT ABS
    (44) tiposvariables -> . VAR
    (45) tiposvariables -> . LOCALVAR
    (46) tiposvariables -> . CONSTANT
    (53) hash -> . LCURLYBRACKET elementoHash RCURLYBRACKET
    (84) array -> . LBRACKET RBRACKET
    (85) array -> . LBRACKET datosarray RBRACKET
    (140) set -> . SET LBRACKET elementoSet RBRACKET

    END             reduce using rule 29 (cuerpo -> .)
    ELSE            reduce using rule 29 (cuerpo -> .)
    LOCALVAR        shift and go to state 17
    FOR             shift and go to state 19
    IF              shift and go to state 23
    UNLESS          shift and go to state 24
    PUTS            shift and go to state 25
    PRINT           shift and go to state 26
    STRING          shift and go to state 29
    INTEGERW        shift and go to state 30
    INTEGER         shift and go to state 28
    VAR             shift and go to state 31
    CONSTANT        shift and go to state 32
    LCURLYBRACKET   shift and go to state 33
    LBRACKET        shift and go to state 27
    SET             shift and go to state 34

    cuerpo                         shift and go to state 254
    declaracion                    shift and go to state 4
    asignacion                     shift and go to state 5
    loop                           shift and go to state 6
    estructurasDatos               shift and go to state 7
    if                             shift and go to state 8
    unless                         shift and go to state 9
    impresion                      shift and go to state 10
    operacionSet                   shift and go to state 11
    operacionarray                 shift and go to state 12
    operacionHash                  shift and go to state 13
    string                         shift and go to state 14
    integer                        shift and go to state 15
    tiposvariables                 shift and go to state 18
    hash                           shift and go to state 20
    array                          shift and go to state 21
    set                            shift and go to state 22

state 205

    (128) unless -> UNLESS expresionCondicional cuerpo ELSE . cuerpo END
    (17) cuerpo -> . declaracion cuerpo
    (18) cuerpo -> . asignacion cuerpo
    (19) cuerpo -> . loop cuerpo
    (20) cuerpo -> . estructurasDatos cuerpo
    (21) cuerpo -> . if cuerpo
    (22) cuerpo -> . unless cuerpo
    (23) cuerpo -> . impresion cuerpo
    (24) cuerpo -> . operacionSet cuerpo
    (25) cuerpo -> . operacionarray cuerpo
    (26) cuerpo -> . operacionHash cuerpo
    (27) cuerpo -> . string cuerpo
    (28) cuerpo -> . integer cuerpo
    (29) cuerpo -> .
    (31) declaracion -> . tiposvariables EQUAL datos
    (32) declaracion -> . tiposvariables EQUAL estructurasDatos
    (33) declaracion -> . tiposvariables EQUAL expresion
    (34) declaracion -> . tiposvariables EQUAL declaracion
    (35) declaracion -> . tiposvariables EQUAL casting
    (36) asignacion -> . LOCALVAR PLUSASSIGN datosAsignacion
    (37) asignacion -> . LOCALVAR MINASSIGN datosAsignacion
    (38) asignacion -> . LOCALVAR DIVASSIGN datosAsignacion
    (39) asignacion -> . LOCALVAR TIMESASSIGN datosAsignacion
    (40) asignacion -> . LOCALVAR MODASSIGN datosAsignacion
    (41) asignacion -> . LOCALVAR EXPASSIGN datosAsignacion
    (30) loop -> . FOR LOCALVAR IN rango cuerpo END
    (50) estructurasDatos -> . hash
    (51) estructurasDatos -> . array
    (52) estructurasDatos -> . set
    (107) if -> . IF datoscompletos operadores datoscompletos cuerpo END
    (108) if -> . IF datoscompletos operadores datoscompletos cuerpo else
    (128) unless -> . UNLESS expresionCondicional cuerpo ELSE cuerpo END
    (65) impresion -> . PUTS datos
    (66) impresion -> . PUTS LOCALVAR
    (67) impresion -> . PRINT datos
    (68) impresion -> . PRINT LOCALVAR
    (146) operacionSet -> . set DOT ADD LPARENTHESES datos RPARENTHESES
    (147) operacionSet -> . set DOT ADD LPARENTHESES tiposvariables RPARENTHESES
    (148) operacionSet -> . set DOT CLEAR
    (149) operacionSet -> . set DOT DELETE LPARENTHESES datos RPARENTHESES
    (150) operacionSet -> . set DOT DELETE LPARENTHESES tiposvariables RPARENTHESES
    (92) operacionarray -> . array LBRACKET INTEGER RBRACKET
    (93) operacionarray -> . array DOT TAKE LPARENTHESES INTEGER RPARENTHESES
    (94) operacionarray -> . array DOT DROP LPARENTHESES INTEGER RPARENTHESES
    (95) operacionarray -> . array DOT push maspush
    (100) operacionarray -> . array DOT POP
    (101) operacionarray -> . array DOT POP LPARENTHESES INTEGER RPARENTHESES
    (102) operacionarray -> . array DOT DELETE LPARENTHESES INTEGER RPARENTHESES
    (103) operacionarray -> . array DOT LENGTH LPARENTHESES RPARENTHESES
    (104) operacionarray -> . array DOT EMPTY QUESTIONMARK
    (58) operacionHash -> . hash LBRACKET datos RBRACKET
    (59) operacionHash -> . hash LBRACKET datos RBRACKET EQUAL datos
    (60) operacionHash -> . hash DOT INCLUDE QUESTIONMARK LPARENTHESES datos RPARENTHESES
    (61) operacionHash -> . hash DOT DELETE LPARENTHESES datos RPARENTHESES
    (62) operacionHash -> . hash DOT KEYS
    (151) string -> . STRING PLUS STRING
    (152) string -> . STRING MULTIPLY INTEGER
    (153) string -> . STRING DOT stringOpt
    (117) integer -> . INTEGERW DOT SQRT LPARENTHESES INTEGER RPARENTHESES
    (118) integer -> . INTEGER DOT CEIL LPARENTHESES RPARENTHESES
    (119) integer -> . INTEGER DOT CEIL LPARENTHESES INTEGER RPARENTHESES
    (120) integer -> . INTEGER DOT FLOOR LPARENTHESES RPARENTHESES
    (121) integer -> . INTEGER DOT FLOOR LPARENTHESES INTEGER RPARENTHESES
    (122) integer -> . INTEGER DOT ABS
    (44) tiposvariables -> . VAR
    (45) tiposvariables -> . LOCALVAR
    (46) tiposvariables -> . CONSTANT
    (53) hash -> . LCURLYBRACKET elementoHash RCURLYBRACKET
    (84) array -> . LBRACKET RBRACKET
    (85) array -> . LBRACKET datosarray RBRACKET
    (140) set -> . SET LBRACKET elementoSet RBRACKET

    END             reduce using rule 29 (cuerpo -> .)
    LOCALVAR        shift and go to state 17
    FOR             shift and go to state 19
    IF              shift and go to state 23
    UNLESS          shift and go to state 24
    PUTS            shift and go to state 25
    PRINT           shift and go to state 26
    STRING          shift and go to state 29
    INTEGERW        shift and go to state 30
    INTEGER         shift and go to state 28
    VAR             shift and go to state 31
    CONSTANT        shift and go to state 32
    LCURLYBRACKET   shift and go to state 33
    LBRACKET        shift and go to state 27
    SET             shift and go to state 34

    cuerpo                         shift and go to state 255
    declaracion                    shift and go to state 4
    asignacion                     shift and go to state 5
    loop                           shift and go to state 6
    estructurasDatos               shift and go to state 7
    if                             shift and go to state 8
    unless                         shift and go to state 9
    impresion                      shift and go to state 10
    operacionSet                   shift and go to state 11
    operacionarray                 shift and go to state 12
    operacionHash                  shift and go to state 13
    string                         shift and go to state 14
    integer                        shift and go to state 15
    tiposvariables                 shift and go to state 18
    hash                           shift and go to state 20
    array                          shift and go to state 21
    set                            shift and go to state 22

state 206

    (135) boolean -> boolean operadorBinario boolean .
    (135) boolean -> boolean . operadorBinario boolean
    (131) operadorBinario -> . DOUBLEAMPERSAND
    (132) operadorBinario -> . DOUBLEPIPE

  ! shift/reduce conflict for DOUBLEAMPERSAND resolved as shift
  ! shift/reduce conflict for DOUBLEPIPE resolved as shift
    LOCALVAR        reduce using rule 135 (boolean -> boolean operadorBinario boolean .)
    FOR             reduce using rule 135 (boolean -> boolean operadorBinario boolean .)
    IF              reduce using rule 135 (boolean -> boolean operadorBinario boolean .)
    UNLESS          reduce using rule 135 (boolean -> boolean operadorBinario boolean .)
    PUTS            reduce using rule 135 (boolean -> boolean operadorBinario boolean .)
    PRINT           reduce using rule 135 (boolean -> boolean operadorBinario boolean .)
    STRING          reduce using rule 135 (boolean -> boolean operadorBinario boolean .)
    INTEGERW        reduce using rule 135 (boolean -> boolean operadorBinario boolean .)
    INTEGER         reduce using rule 135 (boolean -> boolean operadorBinario boolean .)
    VAR             reduce using rule 135 (boolean -> boolean operadorBinario boolean .)
    CONSTANT        reduce using rule 135 (boolean -> boolean operadorBinario boolean .)
    LCURLYBRACKET   reduce using rule 135 (boolean -> boolean operadorBinario boolean .)
    LBRACKET        reduce using rule 135 (boolean -> boolean operadorBinario boolean .)
    SET             reduce using rule 135 (boolean -> boolean operadorBinario boolean .)
    ELSE            reduce using rule 135 (boolean -> boolean operadorBinario boolean .)
    RPARENTHESES    reduce using rule 135 (boolean -> boolean operadorBinario boolean .)
    DOUBLEAMPERSAND shift and go to state 147
    DOUBLEPIPE      shift and go to state 148

  ! DOUBLEAMPERSAND [ reduce using rule 135 (boolean -> boolean operadorBinario boolean .) ]
  ! DOUBLEPIPE      [ reduce using rule 135 (boolean -> boolean operadorBinario boolean .) ]

    operadorBinario                shift and go to state 146

state 207

    (134) boolean -> EXCLAMATION . LPARENTHESES condiciones RPARENTHESES

    LPARENTHESES    shift and go to state 256


state 208

    (130) expresionCondicional -> EXCLAMATION LPARENTHESES boolean . RPARENTHESES
    (135) boolean -> boolean . operadorBinario boolean
    (131) operadorBinario -> . DOUBLEAMPERSAND
    (132) operadorBinario -> . DOUBLEPIPE

    RPARENTHESES    shift and go to state 257
    DOUBLEAMPERSAND shift and go to state 147
    DOUBLEPIPE      shift and go to state 148

    operadorBinario                shift and go to state 146

state 209

    (134) boolean -> EXCLAMATION LPARENTHESES condiciones . RPARENTHESES
    (133) boolean -> condiciones .

  ! shift/reduce conflict for RPARENTHESES resolved as shift
    RPARENTHESES    shift and go to state 258
    DOUBLEAMPERSAND reduce using rule 133 (boolean -> condiciones .)
    DOUBLEPIPE      reduce using rule 133 (boolean -> condiciones .)

  ! RPARENTHESES    [ reduce using rule 133 (boolean -> condiciones .) ]


state 210

    (136) condiciones -> tiposvariables operadores tiposvariables .

    DOUBLEAMPERSAND reduce using rule 136 (condiciones -> tiposvariables operadores tiposvariables .)
    DOUBLEPIPE      reduce using rule 136 (condiciones -> tiposvariables operadores tiposvariables .)
    LOCALVAR        reduce using rule 136 (condiciones -> tiposvariables operadores tiposvariables .)
    FOR             reduce using rule 136 (condiciones -> tiposvariables operadores tiposvariables .)
    IF              reduce using rule 136 (condiciones -> tiposvariables operadores tiposvariables .)
    UNLESS          reduce using rule 136 (condiciones -> tiposvariables operadores tiposvariables .)
    PUTS            reduce using rule 136 (condiciones -> tiposvariables operadores tiposvariables .)
    PRINT           reduce using rule 136 (condiciones -> tiposvariables operadores tiposvariables .)
    STRING          reduce using rule 136 (condiciones -> tiposvariables operadores tiposvariables .)
    INTEGERW        reduce using rule 136 (condiciones -> tiposvariables operadores tiposvariables .)
    INTEGER         reduce using rule 136 (condiciones -> tiposvariables operadores tiposvariables .)
    VAR             reduce using rule 136 (condiciones -> tiposvariables operadores tiposvariables .)
    CONSTANT        reduce using rule 136 (condiciones -> tiposvariables operadores tiposvariables .)
    LCURLYBRACKET   reduce using rule 136 (condiciones -> tiposvariables operadores tiposvariables .)
    LBRACKET        reduce using rule 136 (condiciones -> tiposvariables operadores tiposvariables .)
    SET             reduce using rule 136 (condiciones -> tiposvariables operadores tiposvariables .)
    ELSE            reduce using rule 136 (condiciones -> tiposvariables operadores tiposvariables .)
    RPARENTHESES    reduce using rule 136 (condiciones -> tiposvariables operadores tiposvariables .)


state 211

    (138) condiciones -> tiposvariables operadores datos .

    DOUBLEAMPERSAND reduce using rule 138 (condiciones -> tiposvariables operadores datos .)
    DOUBLEPIPE      reduce using rule 138 (condiciones -> tiposvariables operadores datos .)
    LOCALVAR        reduce using rule 138 (condiciones -> tiposvariables operadores datos .)
    FOR             reduce using rule 138 (condiciones -> tiposvariables operadores datos .)
    IF              reduce using rule 138 (condiciones -> tiposvariables operadores datos .)
    UNLESS          reduce using rule 138 (condiciones -> tiposvariables operadores datos .)
    PUTS            reduce using rule 138 (condiciones -> tiposvariables operadores datos .)
    PRINT           reduce using rule 138 (condiciones -> tiposvariables operadores datos .)
    STRING          reduce using rule 138 (condiciones -> tiposvariables operadores datos .)
    INTEGERW        reduce using rule 138 (condiciones -> tiposvariables operadores datos .)
    INTEGER         reduce using rule 138 (condiciones -> tiposvariables operadores datos .)
    VAR             reduce using rule 138 (condiciones -> tiposvariables operadores datos .)
    CONSTANT        reduce using rule 138 (condiciones -> tiposvariables operadores datos .)
    LCURLYBRACKET   reduce using rule 138 (condiciones -> tiposvariables operadores datos .)
    LBRACKET        reduce using rule 138 (condiciones -> tiposvariables operadores datos .)
    SET             reduce using rule 138 (condiciones -> tiposvariables operadores datos .)
    ELSE            reduce using rule 138 (condiciones -> tiposvariables operadores datos .)
    RPARENTHESES    reduce using rule 138 (condiciones -> tiposvariables operadores datos .)


state 212

    (137) condiciones -> datos operadores datos .

    DOUBLEAMPERSAND reduce using rule 137 (condiciones -> datos operadores datos .)
    DOUBLEPIPE      reduce using rule 137 (condiciones -> datos operadores datos .)
    LOCALVAR        reduce using rule 137 (condiciones -> datos operadores datos .)
    FOR             reduce using rule 137 (condiciones -> datos operadores datos .)
    IF              reduce using rule 137 (condiciones -> datos operadores datos .)
    UNLESS          reduce using rule 137 (condiciones -> datos operadores datos .)
    PUTS            reduce using rule 137 (condiciones -> datos operadores datos .)
    PRINT           reduce using rule 137 (condiciones -> datos operadores datos .)
    STRING          reduce using rule 137 (condiciones -> datos operadores datos .)
    INTEGERW        reduce using rule 137 (condiciones -> datos operadores datos .)
    INTEGER         reduce using rule 137 (condiciones -> datos operadores datos .)
    VAR             reduce using rule 137 (condiciones -> datos operadores datos .)
    CONSTANT        reduce using rule 137 (condiciones -> datos operadores datos .)
    LCURLYBRACKET   reduce using rule 137 (condiciones -> datos operadores datos .)
    LBRACKET        reduce using rule 137 (condiciones -> datos operadores datos .)
    SET             reduce using rule 137 (condiciones -> datos operadores datos .)
    ELSE            reduce using rule 137 (condiciones -> datos operadores datos .)
    RPARENTHESES    reduce using rule 137 (condiciones -> datos operadores datos .)


state 213

    (139) condiciones -> datos operadores tiposvariables .

    DOUBLEAMPERSAND reduce using rule 139 (condiciones -> datos operadores tiposvariables .)
    DOUBLEPIPE      reduce using rule 139 (condiciones -> datos operadores tiposvariables .)
    LOCALVAR        reduce using rule 139 (condiciones -> datos operadores tiposvariables .)
    FOR             reduce using rule 139 (condiciones -> datos operadores tiposvariables .)
    IF              reduce using rule 139 (condiciones -> datos operadores tiposvariables .)
    UNLESS          reduce using rule 139 (condiciones -> datos operadores tiposvariables .)
    PUTS            reduce using rule 139 (condiciones -> datos operadores tiposvariables .)
    PRINT           reduce using rule 139 (condiciones -> datos operadores tiposvariables .)
    STRING          reduce using rule 139 (condiciones -> datos operadores tiposvariables .)
    INTEGERW        reduce using rule 139 (condiciones -> datos operadores tiposvariables .)
    INTEGER         reduce using rule 139 (condiciones -> datos operadores tiposvariables .)
    VAR             reduce using rule 139 (condiciones -> datos operadores tiposvariables .)
    CONSTANT        reduce using rule 139 (condiciones -> datos operadores tiposvariables .)
    LCURLYBRACKET   reduce using rule 139 (condiciones -> datos operadores tiposvariables .)
    LBRACKET        reduce using rule 139 (condiciones -> datos operadores tiposvariables .)
    SET             reduce using rule 139 (condiciones -> datos operadores tiposvariables .)
    ELSE            reduce using rule 139 (condiciones -> datos operadores tiposvariables .)
    RPARENTHESES    reduce using rule 139 (condiciones -> datos operadores tiposvariables .)


state 214

    (91) datosarray -> datosarray COMMA datosvarios .

    RBRACKET        reduce using rule 91 (datosarray -> datosarray COMMA datosvarios .)
    COMMA           reduce using rule 91 (datosarray -> datosarray COMMA datosvarios .)


state 215

    (118) integer -> INTEGER DOT CEIL LPARENTHESES . RPARENTHESES
    (119) integer -> INTEGER DOT CEIL LPARENTHESES . INTEGER RPARENTHESES

    RPARENTHESES    shift and go to state 260
    INTEGER         shift and go to state 259


state 216

    (120) integer -> INTEGER DOT FLOOR LPARENTHESES . RPARENTHESES
    (121) integer -> INTEGER DOT FLOOR LPARENTHESES . INTEGER RPARENTHESES

    RPARENTHESES    shift and go to state 262
    INTEGER         shift and go to state 261


state 217

    (158) stringOpt -> INSERT LPARENTHESES . INTEGER COMMA STRING RPARENTHESES

    INTEGER         shift and go to state 263


state 218

    (117) integer -> INTEGERW DOT SQRT LPARENTHESES . INTEGER RPARENTHESES

    INTEGER         shift and go to state 264


state 219

    (54) elementoHash -> datos EQUAL GREATERTHAN . datos maselementos
    (47) datos -> . INTEGER
    (48) datos -> . FLOAT
    (49) datos -> . STRING

    INTEGER         shift and go to state 78
    FLOAT           shift and go to state 79
    STRING          shift and go to state 70

    datos                          shift and go to state 265

state 220

    (140) set -> SET LBRACKET elementoSet RBRACKET .

    DOT             reduce using rule 140 (set -> SET LBRACKET elementoSet RBRACKET .)
    LOCALVAR        reduce using rule 140 (set -> SET LBRACKET elementoSet RBRACKET .)
    FOR             reduce using rule 140 (set -> SET LBRACKET elementoSet RBRACKET .)
    IF              reduce using rule 140 (set -> SET LBRACKET elementoSet RBRACKET .)
    UNLESS          reduce using rule 140 (set -> SET LBRACKET elementoSet RBRACKET .)
    PUTS            reduce using rule 140 (set -> SET LBRACKET elementoSet RBRACKET .)
    PRINT           reduce using rule 140 (set -> SET LBRACKET elementoSet RBRACKET .)
    STRING          reduce using rule 140 (set -> SET LBRACKET elementoSet RBRACKET .)
    INTEGERW        reduce using rule 140 (set -> SET LBRACKET elementoSet RBRACKET .)
    INTEGER         reduce using rule 140 (set -> SET LBRACKET elementoSet RBRACKET .)
    VAR             reduce using rule 140 (set -> SET LBRACKET elementoSet RBRACKET .)
    CONSTANT        reduce using rule 140 (set -> SET LBRACKET elementoSet RBRACKET .)
    LCURLYBRACKET   reduce using rule 140 (set -> SET LBRACKET elementoSet RBRACKET .)
    LBRACKET        reduce using rule 140 (set -> SET LBRACKET elementoSet RBRACKET .)
    SET             reduce using rule 140 (set -> SET LBRACKET elementoSet RBRACKET .)
    $end            reduce using rule 140 (set -> SET LBRACKET elementoSet RBRACKET .)
    ELSE            reduce using rule 140 (set -> SET LBRACKET elementoSet RBRACKET .)
    END             reduce using rule 140 (set -> SET LBRACKET elementoSet RBRACKET .)
    RETURN          reduce using rule 140 (set -> SET LBRACKET elementoSet RBRACKET .)


state 221

    (143) elementoSet -> datos otroElemento .

    RBRACKET        reduce using rule 143 (elementoSet -> datos otroElemento .)
    COMMA           reduce using rule 143 (elementoSet -> datos otroElemento .)


state 222

    (145) otroElemento -> COMMA . elementoSet otroElemento
    (141) elementoSet -> .
    (142) elementoSet -> . datos
    (143) elementoSet -> . datos otroElemento
    (47) datos -> . INTEGER
    (48) datos -> . FLOAT
    (49) datos -> . STRING

    RBRACKET        reduce using rule 141 (elementoSet -> .)
    COMMA           reduce using rule 141 (elementoSet -> .)
    INTEGER         shift and go to state 78
    FLOAT           shift and go to state 79
    STRING          shift and go to state 70

    elementoSet                    shift and go to state 266
    datos                          shift and go to state 169

state 223

    (8) argumentos -> LOCALVAR EQUAL . LCURLYBRACKET RCURLYBRACKET
    (11) variosargumentos -> LOCALVAR EQUAL . datos
    (13) variosargumentos -> LOCALVAR EQUAL . datos masargumentos
    (47) datos -> . INTEGER
    (48) datos -> . FLOAT
    (49) datos -> . STRING

    LCURLYBRACKET   shift and go to state 267
    INTEGER         shift and go to state 78
    FLOAT           shift and go to state 79
    STRING          shift and go to state 70

    datos                          shift and go to state 268

state 224

    (9) argumentos -> LOCALVAR TWOPOINTS . datos
    (47) datos -> . INTEGER
    (48) datos -> . FLOAT
    (49) datos -> . STRING

    INTEGER         shift and go to state 78
    FLOAT           shift and go to state 79
    STRING          shift and go to state 70

    datos                          shift and go to state 269

state 225

    (12) variosargumentos -> LOCALVAR masargumentos .

    RPARENTHESES    reduce using rule 12 (variosargumentos -> LOCALVAR masargumentos .)


state 226

    (14) masargumentos -> COMMA . variosargumentos
    (10) variosargumentos -> . LOCALVAR
    (11) variosargumentos -> . LOCALVAR EQUAL datos
    (12) variosargumentos -> . LOCALVAR masargumentos
    (13) variosargumentos -> . LOCALVAR EQUAL datos masargumentos

    LOCALVAR        shift and go to state 271

    variosargumentos               shift and go to state 270

state 227

    (3) funcion -> DEF LOCALVAR LPARENTHESES argumentos RPARENTHESES . cuerpo END
    (4) funcion -> DEF LOCALVAR LPARENTHESES argumentos RPARENTHESES . cuerpo retornar END
    (17) cuerpo -> . declaracion cuerpo
    (18) cuerpo -> . asignacion cuerpo
    (19) cuerpo -> . loop cuerpo
    (20) cuerpo -> . estructurasDatos cuerpo
    (21) cuerpo -> . if cuerpo
    (22) cuerpo -> . unless cuerpo
    (23) cuerpo -> . impresion cuerpo
    (24) cuerpo -> . operacionSet cuerpo
    (25) cuerpo -> . operacionarray cuerpo
    (26) cuerpo -> . operacionHash cuerpo
    (27) cuerpo -> . string cuerpo
    (28) cuerpo -> . integer cuerpo
    (29) cuerpo -> .
    (31) declaracion -> . tiposvariables EQUAL datos
    (32) declaracion -> . tiposvariables EQUAL estructurasDatos
    (33) declaracion -> . tiposvariables EQUAL expresion
    (34) declaracion -> . tiposvariables EQUAL declaracion
    (35) declaracion -> . tiposvariables EQUAL casting
    (36) asignacion -> . LOCALVAR PLUSASSIGN datosAsignacion
    (37) asignacion -> . LOCALVAR MINASSIGN datosAsignacion
    (38) asignacion -> . LOCALVAR DIVASSIGN datosAsignacion
    (39) asignacion -> . LOCALVAR TIMESASSIGN datosAsignacion
    (40) asignacion -> . LOCALVAR MODASSIGN datosAsignacion
    (41) asignacion -> . LOCALVAR EXPASSIGN datosAsignacion
    (30) loop -> . FOR LOCALVAR IN rango cuerpo END
    (50) estructurasDatos -> . hash
    (51) estructurasDatos -> . array
    (52) estructurasDatos -> . set
    (107) if -> . IF datoscompletos operadores datoscompletos cuerpo END
    (108) if -> . IF datoscompletos operadores datoscompletos cuerpo else
    (128) unless -> . UNLESS expresionCondicional cuerpo ELSE cuerpo END
    (65) impresion -> . PUTS datos
    (66) impresion -> . PUTS LOCALVAR
    (67) impresion -> . PRINT datos
    (68) impresion -> . PRINT LOCALVAR
    (146) operacionSet -> . set DOT ADD LPARENTHESES datos RPARENTHESES
    (147) operacionSet -> . set DOT ADD LPARENTHESES tiposvariables RPARENTHESES
    (148) operacionSet -> . set DOT CLEAR
    (149) operacionSet -> . set DOT DELETE LPARENTHESES datos RPARENTHESES
    (150) operacionSet -> . set DOT DELETE LPARENTHESES tiposvariables RPARENTHESES
    (92) operacionarray -> . array LBRACKET INTEGER RBRACKET
    (93) operacionarray -> . array DOT TAKE LPARENTHESES INTEGER RPARENTHESES
    (94) operacionarray -> . array DOT DROP LPARENTHESES INTEGER RPARENTHESES
    (95) operacionarray -> . array DOT push maspush
    (100) operacionarray -> . array DOT POP
    (101) operacionarray -> . array DOT POP LPARENTHESES INTEGER RPARENTHESES
    (102) operacionarray -> . array DOT DELETE LPARENTHESES INTEGER RPARENTHESES
    (103) operacionarray -> . array DOT LENGTH LPARENTHESES RPARENTHESES
    (104) operacionarray -> . array DOT EMPTY QUESTIONMARK
    (58) operacionHash -> . hash LBRACKET datos RBRACKET
    (59) operacionHash -> . hash LBRACKET datos RBRACKET EQUAL datos
    (60) operacionHash -> . hash DOT INCLUDE QUESTIONMARK LPARENTHESES datos RPARENTHESES
    (61) operacionHash -> . hash DOT DELETE LPARENTHESES datos RPARENTHESES
    (62) operacionHash -> . hash DOT KEYS
    (151) string -> . STRING PLUS STRING
    (152) string -> . STRING MULTIPLY INTEGER
    (153) string -> . STRING DOT stringOpt
    (117) integer -> . INTEGERW DOT SQRT LPARENTHESES INTEGER RPARENTHESES
    (118) integer -> . INTEGER DOT CEIL LPARENTHESES RPARENTHESES
    (119) integer -> . INTEGER DOT CEIL LPARENTHESES INTEGER RPARENTHESES
    (120) integer -> . INTEGER DOT FLOOR LPARENTHESES RPARENTHESES
    (121) integer -> . INTEGER DOT FLOOR LPARENTHESES INTEGER RPARENTHESES
    (122) integer -> . INTEGER DOT ABS
    (44) tiposvariables -> . VAR
    (45) tiposvariables -> . LOCALVAR
    (46) tiposvariables -> . CONSTANT
    (53) hash -> . LCURLYBRACKET elementoHash RCURLYBRACKET
    (84) array -> . LBRACKET RBRACKET
    (85) array -> . LBRACKET datosarray RBRACKET
    (140) set -> . SET LBRACKET elementoSet RBRACKET

    END             reduce using rule 29 (cuerpo -> .)
    RETURN          reduce using rule 29 (cuerpo -> .)
    LOCALVAR        shift and go to state 17
    FOR             shift and go to state 19
    IF              shift and go to state 23
    UNLESS          shift and go to state 24
    PUTS            shift and go to state 25
    PRINT           shift and go to state 26
    STRING          shift and go to state 29
    INTEGERW        shift and go to state 30
    INTEGER         shift and go to state 28
    VAR             shift and go to state 31
    CONSTANT        shift and go to state 32
    LCURLYBRACKET   shift and go to state 33
    LBRACKET        shift and go to state 27
    SET             shift and go to state 34

    cuerpo                         shift and go to state 272
    declaracion                    shift and go to state 4
    asignacion                     shift and go to state 5
    loop                           shift and go to state 6
    estructurasDatos               shift and go to state 7
    if                             shift and go to state 8
    unless                         shift and go to state 9
    impresion                      shift and go to state 10
    operacionSet                   shift and go to state 11
    operacionarray                 shift and go to state 12
    operacionHash                  shift and go to state 13
    string                         shift and go to state 14
    integer                        shift and go to state 15
    tiposvariables                 shift and go to state 18
    hash                           shift and go to state 20
    array                          shift and go to state 21
    set                            shift and go to state 22

state 228

    (6) argumentos -> MULTIPLY LOCALVAR .

    RPARENTHESES    reduce using rule 6 (argumentos -> MULTIPLY LOCALVAR .)


state 229

    (7) argumentos -> TWOSTARS LOCALVAR .

    RPARENTHESES    reduce using rule 7 (argumentos -> TWOSTARS LOCALVAR .)


state 230

    (159) casting -> STRING DOT TO_I .

    LOCALVAR        reduce using rule 159 (casting -> STRING DOT TO_I .)
    FOR             reduce using rule 159 (casting -> STRING DOT TO_I .)
    IF              reduce using rule 159 (casting -> STRING DOT TO_I .)
    UNLESS          reduce using rule 159 (casting -> STRING DOT TO_I .)
    PUTS            reduce using rule 159 (casting -> STRING DOT TO_I .)
    PRINT           reduce using rule 159 (casting -> STRING DOT TO_I .)
    STRING          reduce using rule 159 (casting -> STRING DOT TO_I .)
    INTEGERW        reduce using rule 159 (casting -> STRING DOT TO_I .)
    INTEGER         reduce using rule 159 (casting -> STRING DOT TO_I .)
    VAR             reduce using rule 159 (casting -> STRING DOT TO_I .)
    CONSTANT        reduce using rule 159 (casting -> STRING DOT TO_I .)
    LCURLYBRACKET   reduce using rule 159 (casting -> STRING DOT TO_I .)
    LBRACKET        reduce using rule 159 (casting -> STRING DOT TO_I .)
    SET             reduce using rule 159 (casting -> STRING DOT TO_I .)
    $end            reduce using rule 159 (casting -> STRING DOT TO_I .)
    ELSE            reduce using rule 159 (casting -> STRING DOT TO_I .)
    END             reduce using rule 159 (casting -> STRING DOT TO_I .)
    RETURN          reduce using rule 159 (casting -> STRING DOT TO_I .)


state 231

    (160) casting -> STRING DOT TO_F .

    LOCALVAR        reduce using rule 160 (casting -> STRING DOT TO_F .)
    FOR             reduce using rule 160 (casting -> STRING DOT TO_F .)
    IF              reduce using rule 160 (casting -> STRING DOT TO_F .)
    UNLESS          reduce using rule 160 (casting -> STRING DOT TO_F .)
    PUTS            reduce using rule 160 (casting -> STRING DOT TO_F .)
    PRINT           reduce using rule 160 (casting -> STRING DOT TO_F .)
    STRING          reduce using rule 160 (casting -> STRING DOT TO_F .)
    INTEGERW        reduce using rule 160 (casting -> STRING DOT TO_F .)
    INTEGER         reduce using rule 160 (casting -> STRING DOT TO_F .)
    VAR             reduce using rule 160 (casting -> STRING DOT TO_F .)
    CONSTANT        reduce using rule 160 (casting -> STRING DOT TO_F .)
    LCURLYBRACKET   reduce using rule 160 (casting -> STRING DOT TO_F .)
    LBRACKET        reduce using rule 160 (casting -> STRING DOT TO_F .)
    SET             reduce using rule 160 (casting -> STRING DOT TO_F .)
    $end            reduce using rule 160 (casting -> STRING DOT TO_F .)
    ELSE            reduce using rule 160 (casting -> STRING DOT TO_F .)
    END             reduce using rule 160 (casting -> STRING DOT TO_F .)
    RETURN          reduce using rule 160 (casting -> STRING DOT TO_F .)


state 232

    (76) masoperaciones -> operador expresion . masoperaciones
    (78) masoperaciones -> operador expresion .
    (76) masoperaciones -> . operador expresion masoperaciones
    (77) masoperaciones -> . operador number
    (78) masoperaciones -> . operador expresion
    (79) operador -> . PLUS
    (80) operador -> . MINUS
    (81) operador -> . MULTIPLY
    (82) operador -> . DIVIDE
    (83) operador -> . PERCENTAGE

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for PERCENTAGE resolved as shift
    LOCALVAR        reduce using rule 78 (masoperaciones -> operador expresion .)
    FOR             reduce using rule 78 (masoperaciones -> operador expresion .)
    IF              reduce using rule 78 (masoperaciones -> operador expresion .)
    UNLESS          reduce using rule 78 (masoperaciones -> operador expresion .)
    PUTS            reduce using rule 78 (masoperaciones -> operador expresion .)
    PRINT           reduce using rule 78 (masoperaciones -> operador expresion .)
    STRING          reduce using rule 78 (masoperaciones -> operador expresion .)
    INTEGERW        reduce using rule 78 (masoperaciones -> operador expresion .)
    INTEGER         reduce using rule 78 (masoperaciones -> operador expresion .)
    VAR             reduce using rule 78 (masoperaciones -> operador expresion .)
    CONSTANT        reduce using rule 78 (masoperaciones -> operador expresion .)
    LCURLYBRACKET   reduce using rule 78 (masoperaciones -> operador expresion .)
    LBRACKET        reduce using rule 78 (masoperaciones -> operador expresion .)
    SET             reduce using rule 78 (masoperaciones -> operador expresion .)
    $end            reduce using rule 78 (masoperaciones -> operador expresion .)
    ELSE            reduce using rule 78 (masoperaciones -> operador expresion .)
    END             reduce using rule 78 (masoperaciones -> operador expresion .)
    RETURN          reduce using rule 78 (masoperaciones -> operador expresion .)
    RPARENTHESES    reduce using rule 78 (masoperaciones -> operador expresion .)
    PLUS            shift and go to state 178
    MINUS           shift and go to state 179
    MULTIPLY        shift and go to state 180
    DIVIDE          shift and go to state 181
    PERCENTAGE      shift and go to state 182

  ! PLUS            [ reduce using rule 78 (masoperaciones -> operador expresion .) ]
  ! MINUS           [ reduce using rule 78 (masoperaciones -> operador expresion .) ]
  ! MULTIPLY        [ reduce using rule 78 (masoperaciones -> operador expresion .) ]
  ! DIVIDE          [ reduce using rule 78 (masoperaciones -> operador expresion .) ]
  ! PERCENTAGE      [ reduce using rule 78 (masoperaciones -> operador expresion .) ]

    operador                       shift and go to state 177
    masoperaciones                 shift and go to state 273

state 233

    (77) masoperaciones -> operador number .
    (74) operacion -> number . operador number
    (79) operador -> . PLUS
    (80) operador -> . MINUS
    (81) operador -> . MULTIPLY
    (82) operador -> . DIVIDE
    (83) operador -> . PERCENTAGE

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for PERCENTAGE resolved as shift
    LOCALVAR        reduce using rule 77 (masoperaciones -> operador number .)
    FOR             reduce using rule 77 (masoperaciones -> operador number .)
    IF              reduce using rule 77 (masoperaciones -> operador number .)
    UNLESS          reduce using rule 77 (masoperaciones -> operador number .)
    PUTS            reduce using rule 77 (masoperaciones -> operador number .)
    PRINT           reduce using rule 77 (masoperaciones -> operador number .)
    STRING          reduce using rule 77 (masoperaciones -> operador number .)
    INTEGERW        reduce using rule 77 (masoperaciones -> operador number .)
    INTEGER         reduce using rule 77 (masoperaciones -> operador number .)
    VAR             reduce using rule 77 (masoperaciones -> operador number .)
    CONSTANT        reduce using rule 77 (masoperaciones -> operador number .)
    LCURLYBRACKET   reduce using rule 77 (masoperaciones -> operador number .)
    LBRACKET        reduce using rule 77 (masoperaciones -> operador number .)
    SET             reduce using rule 77 (masoperaciones -> operador number .)
    $end            reduce using rule 77 (masoperaciones -> operador number .)
    ELSE            reduce using rule 77 (masoperaciones -> operador number .)
    END             reduce using rule 77 (masoperaciones -> operador number .)
    RETURN          reduce using rule 77 (masoperaciones -> operador number .)
    RPARENTHESES    reduce using rule 77 (masoperaciones -> operador number .)
    PLUS            shift and go to state 178
    MINUS           shift and go to state 179
    MULTIPLY        shift and go to state 180
    DIVIDE          shift and go to state 181
    PERCENTAGE      shift and go to state 182

  ! PLUS            [ reduce using rule 77 (masoperaciones -> operador number .) ]
  ! MINUS           [ reduce using rule 77 (masoperaciones -> operador number .) ]
  ! MULTIPLY        [ reduce using rule 77 (masoperaciones -> operador number .) ]
  ! DIVIDE          [ reduce using rule 77 (masoperaciones -> operador number .) ]
  ! PERCENTAGE      [ reduce using rule 77 (masoperaciones -> operador number .) ]

    operador                       shift and go to state 186

state 234

    (72) expresion -> LPARENTHESES operacion RPARENTHESES .
    (73) expresion -> LPARENTHESES operacion RPARENTHESES . masoperaciones
    (76) masoperaciones -> . operador expresion masoperaciones
    (77) masoperaciones -> . operador number
    (78) masoperaciones -> . operador expresion
    (79) operador -> . PLUS
    (80) operador -> . MINUS
    (81) operador -> . MULTIPLY
    (82) operador -> . DIVIDE
    (83) operador -> . PERCENTAGE

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for PERCENTAGE resolved as shift
    LOCALVAR        reduce using rule 72 (expresion -> LPARENTHESES operacion RPARENTHESES .)
    FOR             reduce using rule 72 (expresion -> LPARENTHESES operacion RPARENTHESES .)
    IF              reduce using rule 72 (expresion -> LPARENTHESES operacion RPARENTHESES .)
    UNLESS          reduce using rule 72 (expresion -> LPARENTHESES operacion RPARENTHESES .)
    PUTS            reduce using rule 72 (expresion -> LPARENTHESES operacion RPARENTHESES .)
    PRINT           reduce using rule 72 (expresion -> LPARENTHESES operacion RPARENTHESES .)
    STRING          reduce using rule 72 (expresion -> LPARENTHESES operacion RPARENTHESES .)
    INTEGERW        reduce using rule 72 (expresion -> LPARENTHESES operacion RPARENTHESES .)
    INTEGER         reduce using rule 72 (expresion -> LPARENTHESES operacion RPARENTHESES .)
    VAR             reduce using rule 72 (expresion -> LPARENTHESES operacion RPARENTHESES .)
    CONSTANT        reduce using rule 72 (expresion -> LPARENTHESES operacion RPARENTHESES .)
    LCURLYBRACKET   reduce using rule 72 (expresion -> LPARENTHESES operacion RPARENTHESES .)
    LBRACKET        reduce using rule 72 (expresion -> LPARENTHESES operacion RPARENTHESES .)
    SET             reduce using rule 72 (expresion -> LPARENTHESES operacion RPARENTHESES .)
    $end            reduce using rule 72 (expresion -> LPARENTHESES operacion RPARENTHESES .)
    ELSE            reduce using rule 72 (expresion -> LPARENTHESES operacion RPARENTHESES .)
    END             reduce using rule 72 (expresion -> LPARENTHESES operacion RPARENTHESES .)
    RETURN          reduce using rule 72 (expresion -> LPARENTHESES operacion RPARENTHESES .)
    RPARENTHESES    reduce using rule 72 (expresion -> LPARENTHESES operacion RPARENTHESES .)
    PLUS            shift and go to state 178
    MINUS           shift and go to state 179
    MULTIPLY        shift and go to state 180
    DIVIDE          shift and go to state 181
    PERCENTAGE      shift and go to state 182

  ! PLUS            [ reduce using rule 72 (expresion -> LPARENTHESES operacion RPARENTHESES .) ]
  ! MINUS           [ reduce using rule 72 (expresion -> LPARENTHESES operacion RPARENTHESES .) ]
  ! MULTIPLY        [ reduce using rule 72 (expresion -> LPARENTHESES operacion RPARENTHESES .) ]
  ! DIVIDE          [ reduce using rule 72 (expresion -> LPARENTHESES operacion RPARENTHESES .) ]
  ! PERCENTAGE      [ reduce using rule 72 (expresion -> LPARENTHESES operacion RPARENTHESES .) ]

    masoperaciones                 shift and go to state 274
    operador                       shift and go to state 177

state 235

    (161) casting -> number DOT TO_S .

    LOCALVAR        reduce using rule 161 (casting -> number DOT TO_S .)
    FOR             reduce using rule 161 (casting -> number DOT TO_S .)
    IF              reduce using rule 161 (casting -> number DOT TO_S .)
    UNLESS          reduce using rule 161 (casting -> number DOT TO_S .)
    PUTS            reduce using rule 161 (casting -> number DOT TO_S .)
    PRINT           reduce using rule 161 (casting -> number DOT TO_S .)
    STRING          reduce using rule 161 (casting -> number DOT TO_S .)
    INTEGERW        reduce using rule 161 (casting -> number DOT TO_S .)
    INTEGER         reduce using rule 161 (casting -> number DOT TO_S .)
    VAR             reduce using rule 161 (casting -> number DOT TO_S .)
    CONSTANT        reduce using rule 161 (casting -> number DOT TO_S .)
    LCURLYBRACKET   reduce using rule 161 (casting -> number DOT TO_S .)
    LBRACKET        reduce using rule 161 (casting -> number DOT TO_S .)
    SET             reduce using rule 161 (casting -> number DOT TO_S .)
    $end            reduce using rule 161 (casting -> number DOT TO_S .)
    ELSE            reduce using rule 161 (casting -> number DOT TO_S .)
    END             reduce using rule 161 (casting -> number DOT TO_S .)
    RETURN          reduce using rule 161 (casting -> number DOT TO_S .)


state 236

    (74) operacion -> number operador number .

    PLUS            reduce using rule 74 (operacion -> number operador number .)
    MINUS           reduce using rule 74 (operacion -> number operador number .)
    MULTIPLY        reduce using rule 74 (operacion -> number operador number .)
    DIVIDE          reduce using rule 74 (operacion -> number operador number .)
    PERCENTAGE      reduce using rule 74 (operacion -> number operador number .)
    LOCALVAR        reduce using rule 74 (operacion -> number operador number .)
    FOR             reduce using rule 74 (operacion -> number operador number .)
    IF              reduce using rule 74 (operacion -> number operador number .)
    UNLESS          reduce using rule 74 (operacion -> number operador number .)
    PUTS            reduce using rule 74 (operacion -> number operador number .)
    PRINT           reduce using rule 74 (operacion -> number operador number .)
    STRING          reduce using rule 74 (operacion -> number operador number .)
    INTEGERW        reduce using rule 74 (operacion -> number operador number .)
    INTEGER         reduce using rule 74 (operacion -> number operador number .)
    VAR             reduce using rule 74 (operacion -> number operador number .)
    CONSTANT        reduce using rule 74 (operacion -> number operador number .)
    LCURLYBRACKET   reduce using rule 74 (operacion -> number operador number .)
    LBRACKET        reduce using rule 74 (operacion -> number operador number .)
    SET             reduce using rule 74 (operacion -> number operador number .)
    $end            reduce using rule 74 (operacion -> number operador number .)
    ELSE            reduce using rule 74 (operacion -> number operador number .)
    END             reduce using rule 74 (operacion -> number operador number .)
    RETURN          reduce using rule 74 (operacion -> number operador number .)
    RPARENTHESES    reduce using rule 74 (operacion -> number operador number .)


state 237

    (30) loop -> FOR LOCALVAR IN rango cuerpo . END

    END             shift and go to state 275


state 238

    (63) rango -> INTEGER RANGEINCLUSIVE . INTEGER

    INTEGER         shift and go to state 276


state 239

    (64) rango -> INTEGER RANGEXCLUSIVE . INTEGER

    INTEGER         shift and go to state 277


state 240

    (59) operacionHash -> hash LBRACKET datos RBRACKET EQUAL . datos
    (47) datos -> . INTEGER
    (48) datos -> . FLOAT
    (49) datos -> . STRING

    INTEGER         shift and go to state 78
    FLOAT           shift and go to state 79
    STRING          shift and go to state 70

    datos                          shift and go to state 278

state 241

    (60) operacionHash -> hash DOT INCLUDE QUESTIONMARK LPARENTHESES . datos RPARENTHESES
    (47) datos -> . INTEGER
    (48) datos -> . FLOAT
    (49) datos -> . STRING

    INTEGER         shift and go to state 78
    FLOAT           shift and go to state 79
    STRING          shift and go to state 70

    datos                          shift and go to state 279

state 242

    (61) operacionHash -> hash DOT DELETE LPARENTHESES datos . RPARENTHESES

    RPARENTHESES    shift and go to state 280


state 243

    (93) operacionarray -> array DOT TAKE LPARENTHESES INTEGER . RPARENTHESES

    RPARENTHESES    shift and go to state 281


state 244

    (94) operacionarray -> array DOT DROP LPARENTHESES INTEGER . RPARENTHESES

    RPARENTHESES    shift and go to state 282


state 245

    (99) maspush -> DOT push . maspush
    (98) maspush -> .
    (99) maspush -> . DOT push maspush

    LOCALVAR        reduce using rule 98 (maspush -> .)
    FOR             reduce using rule 98 (maspush -> .)
    IF              reduce using rule 98 (maspush -> .)
    UNLESS          reduce using rule 98 (maspush -> .)
    PUTS            reduce using rule 98 (maspush -> .)
    PRINT           reduce using rule 98 (maspush -> .)
    STRING          reduce using rule 98 (maspush -> .)
    INTEGERW        reduce using rule 98 (maspush -> .)
    INTEGER         reduce using rule 98 (maspush -> .)
    VAR             reduce using rule 98 (maspush -> .)
    CONSTANT        reduce using rule 98 (maspush -> .)
    LCURLYBRACKET   reduce using rule 98 (maspush -> .)
    LBRACKET        reduce using rule 98 (maspush -> .)
    SET             reduce using rule 98 (maspush -> .)
    $end            reduce using rule 98 (maspush -> .)
    ELSE            reduce using rule 98 (maspush -> .)
    END             reduce using rule 98 (maspush -> .)
    RETURN          reduce using rule 98 (maspush -> .)
    DOT             shift and go to state 195

    maspush                        shift and go to state 283

state 246

    (101) operacionarray -> array DOT POP LPARENTHESES INTEGER . RPARENTHESES

    RPARENTHESES    shift and go to state 284


state 247

    (102) operacionarray -> array DOT DELETE LPARENTHESES INTEGER . RPARENTHESES

    RPARENTHESES    shift and go to state 285


state 248

    (103) operacionarray -> array DOT LENGTH LPARENTHESES RPARENTHESES .

    LOCALVAR        reduce using rule 103 (operacionarray -> array DOT LENGTH LPARENTHESES RPARENTHESES .)
    FOR             reduce using rule 103 (operacionarray -> array DOT LENGTH LPARENTHESES RPARENTHESES .)
    IF              reduce using rule 103 (operacionarray -> array DOT LENGTH LPARENTHESES RPARENTHESES .)
    UNLESS          reduce using rule 103 (operacionarray -> array DOT LENGTH LPARENTHESES RPARENTHESES .)
    PUTS            reduce using rule 103 (operacionarray -> array DOT LENGTH LPARENTHESES RPARENTHESES .)
    PRINT           reduce using rule 103 (operacionarray -> array DOT LENGTH LPARENTHESES RPARENTHESES .)
    STRING          reduce using rule 103 (operacionarray -> array DOT LENGTH LPARENTHESES RPARENTHESES .)
    INTEGERW        reduce using rule 103 (operacionarray -> array DOT LENGTH LPARENTHESES RPARENTHESES .)
    INTEGER         reduce using rule 103 (operacionarray -> array DOT LENGTH LPARENTHESES RPARENTHESES .)
    VAR             reduce using rule 103 (operacionarray -> array DOT LENGTH LPARENTHESES RPARENTHESES .)
    CONSTANT        reduce using rule 103 (operacionarray -> array DOT LENGTH LPARENTHESES RPARENTHESES .)
    LCURLYBRACKET   reduce using rule 103 (operacionarray -> array DOT LENGTH LPARENTHESES RPARENTHESES .)
    LBRACKET        reduce using rule 103 (operacionarray -> array DOT LENGTH LPARENTHESES RPARENTHESES .)
    SET             reduce using rule 103 (operacionarray -> array DOT LENGTH LPARENTHESES RPARENTHESES .)
    $end            reduce using rule 103 (operacionarray -> array DOT LENGTH LPARENTHESES RPARENTHESES .)
    ELSE            reduce using rule 103 (operacionarray -> array DOT LENGTH LPARENTHESES RPARENTHESES .)
    END             reduce using rule 103 (operacionarray -> array DOT LENGTH LPARENTHESES RPARENTHESES .)
    RETURN          reduce using rule 103 (operacionarray -> array DOT LENGTH LPARENTHESES RPARENTHESES .)


state 249

    (96) push -> PUSH LPARENTHESES datosvarios . RPARENTHESES

    RPARENTHESES    shift and go to state 286


state 250

    (146) operacionSet -> set DOT ADD LPARENTHESES datos . RPARENTHESES

    RPARENTHESES    shift and go to state 287


state 251

    (147) operacionSet -> set DOT ADD LPARENTHESES tiposvariables . RPARENTHESES

    RPARENTHESES    shift and go to state 288


state 252

    (149) operacionSet -> set DOT DELETE LPARENTHESES datos . RPARENTHESES

    RPARENTHESES    shift and go to state 289


state 253

    (150) operacionSet -> set DOT DELETE LPARENTHESES tiposvariables . RPARENTHESES

    RPARENTHESES    shift and go to state 290


state 254

    (107) if -> IF datoscompletos operadores datoscompletos cuerpo . END
    (108) if -> IF datoscompletos operadores datoscompletos cuerpo . else
    (109) else -> . ELSE cuerpo END

    END             shift and go to state 291
    ELSE            shift and go to state 293

    else                           shift and go to state 292

state 255

    (128) unless -> UNLESS expresionCondicional cuerpo ELSE cuerpo . END

    END             shift and go to state 294


state 256

    (134) boolean -> EXCLAMATION LPARENTHESES . condiciones RPARENTHESES
    (136) condiciones -> . tiposvariables operadores tiposvariables
    (137) condiciones -> . datos operadores datos
    (138) condiciones -> . tiposvariables operadores datos
    (139) condiciones -> . datos operadores tiposvariables
    (44) tiposvariables -> . VAR
    (45) tiposvariables -> . LOCALVAR
    (46) tiposvariables -> . CONSTANT
    (47) datos -> . INTEGER
    (48) datos -> . FLOAT
    (49) datos -> . STRING

    VAR             shift and go to state 31
    LOCALVAR        shift and go to state 77
    CONSTANT        shift and go to state 32
    INTEGER         shift and go to state 78
    FLOAT           shift and go to state 79
    STRING          shift and go to state 70

    condiciones                    shift and go to state 295
    tiposvariables                 shift and go to state 75
    datos                          shift and go to state 76

state 257

    (130) expresionCondicional -> EXCLAMATION LPARENTHESES boolean RPARENTHESES .

    LOCALVAR        reduce using rule 130 (expresionCondicional -> EXCLAMATION LPARENTHESES boolean RPARENTHESES .)
    FOR             reduce using rule 130 (expresionCondicional -> EXCLAMATION LPARENTHESES boolean RPARENTHESES .)
    IF              reduce using rule 130 (expresionCondicional -> EXCLAMATION LPARENTHESES boolean RPARENTHESES .)
    UNLESS          reduce using rule 130 (expresionCondicional -> EXCLAMATION LPARENTHESES boolean RPARENTHESES .)
    PUTS            reduce using rule 130 (expresionCondicional -> EXCLAMATION LPARENTHESES boolean RPARENTHESES .)
    PRINT           reduce using rule 130 (expresionCondicional -> EXCLAMATION LPARENTHESES boolean RPARENTHESES .)
    STRING          reduce using rule 130 (expresionCondicional -> EXCLAMATION LPARENTHESES boolean RPARENTHESES .)
    INTEGERW        reduce using rule 130 (expresionCondicional -> EXCLAMATION LPARENTHESES boolean RPARENTHESES .)
    INTEGER         reduce using rule 130 (expresionCondicional -> EXCLAMATION LPARENTHESES boolean RPARENTHESES .)
    VAR             reduce using rule 130 (expresionCondicional -> EXCLAMATION LPARENTHESES boolean RPARENTHESES .)
    CONSTANT        reduce using rule 130 (expresionCondicional -> EXCLAMATION LPARENTHESES boolean RPARENTHESES .)
    LCURLYBRACKET   reduce using rule 130 (expresionCondicional -> EXCLAMATION LPARENTHESES boolean RPARENTHESES .)
    LBRACKET        reduce using rule 130 (expresionCondicional -> EXCLAMATION LPARENTHESES boolean RPARENTHESES .)
    SET             reduce using rule 130 (expresionCondicional -> EXCLAMATION LPARENTHESES boolean RPARENTHESES .)
    ELSE            reduce using rule 130 (expresionCondicional -> EXCLAMATION LPARENTHESES boolean RPARENTHESES .)


state 258

    (134) boolean -> EXCLAMATION LPARENTHESES condiciones RPARENTHESES .

    DOUBLEAMPERSAND reduce using rule 134 (boolean -> EXCLAMATION LPARENTHESES condiciones RPARENTHESES .)
    DOUBLEPIPE      reduce using rule 134 (boolean -> EXCLAMATION LPARENTHESES condiciones RPARENTHESES .)
    LOCALVAR        reduce using rule 134 (boolean -> EXCLAMATION LPARENTHESES condiciones RPARENTHESES .)
    FOR             reduce using rule 134 (boolean -> EXCLAMATION LPARENTHESES condiciones RPARENTHESES .)
    IF              reduce using rule 134 (boolean -> EXCLAMATION LPARENTHESES condiciones RPARENTHESES .)
    UNLESS          reduce using rule 134 (boolean -> EXCLAMATION LPARENTHESES condiciones RPARENTHESES .)
    PUTS            reduce using rule 134 (boolean -> EXCLAMATION LPARENTHESES condiciones RPARENTHESES .)
    PRINT           reduce using rule 134 (boolean -> EXCLAMATION LPARENTHESES condiciones RPARENTHESES .)
    STRING          reduce using rule 134 (boolean -> EXCLAMATION LPARENTHESES condiciones RPARENTHESES .)
    INTEGERW        reduce using rule 134 (boolean -> EXCLAMATION LPARENTHESES condiciones RPARENTHESES .)
    INTEGER         reduce using rule 134 (boolean -> EXCLAMATION LPARENTHESES condiciones RPARENTHESES .)
    VAR             reduce using rule 134 (boolean -> EXCLAMATION LPARENTHESES condiciones RPARENTHESES .)
    CONSTANT        reduce using rule 134 (boolean -> EXCLAMATION LPARENTHESES condiciones RPARENTHESES .)
    LCURLYBRACKET   reduce using rule 134 (boolean -> EXCLAMATION LPARENTHESES condiciones RPARENTHESES .)
    LBRACKET        reduce using rule 134 (boolean -> EXCLAMATION LPARENTHESES condiciones RPARENTHESES .)
    SET             reduce using rule 134 (boolean -> EXCLAMATION LPARENTHESES condiciones RPARENTHESES .)
    ELSE            reduce using rule 134 (boolean -> EXCLAMATION LPARENTHESES condiciones RPARENTHESES .)
    RPARENTHESES    reduce using rule 134 (boolean -> EXCLAMATION LPARENTHESES condiciones RPARENTHESES .)


state 259

    (119) integer -> INTEGER DOT CEIL LPARENTHESES INTEGER . RPARENTHESES

    RPARENTHESES    shift and go to state 296


state 260

    (118) integer -> INTEGER DOT CEIL LPARENTHESES RPARENTHESES .

    LOCALVAR        reduce using rule 118 (integer -> INTEGER DOT CEIL LPARENTHESES RPARENTHESES .)
    FOR             reduce using rule 118 (integer -> INTEGER DOT CEIL LPARENTHESES RPARENTHESES .)
    IF              reduce using rule 118 (integer -> INTEGER DOT CEIL LPARENTHESES RPARENTHESES .)
    UNLESS          reduce using rule 118 (integer -> INTEGER DOT CEIL LPARENTHESES RPARENTHESES .)
    PUTS            reduce using rule 118 (integer -> INTEGER DOT CEIL LPARENTHESES RPARENTHESES .)
    PRINT           reduce using rule 118 (integer -> INTEGER DOT CEIL LPARENTHESES RPARENTHESES .)
    STRING          reduce using rule 118 (integer -> INTEGER DOT CEIL LPARENTHESES RPARENTHESES .)
    INTEGERW        reduce using rule 118 (integer -> INTEGER DOT CEIL LPARENTHESES RPARENTHESES .)
    INTEGER         reduce using rule 118 (integer -> INTEGER DOT CEIL LPARENTHESES RPARENTHESES .)
    VAR             reduce using rule 118 (integer -> INTEGER DOT CEIL LPARENTHESES RPARENTHESES .)
    CONSTANT        reduce using rule 118 (integer -> INTEGER DOT CEIL LPARENTHESES RPARENTHESES .)
    LCURLYBRACKET   reduce using rule 118 (integer -> INTEGER DOT CEIL LPARENTHESES RPARENTHESES .)
    LBRACKET        reduce using rule 118 (integer -> INTEGER DOT CEIL LPARENTHESES RPARENTHESES .)
    SET             reduce using rule 118 (integer -> INTEGER DOT CEIL LPARENTHESES RPARENTHESES .)
    $end            reduce using rule 118 (integer -> INTEGER DOT CEIL LPARENTHESES RPARENTHESES .)
    ELSE            reduce using rule 118 (integer -> INTEGER DOT CEIL LPARENTHESES RPARENTHESES .)
    END             reduce using rule 118 (integer -> INTEGER DOT CEIL LPARENTHESES RPARENTHESES .)
    RETURN          reduce using rule 118 (integer -> INTEGER DOT CEIL LPARENTHESES RPARENTHESES .)


state 261

    (121) integer -> INTEGER DOT FLOOR LPARENTHESES INTEGER . RPARENTHESES

    RPARENTHESES    shift and go to state 297


state 262

    (120) integer -> INTEGER DOT FLOOR LPARENTHESES RPARENTHESES .

    LOCALVAR        reduce using rule 120 (integer -> INTEGER DOT FLOOR LPARENTHESES RPARENTHESES .)
    FOR             reduce using rule 120 (integer -> INTEGER DOT FLOOR LPARENTHESES RPARENTHESES .)
    IF              reduce using rule 120 (integer -> INTEGER DOT FLOOR LPARENTHESES RPARENTHESES .)
    UNLESS          reduce using rule 120 (integer -> INTEGER DOT FLOOR LPARENTHESES RPARENTHESES .)
    PUTS            reduce using rule 120 (integer -> INTEGER DOT FLOOR LPARENTHESES RPARENTHESES .)
    PRINT           reduce using rule 120 (integer -> INTEGER DOT FLOOR LPARENTHESES RPARENTHESES .)
    STRING          reduce using rule 120 (integer -> INTEGER DOT FLOOR LPARENTHESES RPARENTHESES .)
    INTEGERW        reduce using rule 120 (integer -> INTEGER DOT FLOOR LPARENTHESES RPARENTHESES .)
    INTEGER         reduce using rule 120 (integer -> INTEGER DOT FLOOR LPARENTHESES RPARENTHESES .)
    VAR             reduce using rule 120 (integer -> INTEGER DOT FLOOR LPARENTHESES RPARENTHESES .)
    CONSTANT        reduce using rule 120 (integer -> INTEGER DOT FLOOR LPARENTHESES RPARENTHESES .)
    LCURLYBRACKET   reduce using rule 120 (integer -> INTEGER DOT FLOOR LPARENTHESES RPARENTHESES .)
    LBRACKET        reduce using rule 120 (integer -> INTEGER DOT FLOOR LPARENTHESES RPARENTHESES .)
    SET             reduce using rule 120 (integer -> INTEGER DOT FLOOR LPARENTHESES RPARENTHESES .)
    $end            reduce using rule 120 (integer -> INTEGER DOT FLOOR LPARENTHESES RPARENTHESES .)
    ELSE            reduce using rule 120 (integer -> INTEGER DOT FLOOR LPARENTHESES RPARENTHESES .)
    END             reduce using rule 120 (integer -> INTEGER DOT FLOOR LPARENTHESES RPARENTHESES .)
    RETURN          reduce using rule 120 (integer -> INTEGER DOT FLOOR LPARENTHESES RPARENTHESES .)


state 263

    (158) stringOpt -> INSERT LPARENTHESES INTEGER . COMMA STRING RPARENTHESES

    COMMA           shift and go to state 298


state 264

    (117) integer -> INTEGERW DOT SQRT LPARENTHESES INTEGER . RPARENTHESES

    RPARENTHESES    shift and go to state 299


state 265

    (54) elementoHash -> datos EQUAL GREATERTHAN datos . maselementos
    (56) maselementos -> .
    (57) maselementos -> . COMMA elementoHash maselementos

  ! shift/reduce conflict for COMMA resolved as shift
    RCURLYBRACKET   reduce using rule 56 (maselementos -> .)
    COMMA           shift and go to state 301

  ! COMMA           [ reduce using rule 56 (maselementos -> .) ]

    maselementos                   shift and go to state 300

state 266

    (145) otroElemento -> COMMA elementoSet . otroElemento
    (144) otroElemento -> .
    (145) otroElemento -> . COMMA elementoSet otroElemento

  ! shift/reduce conflict for COMMA resolved as shift
    RBRACKET        reduce using rule 144 (otroElemento -> .)
    COMMA           shift and go to state 222

  ! COMMA           [ reduce using rule 144 (otroElemento -> .) ]

    otroElemento                   shift and go to state 302

state 267

    (8) argumentos -> LOCALVAR EQUAL LCURLYBRACKET . RCURLYBRACKET

    RCURLYBRACKET   shift and go to state 303


state 268

    (11) variosargumentos -> LOCALVAR EQUAL datos .
    (13) variosargumentos -> LOCALVAR EQUAL datos . masargumentos
    (14) masargumentos -> . COMMA variosargumentos

    RPARENTHESES    reduce using rule 11 (variosargumentos -> LOCALVAR EQUAL datos .)
    COMMA           shift and go to state 226

    masargumentos                  shift and go to state 304

state 269

    (9) argumentos -> LOCALVAR TWOPOINTS datos .

    RPARENTHESES    reduce using rule 9 (argumentos -> LOCALVAR TWOPOINTS datos .)


state 270

    (14) masargumentos -> COMMA variosargumentos .

    RPARENTHESES    reduce using rule 14 (masargumentos -> COMMA variosargumentos .)


state 271

    (10) variosargumentos -> LOCALVAR .
    (11) variosargumentos -> LOCALVAR . EQUAL datos
    (12) variosargumentos -> LOCALVAR . masargumentos
    (13) variosargumentos -> LOCALVAR . EQUAL datos masargumentos
    (14) masargumentos -> . COMMA variosargumentos

    RPARENTHESES    reduce using rule 10 (variosargumentos -> LOCALVAR .)
    EQUAL           shift and go to state 305
    COMMA           shift and go to state 226

    masargumentos                  shift and go to state 225

state 272

    (3) funcion -> DEF LOCALVAR LPARENTHESES argumentos RPARENTHESES cuerpo . END
    (4) funcion -> DEF LOCALVAR LPARENTHESES argumentos RPARENTHESES cuerpo . retornar END
    (15) retornar -> . RETURN LOCALVAR
    (16) retornar -> . RETURN datos

    END             shift and go to state 306
    RETURN          shift and go to state 308

    retornar                       shift and go to state 307

state 273

    (76) masoperaciones -> operador expresion masoperaciones .

    PLUS            reduce using rule 76 (masoperaciones -> operador expresion masoperaciones .)
    MINUS           reduce using rule 76 (masoperaciones -> operador expresion masoperaciones .)
    MULTIPLY        reduce using rule 76 (masoperaciones -> operador expresion masoperaciones .)
    DIVIDE          reduce using rule 76 (masoperaciones -> operador expresion masoperaciones .)
    PERCENTAGE      reduce using rule 76 (masoperaciones -> operador expresion masoperaciones .)
    LOCALVAR        reduce using rule 76 (masoperaciones -> operador expresion masoperaciones .)
    FOR             reduce using rule 76 (masoperaciones -> operador expresion masoperaciones .)
    IF              reduce using rule 76 (masoperaciones -> operador expresion masoperaciones .)
    UNLESS          reduce using rule 76 (masoperaciones -> operador expresion masoperaciones .)
    PUTS            reduce using rule 76 (masoperaciones -> operador expresion masoperaciones .)
    PRINT           reduce using rule 76 (masoperaciones -> operador expresion masoperaciones .)
    STRING          reduce using rule 76 (masoperaciones -> operador expresion masoperaciones .)
    INTEGERW        reduce using rule 76 (masoperaciones -> operador expresion masoperaciones .)
    INTEGER         reduce using rule 76 (masoperaciones -> operador expresion masoperaciones .)
    VAR             reduce using rule 76 (masoperaciones -> operador expresion masoperaciones .)
    CONSTANT        reduce using rule 76 (masoperaciones -> operador expresion masoperaciones .)
    LCURLYBRACKET   reduce using rule 76 (masoperaciones -> operador expresion masoperaciones .)
    LBRACKET        reduce using rule 76 (masoperaciones -> operador expresion masoperaciones .)
    SET             reduce using rule 76 (masoperaciones -> operador expresion masoperaciones .)
    $end            reduce using rule 76 (masoperaciones -> operador expresion masoperaciones .)
    ELSE            reduce using rule 76 (masoperaciones -> operador expresion masoperaciones .)
    END             reduce using rule 76 (masoperaciones -> operador expresion masoperaciones .)
    RETURN          reduce using rule 76 (masoperaciones -> operador expresion masoperaciones .)
    RPARENTHESES    reduce using rule 76 (masoperaciones -> operador expresion masoperaciones .)


state 274

    (73) expresion -> LPARENTHESES operacion RPARENTHESES masoperaciones .

    LOCALVAR        reduce using rule 73 (expresion -> LPARENTHESES operacion RPARENTHESES masoperaciones .)
    FOR             reduce using rule 73 (expresion -> LPARENTHESES operacion RPARENTHESES masoperaciones .)
    IF              reduce using rule 73 (expresion -> LPARENTHESES operacion RPARENTHESES masoperaciones .)
    UNLESS          reduce using rule 73 (expresion -> LPARENTHESES operacion RPARENTHESES masoperaciones .)
    PUTS            reduce using rule 73 (expresion -> LPARENTHESES operacion RPARENTHESES masoperaciones .)
    PRINT           reduce using rule 73 (expresion -> LPARENTHESES operacion RPARENTHESES masoperaciones .)
    STRING          reduce using rule 73 (expresion -> LPARENTHESES operacion RPARENTHESES masoperaciones .)
    INTEGERW        reduce using rule 73 (expresion -> LPARENTHESES operacion RPARENTHESES masoperaciones .)
    INTEGER         reduce using rule 73 (expresion -> LPARENTHESES operacion RPARENTHESES masoperaciones .)
    VAR             reduce using rule 73 (expresion -> LPARENTHESES operacion RPARENTHESES masoperaciones .)
    CONSTANT        reduce using rule 73 (expresion -> LPARENTHESES operacion RPARENTHESES masoperaciones .)
    LCURLYBRACKET   reduce using rule 73 (expresion -> LPARENTHESES operacion RPARENTHESES masoperaciones .)
    LBRACKET        reduce using rule 73 (expresion -> LPARENTHESES operacion RPARENTHESES masoperaciones .)
    SET             reduce using rule 73 (expresion -> LPARENTHESES operacion RPARENTHESES masoperaciones .)
    $end            reduce using rule 73 (expresion -> LPARENTHESES operacion RPARENTHESES masoperaciones .)
    ELSE            reduce using rule 73 (expresion -> LPARENTHESES operacion RPARENTHESES masoperaciones .)
    END             reduce using rule 73 (expresion -> LPARENTHESES operacion RPARENTHESES masoperaciones .)
    RETURN          reduce using rule 73 (expresion -> LPARENTHESES operacion RPARENTHESES masoperaciones .)
    PLUS            reduce using rule 73 (expresion -> LPARENTHESES operacion RPARENTHESES masoperaciones .)
    MINUS           reduce using rule 73 (expresion -> LPARENTHESES operacion RPARENTHESES masoperaciones .)
    MULTIPLY        reduce using rule 73 (expresion -> LPARENTHESES operacion RPARENTHESES masoperaciones .)
    DIVIDE          reduce using rule 73 (expresion -> LPARENTHESES operacion RPARENTHESES masoperaciones .)
    PERCENTAGE      reduce using rule 73 (expresion -> LPARENTHESES operacion RPARENTHESES masoperaciones .)
    RPARENTHESES    reduce using rule 73 (expresion -> LPARENTHESES operacion RPARENTHESES masoperaciones .)


state 275

    (30) loop -> FOR LOCALVAR IN rango cuerpo END .

    LOCALVAR        reduce using rule 30 (loop -> FOR LOCALVAR IN rango cuerpo END .)
    FOR             reduce using rule 30 (loop -> FOR LOCALVAR IN rango cuerpo END .)
    IF              reduce using rule 30 (loop -> FOR LOCALVAR IN rango cuerpo END .)
    UNLESS          reduce using rule 30 (loop -> FOR LOCALVAR IN rango cuerpo END .)
    PUTS            reduce using rule 30 (loop -> FOR LOCALVAR IN rango cuerpo END .)
    PRINT           reduce using rule 30 (loop -> FOR LOCALVAR IN rango cuerpo END .)
    STRING          reduce using rule 30 (loop -> FOR LOCALVAR IN rango cuerpo END .)
    INTEGERW        reduce using rule 30 (loop -> FOR LOCALVAR IN rango cuerpo END .)
    INTEGER         reduce using rule 30 (loop -> FOR LOCALVAR IN rango cuerpo END .)
    VAR             reduce using rule 30 (loop -> FOR LOCALVAR IN rango cuerpo END .)
    CONSTANT        reduce using rule 30 (loop -> FOR LOCALVAR IN rango cuerpo END .)
    LCURLYBRACKET   reduce using rule 30 (loop -> FOR LOCALVAR IN rango cuerpo END .)
    LBRACKET        reduce using rule 30 (loop -> FOR LOCALVAR IN rango cuerpo END .)
    SET             reduce using rule 30 (loop -> FOR LOCALVAR IN rango cuerpo END .)
    $end            reduce using rule 30 (loop -> FOR LOCALVAR IN rango cuerpo END .)
    ELSE            reduce using rule 30 (loop -> FOR LOCALVAR IN rango cuerpo END .)
    END             reduce using rule 30 (loop -> FOR LOCALVAR IN rango cuerpo END .)
    RETURN          reduce using rule 30 (loop -> FOR LOCALVAR IN rango cuerpo END .)


state 276

    (63) rango -> INTEGER RANGEINCLUSIVE INTEGER .

    LOCALVAR        reduce using rule 63 (rango -> INTEGER RANGEINCLUSIVE INTEGER .)
    FOR             reduce using rule 63 (rango -> INTEGER RANGEINCLUSIVE INTEGER .)
    IF              reduce using rule 63 (rango -> INTEGER RANGEINCLUSIVE INTEGER .)
    UNLESS          reduce using rule 63 (rango -> INTEGER RANGEINCLUSIVE INTEGER .)
    PUTS            reduce using rule 63 (rango -> INTEGER RANGEINCLUSIVE INTEGER .)
    PRINT           reduce using rule 63 (rango -> INTEGER RANGEINCLUSIVE INTEGER .)
    STRING          reduce using rule 63 (rango -> INTEGER RANGEINCLUSIVE INTEGER .)
    INTEGERW        reduce using rule 63 (rango -> INTEGER RANGEINCLUSIVE INTEGER .)
    INTEGER         reduce using rule 63 (rango -> INTEGER RANGEINCLUSIVE INTEGER .)
    VAR             reduce using rule 63 (rango -> INTEGER RANGEINCLUSIVE INTEGER .)
    CONSTANT        reduce using rule 63 (rango -> INTEGER RANGEINCLUSIVE INTEGER .)
    LCURLYBRACKET   reduce using rule 63 (rango -> INTEGER RANGEINCLUSIVE INTEGER .)
    LBRACKET        reduce using rule 63 (rango -> INTEGER RANGEINCLUSIVE INTEGER .)
    SET             reduce using rule 63 (rango -> INTEGER RANGEINCLUSIVE INTEGER .)
    END             reduce using rule 63 (rango -> INTEGER RANGEINCLUSIVE INTEGER .)


state 277

    (64) rango -> INTEGER RANGEXCLUSIVE INTEGER .

    LOCALVAR        reduce using rule 64 (rango -> INTEGER RANGEXCLUSIVE INTEGER .)
    FOR             reduce using rule 64 (rango -> INTEGER RANGEXCLUSIVE INTEGER .)
    IF              reduce using rule 64 (rango -> INTEGER RANGEXCLUSIVE INTEGER .)
    UNLESS          reduce using rule 64 (rango -> INTEGER RANGEXCLUSIVE INTEGER .)
    PUTS            reduce using rule 64 (rango -> INTEGER RANGEXCLUSIVE INTEGER .)
    PRINT           reduce using rule 64 (rango -> INTEGER RANGEXCLUSIVE INTEGER .)
    STRING          reduce using rule 64 (rango -> INTEGER RANGEXCLUSIVE INTEGER .)
    INTEGERW        reduce using rule 64 (rango -> INTEGER RANGEXCLUSIVE INTEGER .)
    INTEGER         reduce using rule 64 (rango -> INTEGER RANGEXCLUSIVE INTEGER .)
    VAR             reduce using rule 64 (rango -> INTEGER RANGEXCLUSIVE INTEGER .)
    CONSTANT        reduce using rule 64 (rango -> INTEGER RANGEXCLUSIVE INTEGER .)
    LCURLYBRACKET   reduce using rule 64 (rango -> INTEGER RANGEXCLUSIVE INTEGER .)
    LBRACKET        reduce using rule 64 (rango -> INTEGER RANGEXCLUSIVE INTEGER .)
    SET             reduce using rule 64 (rango -> INTEGER RANGEXCLUSIVE INTEGER .)
    END             reduce using rule 64 (rango -> INTEGER RANGEXCLUSIVE INTEGER .)


state 278

    (59) operacionHash -> hash LBRACKET datos RBRACKET EQUAL datos .

    LOCALVAR        reduce using rule 59 (operacionHash -> hash LBRACKET datos RBRACKET EQUAL datos .)
    FOR             reduce using rule 59 (operacionHash -> hash LBRACKET datos RBRACKET EQUAL datos .)
    IF              reduce using rule 59 (operacionHash -> hash LBRACKET datos RBRACKET EQUAL datos .)
    UNLESS          reduce using rule 59 (operacionHash -> hash LBRACKET datos RBRACKET EQUAL datos .)
    PUTS            reduce using rule 59 (operacionHash -> hash LBRACKET datos RBRACKET EQUAL datos .)
    PRINT           reduce using rule 59 (operacionHash -> hash LBRACKET datos RBRACKET EQUAL datos .)
    STRING          reduce using rule 59 (operacionHash -> hash LBRACKET datos RBRACKET EQUAL datos .)
    INTEGERW        reduce using rule 59 (operacionHash -> hash LBRACKET datos RBRACKET EQUAL datos .)
    INTEGER         reduce using rule 59 (operacionHash -> hash LBRACKET datos RBRACKET EQUAL datos .)
    VAR             reduce using rule 59 (operacionHash -> hash LBRACKET datos RBRACKET EQUAL datos .)
    CONSTANT        reduce using rule 59 (operacionHash -> hash LBRACKET datos RBRACKET EQUAL datos .)
    LCURLYBRACKET   reduce using rule 59 (operacionHash -> hash LBRACKET datos RBRACKET EQUAL datos .)
    LBRACKET        reduce using rule 59 (operacionHash -> hash LBRACKET datos RBRACKET EQUAL datos .)
    SET             reduce using rule 59 (operacionHash -> hash LBRACKET datos RBRACKET EQUAL datos .)
    $end            reduce using rule 59 (operacionHash -> hash LBRACKET datos RBRACKET EQUAL datos .)
    ELSE            reduce using rule 59 (operacionHash -> hash LBRACKET datos RBRACKET EQUAL datos .)
    END             reduce using rule 59 (operacionHash -> hash LBRACKET datos RBRACKET EQUAL datos .)
    RETURN          reduce using rule 59 (operacionHash -> hash LBRACKET datos RBRACKET EQUAL datos .)


state 279

    (60) operacionHash -> hash DOT INCLUDE QUESTIONMARK LPARENTHESES datos . RPARENTHESES

    RPARENTHESES    shift and go to state 309


state 280

    (61) operacionHash -> hash DOT DELETE LPARENTHESES datos RPARENTHESES .

    LOCALVAR        reduce using rule 61 (operacionHash -> hash DOT DELETE LPARENTHESES datos RPARENTHESES .)
    FOR             reduce using rule 61 (operacionHash -> hash DOT DELETE LPARENTHESES datos RPARENTHESES .)
    IF              reduce using rule 61 (operacionHash -> hash DOT DELETE LPARENTHESES datos RPARENTHESES .)
    UNLESS          reduce using rule 61 (operacionHash -> hash DOT DELETE LPARENTHESES datos RPARENTHESES .)
    PUTS            reduce using rule 61 (operacionHash -> hash DOT DELETE LPARENTHESES datos RPARENTHESES .)
    PRINT           reduce using rule 61 (operacionHash -> hash DOT DELETE LPARENTHESES datos RPARENTHESES .)
    STRING          reduce using rule 61 (operacionHash -> hash DOT DELETE LPARENTHESES datos RPARENTHESES .)
    INTEGERW        reduce using rule 61 (operacionHash -> hash DOT DELETE LPARENTHESES datos RPARENTHESES .)
    INTEGER         reduce using rule 61 (operacionHash -> hash DOT DELETE LPARENTHESES datos RPARENTHESES .)
    VAR             reduce using rule 61 (operacionHash -> hash DOT DELETE LPARENTHESES datos RPARENTHESES .)
    CONSTANT        reduce using rule 61 (operacionHash -> hash DOT DELETE LPARENTHESES datos RPARENTHESES .)
    LCURLYBRACKET   reduce using rule 61 (operacionHash -> hash DOT DELETE LPARENTHESES datos RPARENTHESES .)
    LBRACKET        reduce using rule 61 (operacionHash -> hash DOT DELETE LPARENTHESES datos RPARENTHESES .)
    SET             reduce using rule 61 (operacionHash -> hash DOT DELETE LPARENTHESES datos RPARENTHESES .)
    $end            reduce using rule 61 (operacionHash -> hash DOT DELETE LPARENTHESES datos RPARENTHESES .)
    ELSE            reduce using rule 61 (operacionHash -> hash DOT DELETE LPARENTHESES datos RPARENTHESES .)
    END             reduce using rule 61 (operacionHash -> hash DOT DELETE LPARENTHESES datos RPARENTHESES .)
    RETURN          reduce using rule 61 (operacionHash -> hash DOT DELETE LPARENTHESES datos RPARENTHESES .)


state 281

    (93) operacionarray -> array DOT TAKE LPARENTHESES INTEGER RPARENTHESES .

    LOCALVAR        reduce using rule 93 (operacionarray -> array DOT TAKE LPARENTHESES INTEGER RPARENTHESES .)
    FOR             reduce using rule 93 (operacionarray -> array DOT TAKE LPARENTHESES INTEGER RPARENTHESES .)
    IF              reduce using rule 93 (operacionarray -> array DOT TAKE LPARENTHESES INTEGER RPARENTHESES .)
    UNLESS          reduce using rule 93 (operacionarray -> array DOT TAKE LPARENTHESES INTEGER RPARENTHESES .)
    PUTS            reduce using rule 93 (operacionarray -> array DOT TAKE LPARENTHESES INTEGER RPARENTHESES .)
    PRINT           reduce using rule 93 (operacionarray -> array DOT TAKE LPARENTHESES INTEGER RPARENTHESES .)
    STRING          reduce using rule 93 (operacionarray -> array DOT TAKE LPARENTHESES INTEGER RPARENTHESES .)
    INTEGERW        reduce using rule 93 (operacionarray -> array DOT TAKE LPARENTHESES INTEGER RPARENTHESES .)
    INTEGER         reduce using rule 93 (operacionarray -> array DOT TAKE LPARENTHESES INTEGER RPARENTHESES .)
    VAR             reduce using rule 93 (operacionarray -> array DOT TAKE LPARENTHESES INTEGER RPARENTHESES .)
    CONSTANT        reduce using rule 93 (operacionarray -> array DOT TAKE LPARENTHESES INTEGER RPARENTHESES .)
    LCURLYBRACKET   reduce using rule 93 (operacionarray -> array DOT TAKE LPARENTHESES INTEGER RPARENTHESES .)
    LBRACKET        reduce using rule 93 (operacionarray -> array DOT TAKE LPARENTHESES INTEGER RPARENTHESES .)
    SET             reduce using rule 93 (operacionarray -> array DOT TAKE LPARENTHESES INTEGER RPARENTHESES .)
    $end            reduce using rule 93 (operacionarray -> array DOT TAKE LPARENTHESES INTEGER RPARENTHESES .)
    ELSE            reduce using rule 93 (operacionarray -> array DOT TAKE LPARENTHESES INTEGER RPARENTHESES .)
    END             reduce using rule 93 (operacionarray -> array DOT TAKE LPARENTHESES INTEGER RPARENTHESES .)
    RETURN          reduce using rule 93 (operacionarray -> array DOT TAKE LPARENTHESES INTEGER RPARENTHESES .)


state 282

    (94) operacionarray -> array DOT DROP LPARENTHESES INTEGER RPARENTHESES .

    LOCALVAR        reduce using rule 94 (operacionarray -> array DOT DROP LPARENTHESES INTEGER RPARENTHESES .)
    FOR             reduce using rule 94 (operacionarray -> array DOT DROP LPARENTHESES INTEGER RPARENTHESES .)
    IF              reduce using rule 94 (operacionarray -> array DOT DROP LPARENTHESES INTEGER RPARENTHESES .)
    UNLESS          reduce using rule 94 (operacionarray -> array DOT DROP LPARENTHESES INTEGER RPARENTHESES .)
    PUTS            reduce using rule 94 (operacionarray -> array DOT DROP LPARENTHESES INTEGER RPARENTHESES .)
    PRINT           reduce using rule 94 (operacionarray -> array DOT DROP LPARENTHESES INTEGER RPARENTHESES .)
    STRING          reduce using rule 94 (operacionarray -> array DOT DROP LPARENTHESES INTEGER RPARENTHESES .)
    INTEGERW        reduce using rule 94 (operacionarray -> array DOT DROP LPARENTHESES INTEGER RPARENTHESES .)
    INTEGER         reduce using rule 94 (operacionarray -> array DOT DROP LPARENTHESES INTEGER RPARENTHESES .)
    VAR             reduce using rule 94 (operacionarray -> array DOT DROP LPARENTHESES INTEGER RPARENTHESES .)
    CONSTANT        reduce using rule 94 (operacionarray -> array DOT DROP LPARENTHESES INTEGER RPARENTHESES .)
    LCURLYBRACKET   reduce using rule 94 (operacionarray -> array DOT DROP LPARENTHESES INTEGER RPARENTHESES .)
    LBRACKET        reduce using rule 94 (operacionarray -> array DOT DROP LPARENTHESES INTEGER RPARENTHESES .)
    SET             reduce using rule 94 (operacionarray -> array DOT DROP LPARENTHESES INTEGER RPARENTHESES .)
    $end            reduce using rule 94 (operacionarray -> array DOT DROP LPARENTHESES INTEGER RPARENTHESES .)
    ELSE            reduce using rule 94 (operacionarray -> array DOT DROP LPARENTHESES INTEGER RPARENTHESES .)
    END             reduce using rule 94 (operacionarray -> array DOT DROP LPARENTHESES INTEGER RPARENTHESES .)
    RETURN          reduce using rule 94 (operacionarray -> array DOT DROP LPARENTHESES INTEGER RPARENTHESES .)


state 283

    (99) maspush -> DOT push maspush .

    LOCALVAR        reduce using rule 99 (maspush -> DOT push maspush .)
    FOR             reduce using rule 99 (maspush -> DOT push maspush .)
    IF              reduce using rule 99 (maspush -> DOT push maspush .)
    UNLESS          reduce using rule 99 (maspush -> DOT push maspush .)
    PUTS            reduce using rule 99 (maspush -> DOT push maspush .)
    PRINT           reduce using rule 99 (maspush -> DOT push maspush .)
    STRING          reduce using rule 99 (maspush -> DOT push maspush .)
    INTEGERW        reduce using rule 99 (maspush -> DOT push maspush .)
    INTEGER         reduce using rule 99 (maspush -> DOT push maspush .)
    VAR             reduce using rule 99 (maspush -> DOT push maspush .)
    CONSTANT        reduce using rule 99 (maspush -> DOT push maspush .)
    LCURLYBRACKET   reduce using rule 99 (maspush -> DOT push maspush .)
    LBRACKET        reduce using rule 99 (maspush -> DOT push maspush .)
    SET             reduce using rule 99 (maspush -> DOT push maspush .)
    $end            reduce using rule 99 (maspush -> DOT push maspush .)
    ELSE            reduce using rule 99 (maspush -> DOT push maspush .)
    END             reduce using rule 99 (maspush -> DOT push maspush .)
    RETURN          reduce using rule 99 (maspush -> DOT push maspush .)


state 284

    (101) operacionarray -> array DOT POP LPARENTHESES INTEGER RPARENTHESES .

    LOCALVAR        reduce using rule 101 (operacionarray -> array DOT POP LPARENTHESES INTEGER RPARENTHESES .)
    FOR             reduce using rule 101 (operacionarray -> array DOT POP LPARENTHESES INTEGER RPARENTHESES .)
    IF              reduce using rule 101 (operacionarray -> array DOT POP LPARENTHESES INTEGER RPARENTHESES .)
    UNLESS          reduce using rule 101 (operacionarray -> array DOT POP LPARENTHESES INTEGER RPARENTHESES .)
    PUTS            reduce using rule 101 (operacionarray -> array DOT POP LPARENTHESES INTEGER RPARENTHESES .)
    PRINT           reduce using rule 101 (operacionarray -> array DOT POP LPARENTHESES INTEGER RPARENTHESES .)
    STRING          reduce using rule 101 (operacionarray -> array DOT POP LPARENTHESES INTEGER RPARENTHESES .)
    INTEGERW        reduce using rule 101 (operacionarray -> array DOT POP LPARENTHESES INTEGER RPARENTHESES .)
    INTEGER         reduce using rule 101 (operacionarray -> array DOT POP LPARENTHESES INTEGER RPARENTHESES .)
    VAR             reduce using rule 101 (operacionarray -> array DOT POP LPARENTHESES INTEGER RPARENTHESES .)
    CONSTANT        reduce using rule 101 (operacionarray -> array DOT POP LPARENTHESES INTEGER RPARENTHESES .)
    LCURLYBRACKET   reduce using rule 101 (operacionarray -> array DOT POP LPARENTHESES INTEGER RPARENTHESES .)
    LBRACKET        reduce using rule 101 (operacionarray -> array DOT POP LPARENTHESES INTEGER RPARENTHESES .)
    SET             reduce using rule 101 (operacionarray -> array DOT POP LPARENTHESES INTEGER RPARENTHESES .)
    $end            reduce using rule 101 (operacionarray -> array DOT POP LPARENTHESES INTEGER RPARENTHESES .)
    ELSE            reduce using rule 101 (operacionarray -> array DOT POP LPARENTHESES INTEGER RPARENTHESES .)
    END             reduce using rule 101 (operacionarray -> array DOT POP LPARENTHESES INTEGER RPARENTHESES .)
    RETURN          reduce using rule 101 (operacionarray -> array DOT POP LPARENTHESES INTEGER RPARENTHESES .)


state 285

    (102) operacionarray -> array DOT DELETE LPARENTHESES INTEGER RPARENTHESES .

    LOCALVAR        reduce using rule 102 (operacionarray -> array DOT DELETE LPARENTHESES INTEGER RPARENTHESES .)
    FOR             reduce using rule 102 (operacionarray -> array DOT DELETE LPARENTHESES INTEGER RPARENTHESES .)
    IF              reduce using rule 102 (operacionarray -> array DOT DELETE LPARENTHESES INTEGER RPARENTHESES .)
    UNLESS          reduce using rule 102 (operacionarray -> array DOT DELETE LPARENTHESES INTEGER RPARENTHESES .)
    PUTS            reduce using rule 102 (operacionarray -> array DOT DELETE LPARENTHESES INTEGER RPARENTHESES .)
    PRINT           reduce using rule 102 (operacionarray -> array DOT DELETE LPARENTHESES INTEGER RPARENTHESES .)
    STRING          reduce using rule 102 (operacionarray -> array DOT DELETE LPARENTHESES INTEGER RPARENTHESES .)
    INTEGERW        reduce using rule 102 (operacionarray -> array DOT DELETE LPARENTHESES INTEGER RPARENTHESES .)
    INTEGER         reduce using rule 102 (operacionarray -> array DOT DELETE LPARENTHESES INTEGER RPARENTHESES .)
    VAR             reduce using rule 102 (operacionarray -> array DOT DELETE LPARENTHESES INTEGER RPARENTHESES .)
    CONSTANT        reduce using rule 102 (operacionarray -> array DOT DELETE LPARENTHESES INTEGER RPARENTHESES .)
    LCURLYBRACKET   reduce using rule 102 (operacionarray -> array DOT DELETE LPARENTHESES INTEGER RPARENTHESES .)
    LBRACKET        reduce using rule 102 (operacionarray -> array DOT DELETE LPARENTHESES INTEGER RPARENTHESES .)
    SET             reduce using rule 102 (operacionarray -> array DOT DELETE LPARENTHESES INTEGER RPARENTHESES .)
    $end            reduce using rule 102 (operacionarray -> array DOT DELETE LPARENTHESES INTEGER RPARENTHESES .)
    ELSE            reduce using rule 102 (operacionarray -> array DOT DELETE LPARENTHESES INTEGER RPARENTHESES .)
    END             reduce using rule 102 (operacionarray -> array DOT DELETE LPARENTHESES INTEGER RPARENTHESES .)
    RETURN          reduce using rule 102 (operacionarray -> array DOT DELETE LPARENTHESES INTEGER RPARENTHESES .)


state 286

    (96) push -> PUSH LPARENTHESES datosvarios RPARENTHESES .

    DOT             reduce using rule 96 (push -> PUSH LPARENTHESES datosvarios RPARENTHESES .)
    LOCALVAR        reduce using rule 96 (push -> PUSH LPARENTHESES datosvarios RPARENTHESES .)
    FOR             reduce using rule 96 (push -> PUSH LPARENTHESES datosvarios RPARENTHESES .)
    IF              reduce using rule 96 (push -> PUSH LPARENTHESES datosvarios RPARENTHESES .)
    UNLESS          reduce using rule 96 (push -> PUSH LPARENTHESES datosvarios RPARENTHESES .)
    PUTS            reduce using rule 96 (push -> PUSH LPARENTHESES datosvarios RPARENTHESES .)
    PRINT           reduce using rule 96 (push -> PUSH LPARENTHESES datosvarios RPARENTHESES .)
    STRING          reduce using rule 96 (push -> PUSH LPARENTHESES datosvarios RPARENTHESES .)
    INTEGERW        reduce using rule 96 (push -> PUSH LPARENTHESES datosvarios RPARENTHESES .)
    INTEGER         reduce using rule 96 (push -> PUSH LPARENTHESES datosvarios RPARENTHESES .)
    VAR             reduce using rule 96 (push -> PUSH LPARENTHESES datosvarios RPARENTHESES .)
    CONSTANT        reduce using rule 96 (push -> PUSH LPARENTHESES datosvarios RPARENTHESES .)
    LCURLYBRACKET   reduce using rule 96 (push -> PUSH LPARENTHESES datosvarios RPARENTHESES .)
    LBRACKET        reduce using rule 96 (push -> PUSH LPARENTHESES datosvarios RPARENTHESES .)
    SET             reduce using rule 96 (push -> PUSH LPARENTHESES datosvarios RPARENTHESES .)
    $end            reduce using rule 96 (push -> PUSH LPARENTHESES datosvarios RPARENTHESES .)
    ELSE            reduce using rule 96 (push -> PUSH LPARENTHESES datosvarios RPARENTHESES .)
    END             reduce using rule 96 (push -> PUSH LPARENTHESES datosvarios RPARENTHESES .)
    RETURN          reduce using rule 96 (push -> PUSH LPARENTHESES datosvarios RPARENTHESES .)


state 287

    (146) operacionSet -> set DOT ADD LPARENTHESES datos RPARENTHESES .

    LOCALVAR        reduce using rule 146 (operacionSet -> set DOT ADD LPARENTHESES datos RPARENTHESES .)
    FOR             reduce using rule 146 (operacionSet -> set DOT ADD LPARENTHESES datos RPARENTHESES .)
    IF              reduce using rule 146 (operacionSet -> set DOT ADD LPARENTHESES datos RPARENTHESES .)
    UNLESS          reduce using rule 146 (operacionSet -> set DOT ADD LPARENTHESES datos RPARENTHESES .)
    PUTS            reduce using rule 146 (operacionSet -> set DOT ADD LPARENTHESES datos RPARENTHESES .)
    PRINT           reduce using rule 146 (operacionSet -> set DOT ADD LPARENTHESES datos RPARENTHESES .)
    STRING          reduce using rule 146 (operacionSet -> set DOT ADD LPARENTHESES datos RPARENTHESES .)
    INTEGERW        reduce using rule 146 (operacionSet -> set DOT ADD LPARENTHESES datos RPARENTHESES .)
    INTEGER         reduce using rule 146 (operacionSet -> set DOT ADD LPARENTHESES datos RPARENTHESES .)
    VAR             reduce using rule 146 (operacionSet -> set DOT ADD LPARENTHESES datos RPARENTHESES .)
    CONSTANT        reduce using rule 146 (operacionSet -> set DOT ADD LPARENTHESES datos RPARENTHESES .)
    LCURLYBRACKET   reduce using rule 146 (operacionSet -> set DOT ADD LPARENTHESES datos RPARENTHESES .)
    LBRACKET        reduce using rule 146 (operacionSet -> set DOT ADD LPARENTHESES datos RPARENTHESES .)
    SET             reduce using rule 146 (operacionSet -> set DOT ADD LPARENTHESES datos RPARENTHESES .)
    $end            reduce using rule 146 (operacionSet -> set DOT ADD LPARENTHESES datos RPARENTHESES .)
    ELSE            reduce using rule 146 (operacionSet -> set DOT ADD LPARENTHESES datos RPARENTHESES .)
    END             reduce using rule 146 (operacionSet -> set DOT ADD LPARENTHESES datos RPARENTHESES .)
    RETURN          reduce using rule 146 (operacionSet -> set DOT ADD LPARENTHESES datos RPARENTHESES .)


state 288

    (147) operacionSet -> set DOT ADD LPARENTHESES tiposvariables RPARENTHESES .

    LOCALVAR        reduce using rule 147 (operacionSet -> set DOT ADD LPARENTHESES tiposvariables RPARENTHESES .)
    FOR             reduce using rule 147 (operacionSet -> set DOT ADD LPARENTHESES tiposvariables RPARENTHESES .)
    IF              reduce using rule 147 (operacionSet -> set DOT ADD LPARENTHESES tiposvariables RPARENTHESES .)
    UNLESS          reduce using rule 147 (operacionSet -> set DOT ADD LPARENTHESES tiposvariables RPARENTHESES .)
    PUTS            reduce using rule 147 (operacionSet -> set DOT ADD LPARENTHESES tiposvariables RPARENTHESES .)
    PRINT           reduce using rule 147 (operacionSet -> set DOT ADD LPARENTHESES tiposvariables RPARENTHESES .)
    STRING          reduce using rule 147 (operacionSet -> set DOT ADD LPARENTHESES tiposvariables RPARENTHESES .)
    INTEGERW        reduce using rule 147 (operacionSet -> set DOT ADD LPARENTHESES tiposvariables RPARENTHESES .)
    INTEGER         reduce using rule 147 (operacionSet -> set DOT ADD LPARENTHESES tiposvariables RPARENTHESES .)
    VAR             reduce using rule 147 (operacionSet -> set DOT ADD LPARENTHESES tiposvariables RPARENTHESES .)
    CONSTANT        reduce using rule 147 (operacionSet -> set DOT ADD LPARENTHESES tiposvariables RPARENTHESES .)
    LCURLYBRACKET   reduce using rule 147 (operacionSet -> set DOT ADD LPARENTHESES tiposvariables RPARENTHESES .)
    LBRACKET        reduce using rule 147 (operacionSet -> set DOT ADD LPARENTHESES tiposvariables RPARENTHESES .)
    SET             reduce using rule 147 (operacionSet -> set DOT ADD LPARENTHESES tiposvariables RPARENTHESES .)
    $end            reduce using rule 147 (operacionSet -> set DOT ADD LPARENTHESES tiposvariables RPARENTHESES .)
    ELSE            reduce using rule 147 (operacionSet -> set DOT ADD LPARENTHESES tiposvariables RPARENTHESES .)
    END             reduce using rule 147 (operacionSet -> set DOT ADD LPARENTHESES tiposvariables RPARENTHESES .)
    RETURN          reduce using rule 147 (operacionSet -> set DOT ADD LPARENTHESES tiposvariables RPARENTHESES .)


state 289

    (149) operacionSet -> set DOT DELETE LPARENTHESES datos RPARENTHESES .

    LOCALVAR        reduce using rule 149 (operacionSet -> set DOT DELETE LPARENTHESES datos RPARENTHESES .)
    FOR             reduce using rule 149 (operacionSet -> set DOT DELETE LPARENTHESES datos RPARENTHESES .)
    IF              reduce using rule 149 (operacionSet -> set DOT DELETE LPARENTHESES datos RPARENTHESES .)
    UNLESS          reduce using rule 149 (operacionSet -> set DOT DELETE LPARENTHESES datos RPARENTHESES .)
    PUTS            reduce using rule 149 (operacionSet -> set DOT DELETE LPARENTHESES datos RPARENTHESES .)
    PRINT           reduce using rule 149 (operacionSet -> set DOT DELETE LPARENTHESES datos RPARENTHESES .)
    STRING          reduce using rule 149 (operacionSet -> set DOT DELETE LPARENTHESES datos RPARENTHESES .)
    INTEGERW        reduce using rule 149 (operacionSet -> set DOT DELETE LPARENTHESES datos RPARENTHESES .)
    INTEGER         reduce using rule 149 (operacionSet -> set DOT DELETE LPARENTHESES datos RPARENTHESES .)
    VAR             reduce using rule 149 (operacionSet -> set DOT DELETE LPARENTHESES datos RPARENTHESES .)
    CONSTANT        reduce using rule 149 (operacionSet -> set DOT DELETE LPARENTHESES datos RPARENTHESES .)
    LCURLYBRACKET   reduce using rule 149 (operacionSet -> set DOT DELETE LPARENTHESES datos RPARENTHESES .)
    LBRACKET        reduce using rule 149 (operacionSet -> set DOT DELETE LPARENTHESES datos RPARENTHESES .)
    SET             reduce using rule 149 (operacionSet -> set DOT DELETE LPARENTHESES datos RPARENTHESES .)
    $end            reduce using rule 149 (operacionSet -> set DOT DELETE LPARENTHESES datos RPARENTHESES .)
    ELSE            reduce using rule 149 (operacionSet -> set DOT DELETE LPARENTHESES datos RPARENTHESES .)
    END             reduce using rule 149 (operacionSet -> set DOT DELETE LPARENTHESES datos RPARENTHESES .)
    RETURN          reduce using rule 149 (operacionSet -> set DOT DELETE LPARENTHESES datos RPARENTHESES .)


state 290

    (150) operacionSet -> set DOT DELETE LPARENTHESES tiposvariables RPARENTHESES .

    LOCALVAR        reduce using rule 150 (operacionSet -> set DOT DELETE LPARENTHESES tiposvariables RPARENTHESES .)
    FOR             reduce using rule 150 (operacionSet -> set DOT DELETE LPARENTHESES tiposvariables RPARENTHESES .)
    IF              reduce using rule 150 (operacionSet -> set DOT DELETE LPARENTHESES tiposvariables RPARENTHESES .)
    UNLESS          reduce using rule 150 (operacionSet -> set DOT DELETE LPARENTHESES tiposvariables RPARENTHESES .)
    PUTS            reduce using rule 150 (operacionSet -> set DOT DELETE LPARENTHESES tiposvariables RPARENTHESES .)
    PRINT           reduce using rule 150 (operacionSet -> set DOT DELETE LPARENTHESES tiposvariables RPARENTHESES .)
    STRING          reduce using rule 150 (operacionSet -> set DOT DELETE LPARENTHESES tiposvariables RPARENTHESES .)
    INTEGERW        reduce using rule 150 (operacionSet -> set DOT DELETE LPARENTHESES tiposvariables RPARENTHESES .)
    INTEGER         reduce using rule 150 (operacionSet -> set DOT DELETE LPARENTHESES tiposvariables RPARENTHESES .)
    VAR             reduce using rule 150 (operacionSet -> set DOT DELETE LPARENTHESES tiposvariables RPARENTHESES .)
    CONSTANT        reduce using rule 150 (operacionSet -> set DOT DELETE LPARENTHESES tiposvariables RPARENTHESES .)
    LCURLYBRACKET   reduce using rule 150 (operacionSet -> set DOT DELETE LPARENTHESES tiposvariables RPARENTHESES .)
    LBRACKET        reduce using rule 150 (operacionSet -> set DOT DELETE LPARENTHESES tiposvariables RPARENTHESES .)
    SET             reduce using rule 150 (operacionSet -> set DOT DELETE LPARENTHESES tiposvariables RPARENTHESES .)
    $end            reduce using rule 150 (operacionSet -> set DOT DELETE LPARENTHESES tiposvariables RPARENTHESES .)
    ELSE            reduce using rule 150 (operacionSet -> set DOT DELETE LPARENTHESES tiposvariables RPARENTHESES .)
    END             reduce using rule 150 (operacionSet -> set DOT DELETE LPARENTHESES tiposvariables RPARENTHESES .)
    RETURN          reduce using rule 150 (operacionSet -> set DOT DELETE LPARENTHESES tiposvariables RPARENTHESES .)


state 291

    (107) if -> IF datoscompletos operadores datoscompletos cuerpo END .

    LOCALVAR        reduce using rule 107 (if -> IF datoscompletos operadores datoscompletos cuerpo END .)
    FOR             reduce using rule 107 (if -> IF datoscompletos operadores datoscompletos cuerpo END .)
    IF              reduce using rule 107 (if -> IF datoscompletos operadores datoscompletos cuerpo END .)
    UNLESS          reduce using rule 107 (if -> IF datoscompletos operadores datoscompletos cuerpo END .)
    PUTS            reduce using rule 107 (if -> IF datoscompletos operadores datoscompletos cuerpo END .)
    PRINT           reduce using rule 107 (if -> IF datoscompletos operadores datoscompletos cuerpo END .)
    STRING          reduce using rule 107 (if -> IF datoscompletos operadores datoscompletos cuerpo END .)
    INTEGERW        reduce using rule 107 (if -> IF datoscompletos operadores datoscompletos cuerpo END .)
    INTEGER         reduce using rule 107 (if -> IF datoscompletos operadores datoscompletos cuerpo END .)
    VAR             reduce using rule 107 (if -> IF datoscompletos operadores datoscompletos cuerpo END .)
    CONSTANT        reduce using rule 107 (if -> IF datoscompletos operadores datoscompletos cuerpo END .)
    LCURLYBRACKET   reduce using rule 107 (if -> IF datoscompletos operadores datoscompletos cuerpo END .)
    LBRACKET        reduce using rule 107 (if -> IF datoscompletos operadores datoscompletos cuerpo END .)
    SET             reduce using rule 107 (if -> IF datoscompletos operadores datoscompletos cuerpo END .)
    $end            reduce using rule 107 (if -> IF datoscompletos operadores datoscompletos cuerpo END .)
    ELSE            reduce using rule 107 (if -> IF datoscompletos operadores datoscompletos cuerpo END .)
    END             reduce using rule 107 (if -> IF datoscompletos operadores datoscompletos cuerpo END .)
    RETURN          reduce using rule 107 (if -> IF datoscompletos operadores datoscompletos cuerpo END .)


state 292

    (108) if -> IF datoscompletos operadores datoscompletos cuerpo else .

    LOCALVAR        reduce using rule 108 (if -> IF datoscompletos operadores datoscompletos cuerpo else .)
    FOR             reduce using rule 108 (if -> IF datoscompletos operadores datoscompletos cuerpo else .)
    IF              reduce using rule 108 (if -> IF datoscompletos operadores datoscompletos cuerpo else .)
    UNLESS          reduce using rule 108 (if -> IF datoscompletos operadores datoscompletos cuerpo else .)
    PUTS            reduce using rule 108 (if -> IF datoscompletos operadores datoscompletos cuerpo else .)
    PRINT           reduce using rule 108 (if -> IF datoscompletos operadores datoscompletos cuerpo else .)
    STRING          reduce using rule 108 (if -> IF datoscompletos operadores datoscompletos cuerpo else .)
    INTEGERW        reduce using rule 108 (if -> IF datoscompletos operadores datoscompletos cuerpo else .)
    INTEGER         reduce using rule 108 (if -> IF datoscompletos operadores datoscompletos cuerpo else .)
    VAR             reduce using rule 108 (if -> IF datoscompletos operadores datoscompletos cuerpo else .)
    CONSTANT        reduce using rule 108 (if -> IF datoscompletos operadores datoscompletos cuerpo else .)
    LCURLYBRACKET   reduce using rule 108 (if -> IF datoscompletos operadores datoscompletos cuerpo else .)
    LBRACKET        reduce using rule 108 (if -> IF datoscompletos operadores datoscompletos cuerpo else .)
    SET             reduce using rule 108 (if -> IF datoscompletos operadores datoscompletos cuerpo else .)
    $end            reduce using rule 108 (if -> IF datoscompletos operadores datoscompletos cuerpo else .)
    ELSE            reduce using rule 108 (if -> IF datoscompletos operadores datoscompletos cuerpo else .)
    END             reduce using rule 108 (if -> IF datoscompletos operadores datoscompletos cuerpo else .)
    RETURN          reduce using rule 108 (if -> IF datoscompletos operadores datoscompletos cuerpo else .)


state 293

    (109) else -> ELSE . cuerpo END
    (17) cuerpo -> . declaracion cuerpo
    (18) cuerpo -> . asignacion cuerpo
    (19) cuerpo -> . loop cuerpo
    (20) cuerpo -> . estructurasDatos cuerpo
    (21) cuerpo -> . if cuerpo
    (22) cuerpo -> . unless cuerpo
    (23) cuerpo -> . impresion cuerpo
    (24) cuerpo -> . operacionSet cuerpo
    (25) cuerpo -> . operacionarray cuerpo
    (26) cuerpo -> . operacionHash cuerpo
    (27) cuerpo -> . string cuerpo
    (28) cuerpo -> . integer cuerpo
    (29) cuerpo -> .
    (31) declaracion -> . tiposvariables EQUAL datos
    (32) declaracion -> . tiposvariables EQUAL estructurasDatos
    (33) declaracion -> . tiposvariables EQUAL expresion
    (34) declaracion -> . tiposvariables EQUAL declaracion
    (35) declaracion -> . tiposvariables EQUAL casting
    (36) asignacion -> . LOCALVAR PLUSASSIGN datosAsignacion
    (37) asignacion -> . LOCALVAR MINASSIGN datosAsignacion
    (38) asignacion -> . LOCALVAR DIVASSIGN datosAsignacion
    (39) asignacion -> . LOCALVAR TIMESASSIGN datosAsignacion
    (40) asignacion -> . LOCALVAR MODASSIGN datosAsignacion
    (41) asignacion -> . LOCALVAR EXPASSIGN datosAsignacion
    (30) loop -> . FOR LOCALVAR IN rango cuerpo END
    (50) estructurasDatos -> . hash
    (51) estructurasDatos -> . array
    (52) estructurasDatos -> . set
    (107) if -> . IF datoscompletos operadores datoscompletos cuerpo END
    (108) if -> . IF datoscompletos operadores datoscompletos cuerpo else
    (128) unless -> . UNLESS expresionCondicional cuerpo ELSE cuerpo END
    (65) impresion -> . PUTS datos
    (66) impresion -> . PUTS LOCALVAR
    (67) impresion -> . PRINT datos
    (68) impresion -> . PRINT LOCALVAR
    (146) operacionSet -> . set DOT ADD LPARENTHESES datos RPARENTHESES
    (147) operacionSet -> . set DOT ADD LPARENTHESES tiposvariables RPARENTHESES
    (148) operacionSet -> . set DOT CLEAR
    (149) operacionSet -> . set DOT DELETE LPARENTHESES datos RPARENTHESES
    (150) operacionSet -> . set DOT DELETE LPARENTHESES tiposvariables RPARENTHESES
    (92) operacionarray -> . array LBRACKET INTEGER RBRACKET
    (93) operacionarray -> . array DOT TAKE LPARENTHESES INTEGER RPARENTHESES
    (94) operacionarray -> . array DOT DROP LPARENTHESES INTEGER RPARENTHESES
    (95) operacionarray -> . array DOT push maspush
    (100) operacionarray -> . array DOT POP
    (101) operacionarray -> . array DOT POP LPARENTHESES INTEGER RPARENTHESES
    (102) operacionarray -> . array DOT DELETE LPARENTHESES INTEGER RPARENTHESES
    (103) operacionarray -> . array DOT LENGTH LPARENTHESES RPARENTHESES
    (104) operacionarray -> . array DOT EMPTY QUESTIONMARK
    (58) operacionHash -> . hash LBRACKET datos RBRACKET
    (59) operacionHash -> . hash LBRACKET datos RBRACKET EQUAL datos
    (60) operacionHash -> . hash DOT INCLUDE QUESTIONMARK LPARENTHESES datos RPARENTHESES
    (61) operacionHash -> . hash DOT DELETE LPARENTHESES datos RPARENTHESES
    (62) operacionHash -> . hash DOT KEYS
    (151) string -> . STRING PLUS STRING
    (152) string -> . STRING MULTIPLY INTEGER
    (153) string -> . STRING DOT stringOpt
    (117) integer -> . INTEGERW DOT SQRT LPARENTHESES INTEGER RPARENTHESES
    (118) integer -> . INTEGER DOT CEIL LPARENTHESES RPARENTHESES
    (119) integer -> . INTEGER DOT CEIL LPARENTHESES INTEGER RPARENTHESES
    (120) integer -> . INTEGER DOT FLOOR LPARENTHESES RPARENTHESES
    (121) integer -> . INTEGER DOT FLOOR LPARENTHESES INTEGER RPARENTHESES
    (122) integer -> . INTEGER DOT ABS
    (44) tiposvariables -> . VAR
    (45) tiposvariables -> . LOCALVAR
    (46) tiposvariables -> . CONSTANT
    (53) hash -> . LCURLYBRACKET elementoHash RCURLYBRACKET
    (84) array -> . LBRACKET RBRACKET
    (85) array -> . LBRACKET datosarray RBRACKET
    (140) set -> . SET LBRACKET elementoSet RBRACKET

    END             reduce using rule 29 (cuerpo -> .)
    LOCALVAR        shift and go to state 17
    FOR             shift and go to state 19
    IF              shift and go to state 23
    UNLESS          shift and go to state 24
    PUTS            shift and go to state 25
    PRINT           shift and go to state 26
    STRING          shift and go to state 29
    INTEGERW        shift and go to state 30
    INTEGER         shift and go to state 28
    VAR             shift and go to state 31
    CONSTANT        shift and go to state 32
    LCURLYBRACKET   shift and go to state 33
    LBRACKET        shift and go to state 27
    SET             shift and go to state 34

    cuerpo                         shift and go to state 310
    declaracion                    shift and go to state 4
    asignacion                     shift and go to state 5
    loop                           shift and go to state 6
    estructurasDatos               shift and go to state 7
    if                             shift and go to state 8
    unless                         shift and go to state 9
    impresion                      shift and go to state 10
    operacionSet                   shift and go to state 11
    operacionarray                 shift and go to state 12
    operacionHash                  shift and go to state 13
    string                         shift and go to state 14
    integer                        shift and go to state 15
    tiposvariables                 shift and go to state 18
    hash                           shift and go to state 20
    array                          shift and go to state 21
    set                            shift and go to state 22

state 294

    (128) unless -> UNLESS expresionCondicional cuerpo ELSE cuerpo END .

    LOCALVAR        reduce using rule 128 (unless -> UNLESS expresionCondicional cuerpo ELSE cuerpo END .)
    FOR             reduce using rule 128 (unless -> UNLESS expresionCondicional cuerpo ELSE cuerpo END .)
    IF              reduce using rule 128 (unless -> UNLESS expresionCondicional cuerpo ELSE cuerpo END .)
    UNLESS          reduce using rule 128 (unless -> UNLESS expresionCondicional cuerpo ELSE cuerpo END .)
    PUTS            reduce using rule 128 (unless -> UNLESS expresionCondicional cuerpo ELSE cuerpo END .)
    PRINT           reduce using rule 128 (unless -> UNLESS expresionCondicional cuerpo ELSE cuerpo END .)
    STRING          reduce using rule 128 (unless -> UNLESS expresionCondicional cuerpo ELSE cuerpo END .)
    INTEGERW        reduce using rule 128 (unless -> UNLESS expresionCondicional cuerpo ELSE cuerpo END .)
    INTEGER         reduce using rule 128 (unless -> UNLESS expresionCondicional cuerpo ELSE cuerpo END .)
    VAR             reduce using rule 128 (unless -> UNLESS expresionCondicional cuerpo ELSE cuerpo END .)
    CONSTANT        reduce using rule 128 (unless -> UNLESS expresionCondicional cuerpo ELSE cuerpo END .)
    LCURLYBRACKET   reduce using rule 128 (unless -> UNLESS expresionCondicional cuerpo ELSE cuerpo END .)
    LBRACKET        reduce using rule 128 (unless -> UNLESS expresionCondicional cuerpo ELSE cuerpo END .)
    SET             reduce using rule 128 (unless -> UNLESS expresionCondicional cuerpo ELSE cuerpo END .)
    $end            reduce using rule 128 (unless -> UNLESS expresionCondicional cuerpo ELSE cuerpo END .)
    ELSE            reduce using rule 128 (unless -> UNLESS expresionCondicional cuerpo ELSE cuerpo END .)
    END             reduce using rule 128 (unless -> UNLESS expresionCondicional cuerpo ELSE cuerpo END .)
    RETURN          reduce using rule 128 (unless -> UNLESS expresionCondicional cuerpo ELSE cuerpo END .)


state 295

    (134) boolean -> EXCLAMATION LPARENTHESES condiciones . RPARENTHESES

    RPARENTHESES    shift and go to state 258


state 296

    (119) integer -> INTEGER DOT CEIL LPARENTHESES INTEGER RPARENTHESES .

    LOCALVAR        reduce using rule 119 (integer -> INTEGER DOT CEIL LPARENTHESES INTEGER RPARENTHESES .)
    FOR             reduce using rule 119 (integer -> INTEGER DOT CEIL LPARENTHESES INTEGER RPARENTHESES .)
    IF              reduce using rule 119 (integer -> INTEGER DOT CEIL LPARENTHESES INTEGER RPARENTHESES .)
    UNLESS          reduce using rule 119 (integer -> INTEGER DOT CEIL LPARENTHESES INTEGER RPARENTHESES .)
    PUTS            reduce using rule 119 (integer -> INTEGER DOT CEIL LPARENTHESES INTEGER RPARENTHESES .)
    PRINT           reduce using rule 119 (integer -> INTEGER DOT CEIL LPARENTHESES INTEGER RPARENTHESES .)
    STRING          reduce using rule 119 (integer -> INTEGER DOT CEIL LPARENTHESES INTEGER RPARENTHESES .)
    INTEGERW        reduce using rule 119 (integer -> INTEGER DOT CEIL LPARENTHESES INTEGER RPARENTHESES .)
    INTEGER         reduce using rule 119 (integer -> INTEGER DOT CEIL LPARENTHESES INTEGER RPARENTHESES .)
    VAR             reduce using rule 119 (integer -> INTEGER DOT CEIL LPARENTHESES INTEGER RPARENTHESES .)
    CONSTANT        reduce using rule 119 (integer -> INTEGER DOT CEIL LPARENTHESES INTEGER RPARENTHESES .)
    LCURLYBRACKET   reduce using rule 119 (integer -> INTEGER DOT CEIL LPARENTHESES INTEGER RPARENTHESES .)
    LBRACKET        reduce using rule 119 (integer -> INTEGER DOT CEIL LPARENTHESES INTEGER RPARENTHESES .)
    SET             reduce using rule 119 (integer -> INTEGER DOT CEIL LPARENTHESES INTEGER RPARENTHESES .)
    $end            reduce using rule 119 (integer -> INTEGER DOT CEIL LPARENTHESES INTEGER RPARENTHESES .)
    ELSE            reduce using rule 119 (integer -> INTEGER DOT CEIL LPARENTHESES INTEGER RPARENTHESES .)
    END             reduce using rule 119 (integer -> INTEGER DOT CEIL LPARENTHESES INTEGER RPARENTHESES .)
    RETURN          reduce using rule 119 (integer -> INTEGER DOT CEIL LPARENTHESES INTEGER RPARENTHESES .)


state 297

    (121) integer -> INTEGER DOT FLOOR LPARENTHESES INTEGER RPARENTHESES .

    LOCALVAR        reduce using rule 121 (integer -> INTEGER DOT FLOOR LPARENTHESES INTEGER RPARENTHESES .)
    FOR             reduce using rule 121 (integer -> INTEGER DOT FLOOR LPARENTHESES INTEGER RPARENTHESES .)
    IF              reduce using rule 121 (integer -> INTEGER DOT FLOOR LPARENTHESES INTEGER RPARENTHESES .)
    UNLESS          reduce using rule 121 (integer -> INTEGER DOT FLOOR LPARENTHESES INTEGER RPARENTHESES .)
    PUTS            reduce using rule 121 (integer -> INTEGER DOT FLOOR LPARENTHESES INTEGER RPARENTHESES .)
    PRINT           reduce using rule 121 (integer -> INTEGER DOT FLOOR LPARENTHESES INTEGER RPARENTHESES .)
    STRING          reduce using rule 121 (integer -> INTEGER DOT FLOOR LPARENTHESES INTEGER RPARENTHESES .)
    INTEGERW        reduce using rule 121 (integer -> INTEGER DOT FLOOR LPARENTHESES INTEGER RPARENTHESES .)
    INTEGER         reduce using rule 121 (integer -> INTEGER DOT FLOOR LPARENTHESES INTEGER RPARENTHESES .)
    VAR             reduce using rule 121 (integer -> INTEGER DOT FLOOR LPARENTHESES INTEGER RPARENTHESES .)
    CONSTANT        reduce using rule 121 (integer -> INTEGER DOT FLOOR LPARENTHESES INTEGER RPARENTHESES .)
    LCURLYBRACKET   reduce using rule 121 (integer -> INTEGER DOT FLOOR LPARENTHESES INTEGER RPARENTHESES .)
    LBRACKET        reduce using rule 121 (integer -> INTEGER DOT FLOOR LPARENTHESES INTEGER RPARENTHESES .)
    SET             reduce using rule 121 (integer -> INTEGER DOT FLOOR LPARENTHESES INTEGER RPARENTHESES .)
    $end            reduce using rule 121 (integer -> INTEGER DOT FLOOR LPARENTHESES INTEGER RPARENTHESES .)
    ELSE            reduce using rule 121 (integer -> INTEGER DOT FLOOR LPARENTHESES INTEGER RPARENTHESES .)
    END             reduce using rule 121 (integer -> INTEGER DOT FLOOR LPARENTHESES INTEGER RPARENTHESES .)
    RETURN          reduce using rule 121 (integer -> INTEGER DOT FLOOR LPARENTHESES INTEGER RPARENTHESES .)


state 298

    (158) stringOpt -> INSERT LPARENTHESES INTEGER COMMA . STRING RPARENTHESES

    STRING          shift and go to state 311


state 299

    (117) integer -> INTEGERW DOT SQRT LPARENTHESES INTEGER RPARENTHESES .

    LOCALVAR        reduce using rule 117 (integer -> INTEGERW DOT SQRT LPARENTHESES INTEGER RPARENTHESES .)
    FOR             reduce using rule 117 (integer -> INTEGERW DOT SQRT LPARENTHESES INTEGER RPARENTHESES .)
    IF              reduce using rule 117 (integer -> INTEGERW DOT SQRT LPARENTHESES INTEGER RPARENTHESES .)
    UNLESS          reduce using rule 117 (integer -> INTEGERW DOT SQRT LPARENTHESES INTEGER RPARENTHESES .)
    PUTS            reduce using rule 117 (integer -> INTEGERW DOT SQRT LPARENTHESES INTEGER RPARENTHESES .)
    PRINT           reduce using rule 117 (integer -> INTEGERW DOT SQRT LPARENTHESES INTEGER RPARENTHESES .)
    STRING          reduce using rule 117 (integer -> INTEGERW DOT SQRT LPARENTHESES INTEGER RPARENTHESES .)
    INTEGERW        reduce using rule 117 (integer -> INTEGERW DOT SQRT LPARENTHESES INTEGER RPARENTHESES .)
    INTEGER         reduce using rule 117 (integer -> INTEGERW DOT SQRT LPARENTHESES INTEGER RPARENTHESES .)
    VAR             reduce using rule 117 (integer -> INTEGERW DOT SQRT LPARENTHESES INTEGER RPARENTHESES .)
    CONSTANT        reduce using rule 117 (integer -> INTEGERW DOT SQRT LPARENTHESES INTEGER RPARENTHESES .)
    LCURLYBRACKET   reduce using rule 117 (integer -> INTEGERW DOT SQRT LPARENTHESES INTEGER RPARENTHESES .)
    LBRACKET        reduce using rule 117 (integer -> INTEGERW DOT SQRT LPARENTHESES INTEGER RPARENTHESES .)
    SET             reduce using rule 117 (integer -> INTEGERW DOT SQRT LPARENTHESES INTEGER RPARENTHESES .)
    $end            reduce using rule 117 (integer -> INTEGERW DOT SQRT LPARENTHESES INTEGER RPARENTHESES .)
    ELSE            reduce using rule 117 (integer -> INTEGERW DOT SQRT LPARENTHESES INTEGER RPARENTHESES .)
    END             reduce using rule 117 (integer -> INTEGERW DOT SQRT LPARENTHESES INTEGER RPARENTHESES .)
    RETURN          reduce using rule 117 (integer -> INTEGERW DOT SQRT LPARENTHESES INTEGER RPARENTHESES .)


state 300

    (54) elementoHash -> datos EQUAL GREATERTHAN datos maselementos .

    RCURLYBRACKET   reduce using rule 54 (elementoHash -> datos EQUAL GREATERTHAN datos maselementos .)
    COMMA           reduce using rule 54 (elementoHash -> datos EQUAL GREATERTHAN datos maselementos .)


state 301

    (57) maselementos -> COMMA . elementoHash maselementos
    (54) elementoHash -> . datos EQUAL GREATERTHAN datos maselementos
    (55) elementoHash -> .
    (47) datos -> . INTEGER
    (48) datos -> . FLOAT
    (49) datos -> . STRING

    COMMA           reduce using rule 55 (elementoHash -> .)
    RCURLYBRACKET   reduce using rule 55 (elementoHash -> .)
    INTEGER         shift and go to state 78
    FLOAT           shift and go to state 79
    STRING          shift and go to state 70

    elementoHash                   shift and go to state 312
    datos                          shift and go to state 95

state 302

    (145) otroElemento -> COMMA elementoSet otroElemento .

    RBRACKET        reduce using rule 145 (otroElemento -> COMMA elementoSet otroElemento .)
    COMMA           reduce using rule 145 (otroElemento -> COMMA elementoSet otroElemento .)


state 303

    (8) argumentos -> LOCALVAR EQUAL LCURLYBRACKET RCURLYBRACKET .

    RPARENTHESES    reduce using rule 8 (argumentos -> LOCALVAR EQUAL LCURLYBRACKET RCURLYBRACKET .)


state 304

    (13) variosargumentos -> LOCALVAR EQUAL datos masargumentos .

    RPARENTHESES    reduce using rule 13 (variosargumentos -> LOCALVAR EQUAL datos masargumentos .)


state 305

    (11) variosargumentos -> LOCALVAR EQUAL . datos
    (13) variosargumentos -> LOCALVAR EQUAL . datos masargumentos
    (47) datos -> . INTEGER
    (48) datos -> . FLOAT
    (49) datos -> . STRING

    INTEGER         shift and go to state 78
    FLOAT           shift and go to state 79
    STRING          shift and go to state 70

    datos                          shift and go to state 268

state 306

    (3) funcion -> DEF LOCALVAR LPARENTHESES argumentos RPARENTHESES cuerpo END .

    $end            reduce using rule 3 (funcion -> DEF LOCALVAR LPARENTHESES argumentos RPARENTHESES cuerpo END .)


state 307

    (4) funcion -> DEF LOCALVAR LPARENTHESES argumentos RPARENTHESES cuerpo retornar . END

    END             shift and go to state 313


state 308

    (15) retornar -> RETURN . LOCALVAR
    (16) retornar -> RETURN . datos
    (47) datos -> . INTEGER
    (48) datos -> . FLOAT
    (49) datos -> . STRING

    LOCALVAR        shift and go to state 314
    INTEGER         shift and go to state 78
    FLOAT           shift and go to state 79
    STRING          shift and go to state 70

    datos                          shift and go to state 315

state 309

    (60) operacionHash -> hash DOT INCLUDE QUESTIONMARK LPARENTHESES datos RPARENTHESES .

    LOCALVAR        reduce using rule 60 (operacionHash -> hash DOT INCLUDE QUESTIONMARK LPARENTHESES datos RPARENTHESES .)
    FOR             reduce using rule 60 (operacionHash -> hash DOT INCLUDE QUESTIONMARK LPARENTHESES datos RPARENTHESES .)
    IF              reduce using rule 60 (operacionHash -> hash DOT INCLUDE QUESTIONMARK LPARENTHESES datos RPARENTHESES .)
    UNLESS          reduce using rule 60 (operacionHash -> hash DOT INCLUDE QUESTIONMARK LPARENTHESES datos RPARENTHESES .)
    PUTS            reduce using rule 60 (operacionHash -> hash DOT INCLUDE QUESTIONMARK LPARENTHESES datos RPARENTHESES .)
    PRINT           reduce using rule 60 (operacionHash -> hash DOT INCLUDE QUESTIONMARK LPARENTHESES datos RPARENTHESES .)
    STRING          reduce using rule 60 (operacionHash -> hash DOT INCLUDE QUESTIONMARK LPARENTHESES datos RPARENTHESES .)
    INTEGERW        reduce using rule 60 (operacionHash -> hash DOT INCLUDE QUESTIONMARK LPARENTHESES datos RPARENTHESES .)
    INTEGER         reduce using rule 60 (operacionHash -> hash DOT INCLUDE QUESTIONMARK LPARENTHESES datos RPARENTHESES .)
    VAR             reduce using rule 60 (operacionHash -> hash DOT INCLUDE QUESTIONMARK LPARENTHESES datos RPARENTHESES .)
    CONSTANT        reduce using rule 60 (operacionHash -> hash DOT INCLUDE QUESTIONMARK LPARENTHESES datos RPARENTHESES .)
    LCURLYBRACKET   reduce using rule 60 (operacionHash -> hash DOT INCLUDE QUESTIONMARK LPARENTHESES datos RPARENTHESES .)
    LBRACKET        reduce using rule 60 (operacionHash -> hash DOT INCLUDE QUESTIONMARK LPARENTHESES datos RPARENTHESES .)
    SET             reduce using rule 60 (operacionHash -> hash DOT INCLUDE QUESTIONMARK LPARENTHESES datos RPARENTHESES .)
    $end            reduce using rule 60 (operacionHash -> hash DOT INCLUDE QUESTIONMARK LPARENTHESES datos RPARENTHESES .)
    ELSE            reduce using rule 60 (operacionHash -> hash DOT INCLUDE QUESTIONMARK LPARENTHESES datos RPARENTHESES .)
    END             reduce using rule 60 (operacionHash -> hash DOT INCLUDE QUESTIONMARK LPARENTHESES datos RPARENTHESES .)
    RETURN          reduce using rule 60 (operacionHash -> hash DOT INCLUDE QUESTIONMARK LPARENTHESES datos RPARENTHESES .)


state 310

    (109) else -> ELSE cuerpo . END

    END             shift and go to state 316


state 311

    (158) stringOpt -> INSERT LPARENTHESES INTEGER COMMA STRING . RPARENTHESES

    RPARENTHESES    shift and go to state 317


state 312

    (57) maselementos -> COMMA elementoHash . maselementos
    (56) maselementos -> .
    (57) maselementos -> . COMMA elementoHash maselementos

  ! shift/reduce conflict for COMMA resolved as shift
    RCURLYBRACKET   reduce using rule 56 (maselementos -> .)
    COMMA           shift and go to state 301

  ! COMMA           [ reduce using rule 56 (maselementos -> .) ]

    maselementos                   shift and go to state 318

state 313

    (4) funcion -> DEF LOCALVAR LPARENTHESES argumentos RPARENTHESES cuerpo retornar END .

    $end            reduce using rule 4 (funcion -> DEF LOCALVAR LPARENTHESES argumentos RPARENTHESES cuerpo retornar END .)


state 314

    (15) retornar -> RETURN LOCALVAR .

    END             reduce using rule 15 (retornar -> RETURN LOCALVAR .)


state 315

    (16) retornar -> RETURN datos .

    END             reduce using rule 16 (retornar -> RETURN datos .)


state 316

    (109) else -> ELSE cuerpo END .

    LOCALVAR        reduce using rule 109 (else -> ELSE cuerpo END .)
    FOR             reduce using rule 109 (else -> ELSE cuerpo END .)
    IF              reduce using rule 109 (else -> ELSE cuerpo END .)
    UNLESS          reduce using rule 109 (else -> ELSE cuerpo END .)
    PUTS            reduce using rule 109 (else -> ELSE cuerpo END .)
    PRINT           reduce using rule 109 (else -> ELSE cuerpo END .)
    STRING          reduce using rule 109 (else -> ELSE cuerpo END .)
    INTEGERW        reduce using rule 109 (else -> ELSE cuerpo END .)
    INTEGER         reduce using rule 109 (else -> ELSE cuerpo END .)
    VAR             reduce using rule 109 (else -> ELSE cuerpo END .)
    CONSTANT        reduce using rule 109 (else -> ELSE cuerpo END .)
    LCURLYBRACKET   reduce using rule 109 (else -> ELSE cuerpo END .)
    LBRACKET        reduce using rule 109 (else -> ELSE cuerpo END .)
    SET             reduce using rule 109 (else -> ELSE cuerpo END .)
    $end            reduce using rule 109 (else -> ELSE cuerpo END .)
    ELSE            reduce using rule 109 (else -> ELSE cuerpo END .)
    END             reduce using rule 109 (else -> ELSE cuerpo END .)
    RETURN          reduce using rule 109 (else -> ELSE cuerpo END .)


state 317

    (158) stringOpt -> INSERT LPARENTHESES INTEGER COMMA STRING RPARENTHESES .

    LOCALVAR        reduce using rule 158 (stringOpt -> INSERT LPARENTHESES INTEGER COMMA STRING RPARENTHESES .)
    FOR             reduce using rule 158 (stringOpt -> INSERT LPARENTHESES INTEGER COMMA STRING RPARENTHESES .)
    IF              reduce using rule 158 (stringOpt -> INSERT LPARENTHESES INTEGER COMMA STRING RPARENTHESES .)
    UNLESS          reduce using rule 158 (stringOpt -> INSERT LPARENTHESES INTEGER COMMA STRING RPARENTHESES .)
    PUTS            reduce using rule 158 (stringOpt -> INSERT LPARENTHESES INTEGER COMMA STRING RPARENTHESES .)
    PRINT           reduce using rule 158 (stringOpt -> INSERT LPARENTHESES INTEGER COMMA STRING RPARENTHESES .)
    STRING          reduce using rule 158 (stringOpt -> INSERT LPARENTHESES INTEGER COMMA STRING RPARENTHESES .)
    INTEGERW        reduce using rule 158 (stringOpt -> INSERT LPARENTHESES INTEGER COMMA STRING RPARENTHESES .)
    INTEGER         reduce using rule 158 (stringOpt -> INSERT LPARENTHESES INTEGER COMMA STRING RPARENTHESES .)
    VAR             reduce using rule 158 (stringOpt -> INSERT LPARENTHESES INTEGER COMMA STRING RPARENTHESES .)
    CONSTANT        reduce using rule 158 (stringOpt -> INSERT LPARENTHESES INTEGER COMMA STRING RPARENTHESES .)
    LCURLYBRACKET   reduce using rule 158 (stringOpt -> INSERT LPARENTHESES INTEGER COMMA STRING RPARENTHESES .)
    LBRACKET        reduce using rule 158 (stringOpt -> INSERT LPARENTHESES INTEGER COMMA STRING RPARENTHESES .)
    SET             reduce using rule 158 (stringOpt -> INSERT LPARENTHESES INTEGER COMMA STRING RPARENTHESES .)
    $end            reduce using rule 158 (stringOpt -> INSERT LPARENTHESES INTEGER COMMA STRING RPARENTHESES .)
    ELSE            reduce using rule 158 (stringOpt -> INSERT LPARENTHESES INTEGER COMMA STRING RPARENTHESES .)
    END             reduce using rule 158 (stringOpt -> INSERT LPARENTHESES INTEGER COMMA STRING RPARENTHESES .)
    RETURN          reduce using rule 158 (stringOpt -> INSERT LPARENTHESES INTEGER COMMA STRING RPARENTHESES .)


state 318

    (57) maselementos -> COMMA elementoHash maselementos .

    COMMA           reduce using rule 57 (maselementos -> COMMA elementoHash maselementos .)
    RCURLYBRACKET   reduce using rule 57 (maselementos -> COMMA elementoHash maselementos .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for LBRACKET in state 20 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 21 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 117 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 117 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 117 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 117 resolved as shift
WARNING: shift/reduce conflict for PERCENTAGE in state 117 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 169 resolved as shift
WARNING: shift/reduce conflict for DOUBLEAMPERSAND in state 206 resolved as shift
WARNING: shift/reduce conflict for DOUBLEPIPE in state 206 resolved as shift
WARNING: shift/reduce conflict for RPARENTHESES in state 209 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 232 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 232 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 232 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 232 resolved as shift
WARNING: shift/reduce conflict for PERCENTAGE in state 232 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 233 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 233 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 233 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 233 resolved as shift
WARNING: shift/reduce conflict for PERCENTAGE in state 233 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 234 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 234 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 234 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 234 resolved as shift
WARNING: shift/reduce conflict for PERCENTAGE in state 234 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 265 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 266 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 312 resolved as shift
WARNING: reduce/reduce conflict in state 66 resolved using rule (tiposvariables -> VAR)
WARNING: rejected rule (datosvarios -> VAR) in state 66
WARNING: reduce/reduce conflict in state 67 resolved using rule (tiposvariables -> LOCALVAR)
WARNING: rejected rule (datosvarios -> LOCALVAR) in state 67
WARNING: reduce/reduce conflict in state 68 resolved using rule (datos -> INTEGER)
WARNING: rejected rule (number -> INTEGER) in state 68
WARNING: reduce/reduce conflict in state 69 resolved using rule (datos -> FLOAT)
WARNING: rejected rule (number -> FLOAT) in state 69
WARNING: reduce/reduce conflict in state 169 resolved using rule (elementoSet -> datos)
WARNING: rejected rule (otroElemento -> <empty>) in state 169
