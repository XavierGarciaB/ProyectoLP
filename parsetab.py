
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ABS ADD ALERT AMPERSAND BEGIN BEGIN_M BOOLEAN CAPS CEIL CIRCUMFLEX CLEAR COLON COMBCOMP COMMA COMMENT CONSTANT DEF DELETE DIVASSIGN DIVIDE DOBLEQUOTE DOT DOUBLEAMPERSAND DOUBLEEQUAL DOUBLELESSTHAN DOUBLEPIPE DOWNCASE DROP ELSE ELSEIF EMPTY END END_M EQUAL EXCLAMATION EXPASSIGN FALSE FLOAT FLOOR FOR GETS GREATERTHAN GREQUAL IF IN INCLUDE INSERT INTEGER INTEGERW KEYS LBRACKET LCURLYBRACKET LENGTH LEQUAL LESSTHAN LOCALVAR LPARENTHESES MINASSIGN MINUS MODASSIGN MULTIPLY NIL NOT NOTEQUAL OR PERCENTAGE PIPE PLUS PLUSASSIGN POP PRINT PUSH PUTS QUESTIONMARK QUESTIONMARKPERIOD RANGEINCLUSIVE RANGEXCLUSIVE RBRACKET RCURLYBRACKET RETURN RPARENTHESES SEMICOLON SET SINGLEQUOTE SQRT STRING TAKE TIMESASSIGN TO_F TO_I TO_S TRIPLEEQUAL TRUE TWOGREATERTHAN TWOPOINTS TWOSTARS UNLESS UNTIL UPCASE VAR WAVEinicio : cuerpo\n              | funcion\n            funcion : DEF LOCALVAR LPARENTHESES argumentos RPARENTHESES cuerpo END\n                | DEF LOCALVAR LPARENTHESES argumentos RPARENTHESES cuerpo retornar ENDargumentos : variosargumentos\n                   | MULTIPLY LOCALVAR\n                   | TWOSTARS LOCALVAR\n                   | LOCALVAR EQUAL LCURLYBRACKET RCURLYBRACKET\n                   | LOCALVAR TWOPOINTS datosvariosargumentos : LOCALVAR\n                         | LOCALVAR EQUAL datos\n                         | LOCALVAR masargumentos\n                         | LOCALVAR EQUAL datos masargumentosmasargumentos : COMMA variosargumentosretornar : RETURN LOCALVAR\n                | RETURN datoscuerpo : declaracion cuerpo\n              | asignacion cuerpo\n              | loop cuerpo\n              | estructurasDatos cuerpo\n              | if cuerpo\n              | unless cuerpo\n              | impresion cuerpo\n              | operacionSet cuerpo\n              | operacionarray cuerpo\n              | operacionHash cuerpo\n              | string cuerpo\n              | integer cuerpo\n              |\n              loop : FOR LOCALVAR IN rango cuerpo ENDdeclaracion : tiposvariables EQUAL datos\n                   | tiposvariables EQUAL estructurasDatos\n                   | tiposvariables EQUAL expresion\n                   | tiposvariables EQUAL declaracion\n                   | tiposvariables EQUAL casting\n                   asignacion : LOCALVAR PLUSASSIGN datosAsignacion\n                   | LOCALVAR MINASSIGN datosAsignacion\n                   | LOCALVAR DIVASSIGN datosAsignacion\n                   | LOCALVAR TIMESASSIGN datosAsignacion\n                   | LOCALVAR MODASSIGN datosAsignacion\n                   | LOCALVAR EXPASSIGN datosAsignaciondatosAsignacion : number\n                        | LOCALVARtiposvariables : VAR\n                  | LOCALVAR\n                  | CONSTANTdatos : INTEGER\n              | FLOAT\n              | STRING\n              estructurasDatos : hash\n                        | array\n                        | set hash : LCURLYBRACKET elementoHash RCURLYBRACKETelementoHash : datos EQUAL GREATERTHAN datos maselementos\n                     |maselementos :\n                | COMMA elementoHash maselementosoperacionHash : hash LBRACKET datos RBRACKEToperacionHash : hash LBRACKET datos RBRACKET EQUAL datos operacionHash : hash DOT INCLUDE QUESTIONMARK LPARENTHESES datos RPARENTHESES operacionHash : hash DOT DELETE LPARENTHESES datos RPARENTHESES operacionHash : hash DOT KEYSrango : INTEGER RANGEINCLUSIVE INTEGER\n              | INTEGER RANGEXCLUSIVE INTEGERimpresion : PUTS datos\n                 | PUTS LOCALVAR\n                 impresion : PRINT datos\n                 | PRINT LOCALVAR\n                 number : INTEGER\n              | FLOAT expresion : operacion\n                  | LPARENTHESES operacion RPARENTHESES\n                  | LPARENTHESES operacion RPARENTHESES masoperacionesoperacion : number operador number\n                 | operacion masoperacionesmasoperaciones : operador expresion masoperaciones\n                    | operador number\n                    | operador expresion\n                    operador : PLUS\n                  | MINUS\n                  | MULTIPLY\n                  | DIVIDE\n                  | PERCENTAGEarray : LBRACKET RBRACKET\n            | LBRACKET datosarray RBRACKETdatosvarios : datos\n                | number\n                | VAR\n                | LOCALVAR datosarray : datosvarios\n                    | datosarray COMMA datosvariosoperacionarray : array LBRACKET INTEGER RBRACKEToperacionarray : array DOT TAKE LPARENTHESES INTEGER RPARENTHESES operacionarray : array DOT DROP LPARENTHESES INTEGER RPARENTHESES operacionarray : array DOT push maspush push : PUSH LPARENTHESES datosvarios RPARENTHESES\n            |  maspush :\n                | DOT push maspush operacionarray : array DOT POP\n                        | array DOT POP LPARENTHESES INTEGER RPARENTHESES operacionarray : array DOT DELETE LPARENTHESES INTEGER RPARENTHESES operacionarray : array DOT LENGTH LPARENTHESES RPARENTHESES  operacionarray : array DOT EMPTY QUESTIONMARK datoscompletos : datosvarios\n                        | tiposvariablesif : IF datoscompletos operadores datoscompletos cuerpo END\n            | IF datoscompletos operadores datoscompletos cuerpo else else : ELSE cuerpo ENDoperadores : DOUBLEEQUAL\n                 | TRIPLEEQUAL\n                 | GREATERTHAN\n                 | NOTEQUAL\n                 | LESSTHAN\n                 | GREQUAL\n                 | LEQUAL integer : INTEGERW DOT SQRT LPARENTHESES INTEGER RPARENTHESESinteger : INTEGER DOT CEIL LPARENTHESES RPARENTHESES\n            | INTEGER DOT CEIL LPARENTHESES INTEGER RPARENTHESES integer : INTEGER DOT FLOOR LPARENTHESES RPARENTHESES\n                | INTEGER DOT FLOOR LPARENTHESES INTEGER RPARENTHESESinteger : INTEGER DOT ABSfloat : FLOAT DOT CEIL LPARENTHESES RPARENTHESES\n            | FLOAT DOT CEIL LPARENTHESES INTEGER RPARENTHESES float : FLOAT DOT FLOOR LPARENTHESES RPARENTHESES\n                | FLOAT DOT FLOOR LPARENTHESES INTEGER RPARENTHESESfloat : FLOAT DOT ABSunless : UNLESS expresionCondicional cuerpo ELSE cuerpo ENDexpresionCondicional : boolean\n                            | EXCLAMATION LPARENTHESES boolean RPARENTHESESoperadorBinario : DOUBLEAMPERSAND\n                        | DOUBLEPIPEboolean : condiciones\n                | EXCLAMATION LPARENTHESES condiciones RPARENTHESES\n                | boolean operadorBinario booleancondiciones : tiposvariables operadores tiposvariablescondiciones : datos operadores datoscondiciones : tiposvariables operadores datos\n                   | datos operadores tiposvariablesset : SET LBRACKET  elementoSet RBRACKETelementoSet :\n                    | datos\n                    | datos otroElemento\n                    otroElemento :\n                | COMMA elementoSet otroElementooperacionSet : set DOT ADD LPARENTHESES datos RPARENTHESES\n                    | set DOT ADD LPARENTHESES tiposvariables RPARENTHESESoperacionSet : set DOT CLEARoperacionSet : set DOT DELETE LPARENTHESES datos RPARENTHESES\n                    | set DOT DELETE LPARENTHESES tiposvariables RPARENTHESESstring : STRING PLUS STRINGstring : STRING MULTIPLY INTEGERstring : STRING DOT stringOptstringOpt : UPCASE\n                    | DOWNCASE\n                    | LENGTH\n                    | CAPS\n                    | INSERT LPARENTHESES INTEGER COMMA STRING RPARENTHESEScasting : STRING DOT TO_Icasting : STRING DOT TO_Fcasting : number DOT TO_S'
    
_lr_action_items = {'$end':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,20,21,22,35,36,37,38,39,40,41,42,43,44,45,46,59,68,69,70,78,79,80,81,82,83,84,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,124,128,129,135,152,156,157,158,159,160,161,162,163,166,176,189,192,195,196,200,220,230,231,232,233,234,235,236,245,248,260,262,273,274,275,278,280,281,282,283,284,285,286,287,288,289,290,291,292,294,296,297,299,306,309,313,316,317,],[-29,0,-1,-2,-29,-29,-29,-29,-29,-29,-29,-29,-29,-29,-29,-29,-50,-51,-52,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-97,-47,-48,-49,-47,-48,-65,-66,-67,-68,-84,-43,-36,-42,-69,-70,-37,-38,-39,-40,-41,-31,-32,-33,-34,-35,-49,-50,-51,-52,-71,-62,-98,-100,-148,-85,-122,-151,-152,-153,-154,-155,-156,-157,-53,-75,-58,-92,-97,-95,-104,-140,-159,-160,-78,-77,-72,-161,-74,-98,-103,-118,-120,-76,-73,-30,-59,-61,-93,-94,-99,-101,-102,-96,-146,-147,-149,-150,-107,-108,-128,-119,-121,-117,-3,-60,-4,-109,-158,]),'DEF':([0,],[16,]),'LOCALVAR':([0,4,5,6,7,8,9,10,11,12,13,14,15,16,19,20,21,22,23,24,25,26,27,31,32,48,49,50,51,52,53,54,59,62,63,64,65,66,67,68,69,70,71,72,74,77,78,79,80,81,82,83,84,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,124,128,129,135,137,138,139,140,141,142,143,144,146,147,148,149,150,151,152,153,156,157,158,159,160,161,162,163,166,173,174,176,187,189,192,195,196,200,201,202,203,204,205,206,210,211,212,213,220,226,227,230,231,232,233,234,235,236,245,248,256,257,258,260,262,273,274,275,276,277,278,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,296,297,299,308,309,316,317,],[17,17,17,17,17,17,17,17,17,17,17,17,17,47,55,-50,-51,-52,67,77,81,83,88,-44,-46,98,98,98,98,98,98,77,-97,-105,-106,-86,-87,-44,-45,-47,-48,-49,17,-129,-133,-45,-47,-48,-65,-66,-67,-68,-84,170,-43,-36,-42,-69,-70,-37,-38,-39,-40,-41,-31,-32,-33,-34,-35,-49,-50,-51,-52,-71,-62,-98,-100,-148,67,-110,-111,-112,-113,-114,-115,-116,77,-131,-132,77,77,77,-85,88,-122,-151,-152,-153,-154,-155,-156,-157,-53,228,229,-75,17,-58,-92,-97,-95,-104,88,77,77,17,17,-135,-136,-138,-137,-139,-140,271,17,-159,-160,-78,-77,-72,-161,-74,-98,-103,77,-130,-134,-118,-120,-76,-73,-30,-63,-64,-59,-61,-93,-94,-99,-101,-102,-96,-146,-147,-149,-150,-107,-108,17,-128,-119,-121,-117,314,-60,-109,-158,]),'FOR':([0,4,5,6,7,8,9,10,11,12,13,14,15,20,21,22,31,32,59,62,63,64,65,66,67,68,69,70,71,72,74,77,78,79,80,81,82,83,84,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,124,128,129,135,152,156,157,158,159,160,161,162,163,166,176,187,189,192,195,196,200,204,205,206,210,211,212,213,220,227,230,231,232,233,234,235,236,245,248,257,258,260,262,273,274,275,276,277,278,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,296,297,299,309,316,317,],[19,19,19,19,19,19,19,19,19,19,19,19,19,-50,-51,-52,-44,-46,-97,-105,-106,-86,-87,-44,-45,-47,-48,-49,19,-129,-133,-45,-47,-48,-65,-66,-67,-68,-84,-43,-36,-42,-69,-70,-37,-38,-39,-40,-41,-31,-32,-33,-34,-35,-49,-50,-51,-52,-71,-62,-98,-100,-148,-85,-122,-151,-152,-153,-154,-155,-156,-157,-53,-75,19,-58,-92,-97,-95,-104,19,19,-135,-136,-138,-137,-139,-140,19,-159,-160,-78,-77,-72,-161,-74,-98,-103,-130,-134,-118,-120,-76,-73,-30,-63,-64,-59,-61,-93,-94,-99,-101,-102,-96,-146,-147,-149,-150,-107,-108,19,-128,-119,-121,-117,-60,-109,-158,]),'IF':([0,4,5,6,7,8,9,10,11,12,13,14,15,20,21,22,31,32,59,62,63,64,65,66,67,68,69,70,71,72,74,77,78,79,80,81,82,83,84,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,124,128,129,135,152,156,157,158,159,160,161,162,163,166,176,187,189,192,195,196,200,204,205,206,210,211,212,213,220,227,230,231,232,233,234,235,236,245,248,257,258,260,262,273,274,275,276,277,278,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,296,297,299,309,316,317,],[23,23,23,23,23,23,23,23,23,23,23,23,23,-50,-51,-52,-44,-46,-97,-105,-106,-86,-87,-44,-45,-47,-48,-49,23,-129,-133,-45,-47,-48,-65,-66,-67,-68,-84,-43,-36,-42,-69,-70,-37,-38,-39,-40,-41,-31,-32,-33,-34,-35,-49,-50,-51,-52,-71,-62,-98,-100,-148,-85,-122,-151,-152,-153,-154,-155,-156,-157,-53,-75,23,-58,-92,-97,-95,-104,23,23,-135,-136,-138,-137,-139,-140,23,-159,-160,-78,-77,-72,-161,-74,-98,-103,-130,-134,-118,-120,-76,-73,-30,-63,-64,-59,-61,-93,-94,-99,-101,-102,-96,-146,-147,-149,-150,-107,-108,23,-128,-119,-121,-117,-60,-109,-158,]),'UNLESS':([0,4,5,6,7,8,9,10,11,12,13,14,15,20,21,22,31,32,59,62,63,64,65,66,67,68,69,70,71,72,74,77,78,79,80,81,82,83,84,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,124,128,129,135,152,156,157,158,159,160,161,162,163,166,176,187,189,192,195,196,200,204,205,206,210,211,212,213,220,227,230,231,232,233,234,235,236,245,248,257,258,260,262,273,274,275,276,277,278,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,296,297,299,309,316,317,],[24,24,24,24,24,24,24,24,24,24,24,24,24,-50,-51,-52,-44,-46,-97,-105,-106,-86,-87,-44,-45,-47,-48,-49,24,-129,-133,-45,-47,-48,-65,-66,-67,-68,-84,-43,-36,-42,-69,-70,-37,-38,-39,-40,-41,-31,-32,-33,-34,-35,-49,-50,-51,-52,-71,-62,-98,-100,-148,-85,-122,-151,-152,-153,-154,-155,-156,-157,-53,-75,24,-58,-92,-97,-95,-104,24,24,-135,-136,-138,-137,-139,-140,24,-159,-160,-78,-77,-72,-161,-74,-98,-103,-130,-134,-118,-120,-76,-73,-30,-63,-64,-59,-61,-93,-94,-99,-101,-102,-96,-146,-147,-149,-150,-107,-108,24,-128,-119,-121,-117,-60,-109,-158,]),'PUTS':([0,4,5,6,7,8,9,10,11,12,13,14,15,20,21,22,31,32,59,62,63,64,65,66,67,68,69,70,71,72,74,77,78,79,80,81,82,83,84,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,124,128,129,135,152,156,157,158,159,160,161,162,163,166,176,187,189,192,195,196,200,204,205,206,210,211,212,213,220,227,230,231,232,233,234,235,236,245,248,257,258,260,262,273,274,275,276,277,278,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,296,297,299,309,316,317,],[25,25,25,25,25,25,25,25,25,25,25,25,25,-50,-51,-52,-44,-46,-97,-105,-106,-86,-87,-44,-45,-47,-48,-49,25,-129,-133,-45,-47,-48,-65,-66,-67,-68,-84,-43,-36,-42,-69,-70,-37,-38,-39,-40,-41,-31,-32,-33,-34,-35,-49,-50,-51,-52,-71,-62,-98,-100,-148,-85,-122,-151,-152,-153,-154,-155,-156,-157,-53,-75,25,-58,-92,-97,-95,-104,25,25,-135,-136,-138,-137,-139,-140,25,-159,-160,-78,-77,-72,-161,-74,-98,-103,-130,-134,-118,-120,-76,-73,-30,-63,-64,-59,-61,-93,-94,-99,-101,-102,-96,-146,-147,-149,-150,-107,-108,25,-128,-119,-121,-117,-60,-109,-158,]),'PRINT':([0,4,5,6,7,8,9,10,11,12,13,14,15,20,21,22,31,32,59,62,63,64,65,66,67,68,69,70,71,72,74,77,78,79,80,81,82,83,84,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,124,128,129,135,152,156,157,158,159,160,161,162,163,166,176,187,189,192,195,196,200,204,205,206,210,211,212,213,220,227,230,231,232,233,234,235,236,245,248,257,258,260,262,273,274,275,276,277,278,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,296,297,299,309,316,317,],[26,26,26,26,26,26,26,26,26,26,26,26,26,-50,-51,-52,-44,-46,-97,-105,-106,-86,-87,-44,-45,-47,-48,-49,26,-129,-133,-45,-47,-48,-65,-66,-67,-68,-84,-43,-36,-42,-69,-70,-37,-38,-39,-40,-41,-31,-32,-33,-34,-35,-49,-50,-51,-52,-71,-62,-98,-100,-148,-85,-122,-151,-152,-153,-154,-155,-156,-157,-53,-75,26,-58,-92,-97,-95,-104,26,26,-135,-136,-138,-137,-139,-140,26,-159,-160,-78,-77,-72,-161,-74,-98,-103,-130,-134,-118,-120,-76,-73,-30,-63,-64,-59,-61,-93,-94,-99,-101,-102,-96,-146,-147,-149,-150,-107,-108,26,-128,-119,-121,-117,-60,-109,-158,]),'STRING':([0,4,5,6,7,8,9,10,11,12,13,14,15,20,21,22,23,24,25,26,27,31,32,33,54,56,59,62,63,64,65,66,67,68,69,70,71,72,74,77,78,79,80,81,82,83,84,90,96,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,124,128,129,135,137,138,139,140,141,142,143,144,146,147,148,149,150,151,152,153,156,157,158,159,160,161,162,163,166,176,187,189,191,192,195,196,200,201,202,203,204,205,206,210,211,212,213,219,220,222,223,224,227,230,231,232,233,234,235,236,240,241,245,248,256,257,258,260,262,273,274,275,276,277,278,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,296,297,298,299,301,305,308,309,316,317,],[29,29,29,29,29,29,29,29,29,29,29,29,29,-50,-51,-52,70,70,70,70,70,-44,-46,70,113,70,-97,-105,-106,-86,-87,-44,-45,-47,-48,-49,29,-129,-133,-45,-47,-48,-65,-66,-67,-68,-84,157,70,-43,-36,-42,-69,-70,-37,-38,-39,-40,-41,-31,-32,-33,-34,-35,-49,-50,-51,-52,-71,-62,-98,-100,-148,70,-110,-111,-112,-113,-114,-115,-116,70,-131,-132,70,70,70,-85,70,-122,-151,-152,-153,-154,-155,-156,-157,-53,-75,29,-58,70,-92,-97,-95,-104,70,70,70,29,29,-135,-136,-138,-137,-139,70,-140,70,70,70,29,-159,-160,-78,-77,-72,-161,-74,70,70,-98,-103,70,-130,-134,-118,-120,-76,-73,-30,-63,-64,-59,-61,-93,-94,-99,-101,-102,-96,-146,-147,-149,-150,-107,-108,29,-128,-119,-121,311,-117,70,70,70,-60,-109,-158,]),'INTEGERW':([0,4,5,6,7,8,9,10,11,12,13,14,15,20,21,22,31,32,59,62,63,64,65,66,67,68,69,70,71,72,74,77,78,79,80,81,82,83,84,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,124,128,129,135,152,156,157,158,159,160,161,162,163,166,176,187,189,192,195,196,200,204,205,206,210,211,212,213,220,227,230,231,232,233,234,235,236,245,248,257,258,260,262,273,274,275,276,277,278,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,296,297,299,309,316,317,],[30,30,30,30,30,30,30,30,30,30,30,30,30,-50,-51,-52,-44,-46,-97,-105,-106,-86,-87,-44,-45,-47,-48,-49,30,-129,-133,-45,-47,-48,-65,-66,-67,-68,-84,-43,-36,-42,-69,-70,-37,-38,-39,-40,-41,-31,-32,-33,-34,-35,-49,-50,-51,-52,-71,-62,-98,-100,-148,-85,-122,-151,-152,-153,-154,-155,-156,-157,-53,-75,30,-58,-92,-97,-95,-104,30,30,-135,-136,-138,-137,-139,-140,30,-159,-160,-78,-77,-72,-161,-74,-98,-103,-130,-134,-118,-120,-76,-73,-30,-63,-64,-59,-61,-93,-94,-99,-101,-102,-96,-146,-147,-149,-150,-107,-108,30,-128,-119,-121,-117,-60,-109,-158,]),'INTEGER':([0,4,5,6,7,8,9,10,11,12,13,14,15,20,21,22,23,24,25,26,27,31,32,33,48,49,50,51,52,53,54,56,58,59,62,63,64,65,66,67,68,69,70,71,72,74,77,78,79,80,81,82,83,84,91,96,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,120,124,128,129,135,137,138,139,140,141,142,143,144,146,147,148,149,150,151,152,153,156,157,158,159,160,161,162,163,166,176,177,178,179,180,181,182,186,187,189,191,192,193,194,195,196,197,198,200,201,202,203,204,205,206,210,211,212,213,215,216,217,218,219,220,222,223,224,227,230,231,232,233,234,235,236,238,239,240,241,245,248,256,257,258,260,262,273,274,275,276,277,278,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,296,297,299,301,305,308,309,316,317,],[28,28,28,28,28,28,28,28,28,28,28,28,28,-50,-51,-52,68,78,78,78,68,-44,-46,78,101,101,101,101,101,101,68,78,125,-97,-105,-106,-86,-87,-44,-45,-47,-48,-49,28,-129,-133,-45,-47,-48,-65,-66,-67,-68,-84,158,78,-43,-36,-42,-69,-70,-37,-38,-39,-40,-41,-31,-32,-33,-34,-35,-49,-50,-51,-52,-71,101,188,-62,-98,-100,-148,68,-110,-111,-112,-113,-114,-115,-116,78,-131,-132,78,78,78,-85,68,-122,-151,-152,-153,-154,-155,-156,-157,-53,-75,101,-79,-80,-81,-82,-83,101,28,-58,78,-92,243,244,-97,-95,246,247,-104,68,78,78,28,28,-135,-136,-138,-137,-139,259,261,263,264,78,-140,78,78,78,28,-159,-160,-78,-77,-72,-161,-74,276,277,78,78,-98,-103,78,-130,-134,-118,-120,-76,-73,-30,-63,-64,-59,-61,-93,-94,-99,-101,-102,-96,-146,-147,-149,-150,-107,-108,28,-128,-119,-121,-117,78,78,78,-60,-109,-158,]),'VAR':([0,4,5,6,7,8,9,10,11,12,13,14,15,20,21,22,23,24,27,31,32,54,59,62,63,64,65,66,67,68,69,70,71,72,74,77,78,79,80,81,82,83,84,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,124,128,129,135,137,138,139,140,141,142,143,144,146,147,148,149,150,151,152,153,156,157,158,159,160,161,162,163,166,176,187,189,192,195,196,200,201,202,203,204,205,206,210,211,212,213,220,227,230,231,232,233,234,235,236,245,248,256,257,258,260,262,273,274,275,276,277,278,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,296,297,299,309,316,317,],[31,31,31,31,31,31,31,31,31,31,31,31,31,-50,-51,-52,66,31,87,-44,-46,31,-97,-105,-106,-86,-87,-44,-45,-47,-48,-49,31,-129,-133,-45,-47,-48,-65,-66,-67,-68,-84,-43,-36,-42,-69,-70,-37,-38,-39,-40,-41,-31,-32,-33,-34,-35,-49,-50,-51,-52,-71,-62,-98,-100,-148,66,-110,-111,-112,-113,-114,-115,-116,31,-131,-132,31,31,31,-85,87,-122,-151,-152,-153,-154,-155,-156,-157,-53,-75,31,-58,-92,-97,-95,-104,87,31,31,31,31,-135,-136,-138,-137,-139,-140,31,-159,-160,-78,-77,-72,-161,-74,-98,-103,31,-130,-134,-118,-120,-76,-73,-30,-63,-64,-59,-61,-93,-94,-99,-101,-102,-96,-146,-147,-149,-150,-107,-108,31,-128,-119,-121,-117,-60,-109,-158,]),'CONSTANT':([0,4,5,6,7,8,9,10,11,12,13,14,15,20,21,22,23,24,31,32,54,59,62,63,64,65,66,67,68,69,70,71,72,74,77,78,79,80,81,82,83,84,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,124,128,129,135,137,138,139,140,141,142,143,144,146,147,148,149,150,151,152,156,157,158,159,160,161,162,163,166,176,187,189,192,195,196,200,202,203,204,205,206,210,211,212,213,220,227,230,231,232,233,234,235,236,245,248,256,257,258,260,262,273,274,275,276,277,278,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,296,297,299,309,316,317,],[32,32,32,32,32,32,32,32,32,32,32,32,32,-50,-51,-52,32,32,-44,-46,32,-97,-105,-106,-86,-87,-44,-45,-47,-48,-49,32,-129,-133,-45,-47,-48,-65,-66,-67,-68,-84,-43,-36,-42,-69,-70,-37,-38,-39,-40,-41,-31,-32,-33,-34,-35,-49,-50,-51,-52,-71,-62,-98,-100,-148,32,-110,-111,-112,-113,-114,-115,-116,32,-131,-132,32,32,32,-85,-122,-151,-152,-153,-154,-155,-156,-157,-53,-75,32,-58,-92,-97,-95,-104,32,32,32,32,-135,-136,-138,-137,-139,-140,32,-159,-160,-78,-77,-72,-161,-74,-98,-103,32,-130,-134,-118,-120,-76,-73,-30,-63,-64,-59,-61,-93,-94,-99,-101,-102,-96,-146,-147,-149,-150,-107,-108,32,-128,-119,-121,-117,-60,-109,-158,]),'LCURLYBRACKET':([0,4,5,6,7,8,9,10,11,12,13,14,15,20,21,22,31,32,54,59,62,63,64,65,66,67,68,69,70,71,72,74,77,78,79,80,81,82,83,84,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,124,128,129,135,152,156,157,158,159,160,161,162,163,166,176,187,189,192,195,196,200,204,205,206,210,211,212,213,220,223,227,230,231,232,233,234,235,236,245,248,257,258,260,262,273,274,275,276,277,278,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,296,297,299,309,316,317,],[33,33,33,33,33,33,33,33,33,33,33,33,33,-50,-51,-52,-44,-46,33,-97,-105,-106,-86,-87,-44,-45,-47,-48,-49,33,-129,-133,-45,-47,-48,-65,-66,-67,-68,-84,-43,-36,-42,-69,-70,-37,-38,-39,-40,-41,-31,-32,-33,-34,-35,-49,-50,-51,-52,-71,-62,-98,-100,-148,-85,-122,-151,-152,-153,-154,-155,-156,-157,-53,-75,33,-58,-92,-97,-95,-104,33,33,-135,-136,-138,-137,-139,-140,267,33,-159,-160,-78,-77,-72,-161,-74,-98,-103,-130,-134,-118,-120,-76,-73,-30,-63,-64,-59,-61,-93,-94,-99,-101,-102,-96,-146,-147,-149,-150,-107,-108,33,-128,-119,-121,-117,-60,-109,-158,]),'LBRACKET':([0,4,5,6,7,8,9,10,11,12,13,14,15,20,21,22,31,32,34,54,59,62,63,64,65,66,67,68,69,70,71,72,74,77,78,79,80,81,82,83,84,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,124,128,129,135,152,156,157,158,159,160,161,162,163,166,176,187,189,192,195,196,200,204,205,206,210,211,212,213,220,227,230,231,232,233,234,235,236,245,248,257,258,260,262,273,274,275,276,277,278,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,296,297,299,309,316,317,],[27,27,27,27,27,27,27,27,27,27,27,27,27,56,58,-52,-44,-46,96,27,-97,-105,-106,-86,-87,-44,-45,-47,-48,-49,27,-129,-133,-45,-47,-48,-65,-66,-67,-68,-84,-43,-36,-42,-69,-70,-37,-38,-39,-40,-41,-31,-32,-33,-34,-35,-49,-50,-51,-52,-71,-62,-98,-100,-148,-85,-122,-151,-152,-153,-154,-155,-156,-157,-53,-75,27,-58,-92,-97,-95,-104,27,27,-135,-136,-138,-137,-139,-140,27,-159,-160,-78,-77,-72,-161,-74,-98,-103,-130,-134,-118,-120,-76,-73,-30,-63,-64,-59,-61,-93,-94,-99,-101,-102,-96,-146,-147,-149,-150,-107,-108,27,-128,-119,-121,-117,-60,-109,-158,]),'SET':([0,4,5,6,7,8,9,10,11,12,13,14,15,20,21,22,31,32,54,59,62,63,64,65,66,67,68,69,70,71,72,74,77,78,79,80,81,82,83,84,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,124,128,129,135,152,156,157,158,159,160,161,162,163,166,176,187,189,192,195,196,200,204,205,206,210,211,212,213,220,227,230,231,232,233,234,235,236,245,248,257,258,260,262,273,274,275,276,277,278,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,296,297,299,309,316,317,],[34,34,34,34,34,34,34,34,34,34,34,34,34,-50,-51,-52,-44,-46,34,-97,-105,-106,-86,-87,-44,-45,-47,-48,-49,34,-129,-133,-45,-47,-48,-65,-66,-67,-68,-84,-43,-36,-42,-69,-70,-37,-38,-39,-40,-41,-31,-32,-33,-34,-35,-49,-50,-51,-52,-71,-62,-98,-100,-148,-85,-122,-151,-152,-153,-154,-155,-156,-157,-53,-75,34,-58,-92,-97,-95,-104,34,34,-135,-136,-138,-137,-139,-140,34,-159,-160,-78,-77,-72,-161,-74,-98,-103,-130,-134,-118,-120,-76,-73,-30,-63,-64,-59,-61,-93,-94,-99,-101,-102,-96,-146,-147,-149,-150,-107,-108,34,-128,-119,-121,-117,-60,-109,-158,]),'ELSE':([4,5,6,7,8,9,10,11,12,13,14,15,20,21,22,31,32,35,36,37,38,39,40,41,42,43,44,45,46,59,62,63,64,65,66,67,68,69,70,71,72,74,77,78,79,80,81,82,83,84,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,124,128,129,135,145,152,156,157,158,159,160,161,162,163,166,176,189,192,195,196,200,204,206,210,211,212,213,220,230,231,232,233,234,235,236,245,248,254,257,258,260,262,273,274,275,278,280,281,282,283,284,285,286,287,288,289,290,291,292,294,296,297,299,309,316,317,],[-29,-29,-29,-29,-29,-29,-29,-29,-29,-29,-29,-29,-50,-51,-52,-44,-46,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-97,-105,-106,-86,-87,-44,-45,-47,-48,-49,-29,-129,-133,-45,-47,-48,-65,-66,-67,-68,-84,-43,-36,-42,-69,-70,-37,-38,-39,-40,-41,-31,-32,-33,-34,-35,-49,-50,-51,-52,-71,-62,-98,-100,-148,205,-85,-122,-151,-152,-153,-154,-155,-156,-157,-53,-75,-58,-92,-97,-95,-104,-29,-135,-136,-138,-137,-139,-140,-159,-160,-78,-77,-72,-161,-74,-98,-103,293,-130,-134,-118,-120,-76,-73,-30,-59,-61,-93,-94,-99,-101,-102,-96,-146,-147,-149,-150,-107,-108,-128,-119,-121,-117,-60,-109,-158,]),'END':([4,5,6,7,8,9,10,11,12,13,14,15,20,21,22,32,35,36,37,38,39,40,41,42,43,44,45,46,59,62,63,64,65,66,67,68,69,70,78,79,80,81,82,83,84,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,124,128,129,135,152,156,157,158,159,160,161,162,163,166,176,187,189,192,195,196,200,204,205,220,227,230,231,232,233,234,235,236,237,245,248,254,255,260,262,272,273,274,275,276,277,278,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,296,297,299,307,309,310,314,315,316,317,],[-29,-29,-29,-29,-29,-29,-29,-29,-29,-29,-29,-29,-50,-51,-52,-46,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-97,-105,-106,-86,-87,-44,-45,-47,-48,-49,-47,-48,-65,-66,-67,-68,-84,-43,-36,-42,-69,-70,-37,-38,-39,-40,-41,-31,-32,-33,-34,-35,-49,-50,-51,-52,-71,-62,-98,-100,-148,-85,-122,-151,-152,-153,-154,-155,-156,-157,-53,-75,-29,-58,-92,-97,-95,-104,-29,-29,-140,-29,-159,-160,-78,-77,-72,-161,-74,275,-98,-103,291,294,-118,-120,306,-76,-73,-30,-63,-64,-59,-61,-93,-94,-99,-101,-102,-96,-146,-147,-149,-150,-107,-108,-29,-128,-119,-121,-117,313,-60,316,-15,-16,-109,-158,]),'RETURN':([4,5,6,7,8,9,10,11,12,13,14,15,20,21,22,35,36,37,38,39,40,41,42,43,44,45,46,59,68,69,70,78,79,80,81,82,83,84,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,124,128,129,135,152,156,157,158,159,160,161,162,163,166,176,189,192,195,196,200,220,227,230,231,232,233,234,235,236,245,248,260,262,272,273,274,275,278,280,281,282,283,284,285,286,287,288,289,290,291,292,294,296,297,299,309,316,317,],[-29,-29,-29,-29,-29,-29,-29,-29,-29,-29,-29,-29,-50,-51,-52,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-97,-47,-48,-49,-47,-48,-65,-66,-67,-68,-84,-43,-36,-42,-69,-70,-37,-38,-39,-40,-41,-31,-32,-33,-34,-35,-49,-50,-51,-52,-71,-62,-98,-100,-148,-85,-122,-151,-152,-153,-154,-155,-156,-157,-53,-75,-58,-92,-97,-95,-104,-140,-29,-159,-160,-78,-77,-72,-161,-74,-98,-103,-118,-120,308,-76,-73,-30,-59,-61,-93,-94,-99,-101,-102,-96,-146,-147,-149,-150,-107,-108,-128,-119,-121,-117,-60,-109,-158,]),'PLUSASSIGN':([17,],[48,]),'MINASSIGN':([17,],[49,]),'DIVASSIGN':([17,],[50,]),'TIMESASSIGN':([17,],[51,]),'MODASSIGN':([17,],[52,]),'EXPASSIGN':([17,],[53,]),'EQUAL':([17,18,31,32,70,77,78,79,95,170,189,271,],[-45,54,-44,-46,-49,-45,-47,-48,167,223,240,305,]),'DOT':([20,21,22,28,29,30,59,68,69,84,113,119,128,152,166,195,220,245,286,],[57,59,60,89,92,93,-97,-69,-70,-84,175,185,195,-85,-53,-97,-140,195,-96,]),'FLOAT':([23,24,25,26,27,33,48,49,50,51,52,53,54,56,96,118,137,138,139,140,141,142,143,144,146,147,148,149,150,151,153,177,178,179,180,181,182,186,191,201,202,203,219,222,223,224,240,241,256,301,305,308,],[69,79,79,79,69,79,102,102,102,102,102,102,69,79,79,102,69,-110,-111,-112,-113,-114,-115,-116,79,-131,-132,79,79,79,69,102,-79,-80,-81,-82,-83,102,79,69,79,79,79,79,79,79,79,79,79,79,79,79,]),'EXCLAMATION':([24,146,147,148,149,],[73,207,-131,-132,207,]),'RBRACKET':([27,64,65,68,69,70,78,79,85,86,87,88,96,121,125,168,169,214,221,222,266,302,],[84,-86,-87,-47,-48,-49,-47,-48,152,-90,-88,-89,-141,189,192,220,-142,-91,-143,-141,-144,-145,]),'PLUS':([29,68,69,101,102,117,119,176,183,184,232,233,234,236,273,274,],[90,-69,-70,-69,-70,178,178,-75,178,178,178,178,178,-74,-76,-73,]),'MULTIPLY':([29,68,69,97,101,102,117,119,176,183,184,232,233,234,236,273,274,],[91,-69,-70,173,-69,-70,180,180,-75,180,180,180,180,180,-74,-76,-73,]),'DOUBLEEQUAL':([31,32,61,62,63,64,65,66,67,68,69,70,75,76,77,78,79,],[-44,-46,138,-105,-106,-86,-87,-44,-45,-47,-48,-49,138,138,-45,-47,-48,]),'TRIPLEEQUAL':([31,32,61,62,63,64,65,66,67,68,69,70,75,76,77,78,79,],[-44,-46,139,-105,-106,-86,-87,-44,-45,-47,-48,-49,139,139,-45,-47,-48,]),'GREATERTHAN':([31,32,61,62,63,64,65,66,67,68,69,70,75,76,77,78,79,167,],[-44,-46,140,-105,-106,-86,-87,-44,-45,-47,-48,-49,140,140,-45,-47,-48,219,]),'NOTEQUAL':([31,32,61,62,63,64,65,66,67,68,69,70,75,76,77,78,79,],[-44,-46,141,-105,-106,-86,-87,-44,-45,-47,-48,-49,141,141,-45,-47,-48,]),'LESSTHAN':([31,32,61,62,63,64,65,66,67,68,69,70,75,76,77,78,79,],[-44,-46,142,-105,-106,-86,-87,-44,-45,-47,-48,-49,142,142,-45,-47,-48,]),'GREQUAL':([31,32,61,62,63,64,65,66,67,68,69,70,75,76,77,78,79,],[-44,-46,143,-105,-106,-86,-87,-44,-45,-47,-48,-49,143,143,-45,-47,-48,]),'LEQUAL':([31,32,61,62,63,64,65,66,67,68,69,70,75,76,77,78,79,],[-44,-46,144,-105,-106,-86,-87,-44,-45,-47,-48,-49,144,144,-45,-47,-48,]),'DOUBLEAMPERSAND':([31,32,70,72,74,77,78,79,206,208,209,210,211,212,213,258,],[-44,-46,-49,147,-133,-45,-47,-48,147,147,-133,-136,-138,-137,-139,-134,]),'DOUBLEPIPE':([31,32,70,72,74,77,78,79,206,208,209,210,211,212,213,258,],[-44,-46,-49,148,-133,-45,-47,-48,148,148,-133,-136,-138,-137,-139,-134,]),'RPARENTHESES':([31,32,64,65,68,69,70,74,77,78,79,87,88,101,102,117,170,171,172,176,183,199,206,208,209,210,211,212,213,215,216,225,228,229,232,233,234,236,242,243,244,246,247,249,250,251,252,253,258,259,261,264,268,269,270,271,273,274,279,295,303,304,311,],[-44,-46,-86,-87,-47,-48,-49,-133,-45,-47,-48,-88,-89,-69,-70,-71,-10,227,-5,-75,234,248,-135,257,258,-136,-138,-137,-139,260,262,-12,-6,-7,-78,-77,-72,-74,280,281,282,284,285,286,287,288,289,290,-134,296,297,299,-11,-9,-14,-10,-76,-73,309,258,-8,-13,317,]),'RCURLYBRACKET':([33,70,78,79,94,265,267,300,301,312,318,],[-55,-49,-47,-48,166,-56,303,-54,-55,-56,-57,]),'LPARENTHESES':([47,54,73,123,126,127,129,130,131,133,134,136,154,155,164,165,177,178,179,180,181,182,190,207,],[97,118,149,191,193,194,197,198,199,201,202,203,215,216,217,218,118,-79,-80,-81,-82,-83,241,256,]),'IN':([55,],[120,]),'INCLUDE':([57,],[122,]),'DELETE':([57,59,60,],[123,130,136,]),'KEYS':([57,],[124,]),'TAKE':([59,],[126,]),'DROP':([59,],[127,]),'POP':([59,],[129,]),'LENGTH':([59,92,],[131,162,]),'EMPTY':([59,],[132,]),'PUSH':([59,195,],[133,133,]),'ADD':([60,],[134,]),'CLEAR':([60,],[135,]),'COMMA':([64,65,68,69,70,78,79,85,86,87,88,169,170,214,221,222,263,265,266,268,271,300,301,302,312,318,],[-86,-87,-47,-48,-49,-47,-48,153,-90,-88,-89,222,226,-91,-143,-141,298,301,222,226,226,-54,-55,-145,301,-57,]),'MINUS':([68,69,101,102,117,119,176,183,184,232,233,234,236,273,274,],[-69,-70,-69,-70,179,179,-75,179,179,179,179,179,-74,-76,-73,]),'DIVIDE':([68,69,101,102,117,119,176,183,184,232,233,234,236,273,274,],[-69,-70,-69,-70,181,181,-75,181,181,181,181,181,-74,-76,-73,]),'PERCENTAGE':([68,69,101,102,117,119,176,183,184,232,233,234,236,273,274,],[-69,-70,-69,-70,182,182,-75,182,182,182,182,182,-74,-76,-73,]),'CEIL':([89,],[154,]),'FLOOR':([89,],[155,]),'ABS':([89,],[156,]),'UPCASE':([92,],[160,]),'DOWNCASE':([92,],[161,]),'CAPS':([92,],[163,]),'INSERT':([92,],[164,]),'SQRT':([93,],[165,]),'TWOSTARS':([97,],[174,]),'QUESTIONMARK':([122,132,],[190,200,]),'TWOPOINTS':([170,],[224,]),'TO_I':([175,],[230,]),'TO_F':([175,],[231,]),'TO_S':([185,],[235,]),'RANGEINCLUSIVE':([188,],[238,]),'RANGEXCLUSIVE':([188,],[239,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'inicio':([0,],[1,]),'cuerpo':([0,4,5,6,7,8,9,10,11,12,13,14,15,71,187,204,205,227,293,],[2,35,36,37,38,39,40,41,42,43,44,45,46,145,237,254,255,272,310,]),'funcion':([0,],[3,]),'declaracion':([0,4,5,6,7,8,9,10,11,12,13,14,15,54,71,187,204,205,227,293,],[4,4,4,4,4,4,4,4,4,4,4,4,4,111,4,4,4,4,4,4,]),'asignacion':([0,4,5,6,7,8,9,10,11,12,13,14,15,71,187,204,205,227,293,],[5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'loop':([0,4,5,6,7,8,9,10,11,12,13,14,15,71,187,204,205,227,293,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'estructurasDatos':([0,4,5,6,7,8,9,10,11,12,13,14,15,54,71,187,204,205,227,293,],[7,7,7,7,7,7,7,7,7,7,7,7,7,109,7,7,7,7,7,7,]),'if':([0,4,5,6,7,8,9,10,11,12,13,14,15,71,187,204,205,227,293,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'unless':([0,4,5,6,7,8,9,10,11,12,13,14,15,71,187,204,205,227,293,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'impresion':([0,4,5,6,7,8,9,10,11,12,13,14,15,71,187,204,205,227,293,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'operacionSet':([0,4,5,6,7,8,9,10,11,12,13,14,15,71,187,204,205,227,293,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'operacionarray':([0,4,5,6,7,8,9,10,11,12,13,14,15,71,187,204,205,227,293,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'operacionHash':([0,4,5,6,7,8,9,10,11,12,13,14,15,71,187,204,205,227,293,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'string':([0,4,5,6,7,8,9,10,11,12,13,14,15,71,187,204,205,227,293,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'integer':([0,4,5,6,7,8,9,10,11,12,13,14,15,71,187,204,205,227,293,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'tiposvariables':([0,4,5,6,7,8,9,10,11,12,13,14,15,23,24,54,71,137,146,149,150,151,187,202,203,204,205,227,256,293,],[18,18,18,18,18,18,18,18,18,18,18,18,18,63,75,18,18,63,75,75,210,213,18,251,253,18,18,18,75,18,]),'hash':([0,4,5,6,7,8,9,10,11,12,13,14,15,54,71,187,204,205,227,293,],[20,20,20,20,20,20,20,20,20,20,20,20,20,114,20,20,20,20,20,20,]),'array':([0,4,5,6,7,8,9,10,11,12,13,14,15,54,71,187,204,205,227,293,],[21,21,21,21,21,21,21,21,21,21,21,21,21,115,21,21,21,21,21,21,]),'set':([0,4,5,6,7,8,9,10,11,12,13,14,15,54,71,187,204,205,227,293,],[22,22,22,22,22,22,22,22,22,22,22,22,22,116,22,22,22,22,22,22,]),'datoscompletos':([23,137,],[61,204,]),'datosvarios':([23,27,137,153,201,],[62,86,62,214,249,]),'datos':([23,24,25,26,27,33,54,56,96,137,146,149,150,151,153,191,201,202,203,219,222,223,224,240,241,256,301,305,308,],[64,76,80,82,64,95,108,121,169,64,76,76,211,212,64,242,64,250,252,265,169,268,269,278,279,76,95,268,315,]),'number':([23,27,48,49,50,51,52,53,54,118,137,153,177,186,201,],[65,65,100,100,100,100,100,100,119,184,65,65,233,236,65,]),'expresionCondicional':([24,],[71,]),'boolean':([24,146,149,],[72,206,208,]),'condiciones':([24,146,149,256,],[74,74,209,295,]),'datosarray':([27,],[85,]),'elementoHash':([33,301,],[94,312,]),'datosAsignacion':([48,49,50,51,52,53,],[99,103,104,105,106,107,]),'expresion':([54,177,],[110,232,]),'casting':([54,],[112,]),'operacion':([54,118,177,],[117,183,117,]),'push':([59,195,],[128,245,]),'operadores':([61,75,76,],[137,150,151,]),'operadorBinario':([72,206,208,],[146,146,146,]),'stringOpt':([92,],[159,]),'elementoSet':([96,222,],[168,266,]),'argumentos':([97,],[171,]),'variosargumentos':([97,226,],[172,270,]),'masoperaciones':([117,183,232,234,],[176,176,273,274,]),'operador':([117,119,183,184,232,233,234,],[177,186,177,186,177,186,177,]),'rango':([120,],[187,]),'maspush':([128,245,],[196,283,]),'otroElemento':([169,266,],[221,302,]),'masargumentos':([170,268,271,],[225,304,225,]),'else':([254,],[292,]),'maselementos':([265,312,],[300,318,]),'retornar':([272,],[307,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> inicio","S'",1,None,None,None),
  ('inicio -> cuerpo','inicio',1,'p_inicio','sintactico.py',5),
  ('inicio -> funcion','inicio',1,'p_inicio','sintactico.py',6),
  ('funcion -> DEF LOCALVAR LPARENTHESES argumentos RPARENTHESES cuerpo END','funcion',7,'p_funcion','sintactico.py',10),
  ('funcion -> DEF LOCALVAR LPARENTHESES argumentos RPARENTHESES cuerpo retornar END','funcion',8,'p_funcion','sintactico.py',11),
  ('argumentos -> variosargumentos','argumentos',1,'p_argumentos','sintactico.py',14),
  ('argumentos -> MULTIPLY LOCALVAR','argumentos',2,'p_argumentos','sintactico.py',15),
  ('argumentos -> TWOSTARS LOCALVAR','argumentos',2,'p_argumentos','sintactico.py',16),
  ('argumentos -> LOCALVAR EQUAL LCURLYBRACKET RCURLYBRACKET','argumentos',4,'p_argumentos','sintactico.py',17),
  ('argumentos -> LOCALVAR TWOPOINTS datos','argumentos',3,'p_argumentos','sintactico.py',18),
  ('variosargumentos -> LOCALVAR','variosargumentos',1,'p_varios_argumentos','sintactico.py',21),
  ('variosargumentos -> LOCALVAR EQUAL datos','variosargumentos',3,'p_varios_argumentos','sintactico.py',22),
  ('variosargumentos -> LOCALVAR masargumentos','variosargumentos',2,'p_varios_argumentos','sintactico.py',23),
  ('variosargumentos -> LOCALVAR EQUAL datos masargumentos','variosargumentos',4,'p_varios_argumentos','sintactico.py',24),
  ('masargumentos -> COMMA variosargumentos','masargumentos',2,'p_masargumentos','sintactico.py',27),
  ('retornar -> RETURN LOCALVAR','retornar',2,'p_retornar','sintactico.py',30),
  ('retornar -> RETURN datos','retornar',2,'p_retornar','sintactico.py',31),
  ('cuerpo -> declaracion cuerpo','cuerpo',2,'p_cuerpo','sintactico.py',33),
  ('cuerpo -> asignacion cuerpo','cuerpo',2,'p_cuerpo','sintactico.py',34),
  ('cuerpo -> loop cuerpo','cuerpo',2,'p_cuerpo','sintactico.py',35),
  ('cuerpo -> estructurasDatos cuerpo','cuerpo',2,'p_cuerpo','sintactico.py',36),
  ('cuerpo -> if cuerpo','cuerpo',2,'p_cuerpo','sintactico.py',37),
  ('cuerpo -> unless cuerpo','cuerpo',2,'p_cuerpo','sintactico.py',38),
  ('cuerpo -> impresion cuerpo','cuerpo',2,'p_cuerpo','sintactico.py',39),
  ('cuerpo -> operacionSet cuerpo','cuerpo',2,'p_cuerpo','sintactico.py',40),
  ('cuerpo -> operacionarray cuerpo','cuerpo',2,'p_cuerpo','sintactico.py',41),
  ('cuerpo -> operacionHash cuerpo','cuerpo',2,'p_cuerpo','sintactico.py',42),
  ('cuerpo -> string cuerpo','cuerpo',2,'p_cuerpo','sintactico.py',43),
  ('cuerpo -> integer cuerpo','cuerpo',2,'p_cuerpo','sintactico.py',44),
  ('cuerpo -> <empty>','cuerpo',0,'p_cuerpo','sintactico.py',45),
  ('loop -> FOR LOCALVAR IN rango cuerpo END','loop',6,'p_loop_for','sintactico.py',50),
  ('declaracion -> tiposvariables EQUAL datos','declaracion',3,'p_declaracion','sintactico.py',53),
  ('declaracion -> tiposvariables EQUAL estructurasDatos','declaracion',3,'p_declaracion','sintactico.py',54),
  ('declaracion -> tiposvariables EQUAL expresion','declaracion',3,'p_declaracion','sintactico.py',55),
  ('declaracion -> tiposvariables EQUAL declaracion','declaracion',3,'p_declaracion','sintactico.py',56),
  ('declaracion -> tiposvariables EQUAL casting','declaracion',3,'p_declaracion','sintactico.py',57),
  ('asignacion -> LOCALVAR PLUSASSIGN datosAsignacion','asignacion',3,'p_asignacion_variable','sintactico.py',63),
  ('asignacion -> LOCALVAR MINASSIGN datosAsignacion','asignacion',3,'p_asignacion_variable','sintactico.py',64),
  ('asignacion -> LOCALVAR DIVASSIGN datosAsignacion','asignacion',3,'p_asignacion_variable','sintactico.py',65),
  ('asignacion -> LOCALVAR TIMESASSIGN datosAsignacion','asignacion',3,'p_asignacion_variable','sintactico.py',66),
  ('asignacion -> LOCALVAR MODASSIGN datosAsignacion','asignacion',3,'p_asignacion_variable','sintactico.py',67),
  ('asignacion -> LOCALVAR EXPASSIGN datosAsignacion','asignacion',3,'p_asignacion_variable','sintactico.py',68),
  ('datosAsignacion -> number','datosAsignacion',1,'p_datosAsignacion','sintactico.py',71),
  ('datosAsignacion -> LOCALVAR','datosAsignacion',1,'p_datosAsignacion','sintactico.py',72),
  ('tiposvariables -> VAR','tiposvariables',1,'p_tiposvariables','sintactico.py',76),
  ('tiposvariables -> LOCALVAR','tiposvariables',1,'p_tiposvariables','sintactico.py',77),
  ('tiposvariables -> CONSTANT','tiposvariables',1,'p_tiposvariables','sintactico.py',78),
  ('datos -> INTEGER','datos',1,'p_datos','sintactico.py',80),
  ('datos -> FLOAT','datos',1,'p_datos','sintactico.py',81),
  ('datos -> STRING','datos',1,'p_datos','sintactico.py',82),
  ('estructurasDatos -> hash','estructurasDatos',1,'p_estructurasDatos','sintactico.py',87),
  ('estructurasDatos -> array','estructurasDatos',1,'p_estructurasDatos','sintactico.py',88),
  ('estructurasDatos -> set','estructurasDatos',1,'p_estructurasDatos','sintactico.py',89),
  ('hash -> LCURLYBRACKET elementoHash RCURLYBRACKET','hash',3,'p_hash','sintactico.py',92),
  ('elementoHash -> datos EQUAL GREATERTHAN datos maselementos','elementoHash',5,'p_elementoHash','sintactico.py',96),
  ('elementoHash -> <empty>','elementoHash',0,'p_elementoHash','sintactico.py',97),
  ('maselementos -> <empty>','maselementos',0,'p_maselementosHash','sintactico.py',100),
  ('maselementos -> COMMA elementoHash maselementos','maselementos',3,'p_maselementosHash','sintactico.py',101),
  ('operacionHash -> hash LBRACKET datos RBRACKET','operacionHash',4,'p_hashAccess','sintactico.py',104),
  ('operacionHash -> hash LBRACKET datos RBRACKET EQUAL datos','operacionHash',6,'p_hashAdd','sintactico.py',107),
  ('operacionHash -> hash DOT INCLUDE QUESTIONMARK LPARENTHESES datos RPARENTHESES','operacionHash',7,'p_hashInclude','sintactico.py',110),
  ('operacionHash -> hash DOT DELETE LPARENTHESES datos RPARENTHESES','operacionHash',6,'p_hashDelete','sintactico.py',113),
  ('operacionHash -> hash DOT KEYS','operacionHash',3,'p_hashKeys','sintactico.py',116),
  ('rango -> INTEGER RANGEINCLUSIVE INTEGER','rango',3,'p_rango','sintactico.py',119),
  ('rango -> INTEGER RANGEXCLUSIVE INTEGER','rango',3,'p_rango','sintactico.py',120),
  ('impresion -> PUTS datos','impresion',2,'p_impresion_puts','sintactico.py',123),
  ('impresion -> PUTS LOCALVAR','impresion',2,'p_impresion_puts','sintactico.py',124),
  ('impresion -> PRINT datos','impresion',2,'p_impresion_print','sintactico.py',128),
  ('impresion -> PRINT LOCALVAR','impresion',2,'p_impresion_print','sintactico.py',129),
  ('number -> INTEGER','number',1,'p_number','sintactico.py',134),
  ('number -> FLOAT','number',1,'p_number','sintactico.py',135),
  ('expresion -> operacion','expresion',1,'p_expresion_factores','sintactico.py',138),
  ('expresion -> LPARENTHESES operacion RPARENTHESES','expresion',3,'p_expresion_factores','sintactico.py',139),
  ('expresion -> LPARENTHESES operacion RPARENTHESES masoperaciones','expresion',4,'p_expresion_factores','sintactico.py',140),
  ('operacion -> number operador number','operacion',3,'p_operacion','sintactico.py',143),
  ('operacion -> operacion masoperaciones','operacion',2,'p_operacion','sintactico.py',144),
  ('masoperaciones -> operador expresion masoperaciones','masoperaciones',3,'p_operaciones','sintactico.py',147),
  ('masoperaciones -> operador number','masoperaciones',2,'p_operaciones','sintactico.py',148),
  ('masoperaciones -> operador expresion','masoperaciones',2,'p_operaciones','sintactico.py',149),
  ('operador -> PLUS','operador',1,'p_operadores_matematicos','sintactico.py',153),
  ('operador -> MINUS','operador',1,'p_operadores_matematicos','sintactico.py',154),
  ('operador -> MULTIPLY','operador',1,'p_operadores_matematicos','sintactico.py',155),
  ('operador -> DIVIDE','operador',1,'p_operadores_matematicos','sintactico.py',156),
  ('operador -> PERCENTAGE','operador',1,'p_operadores_matematicos','sintactico.py',157),
  ('array -> LBRACKET RBRACKET','array',2,'p_array','sintactico.py',167),
  ('array -> LBRACKET datosarray RBRACKET','array',3,'p_array','sintactico.py',168),
  ('datosvarios -> datos','datosvarios',1,'p_datosvarios','sintactico.py',171),
  ('datosvarios -> number','datosvarios',1,'p_datosvarios','sintactico.py',172),
  ('datosvarios -> VAR','datosvarios',1,'p_datosvarios','sintactico.py',173),
  ('datosvarios -> LOCALVAR','datosvarios',1,'p_datosvarios','sintactico.py',174),
  ('datosarray -> datosvarios','datosarray',1,'p_datosarray','sintactico.py',177),
  ('datosarray -> datosarray COMMA datosvarios','datosarray',3,'p_datosarray','sintactico.py',178),
  ('operacionarray -> array LBRACKET INTEGER RBRACKET','operacionarray',4,'p_operacionarrayelemento','sintactico.py',181),
  ('operacionarray -> array DOT TAKE LPARENTHESES INTEGER RPARENTHESES','operacionarray',6,'p_arraynprimerosnumeros','sintactico.py',184),
  ('operacionarray -> array DOT DROP LPARENTHESES INTEGER RPARENTHESES','operacionarray',6,'p_arraynultimosnumeros','sintactico.py',187),
  ('operacionarray -> array DOT push maspush','operacionarray',4,'p_arraypush','sintactico.py',190),
  ('push -> PUSH LPARENTHESES datosvarios RPARENTHESES','push',4,'p_push','sintactico.py',192),
  ('push -> <empty>','push',0,'p_push','sintactico.py',193),
  ('maspush -> <empty>','maspush',0,'p_maspush','sintactico.py',196),
  ('maspush -> DOT push maspush','maspush',3,'p_maspush','sintactico.py',197),
  ('operacionarray -> array DOT POP','operacionarray',3,'p_arrayeliminaruno','sintactico.py',199),
  ('operacionarray -> array DOT POP LPARENTHESES INTEGER RPARENTHESES','operacionarray',6,'p_arrayeliminaruno','sintactico.py',200),
  ('operacionarray -> array DOT DELETE LPARENTHESES INTEGER RPARENTHESES','operacionarray',6,'p_arrayeliminarnposicion','sintactico.py',203),
  ('operacionarray -> array DOT LENGTH LPARENTHESES RPARENTHESES','operacionarray',5,'p_arraylenght','sintactico.py',206),
  ('operacionarray -> array DOT EMPTY QUESTIONMARK','operacionarray',4,'p_arrayvacio','sintactico.py',210),
  ('datoscompletos -> datosvarios','datoscompletos',1,'p_datoscompletos','sintactico.py',214),
  ('datoscompletos -> tiposvariables','datoscompletos',1,'p_datoscompletos','sintactico.py',215),
  ('if -> IF datoscompletos operadores datoscompletos cuerpo END','if',6,'p_if','sintactico.py',218),
  ('if -> IF datoscompletos operadores datoscompletos cuerpo else','if',6,'p_if','sintactico.py',219),
  ('else -> ELSE cuerpo END','else',3,'p_else','sintactico.py',222),
  ('operadores -> DOUBLEEQUAL','operadores',1,'p_operadores','sintactico.py',225),
  ('operadores -> TRIPLEEQUAL','operadores',1,'p_operadores','sintactico.py',226),
  ('operadores -> GREATERTHAN','operadores',1,'p_operadores','sintactico.py',227),
  ('operadores -> NOTEQUAL','operadores',1,'p_operadores','sintactico.py',228),
  ('operadores -> LESSTHAN','operadores',1,'p_operadores','sintactico.py',229),
  ('operadores -> GREQUAL','operadores',1,'p_operadores','sintactico.py',230),
  ('operadores -> LEQUAL','operadores',1,'p_operadores','sintactico.py',231),
  ('integer -> INTEGERW DOT SQRT LPARENTHESES INTEGER RPARENTHESES','integer',6,'p_raizinteger','sintactico.py',237),
  ('integer -> INTEGER DOT CEIL LPARENTHESES RPARENTHESES','integer',5,'p_techointeger','sintactico.py',240),
  ('integer -> INTEGER DOT CEIL LPARENTHESES INTEGER RPARENTHESES','integer',6,'p_techointeger','sintactico.py',241),
  ('integer -> INTEGER DOT FLOOR LPARENTHESES RPARENTHESES','integer',5,'p_pisointeger','sintactico.py',244),
  ('integer -> INTEGER DOT FLOOR LPARENTHESES INTEGER RPARENTHESES','integer',6,'p_pisointeger','sintactico.py',245),
  ('integer -> INTEGER DOT ABS','integer',3,'p_valorabsolutointeger','sintactico.py',248),
  ('float -> FLOAT DOT CEIL LPARENTHESES RPARENTHESES','float',5,'p_techofloat','sintactico.py',253),
  ('float -> FLOAT DOT CEIL LPARENTHESES INTEGER RPARENTHESES','float',6,'p_techofloat','sintactico.py',254),
  ('float -> FLOAT DOT FLOOR LPARENTHESES RPARENTHESES','float',5,'p_pisofloat','sintactico.py',257),
  ('float -> FLOAT DOT FLOOR LPARENTHESES INTEGER RPARENTHESES','float',6,'p_pisofloat','sintactico.py',258),
  ('float -> FLOAT DOT ABS','float',3,'p_valorabsolutofloat','sintactico.py',261),
  ('unless -> UNLESS expresionCondicional cuerpo ELSE cuerpo END','unless',6,'p_unless','sintactico.py',270),
  ('expresionCondicional -> boolean','expresionCondicional',1,'p_expresionCondicional','sintactico.py',275),
  ('expresionCondicional -> EXCLAMATION LPARENTHESES boolean RPARENTHESES','expresionCondicional',4,'p_expresionCondicional','sintactico.py',276),
  ('operadorBinario -> DOUBLEAMPERSAND','operadorBinario',1,'p_operadorBinario','sintactico.py',280),
  ('operadorBinario -> DOUBLEPIPE','operadorBinario',1,'p_operadorBinario','sintactico.py',281),
  ('boolean -> condiciones','boolean',1,'p_boolean','sintactico.py',285),
  ('boolean -> EXCLAMATION LPARENTHESES condiciones RPARENTHESES','boolean',4,'p_boolean','sintactico.py',286),
  ('boolean -> boolean operadorBinario boolean','boolean',3,'p_boolean','sintactico.py',287),
  ('condiciones -> tiposvariables operadores tiposvariables','condiciones',3,'p_condiciones_var','sintactico.py',291),
  ('condiciones -> datos operadores datos','condiciones',3,'p_condiciones_datos','sintactico.py',295),
  ('condiciones -> tiposvariables operadores datos','condiciones',3,'p_condiciones_mix','sintactico.py',299),
  ('condiciones -> datos operadores tiposvariables','condiciones',3,'p_condiciones_mix','sintactico.py',300),
  ('set -> SET LBRACKET elementoSet RBRACKET','set',4,'p_set','sintactico.py',305),
  ('elementoSet -> <empty>','elementoSet',0,'p_elementoSet','sintactico.py',309),
  ('elementoSet -> datos','elementoSet',1,'p_elementoSet','sintactico.py',310),
  ('elementoSet -> datos otroElemento','elementoSet',2,'p_elementoSet','sintactico.py',311),
  ('otroElemento -> <empty>','otroElemento',0,'p_otroElemento','sintactico.py',316),
  ('otroElemento -> COMMA elementoSet otroElemento','otroElemento',3,'p_otroElemento','sintactico.py',317),
  ('operacionSet -> set DOT ADD LPARENTHESES datos RPARENTHESES','operacionSet',6,'p_operacionSet_agregar','sintactico.py',321),
  ('operacionSet -> set DOT ADD LPARENTHESES tiposvariables RPARENTHESES','operacionSet',6,'p_operacionSet_agregar','sintactico.py',322),
  ('operacionSet -> set DOT CLEAR','operacionSet',3,'p_operacionSet_limpiar','sintactico.py',326),
  ('operacionSet -> set DOT DELETE LPARENTHESES datos RPARENTHESES','operacionSet',6,'p_operacionSet_eliminar','sintactico.py',330),
  ('operacionSet -> set DOT DELETE LPARENTHESES tiposvariables RPARENTHESES','operacionSet',6,'p_operacionSet_eliminar','sintactico.py',331),
  ('string -> STRING PLUS STRING','string',3,'p_string_concat','sintactico.py',336),
  ('string -> STRING MULTIPLY INTEGER','string',3,'p_string_repeat','sintactico.py',339),
  ('string -> STRING DOT stringOpt','string',3,'p_string_operations','sintactico.py',342),
  ('stringOpt -> UPCASE','stringOpt',1,'p_stringOpt','sintactico.py',345),
  ('stringOpt -> DOWNCASE','stringOpt',1,'p_stringOpt','sintactico.py',346),
  ('stringOpt -> LENGTH','stringOpt',1,'p_stringOpt','sintactico.py',347),
  ('stringOpt -> CAPS','stringOpt',1,'p_stringOpt','sintactico.py',348),
  ('stringOpt -> INSERT LPARENTHESES INTEGER COMMA STRING RPARENTHESES','stringOpt',6,'p_stringOpt','sintactico.py',349),
  ('casting -> STRING DOT TO_I','casting',3,'p_casting_toInt','sintactico.py',352),
  ('casting -> STRING DOT TO_F','casting',3,'p_casting_toFloat','sintactico.py',355),
  ('casting -> number DOT TO_S','casting',3,'p_casting_toString','sintactico.py',358),
]
